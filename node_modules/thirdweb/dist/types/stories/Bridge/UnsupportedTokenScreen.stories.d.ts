import type { StoryObj } from "@storybook/react";
import type { Theme } from "../../react/core/design-system/index.js";
import { type UnsupportedTokenScreenProps } from "../../react/web/ui/Bridge/UnsupportedTokenScreen.js";
interface UnsupportedTokenScreenWithThemeProps extends UnsupportedTokenScreenProps {
    theme: "light" | "dark" | Theme;
}
declare const meta: {
    args: {
        chain: Readonly<import("../../chains/types.js").ChainOptions & {
            rpc: string;
        }>;
        theme: "dark";
    };
    argTypes: {
        theme: {
            control: "select";
            description: string;
            options: string[];
        };
    };
    component: (props: UnsupportedTokenScreenWithThemeProps) => import("react/jsx-runtime").JSX.Element;
    parameters: {
        docs: {
            description: {
                component: string;
            };
        };
        layout: string;
    };
    tags: string[];
    title: string;
};
export default meta;
type Story = StoryObj<typeof meta>;
export declare const TokenNotSupported: Story;
export declare const TokenNotSupportedLight: Story;
export declare const TestnetNotSupported: Story;
export declare const TestnetNotSupportedLight: Story;
//# sourceMappingURL=UnsupportedTokenScreen.stories.d.ts.map