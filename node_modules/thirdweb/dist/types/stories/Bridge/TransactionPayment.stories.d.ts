import type { StoryObj } from "@storybook/react";
import { type TransactionPaymentProps } from "../../react/web/ui/Bridge/TransactionPayment.js";
interface TransactionPaymentWithThemeProps extends TransactionPaymentProps {
    theme: "light" | "dark";
}
declare const meta: {
    args: {
        client: import("../../client/client.js").ThirdwebClient;
        onExecuteTransaction: () => void;
        onContinue: (_amount: string, _token: import("../../bridge/index.js").TokenWithPrices, _receiverAddress: `0x${string}`) => void;
        theme: "dark";
        uiOptions: {
            metadata?: {
                title?: string;
                description?: string;
                image?: string;
            } | undefined;
            currency?: import("../../pay/convert/type.js").SupportedFiatCurrency | undefined;
            buttonLabel?: string | undefined;
            mode: "transaction";
            transaction: import("../../transaction/prepare-transaction.js").PreparedTransaction;
        };
    };
    argTypes: {
        onContinue: {
            action: string;
            description: string;
        };
        theme: {
            control: "select";
            description: string;
            options: string[];
        };
        uiOptions: {
            description: string;
        };
    };
    component: (props: TransactionPaymentWithThemeProps) => import("react/jsx-runtime").JSX.Element;
    parameters: {
        docs: {
            description: {
                component: string;
            };
        };
        layout: string;
    };
    tags: string[];
    title: string;
};
export default meta;
type Story = StoryObj<typeof meta>;
export declare const EthereumTransfer: Story;
export declare const EthereumTransferLight: Story;
export declare const ERC20TokenTransfer: Story;
export declare const ERC20TokenTransferLight: Story;
export declare const ContractInteraction: Story;
export declare const ContractInteractionLight: Story;
export declare const CustomButtonLabel: Story;
export declare const CustomButtonLabelLight: Story;
//# sourceMappingURL=TransactionPayment.stories.d.ts.map