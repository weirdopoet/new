import { type UseQueryOptions } from "@tanstack/react-query";
import { prepare as prepareOnramp } from "../../../../bridge/Onramp.js";
import type { ThirdwebClient } from "../../../../client/client.js";
import type { Address } from "../../../../utils/address.js";
/**
 * @internal
 */
type UseBuyWithFiatQuotesForProvidersParams = {
    /**
     * A client is the entry point to the thirdweb SDK.
     */
    client: ThirdwebClient;
    /**
     * The destination chain ID.
     */
    chainId: number;
    /**
     * The destination token address.
     */
    tokenAddress: Address;
    /**
     * The address that will receive the tokens.
     */
    receiver: Address;
    /**
     * The desired token amount in wei.
     */
    amount: string;
    /**
     * The fiat currency (e.g., "USD"). Defaults to "USD".
     */
    currency?: string;
};
/**
 * @internal
 */
type OnrampQuoteQueryOptions = Omit<UseQueryOptions<Awaited<ReturnType<typeof prepareOnramp>>>, "queryFn" | "queryKey" | "enabled">;
/**
 * @internal
 */
type UseBuyWithFiatQuotesForProvidersResult = {
    data: Awaited<ReturnType<typeof prepareOnramp>> | undefined;
    isLoading: boolean;
    error: Error | null;
    isError: boolean;
    isSuccess: boolean;
}[];
/**
 * @internal
 * Hook to get prepared onramp quotes from Coinbase, Stripe, and Transak providers.
 */
export declare function useBuyWithFiatQuotesForProviders(params?: UseBuyWithFiatQuotesForProvidersParams, queryOptions?: OnrampQuoteQueryOptions): UseBuyWithFiatQuotesForProvidersResult;
export {};
//# sourceMappingURL=useBuyWithFiatQuotesForProviders.d.ts.map