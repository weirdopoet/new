import type { ThirdwebClient } from "../../../../client/client.js";
import type { Wallet } from "../../../../wallets/interfaces/wallet.js";
import type { WindowAdapter } from "../../../core/adapters/WindowAdapter.js";
import type { BridgePrepareRequest } from "../../../core/hooks/useBridgePrepare.js";
import { type CompletedStatusResult } from "../../../core/hooks/useStepExecutor.js";
interface StepRunnerProps {
    request: BridgePrepareRequest;
    /**
     * Wallet instance for executing transactions
     */
    wallet: Wallet;
    /**
     * Thirdweb client for API calls
     */
    client: ThirdwebClient;
    /**
     * Window adapter for opening URLs (web/RN)
     */
    windowAdapter: WindowAdapter;
    /**
     * Whether to automatically start the transaction process
     */
    autoStart?: boolean;
    /**
     * Called when all steps are completed - receives array of completed status results
     */
    onComplete: (completedStatuses: CompletedStatusResult[]) => void;
    /**
     * Called when user cancels the flow
     */
    onCancel?: () => void;
    /**
     * Called when user clicks the back button
     */
    onBack?: () => void;
}
export declare function StepRunner({ request, wallet, client, windowAdapter, onComplete, onCancel, onBack, autoStart, }: StepRunnerProps): import("react/jsx-runtime").JSX.Element;
export {};
//# sourceMappingURL=StepRunner.d.ts.map