import type { ThirdwebClient } from "../../../../../client/client.js";
import type { BridgePrepareResult } from "../../../../core/hooks/useBridgePrepare.js";
import type { PaymentMethod } from "../../../../core/machines/paymentMachine.js";
import type { UIOptions } from "../BridgeOrchestrator.js";
export interface PaymentDetailsProps {
    /**
     * The UI mode to use
     */
    uiOptions: UIOptions;
    /**
     * The client to use
     */
    client: ThirdwebClient;
    /**
     * The payment method to use
     */
    paymentMethod: PaymentMethod;
    /**
     * The prepared quote to preview
     */
    preparedQuote: BridgePrepareResult;
    /**
     * Called when user confirms the route
     */
    onConfirm: () => void;
    /**
     * Called when user wants to go back
     */
    onBack: () => void;
    /**
     * Called when an error occurs
     */
    onError: (error: Error) => void;
}
export declare function PaymentDetails({ uiOptions, client, paymentMethod, preparedQuote, onConfirm, onBack, onError, }: PaymentDetailsProps): import("react/jsx-runtime").JSX.Element;
//# sourceMappingURL=PaymentDetails.d.ts.map