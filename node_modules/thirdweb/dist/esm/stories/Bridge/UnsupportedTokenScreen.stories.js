import { jsx as _jsx } from "react/jsx-runtime";
import { defineChain } from "../../chains/utils.js";
import { createThirdwebClient } from "../../client/client.js";
import { UnsupportedTokenScreen, } from "../../react/web/ui/Bridge/UnsupportedTokenScreen.js";
import { ModalThemeWrapper } from "../utils.js";
const TEST_CLIENT = createThirdwebClient({ clientId: "test" });
// Wrapper component to provide theme context
const UnsupportedTokenScreenWithTheme = (props) => {
    const { theme, ...componentProps } = props;
    return (_jsx(ModalThemeWrapper, { theme: theme, children: _jsx(UnsupportedTokenScreen, { ...componentProps }) }));
};
const meta = {
    args: {
        chain: defineChain(1), // Ethereum mainnet
        theme: "dark",
    },
    argTypes: {
        theme: {
            control: "select",
            description: "Theme for the component",
            options: ["light", "dark"],
        },
    },
    component: UnsupportedTokenScreenWithTheme,
    parameters: {
        docs: {
            description: {
                component: "Screen displayed when a token is being indexed or when using an unsupported testnet. Shows loading state for indexing tokens or error state for testnets.",
            },
        },
        layout: "centered",
    },
    tags: ["autodocs"],
    title: "Bridge/UnsupportedTokenScreen",
};
export default meta;
export const TokenNotSupported = {
    args: {
        chain: defineChain(1),
        client: TEST_CLIENT,
        theme: "dark", // Ethereum mainnet - will show indexing spinner
    },
    parameters: {
        backgrounds: { default: "dark" },
        docs: {
            description: {
                story: "Shows the loading state when a token is being indexed by the Universal Bridge on a mainnet chain.",
            },
        },
    },
};
export const TokenNotSupportedLight = {
    args: {
        chain: defineChain(1),
        client: TEST_CLIENT,
        theme: "light", // Ethereum mainnet - will show indexing spinner
    },
    parameters: {
        backgrounds: { default: "light" },
        docs: {
            description: {
                story: "Shows the loading state when a token is being indexed by the Universal Bridge on a mainnet chain (light theme).",
            },
        },
    },
};
export const TestnetNotSupported = {
    args: {
        chain: defineChain(11155111),
        client: TEST_CLIENT,
        theme: "dark", // Sepolia testnet - will show error state
    },
    parameters: {
        backgrounds: { default: "dark" },
        docs: {
            description: {
                story: "Shows the error state when trying to use the Universal Bridge on a testnet chain (Sepolia in this example).",
            },
        },
    },
};
export const TestnetNotSupportedLight = {
    args: {
        chain: defineChain(11155111),
        client: TEST_CLIENT,
        theme: "light", // Sepolia testnet - will show error state
    },
    parameters: {
        backgrounds: { default: "light" },
        docs: {
            description: {
                story: "Shows the error state when trying to use the Universal Bridge on a testnet chain (Sepolia in this example, light theme).",
            },
        },
    },
};
//# sourceMappingURL=UnsupportedTokenScreen.stories.js.map