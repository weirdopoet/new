import { jsx as _jsx } from "react/jsx-runtime";
import { FundWallet } from "../../react/web/ui/Bridge/FundWallet.js";
import { ModalThemeWrapper, storyClient } from "../utils.js";
import { FUND_WALLET_UI_OPTIONS, RECEIVER_ADDRESSES } from "./fixtures.js";
// Wrapper component to provide theme context
const FundWalletWithTheme = (props) => {
    const { theme, ...componentProps } = props;
    return (_jsx(ModalThemeWrapper, { theme: theme, children: _jsx(FundWallet, { ...componentProps }) }));
};
const meta = {
    args: {
        client: storyClient,
        onContinue: (amount, token, receiverAddress) => {
            alert(`Continue with ${amount} ${token.symbol} to ${receiverAddress}`);
        },
        receiverAddress: RECEIVER_ADDRESSES.primary,
        theme: "dark",
        uiOptions: FUND_WALLET_UI_OPTIONS.ethDefault,
    },
    argTypes: {
        onContinue: { action: "continue clicked" },
        receiverAddress: {
            description: "Optional receiver address (defaults to connected wallet)",
        },
        theme: {
            control: "select",
            description: "Theme for the component",
            options: ["light", "dark"],
        },
        uiOptions: {
            description: "UI configuration for fund wallet mode",
        },
    },
    component: FundWalletWithTheme,
    parameters: {
        docs: {
            description: {
                component: "FundWallet component allows users to specify the amount they want to add to their wallet. This is the first screen in the fund_wallet flow before method selection.\n\n" +
                    "## Features\n" +
                    "- **Token Selection**: Choose from different tokens (ETH, USDC, UNI)\n" +
                    "- **Amount Input**: Enter custom amount or use quick options\n" +
                    "- **Receiver Address**: Optional receiver address (defaults to connected wallet)\n" +
                    "- **Quick Options**: Preset amounts for faster selection\n" +
                    "- **Theme Support**: Works with both light and dark themes\n\n" +
                    "This component now accepts uiOptions directly to configure the destination token, initial amount, and quick options.",
            },
        },
        layout: "centered",
    },
    tags: ["autodocs"],
    title: "Bridge/FundWallet",
};
export default meta;
export const Light = {
    args: {
        receiverAddress: undefined,
        theme: "light",
        uiOptions: FUND_WALLET_UI_OPTIONS.ethDefault,
    },
    parameters: {
        backgrounds: { default: "light" },
        docs: {
            description: {
                story: "Default fund wallet interface in light theme with ETH token.",
            },
        },
    },
};
export const Dark = {
    args: {
        receiverAddress: undefined,
        theme: "dark",
        uiOptions: FUND_WALLET_UI_OPTIONS.ethDefault,
    },
    parameters: {
        backgrounds: { default: "dark" },
        docs: {
            description: {
                story: "Default fund wallet interface in dark theme with ETH token.",
            },
        },
    },
};
export const WithInitialAmount = {
    args: {
        receiverAddress: RECEIVER_ADDRESSES.secondary,
        theme: "dark",
        uiOptions: FUND_WALLET_UI_OPTIONS.ethWithAmount,
    },
    parameters: {
        backgrounds: { default: "dark" },
        docs: {
            description: {
                story: "Fund wallet with pre-filled amount and specified receiver address.",
            },
        },
    },
};
export const WithInitialAmountLight = {
    args: {
        receiverAddress: RECEIVER_ADDRESSES.secondary,
        theme: "light",
        uiOptions: FUND_WALLET_UI_OPTIONS.ethWithAmount,
    },
    parameters: {
        backgrounds: { default: "light" },
        docs: {
            description: {
                story: "Light theme version with pre-filled amount and receiver address.",
            },
        },
    },
};
export const USDCToken = {
    args: {
        theme: "dark",
        uiOptions: FUND_WALLET_UI_OPTIONS.usdcDefault,
    },
    parameters: {
        backgrounds: { default: "dark" },
        docs: {
            description: {
                story: "Fund wallet configured for USDC token with initial amount.",
            },
        },
    },
};
export const USDCTokenLight = {
    args: {
        theme: "light",
        uiOptions: FUND_WALLET_UI_OPTIONS.usdcDefault,
    },
    parameters: {
        backgrounds: { default: "light" },
        docs: {
            description: {
                story: "Light theme version for USDC token funding.",
            },
        },
    },
};
export const LargeAmount = {
    args: {
        theme: "dark",
        uiOptions: FUND_WALLET_UI_OPTIONS.uniLarge,
    },
    parameters: {
        backgrounds: { default: "dark" },
        docs: {
            description: {
                story: "Fund wallet with UNI token and large pre-filled amount to test formatting.",
            },
        },
    },
};
export const LargeAmountLight = {
    args: {
        theme: "light",
        uiOptions: FUND_WALLET_UI_OPTIONS.uniLarge,
    },
    parameters: {
        backgrounds: { default: "light" },
        docs: {
            description: {
                story: "Light theme version with UNI token and large amount.",
            },
        },
    },
};
export const CustomButtonLabel = {
    args: {
        theme: "dark",
        uiOptions: FUND_WALLET_UI_OPTIONS.customButton,
    },
    parameters: {
        backgrounds: { default: "dark" },
        docs: {
            description: {
                story: "Example showcasing custom button label functionality. The button shows 'Add Funds Now' instead of the default 'Buy [amount] [symbol]' text.",
            },
        },
    },
};
export const CustomButtonLabelLight = {
    args: {
        theme: "light",
        uiOptions: FUND_WALLET_UI_OPTIONS.customButton,
    },
    parameters: {
        backgrounds: { default: "light" },
        docs: {
            description: {
                story: "Light theme version with custom button label 'Add Funds Now'.",
            },
        },
    },
};
//# sourceMappingURL=FundWallet.stories.js.map