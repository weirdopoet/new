"use client";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { CheckIcon } from "@radix-ui/react-icons";
import { useQuery } from "@tanstack/react-query";
import { useState } from "react";
import { trackPayEvent } from "../../../../../analytics/track/pay.js";
import { useCustomTheme } from "../../../../core/design-system/CustomThemeProvider.js";
import { iconSize } from "../../../../core/design-system/index.js";
import { Container, ModalHeader } from "../../components/basic.js";
import { Button } from "../../components/buttons.js";
import { Spacer } from "../../components/Spacer.js";
import { Text } from "../../components/text.js";
import { PaymentReceipt } from "./PaymentReceipt.js";
export function SuccessScreen({ uiOptions, preparedQuote, completedStatuses, onDone, windowAdapter, client, hasPaymentId = false, }) {
    const theme = useCustomTheme();
    const [viewState, setViewState] = useState("success");
    useQuery({
        queryFn: () => {
            if (preparedQuote.type === "buy" || preparedQuote.type === "sell") {
                trackPayEvent({
                    chainId: preparedQuote.intent.originChainId,
                    client: client,
                    event: "ub:ui:success_screen",
                    fromToken: preparedQuote.intent.originTokenAddress,
                    toChainId: preparedQuote.intent.destinationChainId,
                    toToken: preparedQuote.intent.destinationTokenAddress,
                });
            }
        },
        queryKey: ["success_screen", preparedQuote.type],
    });
    if (viewState === "detail") {
        return (_jsx(PaymentReceipt, { completedStatuses: completedStatuses, onBack: () => setViewState("success"), preparedQuote: preparedQuote, windowAdapter: windowAdapter }));
    }
    return (_jsxs(Container, { flex: "column", fullHeight: true, p: "lg", children: [_jsx(ModalHeader, { title: "Payment Complete" }), _jsx(Spacer, { y: "xl" }), _jsxs(Container, { center: "x", flex: "column", gap: "md", children: [_jsx(Container, { center: "both", flex: "row", style: {
                            animation: "successBounce 0.6s ease-out",
                            backgroundColor: theme.colors.tertiaryBg,
                            border: `2px solid ${theme.colors.success}`,
                            borderRadius: "50%",
                            height: "64px",
                            marginBottom: "16px",
                            width: "64px",
                        }, children: _jsx(CheckIcon, { color: theme.colors.success, height: iconSize.xl, style: {
                                animation: "checkAppear 0.3s ease-out 0.3s both",
                            }, width: iconSize.xl }) }), _jsx(Text, { center: true, color: "primaryText", size: "xl", children: "Payment Successful!" }), _jsx(Text, { center: true, color: "secondaryText", size: "sm", children: hasPaymentId
                            ? "You can now close this page and return to the application."
                            : uiOptions.mode === "transaction"
                                ? "Click continue to execute your transaction."
                                : "Your payment has been completed successfully." })] }), _jsx(Spacer, { y: "lg" }), _jsxs(Container, { flex: "column", gap: "sm", style: { width: "100%" }, children: [_jsx(Button, { fullWidth: true, onClick: () => setViewState("detail"), variant: "secondary", children: "View Payment Receipt" }), !hasPaymentId && (_jsx(Button, { fullWidth: true, onClick: onDone, variant: "accent", children: uiOptions.mode === "transaction" ? "Continue" : "Done" }))] }), _jsx("style", { children: `
          @keyframes successBounce {
            0% {
              transform: scale(0.3);
              opacity: 0;
            }
            50% {
              transform: scale(1.05);
            }
            70% {
              transform: scale(0.9);
            }
            100% {
              transform: scale(1);
              opacity: 1;
            }
          }

          @keyframes checkAppear {
            0% {
              transform: scale(0);
              opacity: 0;
            }
            100% {
              transform: scale(1);
              opacity: 1;
            }
          }
        ` })] }));
}
//# sourceMappingURL=SuccessScreen.js.map