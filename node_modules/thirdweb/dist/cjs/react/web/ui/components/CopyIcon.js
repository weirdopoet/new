"use strict";
"use client";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CopyIcon = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_icons_1 = require("@radix-ui/react-icons");
const useCopyClipboard_js_1 = require("../hooks/useCopyClipboard.js");
const basic_js_1 = require("./basic.js");
const Tooltip_js_1 = require("./Tooltip.js");
/**
 * @internal
 */
const CopyIcon = (props) => {
    const { hasCopied, onCopy } = (0, useCopyClipboard_js_1.useClipboard)(props.text);
    const showCheckIcon = props.hasCopied || hasCopied;
    return (
    // biome-ignore lint/a11y/noStaticElementInteractions: TODO
    (0, jsx_runtime_1.jsx)("div", { onClick: onCopy, onKeyDown: (e) => {
            if (e.key === "Enter" || e.key === " ") {
                onCopy();
            }
        }, style: {
            alignItems: "center",
            display: "flex",
            justifyContent: "center",
        }, children: (0, jsx_runtime_1.jsx)(Tooltip_js_1.ToolTip, { align: props.align, side: props.side, tip: props.tip, children: (0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsx)(basic_js_1.Container, { center: "both", color: showCheckIcon ? "success" : undefined, flex: "row", children: showCheckIcon ? ((0, jsx_runtime_1.jsx)(react_icons_1.CheckIcon, { className: "tw-check-icon" })) : ((0, jsx_runtime_1.jsx)(react_icons_1.CopyIcon, { className: "tw-copy-icon" })) }) }) }) }));
};
exports.CopyIcon = CopyIcon;
//# sourceMappingURL=CopyIcon.js.map