'use client';
import { keyframes } from '@emotion/react';
import { OTPInput as OTPInput$1 } from 'input-otp';
import { C as Container, S as StyledDiv, u as useCustomTheme, f as fontSize, s as spacing, r as radius } from './basic-1b01c841.esm.js';
import { jsx, jsxs } from 'react/jsx-runtime';
import '@radix-ui/colors';
import 'react';
import '@emotion/styled';
import '@radix-ui/react-icons';
import '@thirdweb-dev/react-core';

function OTPInput(props) {
  return /*#__PURE__*/jsx(OTPInputContainer, {
    children: /*#__PURE__*/jsx(OTPInput$1, {
      onComplete: () => {
        props.onEnter();
      },
      maxLength: 6,
      value: props.value,
      render: _ref => {
        let {
          slots
        } = _ref;
        return /*#__PURE__*/jsx(Container, {
          flex: "row",
          gap: "xs",
          center: "both",
          children: slots.map((slot, idx) => /*#__PURE__*/jsx(Slot, {
            ...slot,
            isInvalid: props.isInvalid
          }, idx))
        });
      },
      onChange: newValue => {
        props.setValue(newValue);
      }
    })
  });
}
const OTPInputContainer = /* @__PURE__ */StyledDiv({
  "& input": {
    maxWidth: "100%"
  }
});
function Slot(props) {
  return /*#__PURE__*/jsxs(OTPInputBox, {
    "data-active": props.isActive,
    "data-error": props.isInvalid,
    children: [props.char !== null && /*#__PURE__*/jsx("div", {
      children: props.char
    }), props.hasFakeCaret && /*#__PURE__*/jsx(FakeCaret, {})]
  });
}
const caretBlink = keyframes`
  0%, 100% {
    opacity: 0;
  },
  50% {
    opacity: 1;
  }
  `;
const FakeCaret = /* @__PURE__ */StyledDiv(() => {
  const theme = useCustomTheme();
  return {
    position: "absolute",
    pointerEvents: "none",
    inset: 0,
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    animation: `${caretBlink} 1s infinite`,
    "&::before": {
      content: "''",
      display: "block",
      width: "1.5px",
      height: "1em",
      backgroundColor: theme.colors.primaryText
    }
  };
});
const OTPInputBox = /* @__PURE__ */StyledDiv(() => {
  const theme = useCustomTheme();
  return {
    position: "relative",
    width: "40px",
    height: "40px",
    textAlign: "center",
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    fontSize: fontSize.md,
    padding: spacing.xs,
    boxSizing: "border-box",
    transition: "color 200ms ease",
    border: `2px solid ${theme.colors.borderColor}`,
    "&[data-active='true']": {
      borderColor: theme.colors.accentText
    },
    color: theme.colors.primaryText,
    borderRadius: radius.lg,
    "&[data-error='true']": {
      borderColor: theme.colors.danger
    }
  };
});

export { OTPInput };
