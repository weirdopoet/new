import { Chain } from "@thirdweb-dev/chains";
import { Signer, providers } from "ethers";
import { ConnectParams, Connector } from "../../interfaces/connector";
import { SmartWalletConfig, SmartWalletConnectionArgs } from "./types";
import { EVMWallet } from "../../interfaces";
import { HttpRpcClient } from "./lib/http-rpc-client";
export declare class ZkSyncConnector extends Connector<SmartWalletConnectionArgs> {
    protected config: SmartWalletConfig;
    protected personalWallet: EVMWallet | undefined;
    protected httpRpcClient: HttpRpcClient | undefined;
    protected chainId: number;
    constructor(config: SmartWalletConfig);
    connect(args: ConnectParams<SmartWalletConnectionArgs>): Promise<string>;
    disconnect(): Promise<void>;
    getAddress(): Promise<string>;
    getSigner(): Promise<Signer>;
    switchChain(chainId: number): Promise<void>;
    isConnected(): Promise<boolean>;
    setupListeners(): Promise<void>;
    updateChains(chains: Chain[]): void;
    getProvider(): Promise<providers.Provider>;
}
//# sourceMappingURL=zk-connector.d.ts.map