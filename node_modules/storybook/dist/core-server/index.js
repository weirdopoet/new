var y8 = Object.create;
var yo = Object.defineProperty;
var D8 = Object.getOwnPropertyDescriptor;
var x8 = Object.getOwnPropertyNames;
var b8 = Object.getPrototypeOf, v8 = Object.prototype.hasOwnProperty;
var s = (e, t) => yo(e, "name", { value: t, configurable: !0 }), H = /* @__PURE__ */ ((e) => typeof require < "u" ? require : typeof Proxy <
"u" ? new Proxy(e, {
  get: (t, r) => (typeof require < "u" ? require : t)[r]
}) : e)(function(e) {
  if (typeof require < "u") return require.apply(this, arguments);
  throw Error('Dynamic require of "' + e + '" is not supported');
});
var Et = (e, t) => () => (e && (t = e(e = 0)), t);
var I = (e, t) => () => (t || e((t = { exports: {} }).exports, t), t.exports), pi = (e, t) => {
  for (var r in t)
    yo(e, r, { get: t[r], enumerable: !0 });
}, CD = (e, t, r, n) => {
  if (t && typeof t == "object" || typeof t == "function")
    for (let i of x8(t))
      !v8.call(e, i) && i !== r && yo(e, i, { get: () => t[i], enumerable: !(n = D8(t, i)) || n.enumerable });
  return e;
};
var fe = (e, t, r) => (r = e != null ? y8(b8(e)) : {}, CD(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  t || !e || !e.__esModule ? yo(r, "default", { value: e, enumerable: !0 }) : r,
  e
)), Dp = (e) => CD(yo({}, "__esModule", { value: !0 }), e);

// ../node_modules/picocolors/picocolors.js
var Ar = I((Cae, xp) => {
  var Xa = process || {}, wD = Xa.argv || [], Za = Xa.env || {}, E8 = !(Za.NO_COLOR || wD.includes("--no-color")) && (!!Za.FORCE_COLOR || wD.
  includes("--color") || Xa.platform === "win32" || (Xa.stdout || {}).isTTY && Za.TERM !== "dumb" || !!Za.CI), C8 = /* @__PURE__ */ s((e, t, r = e) => (n) => {
    let i = "" + n, o = i.indexOf(t, e.length);
    return ~o ? e + w8(i, t, r, o) + t : e + i + t;
  }, "formatter"), w8 = /* @__PURE__ */ s((e, t, r, n) => {
    let i = "", o = 0;
    do
      i += e.substring(o, n) + r, o = n + t.length, n = e.indexOf(t, o);
    while (~n);
    return i + e.substring(o);
  }, "replaceClose"), SD = /* @__PURE__ */ s((e = E8) => {
    let t = e ? C8 : () => String;
    return {
      isColorSupported: e,
      reset: t("\x1B[0m", "\x1B[0m"),
      bold: t("\x1B[1m", "\x1B[22m", "\x1B[22m\x1B[1m"),
      dim: t("\x1B[2m", "\x1B[22m", "\x1B[22m\x1B[2m"),
      italic: t("\x1B[3m", "\x1B[23m"),
      underline: t("\x1B[4m", "\x1B[24m"),
      inverse: t("\x1B[7m", "\x1B[27m"),
      hidden: t("\x1B[8m", "\x1B[28m"),
      strikethrough: t("\x1B[9m", "\x1B[29m"),
      black: t("\x1B[30m", "\x1B[39m"),
      red: t("\x1B[31m", "\x1B[39m"),
      green: t("\x1B[32m", "\x1B[39m"),
      yellow: t("\x1B[33m", "\x1B[39m"),
      blue: t("\x1B[34m", "\x1B[39m"),
      magenta: t("\x1B[35m", "\x1B[39m"),
      cyan: t("\x1B[36m", "\x1B[39m"),
      white: t("\x1B[37m", "\x1B[39m"),
      gray: t("\x1B[90m", "\x1B[39m"),
      bgBlack: t("\x1B[40m", "\x1B[49m"),
      bgRed: t("\x1B[41m", "\x1B[49m"),
      bgGreen: t("\x1B[42m", "\x1B[49m"),
      bgYellow: t("\x1B[43m", "\x1B[49m"),
      bgBlue: t("\x1B[44m", "\x1B[49m"),
      bgMagenta: t("\x1B[45m", "\x1B[49m"),
      bgCyan: t("\x1B[46m", "\x1B[49m"),
      bgWhite: t("\x1B[47m", "\x1B[49m"),
      blackBright: t("\x1B[90m", "\x1B[39m"),
      redBright: t("\x1B[91m", "\x1B[39m"),
      greenBright: t("\x1B[92m", "\x1B[39m"),
      yellowBright: t("\x1B[93m", "\x1B[39m"),
      blueBright: t("\x1B[94m", "\x1B[39m"),
      magentaBright: t("\x1B[95m", "\x1B[39m"),
      cyanBright: t("\x1B[96m", "\x1B[39m"),
      whiteBright: t("\x1B[97m", "\x1B[39m"),
      bgBlackBright: t("\x1B[100m", "\x1B[49m"),
      bgRedBright: t("\x1B[101m", "\x1B[49m"),
      bgGreenBright: t("\x1B[102m", "\x1B[49m"),
      bgYellowBright: t("\x1B[103m", "\x1B[49m"),
      bgBlueBright: t("\x1B[104m", "\x1B[49m"),
      bgMagentaBright: t("\x1B[105m", "\x1B[49m"),
      bgCyanBright: t("\x1B[106m", "\x1B[49m"),
      bgWhiteBright: t("\x1B[107m", "\x1B[49m")
    };
  }, "createColors");
  xp.exports = SD();
  xp.exports.createColors = SD;
});

// ../node_modules/yocto-queue/index.js
var bp, Do, AD = Et(() => {
  bp = class {
    static {
      s(this, "Node");
    }
    value;
    next;
    constructor(t) {
      this.value = t;
    }
  }, Do = class {
    static {
      s(this, "Queue");
    }
    #t;
    #r;
    #e;
    constructor() {
      this.clear();
    }
    enqueue(t) {
      let r = new bp(t);
      this.#t ? (this.#r.next = r, this.#r = r) : (this.#t = r, this.#r = r), this.#e++;
    }
    dequeue() {
      let t = this.#t;
      if (t)
        return this.#t = this.#t.next, this.#e--, t.value;
    }
    peek() {
      if (this.#t)
        return this.#t.value;
    }
    clear() {
      this.#t = void 0, this.#r = void 0, this.#e = 0;
    }
    get size() {
      return this.#e;
    }
    *[Symbol.iterator]() {
      let t = this.#t;
      for (; t; )
        yield t.value, t = t.next;
    }
    *drain() {
      for (; this.#t; )
        yield this.dequeue();
    }
  };
});

// ../node_modules/slash/index.js
function it(e) {
  return e.startsWith("\\\\?\\") ? e : e.replace(/\\/g, "/");
}
var hi = Et(() => {
  s(it, "slash");
});

// ../node_modules/ts-dedent/dist/index.js
var Tt = I((vo) => {
  "use strict";
  Object.defineProperty(vo, "__esModule", { value: !0 });
  vo.dedent = void 0;
  function ND(e) {
    for (var t = [], r = 1; r < arguments.length; r++)
      t[r - 1] = arguments[r];
    var n = Array.from(typeof e == "string" ? [e] : e);
    n[n.length - 1] = n[n.length - 1].replace(/\r?\n([\t ]*)$/, "");
    var i = n.reduce(function(u, l) {
      var c = l.match(/\n([\t ]+|(?!\s).)/g);
      return c ? u.concat(c.map(function(p) {
        var h, f;
        return (f = (h = p.match(/[\t ]/g)) === null || h === void 0 ? void 0 : h.length) !== null && f !== void 0 ? f : 0;
      })) : u;
    }, []);
    if (i.length) {
      var o = new RegExp(`
[	 ]{` + Math.min.apply(Math, i) + "}", "g");
      n = n.map(function(u) {
        return u.replace(o, `
`);
      });
    }
    n[0] = n[0].replace(/^\r?\n/, "");
    var a = n[0];
    return t.forEach(function(u, l) {
      var c = a.match(/(?:^|\n)( *)$/), p = c ? c[1] : "", h = u;
      typeof u == "string" && u.includes(`
`) && (h = String(u).split(`
`).map(function(f, d) {
        return d === 0 ? f : "" + p + f;
      }).join(`
`)), a += h + n[l + 1];
    }), a;
  }
  s(ND, "dedent");
  vo.dedent = ND;
  vo.default = ND;
});

// ../node_modules/tsconfig-paths/lib/filesystem.js
var tu = I((ir) => {
  "use strict";
  Object.defineProperty(ir, "__esModule", { value: !0 });
  ir.removeExtension = ir.fileExistsAsync = ir.readJsonFromDiskAsync = ir.readJsonFromDiskSync = ir.fileExistsSync = void 0;
  var Eo = H("fs");
  function P8(e) {
    if (!Eo.existsSync(e))
      return !1;
    try {
      var t = Eo.statSync(e);
      return t.isFile();
    } catch {
      return !1;
    }
  }
  s(P8, "fileExistsSync");
  ir.fileExistsSync = P8;
  function B8(e) {
    if (Eo.existsSync(e))
      return H(e);
  }
  s(B8, "readJsonFromDiskSync");
  ir.readJsonFromDiskSync = B8;
  function O8(e, t) {
    Eo.readFile(e, "utf8", function(r, n) {
      if (r || !n)
        return t();
      var i = JSON.parse(n);
      return t(void 0, i);
    });
  }
  s(O8, "readJsonFromDiskAsync");
  ir.readJsonFromDiskAsync = O8;
  function R8(e, t) {
    Eo.stat(e, function(r, n) {
      if (r)
        return t(void 0, !1);
      t(void 0, n ? n.isFile() : !1);
    });
  }
  s(R8, "fileExistsAsync");
  ir.fileExistsAsync = R8;
  function N8(e) {
    return e.substring(0, e.lastIndexOf(".")) || e;
  }
  s(N8, "removeExtension");
  ir.removeExtension = N8;
});

// ../node_modules/tsconfig-paths/lib/mapping-entry.js
var Cp = I((ru) => {
  "use strict";
  Object.defineProperty(ru, "__esModule", { value: !0 });
  ru.getAbsoluteMappingEntries = void 0;
  var L8 = H("path");
  function j8(e, t, r) {
    for (var n = M8(Object.keys(t)), i = [], o = 0, a = n; o < a.length; o++) {
      var u = a[o];
      i.push({
        pattern: u,
        paths: t[u].map(function(l) {
          return L8.resolve(e, l);
        })
      });
    }
    return !t["*"] && r && i.push({
      pattern: "*",
      paths: ["".concat(e.replace(/\/$/, ""), "/*")]
    }), i;
  }
  s(j8, "getAbsoluteMappingEntries");
  ru.getAbsoluteMappingEntries = j8;
  function M8(e) {
    return e.concat().sort(function(t, r) {
      return LD(r) - LD(t);
    });
  }
  s(M8, "sortByLongestPrefix");
  function LD(e) {
    var t = e.indexOf("*");
    return e.substr(0, t).length;
  }
  s(LD, "getPrefixLength");
});

// ../node_modules/tsconfig-paths/lib/try-path.js
var wp = I((Bn) => {
  "use strict";
  Object.defineProperty(Bn, "__esModule", { value: !0 });
  Bn.exhaustiveTypeException = Bn.getStrippedPath = Bn.getPathsToTry = void 0;
  var jD = H("path"), q8 = H("path"), $8 = tu();
  function V8(e, t, r) {
    if (!(!t || !r || r[0] === ".")) {
      for (var n = [], i = 0, o = t; i < o.length; i++) {
        var a = o[i], u = a.pattern === r ? "" : W8(a.pattern, r);
        if (u !== void 0)
          for (var l = /* @__PURE__ */ s(function(f) {
            var d = f.replace("*", u);
            n.push({ type: "file", path: d }), n.push.apply(n, e.map(function(g) {
              return { type: "extension", path: d + g };
            })), n.push({
              type: "package",
              path: jD.join(d, "/package.json")
            });
            var m = jD.join(d, "/index");
            n.push.apply(n, e.map(function(g) {
              return { type: "index", path: m + g };
            }));
          }, "_loop_1"), c = 0, p = a.paths; c < p.length; c++) {
            var h = p[c];
            l(h);
          }
      }
      return n.length === 0 ? void 0 : n;
    }
  }
  s(V8, "getPathsToTry");
  Bn.getPathsToTry = V8;
  function U8(e) {
    return e.type === "index" ? (0, q8.dirname)(e.path) : e.type === "file" ? e.path : e.type === "extension" ? (0, $8.removeExtension)(e.path) :
    e.type === "package" ? e.path : MD(e.type);
  }
  s(U8, "getStrippedPath");
  Bn.getStrippedPath = U8;
  function MD(e) {
    throw new Error("Unknown type ".concat(e));
  }
  s(MD, "exhaustiveTypeException");
  Bn.exhaustiveTypeException = MD;
  function W8(e, t) {
    if (!(t.length < e.length)) {
      if (e === "*")
        return t;
      var r = e.indexOf("*");
      if (r !== -1) {
        var n = e.substring(0, r), i = e.substring(r + 1);
        if (t.substr(0, r) === n && t.substr(t.length - i.length) === i)
          return t.substr(r, t.length - i.length);
      }
    }
  }
  s(W8, "matchStar");
});

// ../node_modules/tsconfig-paths/lib/match-path-sync.js
var Fp = I((Qi) => {
  "use strict";
  Object.defineProperty(Qi, "__esModule", { value: !0 });
  Qi.matchFromAbsolutePaths = Qi.createMatchPath = void 0;
  var qD = H("path"), Sp = tu(), z8 = Cp(), Ap = wp();
  function H8(e, t, r, n) {
    r === void 0 && (r = ["main"]), n === void 0 && (n = !0);
    var i = z8.getAbsoluteMappingEntries(e, t, n);
    return function(o, a, u, l) {
      return $D(i, o, a, u, l, r);
    };
  }
  s(H8, "createMatchPath");
  Qi.createMatchPath = H8;
  function $D(e, t, r, n, i, o) {
    r === void 0 && (r = Sp.readJsonFromDiskSync), n === void 0 && (n = Sp.fileExistsSync), i === void 0 && (i = Object.keys(H.extensions)),
    o === void 0 && (o = ["main"]);
    var a = Ap.getPathsToTry(i, e, t);
    if (a)
      return J8(a, r, n, o);
  }
  s($D, "matchFromAbsolutePaths");
  Qi.matchFromAbsolutePaths = $D;
  function G8(e, t, r, n) {
    for (var i = 0; i < t.length; i++) {
      var o = t[i], a = typeof o == "string" ? e[o] : o.reduce(function(l, c) {
        return l[c];
      }, e);
      if (a && typeof a == "string") {
        var u = qD.join(qD.dirname(r), a);
        if (n(u))
          return u;
      }
    }
  }
  s(G8, "findFirstExistingMainFieldMappedFile");
  function J8(e, t, r, n) {
    t === void 0 && (t = Sp.readJsonFromDiskSync), n === void 0 && (n = ["main"]);
    for (var i = 0, o = e; i < o.length; i++) {
      var a = o[i];
      if (a.type === "file" || a.type === "extension" || a.type === "index") {
        if (r(a.path))
          return Ap.getStrippedPath(a);
      } else if (a.type === "package") {
        var u = t(a.path);
        if (u) {
          var l = G8(u, n, a.path, r);
          if (l)
            return l;
        }
      } else
        Ap.exhaustiveTypeException(a.type);
    }
  }
  s(J8, "findFirstExistingPath");
});

// ../node_modules/tsconfig-paths/lib/match-path-async.js
var HD = I((es) => {
  "use strict";
  Object.defineProperty(es, "__esModule", { value: !0 });
  es.matchFromAbsolutePathsAsync = es.createMatchPathAsync = void 0;
  var VD = H("path"), _p = wp(), Z8 = Cp(), UD = tu();
  function X8(e, t, r, n) {
    r === void 0 && (r = ["main"]), n === void 0 && (n = !0);
    var i = Z8.getAbsoluteMappingEntries(e, t, n);
    return function(o, a, u, l, c) {
      return WD(i, o, a, u, l, c, r);
    };
  }
  s(X8, "createMatchPathAsync");
  es.createMatchPathAsync = X8;
  function WD(e, t, r, n, i, o, a) {
    r === void 0 && (r = UD.readJsonFromDiskAsync), n === void 0 && (n = UD.fileExistsAsync), i === void 0 && (i = Object.keys(H.extensions)),
    a === void 0 && (a = ["main"]);
    var u = _p.getPathsToTry(i, e, t);
    if (!u)
      return o();
    nu(u, r, n, o, 0, a);
  }
  s(WD, "matchFromAbsolutePathsAsync");
  es.matchFromAbsolutePathsAsync = WD;
  function zD(e, t, r, n, i, o) {
    if (o === void 0 && (o = 0), o >= t.length)
      return i(void 0, void 0);
    var a = /* @__PURE__ */ s(function() {
      return zD(e, t, r, n, i, o + 1);
    }, "tryNext"), u = t[o], l = typeof u == "string" ? e[u] : u.reduce(function(p, h) {
      return p[h];
    }, e);
    if (typeof l != "string")
      return a();
    var c = VD.join(VD.dirname(r), l);
    n(c, function(p, h) {
      return p ? i(p) : h ? i(void 0, c) : a();
    });
  }
  s(zD, "findFirstExistingMainFieldMappedFile");
  function nu(e, t, r, n, i, o) {
    i === void 0 && (i = 0), o === void 0 && (o = ["main"]);
    var a = e[i];
    a.type === "file" || a.type === "extension" || a.type === "index" ? r(a.path, function(u, l) {
      return u ? n(u) : l ? n(void 0, _p.getStrippedPath(a)) : i === e.length - 1 ? n() : nu(e, t, r, n, i + 1, o);
    }) : a.type === "package" ? t(a.path, function(u, l) {
      return u ? n(u) : l ? zD(l, o, a.path, r, function(c, p) {
        return c ? n(c) : p ? n(void 0, p) : nu(e, t, r, n, i + 1, o);
      }) : nu(e, t, r, n, i + 1, o);
    }) : _p.exhaustiveTypeException(a.type);
  }
  s(nu, "findFirstExistingPath");
});

// ../node_modules/json5/lib/unicode.js
var GD = I((xue, iu) => {
  iu.exports.Space_Separator = /[\u1680\u2000-\u200A\u202F\u205F\u3000]/;
  iu.exports.ID_Start = /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE83\uDE86-\uDE89\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]/;
  iu.exports.ID_Continue = /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u0860-\u086A\u08A0-\u08B4\u08B6-\u08BD\u08D4-\u08E1\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u09FC\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9-\u0AFF\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C80-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D00-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D54-\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19D9\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1C80-\u1C88\u1CD0-\u1CD2\u1CD4-\u1CF9\u1D00-\u1DF9\u1DFB-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u2E2F\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099\u309A\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312E\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FEA\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AE\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF2D-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE3E\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC00-\uDC4A\uDC50-\uDC59\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDE00-\uDE3E\uDE47\uDE50-\uDE83\uDE86-\uDE99\uDEC0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC36\uDC38-\uDC40\uDC50-\uDC59\uDC72-\uDC8F\uDC92-\uDCA7\uDCA9-\uDCB6\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD47\uDD50-\uDD59]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD81C-\uD820\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F\uDFE0\uDFE1]|\uD821[\uDC00-\uDFEC]|\uD822[\uDC00-\uDEF2]|\uD82C[\uDC00-\uDD1E\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6\uDD00-\uDD4A\uDD50-\uDD59]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/;
});

// ../node_modules/json5/lib/util.js
var Tp = I((bue, JD) => {
  var kp = GD();
  JD.exports = {
    isSpaceSeparator(e) {
      return typeof e == "string" && kp.Space_Separator.test(e);
    },
    isIdStartChar(e) {
      return typeof e == "string" && (e >= "a" && e <= "z" || e >= "A" && e <= "Z" || e === "$" || e === "_" || kp.ID_Start.test(e));
    },
    isIdContinueChar(e) {
      return typeof e == "string" && (e >= "a" && e <= "z" || e >= "A" && e <= "Z" || e >= "0" && e <= "9" || e === "$" || e === "_" || e ===
      "\u200C" || e === "\u200D" || kp.ID_Continue.test(e));
    },
    isDigit(e) {
      return typeof e == "string" && /[0-9]/.test(e);
    },
    isHexDigit(e) {
      return typeof e == "string" && /[0-9A-Fa-f]/.test(e);
    }
  };
});

// ../node_modules/json5/lib/parse.js
var QD = I((vue, YD) => {
  var yt = Tp(), Pp, It, cn, ou, On, Fr, Dt, Rp, wo;
  YD.exports = /* @__PURE__ */ s(function(t, r) {
    Pp = String(t), It = "start", cn = [], ou = 0, On = 1, Fr = 0, Dt = void 0, Rp = void 0, wo = void 0;
    do
      Dt = K8(), eR[It]();
    while (Dt.type !== "eof");
    return typeof r == "function" ? Bp({ "": wo }, "", r) : wo;
  }, "parse");
  function Bp(e, t, r) {
    let n = e[t];
    if (n != null && typeof n == "object")
      if (Array.isArray(n))
        for (let i = 0; i < n.length; i++) {
          let o = String(i), a = Bp(n, o, r);
          a === void 0 ? delete n[o] : Object.defineProperty(n, o, {
            value: a,
            writable: !0,
            enumerable: !0,
            configurable: !0
          });
        }
      else
        for (let i in n) {
          let o = Bp(n, i, r);
          o === void 0 ? delete n[i] : Object.defineProperty(n, i, {
            value: o,
            writable: !0,
            enumerable: !0,
            configurable: !0
          });
        }
    return r.call(e, t, n);
  }
  s(Bp, "internalize");
  var _e, Ee, Co, ln, Pe;
  function K8() {
    for (_e = "default", Ee = "", Co = !1, ln = 1; ; ) {
      Pe = pn();
      let e = XD[_e]();
      if (e)
        return e;
    }
  }
  s(K8, "lex");
  function pn() {
    if (Pp[ou])
      return String.fromCodePoint(Pp.codePointAt(ou));
  }
  s(pn, "peek");
  function X() {
    let e = pn();
    return e === `
` ? (On++, Fr = 0) : e ? Fr += e.length : Fr++, e && (ou += e.length), e;
  }
  s(X, "read");
  var XD = {
    default() {
      switch (Pe) {
        case "	":
        case "\v":
        case "\f":
        case " ":
        case "\xA0":
        case "\uFEFF":
        case `
`:
        case "\r":
        case "\u2028":
        case "\u2029":
          X();
          return;
        case "/":
          X(), _e = "comment";
          return;
        case void 0:
          return X(), Ze("eof");
      }
      if (yt.isSpaceSeparator(Pe)) {
        X();
        return;
      }
      return XD[It]();
    },
    comment() {
      switch (Pe) {
        case "*":
          X(), _e = "multiLineComment";
          return;
        case "/":
          X(), _e = "singleLineComment";
          return;
      }
      throw Xe(X());
    },
    multiLineComment() {
      switch (Pe) {
        case "*":
          X(), _e = "multiLineCommentAsterisk";
          return;
        case void 0:
          throw Xe(X());
      }
      X();
    },
    multiLineCommentAsterisk() {
      switch (Pe) {
        case "*":
          X();
          return;
        case "/":
          X(), _e = "default";
          return;
        case void 0:
          throw Xe(X());
      }
      X(), _e = "multiLineComment";
    },
    singleLineComment() {
      switch (Pe) {
        case `
`:
        case "\r":
        case "\u2028":
        case "\u2029":
          X(), _e = "default";
          return;
        case void 0:
          return X(), Ze("eof");
      }
      X();
    },
    value() {
      switch (Pe) {
        case "{":
        case "[":
          return Ze("punctuator", X());
        case "n":
          return X(), fi("ull"), Ze("null", null);
        case "t":
          return X(), fi("rue"), Ze("boolean", !0);
        case "f":
          return X(), fi("alse"), Ze("boolean", !1);
        case "-":
        case "+":
          X() === "-" && (ln = -1), _e = "sign";
          return;
        case ".":
          Ee = X(), _e = "decimalPointLeading";
          return;
        case "0":
          Ee = X(), _e = "zero";
          return;
        case "1":
        case "2":
        case "3":
        case "4":
        case "5":
        case "6":
        case "7":
        case "8":
        case "9":
          Ee = X(), _e = "decimalInteger";
          return;
        case "I":
          return X(), fi("nfinity"), Ze("numeric", 1 / 0);
        case "N":
          return X(), fi("aN"), Ze("numeric", NaN);
        case '"':
        case "'":
          Co = X() === '"', Ee = "", _e = "string";
          return;
      }
      throw Xe(X());
    },
    identifierNameStartEscape() {
      if (Pe !== "u")
        throw Xe(X());
      X();
      let e = Op();
      switch (e) {
        case "$":
        case "_":
          break;
        default:
          if (!yt.isIdStartChar(e))
            throw ZD();
          break;
      }
      Ee += e, _e = "identifierName";
    },
    identifierName() {
      switch (Pe) {
        case "$":
        case "_":
        case "\u200C":
        case "\u200D":
          Ee += X();
          return;
        case "\\":
          X(), _e = "identifierNameEscape";
          return;
      }
      if (yt.isIdContinueChar(Pe)) {
        Ee += X();
        return;
      }
      return Ze("identifier", Ee);
    },
    identifierNameEscape() {
      if (Pe !== "u")
        throw Xe(X());
      X();
      let e = Op();
      switch (e) {
        case "$":
        case "_":
        case "\u200C":
        case "\u200D":
          break;
        default:
          if (!yt.isIdContinueChar(e))
            throw ZD();
          break;
      }
      Ee += e, _e = "identifierName";
    },
    sign() {
      switch (Pe) {
        case ".":
          Ee = X(), _e = "decimalPointLeading";
          return;
        case "0":
          Ee = X(), _e = "zero";
          return;
        case "1":
        case "2":
        case "3":
        case "4":
        case "5":
        case "6":
        case "7":
        case "8":
        case "9":
          Ee = X(), _e = "decimalInteger";
          return;
        case "I":
          return X(), fi("nfinity"), Ze("numeric", ln * (1 / 0));
        case "N":
          return X(), fi("aN"), Ze("numeric", NaN);
      }
      throw Xe(X());
    },
    zero() {
      switch (Pe) {
        case ".":
          Ee += X(), _e = "decimalPoint";
          return;
        case "e":
        case "E":
          Ee += X(), _e = "decimalExponent";
          return;
        case "x":
        case "X":
          Ee += X(), _e = "hexadecimal";
          return;
      }
      return Ze("numeric", ln * 0);
    },
    decimalInteger() {
      switch (Pe) {
        case ".":
          Ee += X(), _e = "decimalPoint";
          return;
        case "e":
        case "E":
          Ee += X(), _e = "decimalExponent";
          return;
      }
      if (yt.isDigit(Pe)) {
        Ee += X();
        return;
      }
      return Ze("numeric", ln * Number(Ee));
    },
    decimalPointLeading() {
      if (yt.isDigit(Pe)) {
        Ee += X(), _e = "decimalFraction";
        return;
      }
      throw Xe(X());
    },
    decimalPoint() {
      switch (Pe) {
        case "e":
        case "E":
          Ee += X(), _e = "decimalExponent";
          return;
      }
      if (yt.isDigit(Pe)) {
        Ee += X(), _e = "decimalFraction";
        return;
      }
      return Ze("numeric", ln * Number(Ee));
    },
    decimalFraction() {
      switch (Pe) {
        case "e":
        case "E":
          Ee += X(), _e = "decimalExponent";
          return;
      }
      if (yt.isDigit(Pe)) {
        Ee += X();
        return;
      }
      return Ze("numeric", ln * Number(Ee));
    },
    decimalExponent() {
      switch (Pe) {
        case "+":
        case "-":
          Ee += X(), _e = "decimalExponentSign";
          return;
      }
      if (yt.isDigit(Pe)) {
        Ee += X(), _e = "decimalExponentInteger";
        return;
      }
      throw Xe(X());
    },
    decimalExponentSign() {
      if (yt.isDigit(Pe)) {
        Ee += X(), _e = "decimalExponentInteger";
        return;
      }
      throw Xe(X());
    },
    decimalExponentInteger() {
      if (yt.isDigit(Pe)) {
        Ee += X();
        return;
      }
      return Ze("numeric", ln * Number(Ee));
    },
    hexadecimal() {
      if (yt.isHexDigit(Pe)) {
        Ee += X(), _e = "hexadecimalInteger";
        return;
      }
      throw Xe(X());
    },
    hexadecimalInteger() {
      if (yt.isHexDigit(Pe)) {
        Ee += X();
        return;
      }
      return Ze("numeric", ln * Number(Ee));
    },
    string() {
      switch (Pe) {
        case "\\":
          X(), Ee += Y8();
          return;
        case '"':
          if (Co)
            return X(), Ze("string", Ee);
          Ee += X();
          return;
        case "'":
          if (!Co)
            return X(), Ze("string", Ee);
          Ee += X();
          return;
        case `
`:
        case "\r":
          throw Xe(X());
        case "\u2028":
        case "\u2029":
          tR(Pe);
          break;
        case void 0:
          throw Xe(X());
      }
      Ee += X();
    },
    start() {
      switch (Pe) {
        case "{":
        case "[":
          return Ze("punctuator", X());
      }
      _e = "value";
    },
    beforePropertyName() {
      switch (Pe) {
        case "$":
        case "_":
          Ee = X(), _e = "identifierName";
          return;
        case "\\":
          X(), _e = "identifierNameStartEscape";
          return;
        case "}":
          return Ze("punctuator", X());
        case '"':
        case "'":
          Co = X() === '"', _e = "string";
          return;
      }
      if (yt.isIdStartChar(Pe)) {
        Ee += X(), _e = "identifierName";
        return;
      }
      throw Xe(X());
    },
    afterPropertyName() {
      if (Pe === ":")
        return Ze("punctuator", X());
      throw Xe(X());
    },
    beforePropertyValue() {
      _e = "value";
    },
    afterPropertyValue() {
      switch (Pe) {
        case ",":
        case "}":
          return Ze("punctuator", X());
      }
      throw Xe(X());
    },
    beforeArrayValue() {
      if (Pe === "]")
        return Ze("punctuator", X());
      _e = "value";
    },
    afterArrayValue() {
      switch (Pe) {
        case ",":
        case "]":
          return Ze("punctuator", X());
      }
      throw Xe(X());
    },
    end() {
      throw Xe(X());
    }
  };
  function Ze(e, t) {
    return {
      type: e,
      value: t,
      line: On,
      column: Fr
    };
  }
  s(Ze, "newToken");
  function fi(e) {
    for (let t of e) {
      if (pn() !== t)
        throw Xe(X());
      X();
    }
  }
  s(fi, "literal");
  function Y8() {
    switch (pn()) {
      case "b":
        return X(), "\b";
      case "f":
        return X(), "\f";
      case "n":
        return X(), `
`;
      case "r":
        return X(), "\r";
      case "t":
        return X(), "	";
      case "v":
        return X(), "\v";
      case "0":
        if (X(), yt.isDigit(pn()))
          throw Xe(X());
        return "\0";
      case "x":
        return X(), Q8();
      case "u":
        return X(), Op();
      case `
`:
      case "\u2028":
      case "\u2029":
        return X(), "";
      case "\r":
        return X(), pn() === `
` && X(), "";
      case "1":
      case "2":
      case "3":
      case "4":
      case "5":
      case "6":
      case "7":
      case "8":
      case "9":
        throw Xe(X());
      case void 0:
        throw Xe(X());
    }
    return X();
  }
  s(Y8, "escape");
  function Q8() {
    let e = "", t = pn();
    if (!yt.isHexDigit(t) || (e += X(), t = pn(), !yt.isHexDigit(t)))
      throw Xe(X());
    return e += X(), String.fromCodePoint(parseInt(e, 16));
  }
  s(Q8, "hexEscape");
  function Op() {
    let e = "", t = 4;
    for (; t-- > 0; ) {
      let r = pn();
      if (!yt.isHexDigit(r))
        throw Xe(X());
      e += X();
    }
    return String.fromCodePoint(parseInt(e, 16));
  }
  s(Op, "unicodeEscape");
  var eR = {
    start() {
      if (Dt.type === "eof")
        throw di();
      Ip();
    },
    beforePropertyName() {
      switch (Dt.type) {
        case "identifier":
        case "string":
          Rp = Dt.value, It = "afterPropertyName";
          return;
        case "punctuator":
          su();
          return;
        case "eof":
          throw di();
      }
    },
    afterPropertyName() {
      if (Dt.type === "eof")
        throw di();
      It = "beforePropertyValue";
    },
    beforePropertyValue() {
      if (Dt.type === "eof")
        throw di();
      Ip();
    },
    beforeArrayValue() {
      if (Dt.type === "eof")
        throw di();
      if (Dt.type === "punctuator" && Dt.value === "]") {
        su();
        return;
      }
      Ip();
    },
    afterPropertyValue() {
      if (Dt.type === "eof")
        throw di();
      switch (Dt.value) {
        case ",":
          It = "beforePropertyName";
          return;
        case "}":
          su();
      }
    },
    afterArrayValue() {
      if (Dt.type === "eof")
        throw di();
      switch (Dt.value) {
        case ",":
          It = "beforeArrayValue";
          return;
        case "]":
          su();
      }
    },
    end() {
    }
  };
  function Ip() {
    let e;
    switch (Dt.type) {
      case "punctuator":
        switch (Dt.value) {
          case "{":
            e = {};
            break;
          case "[":
            e = [];
            break;
        }
        break;
      case "null":
      case "boolean":
      case "numeric":
      case "string":
        e = Dt.value;
        break;
    }
    if (wo === void 0)
      wo = e;
    else {
      let t = cn[cn.length - 1];
      Array.isArray(t) ? t.push(e) : Object.defineProperty(t, Rp, {
        value: e,
        writable: !0,
        enumerable: !0,
        configurable: !0
      });
    }
    if (e !== null && typeof e == "object")
      cn.push(e), Array.isArray(e) ? It = "beforeArrayValue" : It = "beforePropertyName";
    else {
      let t = cn[cn.length - 1];
      t == null ? It = "end" : Array.isArray(t) ? It = "afterArrayValue" : It = "afterPropertyValue";
    }
  }
  s(Ip, "push");
  function su() {
    cn.pop();
    let e = cn[cn.length - 1];
    e == null ? It = "end" : Array.isArray(e) ? It = "afterArrayValue" : It = "afterPropertyValue";
  }
  s(su, "pop");
  function Xe(e) {
    return au(e === void 0 ? `JSON5: invalid end of input at ${On}:${Fr}` : `JSON5: invalid character '${KD(e)}' at ${On}:${Fr}`);
  }
  s(Xe, "invalidChar");
  function di() {
    return au(`JSON5: invalid end of input at ${On}:${Fr}`);
  }
  s(di, "invalidEOF");
  function ZD() {
    return Fr -= 5, au(`JSON5: invalid identifier character at ${On}:${Fr}`);
  }
  s(ZD, "invalidIdentifier");
  function tR(e) {
    console.warn(`JSON5: '${KD(e)}' in strings is not valid ECMAScript; consider escaping`);
  }
  s(tR, "separatorChar");
  function KD(e) {
    let t = {
      "'": "\\'",
      '"': '\\"',
      "\\": "\\\\",
      "\b": "\\b",
      "\f": "\\f",
      "\n": "\\n",
      "\r": "\\r",
      "	": "\\t",
      "\v": "\\v",
      "\0": "\\0",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    };
    if (t[e])
      return t[e];
    if (e < " ") {
      let r = e.charCodeAt(0).toString(16);
      return "\\x" + ("00" + r).substring(r.length);
    }
    return e;
  }
  s(KD, "formatChar");
  function au(e) {
    let t = new SyntaxError(e);
    return t.lineNumber = On, t.columnNumber = Fr, t;
  }
  s(au, "syntaxError");
});

// ../node_modules/json5/lib/stringify.js
var tx = I((Cue, ex) => {
  var Np = Tp();
  ex.exports = /* @__PURE__ */ s(function(t, r, n) {
    let i = [], o = "", a, u, l = "", c;
    if (r != null && typeof r == "object" && !Array.isArray(r) && (n = r.space, c = r.quote, r = r.replacer), typeof r == "function")
      u = r;
    else if (Array.isArray(r)) {
      a = [];
      for (let g of r) {
        let b;
        typeof g == "string" ? b = g : (typeof g == "number" || g instanceof String || g instanceof Number) && (b = String(g)), b !== void 0 &&
        a.indexOf(b) < 0 && a.push(b);
      }
    }
    return n instanceof Number ? n = Number(n) : n instanceof String && (n = String(n)), typeof n == "number" ? n > 0 && (n = Math.min(10, Math.
    floor(n)), l = "          ".substr(0, n)) : typeof n == "string" && (l = n.substr(0, 10)), p("", { "": t });
    function p(g, b) {
      let y = b[g];
      switch (y != null && (typeof y.toJSON5 == "function" ? y = y.toJSON5(g) : typeof y.toJSON == "function" && (y = y.toJSON(g))), u && (y =
      u.call(b, g, y)), y instanceof Number ? y = Number(y) : y instanceof String ? y = String(y) : y instanceof Boolean && (y = y.valueOf()),
      y) {
        case null:
          return "null";
        case !0:
          return "true";
        case !1:
          return "false";
      }
      if (typeof y == "string")
        return h(y, !1);
      if (typeof y == "number")
        return String(y);
      if (typeof y == "object")
        return Array.isArray(y) ? m(y) : f(y);
    }
    s(p, "serializeProperty");
    function h(g) {
      let b = {
        "'": 0.1,
        '"': 0.2
      }, y = {
        "'": "\\'",
        '"': '\\"',
        "\\": "\\\\",
        "\b": "\\b",
        "\f": "\\f",
        "\n": "\\n",
        "\r": "\\r",
        "	": "\\t",
        "\v": "\\v",
        "\0": "\\0",
        "\u2028": "\\u2028",
        "\u2029": "\\u2029"
      }, E = "";
      for (let k = 0; k < g.length; k++) {
        let O = g[k];
        switch (O) {
          case "'":
          case '"':
            b[O]++, E += O;
            continue;
          case "\0":
            if (Np.isDigit(g[k + 1])) {
              E += "\\x00";
              continue;
            }
        }
        if (y[O]) {
          E += y[O];
          continue;
        }
        if (O < " ") {
          let w = O.charCodeAt(0).toString(16);
          E += "\\x" + ("00" + w).substring(w.length);
          continue;
        }
        E += O;
      }
      let A = c || Object.keys(b).reduce((k, O) => b[k] < b[O] ? k : O);
      return E = E.replace(new RegExp(A, "g"), y[A]), A + E + A;
    }
    s(h, "quoteString");
    function f(g) {
      if (i.indexOf(g) >= 0)
        throw TypeError("Converting circular structure to JSON5");
      i.push(g);
      let b = o;
      o = o + l;
      let y = a || Object.keys(g), E = [];
      for (let k of y) {
        let O = p(k, g);
        if (O !== void 0) {
          let w = d(k) + ":";
          l !== "" && (w += " "), w += O, E.push(w);
        }
      }
      let A;
      if (E.length === 0)
        A = "{}";
      else {
        let k;
        if (l === "")
          k = E.join(","), A = "{" + k + "}";
        else {
          let O = `,
` + o;
          k = E.join(O), A = `{
` + o + k + `,
` + b + "}";
        }
      }
      return i.pop(), o = b, A;
    }
    s(f, "serializeObject");
    function d(g) {
      if (g.length === 0)
        return h(g, !0);
      let b = String.fromCodePoint(g.codePointAt(0));
      if (!Np.isIdStartChar(b))
        return h(g, !0);
      for (let y = b.length; y < g.length; y++)
        if (!Np.isIdContinueChar(String.fromCodePoint(g.codePointAt(y))))
          return h(g, !0);
      return g;
    }
    s(d, "serializeKey");
    function m(g) {
      if (i.indexOf(g) >= 0)
        throw TypeError("Converting circular structure to JSON5");
      i.push(g);
      let b = o;
      o = o + l;
      let y = [];
      for (let A = 0; A < g.length; A++) {
        let k = p(String(A), g);
        y.push(k !== void 0 ? k : "null");
      }
      let E;
      if (y.length === 0)
        E = "[]";
      else if (l === "")
        E = "[" + y.join(",") + "]";
      else {
        let A = `,
` + o, k = y.join(A);
        E = `[
` + o + k + `,
` + b + "]";
      }
      return i.pop(), o = b, E;
    }
    s(m, "serializeArray");
  }, "stringify");
});

// ../node_modules/json5/lib/index.js
var nx = I((Sue, rx) => {
  var rR = QD(), nR = tx(), iR = {
    parse: rR,
    stringify: nR
  };
  rx.exports = iR;
});

// ../node_modules/strip-bom/index.js
var sx = I((Aue, ix) => {
  "use strict";
  ix.exports = (e) => {
    if (typeof e != "string")
      throw new TypeError("Expected a string, got " + typeof e);
    return e.charCodeAt(0) === 65279 ? e.slice(1) : e;
  };
});

// ../node_modules/tsconfig-paths/lib/tsconfig-loader.js
var ux = I(($r) => {
  "use strict";
  var mi = $r && $r.__assign || function() {
    return mi = Object.assign || function(e) {
      for (var t, r = 1, n = arguments.length; r < n; r++) {
        t = arguments[r];
        for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
      }
      return e;
    }, mi.apply(this, arguments);
  };
  Object.defineProperty($r, "__esModule", { value: !0 });
  $r.loadTsconfig = $r.walkForTsConfig = $r.tsConfigLoader = void 0;
  var _r = H("path"), So = H("fs"), sR = nx(), oR = sx();
  function aR(e) {
    var t = e.getEnv, r = e.cwd, n = e.loadSync, i = n === void 0 ? uR : n, o = t("TS_NODE_PROJECT"), a = t("TS_NODE_BASEURL"), u = i(r, o, a);
    return u;
  }
  s(aR, "tsConfigLoader");
  $r.tsConfigLoader = aR;
  function uR(e, t, r) {
    var n = lR(e, t);
    if (!n)
      return {
        tsConfigPath: void 0,
        baseUrl: void 0,
        paths: void 0
      };
    var i = jp(n);
    return {
      tsConfigPath: n,
      baseUrl: r || i && i.compilerOptions && i.compilerOptions.baseUrl,
      paths: i && i.compilerOptions && i.compilerOptions.paths
    };
  }
  s(uR, "loadSyncDefault");
  function lR(e, t) {
    if (t) {
      var r = So.lstatSync(t).isDirectory() ? _r.resolve(t, "./tsconfig.json") : _r.resolve(e, t);
      return r;
    }
    if (So.statSync(e).isFile())
      return _r.resolve(e);
    var n = Lp(e);
    return n ? _r.resolve(n) : void 0;
  }
  s(lR, "resolveConfigPath");
  function Lp(e, t) {
    t === void 0 && (t = So.readdirSync);
    for (var r = t(e), n = ["tsconfig.json", "jsconfig.json"], i = 0, o = n; i < o.length; i++) {
      var a = o[i];
      if (r.indexOf(a) !== -1)
        return _r.join(e, a);
    }
    var u = _r.dirname(e);
    if (e !== u)
      return Lp(u, t);
  }
  s(Lp, "walkForTsConfig");
  $r.walkForTsConfig = Lp;
  function jp(e, t, r) {
    if (t === void 0 && (t = So.existsSync), r === void 0 && (r = /* @__PURE__ */ s(function(l) {
      return So.readFileSync(l, "utf8");
    }, "readFileSync")), !!t(e)) {
      var n = r(e), i = oR(n), o;
      try {
        o = sR.parse(i);
      } catch (l) {
        throw new Error("".concat(e, " is malformed ").concat(l.message));
      }
      var a = o.extends;
      if (a) {
        var u = void 0;
        return Array.isArray(a) ? u = a.reduce(function(l, c) {
          return ax(l, ox(e, c, t, r));
        }, {}) : u = ox(e, a, t, r), ax(u, o);
      }
      return o;
    }
  }
  s(jp, "loadTsconfig");
  $r.loadTsconfig = jp;
  function ox(e, t, r, n) {
    var i;
    typeof t == "string" && t.indexOf(".json") === -1 && (t += ".json");
    var o = _r.dirname(e), a = _r.join(o, t);
    t.indexOf("/") !== -1 && t.indexOf(".") !== -1 && !r(a) && (a = _r.join(o, "node_modules", t));
    var u = jp(a, r, n) || {};
    if (!((i = u.compilerOptions) === null || i === void 0) && i.baseUrl) {
      var l = _r.dirname(t);
      u.compilerOptions.baseUrl = _r.join(l, u.compilerOptions.baseUrl);
    }
    return u;
  }
  s(ox, "loadTsconfigFromExtends");
  function ax(e, t) {
    return e = e || {}, t = t || {}, mi(mi(mi({}, e), t), { compilerOptions: mi(mi({}, e.compilerOptions), t.compilerOptions) });
  }
  s(ax, "mergeTsconfigs");
});

// ../node_modules/tsconfig-paths/lib/config-loader.js
var Mp = I((ts) => {
  "use strict";
  Object.defineProperty(ts, "__esModule", { value: !0 });
  ts.configLoader = ts.loadConfig = void 0;
  var cR = ux(), uu = H("path");
  function pR(e) {
    return e === void 0 && (e = process.cwd()), lx({ cwd: e });
  }
  s(pR, "loadConfig");
  ts.loadConfig = pR;
  function lx(e) {
    var t = e.cwd, r = e.explicitParams, n = e.tsConfigLoader, i = n === void 0 ? cR.tsConfigLoader : n;
    if (r) {
      var o = uu.isAbsolute(r.baseUrl) ? r.baseUrl : uu.join(t, r.baseUrl);
      return {
        resultType: "success",
        configFileAbsolutePath: "",
        baseUrl: r.baseUrl,
        absoluteBaseUrl: o,
        paths: r.paths,
        mainFields: r.mainFields,
        addMatchAll: r.addMatchAll
      };
    }
    var a = i({
      cwd: t,
      getEnv: /* @__PURE__ */ s(function(u) {
        return process.env[u];
      }, "getEnv")
    });
    return a.tsConfigPath ? {
      resultType: "success",
      configFileAbsolutePath: a.tsConfigPath,
      baseUrl: a.baseUrl,
      absoluteBaseUrl: uu.resolve(uu.dirname(a.tsConfigPath), a.baseUrl || ""),
      paths: a.paths || {},
      addMatchAll: a.baseUrl !== void 0
    } : {
      resultType: "failed",
      message: "Couldn't find tsconfig.json"
    };
  }
  s(lx, "configLoader");
  ts.configLoader = lx;
});

// ../node_modules/minimist/index.js
var fx = I((Iue, hx) => {
  "use strict";
  function hR(e, t) {
    var r = e;
    t.slice(0, -1).forEach(function(i) {
      r = r[i] || {};
    });
    var n = t[t.length - 1];
    return n in r;
  }
  s(hR, "hasKey");
  function cx(e) {
    return typeof e == "number" || /^0x[0-9a-f]+$/i.test(e) ? !0 : /^[-+]?(?:\d+(?:\.\d*)?|\.\d+)(e[-+]?\d+)?$/.test(e);
  }
  s(cx, "isNumber");
  function px(e, t) {
    return t === "constructor" && typeof e[t] == "function" || t === "__proto__";
  }
  s(px, "isConstructorOrProto");
  hx.exports = function(e, t) {
    t || (t = {});
    var r = {
      bools: {},
      strings: {},
      unknownFn: null
    };
    typeof t.unknown == "function" && (r.unknownFn = t.unknown), typeof t.boolean == "boolean" && t.boolean ? r.allBools = !0 : [].concat(t.
    boolean).filter(Boolean).forEach(function(k) {
      r.bools[k] = !0;
    });
    var n = {};
    function i(k) {
      return n[k].some(function(O) {
        return r.bools[O];
      });
    }
    s(i, "aliasIsBoolean"), Object.keys(t.alias || {}).forEach(function(k) {
      n[k] = [].concat(t.alias[k]), n[k].forEach(function(O) {
        n[O] = [k].concat(n[k].filter(function(w) {
          return O !== w;
        }));
      });
    }), [].concat(t.string).filter(Boolean).forEach(function(k) {
      r.strings[k] = !0, n[k] && [].concat(n[k]).forEach(function(O) {
        r.strings[O] = !0;
      });
    });
    var o = t.default || {}, a = { _: [] };
    function u(k, O) {
      return r.allBools && /^--[^=]+$/.test(O) || r.strings[k] || r.bools[k] || n[k];
    }
    s(u, "argDefined");
    function l(k, O, w) {
      for (var C = k, T = 0; T < O.length - 1; T++) {
        var F = O[T];
        if (px(C, F))
          return;
        C[F] === void 0 && (C[F] = {}), (C[F] === Object.prototype || C[F] === Number.prototype || C[F] === String.prototype) && (C[F] = {}),
        C[F] === Array.prototype && (C[F] = []), C = C[F];
      }
      var $ = O[O.length - 1];
      px(C, $) || ((C === Object.prototype || C === Number.prototype || C === String.prototype) && (C = {}), C === Array.prototype && (C = []),
      C[$] === void 0 || r.bools[$] || typeof C[$] == "boolean" ? C[$] = w : Array.isArray(C[$]) ? C[$].push(w) : C[$] = [C[$], w]);
    }
    s(l, "setKey");
    function c(k, O, w) {
      if (!(w && r.unknownFn && !u(k, w) && r.unknownFn(w) === !1)) {
        var C = !r.strings[k] && cx(O) ? Number(O) : O;
        l(a, k.split("."), C), (n[k] || []).forEach(function(T) {
          l(a, T.split("."), C);
        });
      }
    }
    s(c, "setArg"), Object.keys(r.bools).forEach(function(k) {
      c(k, o[k] === void 0 ? !1 : o[k]);
    });
    var p = [];
    e.indexOf("--") !== -1 && (p = e.slice(e.indexOf("--") + 1), e = e.slice(0, e.indexOf("--")));
    for (var h = 0; h < e.length; h++) {
      var f = e[h], d, m;
      if (/^--.+=/.test(f)) {
        var g = f.match(/^--([^=]+)=([\s\S]*)$/);
        d = g[1];
        var b = g[2];
        r.bools[d] && (b = b !== "false"), c(d, b, f);
      } else if (/^--no-.+/.test(f))
        d = f.match(/^--no-(.+)/)[1], c(d, !1, f);
      else if (/^--.+/.test(f))
        d = f.match(/^--(.+)/)[1], m = e[h + 1], m !== void 0 && !/^(-|--)[^-]/.test(m) && !r.bools[d] && !r.allBools && (!n[d] || !i(d)) ? (c(
        d, m, f), h += 1) : /^(true|false)$/.test(m) ? (c(d, m === "true", f), h += 1) : c(d, r.strings[d] ? "" : !0, f);
      else if (/^-[^-]+/.test(f)) {
        for (var y = f.slice(1, -1).split(""), E = !1, A = 0; A < y.length; A++) {
          if (m = f.slice(A + 2), m === "-") {
            c(y[A], m, f);
            continue;
          }
          if (/[A-Za-z]/.test(y[A]) && m[0] === "=") {
            c(y[A], m.slice(1), f), E = !0;
            break;
          }
          if (/[A-Za-z]/.test(y[A]) && /-?\d+(\.\d*)?(e-?\d+)?$/.test(m)) {
            c(y[A], m, f), E = !0;
            break;
          }
          if (y[A + 1] && y[A + 1].match(/\W/)) {
            c(y[A], f.slice(A + 2), f), E = !0;
            break;
          } else
            c(y[A], r.strings[y[A]] ? "" : !0, f);
        }
        d = f.slice(-1)[0], !E && d !== "-" && (e[h + 1] && !/^(-|--)[^-]/.test(e[h + 1]) && !r.bools[d] && (!n[d] || !i(d)) ? (c(d, e[h + 1],
        f), h += 1) : e[h + 1] && /^(true|false)$/.test(e[h + 1]) ? (c(d, e[h + 1] === "true", f), h += 1) : c(d, r.strings[d] ? "" : !0, f));
      } else if ((!r.unknownFn || r.unknownFn(f) !== !1) && a._.push(r.strings._ || !cx(f) ? f : Number(f)), t.stopEarly) {
        a._.push.apply(a._, e.slice(h + 1));
        break;
      }
    }
    return Object.keys(o).forEach(function(k) {
      hR(a, k.split(".")) || (l(a, k.split("."), o[k]), (n[k] || []).forEach(function(O) {
        l(a, O.split("."), o[k]);
      }));
    }), t["--"] ? a["--"] = p.slice() : p.forEach(function(k) {
      a._.push(k);
    }), a;
  };
});

// ../node_modules/tsconfig-paths/lib/register.js
var dx = I((rs) => {
  "use strict";
  var fR = rs && rs.__spreadArray || function(e, t, r) {
    if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
      (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
    return e.concat(o || Array.prototype.slice.call(t));
  };
  Object.defineProperty(rs, "__esModule", { value: !0 });
  rs.register = void 0;
  var dR = Fp(), mR = Mp(), gR = /* @__PURE__ */ s(function() {
  }, "noOp");
  function yR(e) {
    e = e || [
      "assert",
      "buffer",
      "child_process",
      "cluster",
      "crypto",
      "dgram",
      "dns",
      "domain",
      "events",
      "fs",
      "http",
      "https",
      "net",
      "os",
      "path",
      "punycode",
      "querystring",
      "readline",
      "stream",
      "string_decoder",
      "tls",
      "tty",
      "url",
      "util",
      "v8",
      "vm",
      "zlib"
    ];
    for (var t = {}, r = 0, n = e; r < n.length; r++) {
      var i = n[r];
      t[i] = !0;
    }
    return t;
  }
  s(yR, "getCoreModules");
  function DR(e) {
    var t, r;
    if (e)
      t = e.cwd, (e.baseUrl || e.paths) && (r = e);
    else {
      var n = fx(), i = n(process.argv.slice(2), {
        // eslint-disable-next-line id-denylist
        string: ["project"],
        alias: {
          project: ["P"]
        }
      });
      t = i.project;
    }
    var o = (0, mR.configLoader)({
      cwd: t ?? process.cwd(),
      explicitParams: r
    });
    if (o.resultType === "failed")
      return console.warn("".concat(o.message, ". tsconfig-paths will be skipped")), gR;
    var a = (0, dR.createMatchPath)(o.absoluteBaseUrl, o.paths, o.mainFields, o.addMatchAll), u = H("module"), l = u._resolveFilename, c = yR(
    u.builtinModules);
    return u._resolveFilename = function(p, h) {
      var f = c.hasOwnProperty(p);
      if (!f) {
        var d = a(p);
        if (d) {
          var m = fR([d], [].slice.call(arguments, 1), !0);
          return l.apply(this, m);
        }
      }
      return l.apply(this, arguments);
    }, function() {
      u._resolveFilename = l;
    };
  }
  s(DR, "register");
  rs.register = DR;
});

// ../node_modules/tsconfig-paths/lib/index.js
var yx = I((Mt) => {
  "use strict";
  Object.defineProperty(Mt, "__esModule", { value: !0 });
  Mt.loadConfig = Mt.register = Mt.matchFromAbsolutePathsAsync = Mt.createMatchPathAsync = Mt.matchFromAbsolutePaths = Mt.createMatchPath = void 0;
  var mx = Fp();
  Object.defineProperty(Mt, "createMatchPath", { enumerable: !0, get: /* @__PURE__ */ s(function() {
    return mx.createMatchPath;
  }, "get") });
  Object.defineProperty(Mt, "matchFromAbsolutePaths", { enumerable: !0, get: /* @__PURE__ */ s(function() {
    return mx.matchFromAbsolutePaths;
  }, "get") });
  var gx = HD();
  Object.defineProperty(Mt, "createMatchPathAsync", { enumerable: !0, get: /* @__PURE__ */ s(function() {
    return gx.createMatchPathAsync;
  }, "get") });
  Object.defineProperty(Mt, "matchFromAbsolutePathsAsync", { enumerable: !0, get: /* @__PURE__ */ s(function() {
    return gx.matchFromAbsolutePathsAsync;
  }, "get") });
  var xR = dx();
  Object.defineProperty(Mt, "register", { enumerable: !0, get: /* @__PURE__ */ s(function() {
    return xR.register;
  }, "get") });
  var bR = Mp();
  Object.defineProperty(Mt, "loadConfig", { enumerable: !0, get: /* @__PURE__ */ s(function() {
    return bR.loadConfig;
  }, "get") });
});

// ../node_modules/globby/node_modules/@sindresorhus/merge-streams/index.js
import { on as wR, once as SR } from "node:events";
import { PassThrough as AR } from "node:stream";
import { finished as kx } from "node:stream/promises";
function Wp(e) {
  if (!Array.isArray(e))
    throw new TypeError(`Expected an array, got \`${typeof e}\`.`);
  for (let i of e)
    Vp(i);
  let t = e.some(({ readableObjectMode: i }) => i), r = FR(e, t), n = new $p({
    objectMode: t,
    writableHighWaterMark: r,
    readableHighWaterMark: r
  });
  for (let i of e)
    n.add(i);
  return e.length === 0 && Px(n), n;
}
var FR, $p, _R, kR, TR, Vp, IR, Tx, PR, BR, OR, Ix, Px, Up, Bx, RR, lu, Fx, _x, Ox = Et(() => {
  s(Wp, "mergeStreams");
  FR = /* @__PURE__ */ s((e, t) => {
    if (e.length === 0)
      return 16384;
    let r = e.filter(({ readableObjectMode: n }) => n === t).map(({ readableHighWaterMark: n }) => n);
    return Math.max(...r);
  }, "getHighWaterMark"), $p = class extends AR {
    static {
      s(this, "MergedStream");
    }
    #t = /* @__PURE__ */ new Set([]);
    #r = /* @__PURE__ */ new Set([]);
    #e = /* @__PURE__ */ new Set([]);
    #n;
    add(t) {
      Vp(t), !this.#t.has(t) && (this.#t.add(t), this.#n ??= _R(this, this.#t), IR({
        passThroughStream: this,
        stream: t,
        streams: this.#t,
        ended: this.#r,
        aborted: this.#e,
        onFinished: this.#n
      }), t.pipe(this, { end: !1 }));
    }
    remove(t) {
      return Vp(t), this.#t.has(t) ? (t.unpipe(this), !0) : !1;
    }
  }, _R = /* @__PURE__ */ s(async (e, t) => {
    lu(e, Fx);
    let r = new AbortController();
    try {
      await Promise.race([
        kR(e, r),
        TR(e, t, r)
      ]);
    } finally {
      r.abort(), lu(e, -Fx);
    }
  }, "onMergedStreamFinished"), kR = /* @__PURE__ */ s(async (e, { signal: t }) => {
    await kx(e, { signal: t, cleanup: !0 });
  }, "onMergedStreamEnd"), TR = /* @__PURE__ */ s(async (e, t, { signal: r }) => {
    for await (let [n] of wR(e, "unpipe", { signal: r }))
      t.has(n) && n.emit(Ix);
  }, "onInputStreamsUnpipe"), Vp = /* @__PURE__ */ s((e) => {
    if (typeof e?.pipe != "function")
      throw new TypeError(`Expected a readable stream, got: \`${typeof e}\`.`);
  }, "validateStream"), IR = /* @__PURE__ */ s(async ({ passThroughStream: e, stream: t, streams: r, ended: n, aborted: i, onFinished: o }) => {
    lu(e, _x);
    let a = new AbortController();
    try {
      await Promise.race([
        PR(o, t),
        BR({ passThroughStream: e, stream: t, streams: r, ended: n, aborted: i, controller: a }),
        OR({ stream: t, streams: r, ended: n, aborted: i, controller: a })
      ]);
    } finally {
      a.abort(), lu(e, -_x);
    }
    r.size === n.size + i.size && (n.size === 0 && i.size > 0 ? Up(e) : Px(e));
  }, "endWhenStreamsDone"), Tx = /* @__PURE__ */ s((e) => e?.code === "ERR_STREAM_PREMATURE_CLOSE", "isAbortError"), PR = /* @__PURE__ */ s(
  async (e, t) => {
    try {
      await e, Up(t);
    } catch (r) {
      Tx(r) ? Up(t) : Bx(t, r);
    }
  }, "afterMergedStreamFinished"), BR = /* @__PURE__ */ s(async ({ passThroughStream: e, stream: t, streams: r, ended: n, aborted: i, controller: {
  signal: o } }) => {
    try {
      await kx(t, { signal: o, cleanup: !0, readable: !0, writable: !1 }), r.has(t) && n.add(t);
    } catch (a) {
      if (o.aborted || !r.has(t))
        return;
      Tx(a) ? i.add(t) : Bx(e, a);
    }
  }, "onInputStreamEnd"), OR = /* @__PURE__ */ s(async ({ stream: e, streams: t, ended: r, aborted: n, controller: { signal: i } }) => {
    await SR(e, Ix, { signal: i }), t.delete(e), r.delete(e), n.delete(e);
  }, "onInputStreamUnpipe"), Ix = Symbol("unpipe"), Px = /* @__PURE__ */ s((e) => {
    e.writable && e.end();
  }, "endStream"), Up = /* @__PURE__ */ s((e) => {
    (e.readable || e.writable) && e.destroy();
  }, "abortStream"), Bx = /* @__PURE__ */ s((e, t) => {
    e.destroyed || (e.once("error", RR), e.destroy(t));
  }, "errorStream"), RR = /* @__PURE__ */ s(() => {
  }, "noop"), lu = /* @__PURE__ */ s((e, t) => {
    let r = e.getMaxListeners();
    r !== 0 && r !== Number.POSITIVE_INFINITY && e.setMaxListeners(r + t);
  }, "updateMaxListeners"), Fx = 2, _x = 1;
});

// ../node_modules/fast-glob/out/utils/array.js
var Rx = I((ns) => {
  "use strict";
  Object.defineProperty(ns, "__esModule", { value: !0 });
  ns.splitWhen = ns.flatten = void 0;
  function NR(e) {
    return e.reduce((t, r) => [].concat(t, r), []);
  }
  s(NR, "flatten");
  ns.flatten = NR;
  function LR(e, t) {
    let r = [[]], n = 0;
    for (let i of e)
      t(i) ? (n++, r[n] = []) : r[n].push(i);
    return r;
  }
  s(LR, "splitWhen");
  ns.splitWhen = LR;
});

// ../node_modules/fast-glob/out/utils/errno.js
var Nx = I((cu) => {
  "use strict";
  Object.defineProperty(cu, "__esModule", { value: !0 });
  cu.isEnoentCodeError = void 0;
  function jR(e) {
    return e.code === "ENOENT";
  }
  s(jR, "isEnoentCodeError");
  cu.isEnoentCodeError = jR;
});

// ../node_modules/fast-glob/out/utils/fs.js
var Lx = I((pu) => {
  "use strict";
  Object.defineProperty(pu, "__esModule", { value: !0 });
  pu.createDirentFromStats = void 0;
  var zp = class {
    static {
      s(this, "DirentFromStats");
    }
    constructor(t, r) {
      this.name = t, this.isBlockDevice = r.isBlockDevice.bind(r), this.isCharacterDevice = r.isCharacterDevice.bind(r), this.isDirectory = r.
      isDirectory.bind(r), this.isFIFO = r.isFIFO.bind(r), this.isFile = r.isFile.bind(r), this.isSocket = r.isSocket.bind(r), this.isSymbolicLink =
      r.isSymbolicLink.bind(r);
    }
  };
  function MR(e, t) {
    return new zp(e, t);
  }
  s(MR, "createDirentFromStats");
  pu.createDirentFromStats = MR;
});

// ../node_modules/fast-glob/out/utils/path.js
var $x = I((ht) => {
  "use strict";
  Object.defineProperty(ht, "__esModule", { value: !0 });
  ht.convertPosixPathToPattern = ht.convertWindowsPathToPattern = ht.convertPathToPattern = ht.escapePosixPath = ht.escapeWindowsPath = ht.escape =
  ht.removeLeadingDotSegment = ht.makeAbsolute = ht.unixify = void 0;
  var qR = H("os"), $R = H("path"), jx = qR.platform() === "win32", VR = 2, UR = /(\\?)([()*?[\]{|}]|^!|[!+@](?=\()|\\(?![!()*+?@[\]{|}]))/g,
  WR = /(\\?)([()[\]{}]|^!|[!+@](?=\())/g, zR = /^\\\\([.?])/, HR = /\\(?![!()+@[\]{}])/g;
  function GR(e) {
    return e.replace(/\\/g, "/");
  }
  s(GR, "unixify");
  ht.unixify = GR;
  function JR(e, t) {
    return $R.resolve(e, t);
  }
  s(JR, "makeAbsolute");
  ht.makeAbsolute = JR;
  function ZR(e) {
    if (e.charAt(0) === ".") {
      let t = e.charAt(1);
      if (t === "/" || t === "\\")
        return e.slice(VR);
    }
    return e;
  }
  s(ZR, "removeLeadingDotSegment");
  ht.removeLeadingDotSegment = ZR;
  ht.escape = jx ? Hp : Gp;
  function Hp(e) {
    return e.replace(WR, "\\$2");
  }
  s(Hp, "escapeWindowsPath");
  ht.escapeWindowsPath = Hp;
  function Gp(e) {
    return e.replace(UR, "\\$2");
  }
  s(Gp, "escapePosixPath");
  ht.escapePosixPath = Gp;
  ht.convertPathToPattern = jx ? Mx : qx;
  function Mx(e) {
    return Hp(e).replace(zR, "//$1").replace(HR, "/");
  }
  s(Mx, "convertWindowsPathToPattern");
  ht.convertWindowsPathToPattern = Mx;
  function qx(e) {
    return Gp(e);
  }
  s(qx, "convertPosixPathToPattern");
  ht.convertPosixPathToPattern = qx;
});

// ../node_modules/is-extglob/index.js
var Ux = I((fle, Vx) => {
  Vx.exports = /* @__PURE__ */ s(function(t) {
    if (typeof t != "string" || t === "")
      return !1;
    for (var r; r = /(\\).|([@?!+*]\(.*\))/g.exec(t); ) {
      if (r[2]) return !0;
      t = t.slice(r.index + r[0].length);
    }
    return !1;
  }, "isExtglob");
});

// ../node_modules/is-glob/index.js
var Hx = I((mle, zx) => {
  var XR = Ux(), Wx = { "{": "}", "(": ")", "[": "]" }, KR = /* @__PURE__ */ s(function(e) {
    if (e[0] === "!")
      return !0;
    for (var t = 0, r = -2, n = -2, i = -2, o = -2, a = -2; t < e.length; ) {
      if (e[t] === "*" || e[t + 1] === "?" && /[\].+)]/.test(e[t]) || n !== -1 && e[t] === "[" && e[t + 1] !== "]" && (n < t && (n = e.indexOf(
      "]", t)), n > t && (a === -1 || a > n || (a = e.indexOf("\\", t), a === -1 || a > n))) || i !== -1 && e[t] === "{" && e[t + 1] !== "}" &&
      (i = e.indexOf("}", t), i > t && (a = e.indexOf("\\", t), a === -1 || a > i)) || o !== -1 && e[t] === "(" && e[t + 1] === "?" && /[:!=]/.
      test(e[t + 2]) && e[t + 3] !== ")" && (o = e.indexOf(")", t), o > t && (a = e.indexOf("\\", t), a === -1 || a > o)) || r !== -1 && e[t] ===
      "(" && e[t + 1] !== "|" && (r < t && (r = e.indexOf("|", t)), r !== -1 && e[r + 1] !== ")" && (o = e.indexOf(")", r), o > r && (a = e.
      indexOf("\\", r), a === -1 || a > o))))
        return !0;
      if (e[t] === "\\") {
        var u = e[t + 1];
        t += 2;
        var l = Wx[u];
        if (l) {
          var c = e.indexOf(l, t);
          c !== -1 && (t = c + 1);
        }
        if (e[t] === "!")
          return !0;
      } else
        t++;
    }
    return !1;
  }, "strictCheck"), YR = /* @__PURE__ */ s(function(e) {
    if (e[0] === "!")
      return !0;
    for (var t = 0; t < e.length; ) {
      if (/[*?{}()[\]]/.test(e[t]))
        return !0;
      if (e[t] === "\\") {
        var r = e[t + 1];
        t += 2;
        var n = Wx[r];
        if (n) {
          var i = e.indexOf(n, t);
          i !== -1 && (t = i + 1);
        }
        if (e[t] === "!")
          return !0;
      } else
        t++;
    }
    return !1;
  }, "relaxedCheck");
  zx.exports = /* @__PURE__ */ s(function(t, r) {
    if (typeof t != "string" || t === "")
      return !1;
    if (XR(t))
      return !0;
    var n = KR;
    return r && r.strict === !1 && (n = YR), n(t);
  }, "isGlob");
});

// ../node_modules/fast-glob/node_modules/glob-parent/index.js
var Jx = I((yle, Gx) => {
  "use strict";
  var QR = Hx(), e9 = H("path").posix.dirname, t9 = H("os").platform() === "win32", Jp = "/", r9 = /\\/g, n9 = /[\{\[].*[\}\]]$/, i9 = /(^|[^\\])([\{\[]|\([^\)]+$)/,
  s9 = /\\([\!\*\?\|\[\]\(\)\{\}])/g;
  Gx.exports = /* @__PURE__ */ s(function(t, r) {
    var n = Object.assign({ flipBackslashes: !0 }, r);
    n.flipBackslashes && t9 && t.indexOf(Jp) < 0 && (t = t.replace(r9, Jp)), n9.test(t) && (t += Jp), t += "a";
    do
      t = e9(t);
    while (QR(t) || i9.test(t));
    return t.replace(s9, "$1");
  }, "globParent");
});

// ../node_modules/braces/lib/utils.js
var hu = I((sr) => {
  "use strict";
  sr.isInteger = (e) => typeof e == "number" ? Number.isInteger(e) : typeof e == "string" && e.trim() !== "" ? Number.isInteger(Number(e)) :
  !1;
  sr.find = (e, t) => e.nodes.find((r) => r.type === t);
  sr.exceedsLimit = (e, t, r = 1, n) => n === !1 || !sr.isInteger(e) || !sr.isInteger(t) ? !1 : (Number(t) - Number(e)) / Number(r) >= n;
  sr.escapeNode = (e, t = 0, r) => {
    let n = e.nodes[t];
    n && (r && n.type === r || n.type === "open" || n.type === "close") && n.escaped !== !0 && (n.value = "\\" + n.value, n.escaped = !0);
  };
  sr.encloseBrace = (e) => e.type !== "brace" ? !1 : e.commas >> 0 + e.ranges >> 0 === 0 ? (e.invalid = !0, !0) : !1;
  sr.isInvalidBrace = (e) => e.type !== "brace" ? !1 : e.invalid === !0 || e.dollar ? !0 : e.commas >> 0 + e.ranges >> 0 === 0 || e.open !==
  !0 || e.close !== !0 ? (e.invalid = !0, !0) : !1;
  sr.isOpenOrClose = (e) => e.type === "open" || e.type === "close" ? !0 : e.open === !0 || e.close === !0;
  sr.reduce = (e) => e.reduce((t, r) => (r.type === "text" && t.push(r.value), r.type === "range" && (r.type = "text"), t), []);
  sr.flatten = (...e) => {
    let t = [], r = /* @__PURE__ */ s((n) => {
      for (let i = 0; i < n.length; i++) {
        let o = n[i];
        if (Array.isArray(o)) {
          r(o);
          continue;
        }
        o !== void 0 && t.push(o);
      }
      return t;
    }, "flat");
    return r(e), t;
  };
});

// ../node_modules/braces/lib/stringify.js
var fu = I((vle, Xx) => {
  "use strict";
  var Zx = hu();
  Xx.exports = (e, t = {}) => {
    let r = /* @__PURE__ */ s((n, i = {}) => {
      let o = t.escapeInvalid && Zx.isInvalidBrace(i), a = n.invalid === !0 && t.escapeInvalid === !0, u = "";
      if (n.value)
        return (o || a) && Zx.isOpenOrClose(n) ? "\\" + n.value : n.value;
      if (n.value)
        return n.value;
      if (n.nodes)
        for (let l of n.nodes)
          u += r(l);
      return u;
    }, "stringify");
    return r(e);
  };
});

// ../node_modules/is-number/index.js
var Yx = I((Cle, Kx) => {
  "use strict";
  Kx.exports = function(e) {
    return typeof e == "number" ? e - e === 0 : typeof e == "string" && e.trim() !== "" ? Number.isFinite ? Number.isFinite(+e) : isFinite(+e) :
    !1;
  };
});

// ../node_modules/to-regex-range/index.js
var ab = I((wle, ob) => {
  "use strict";
  var Qx = Yx(), gi = /* @__PURE__ */ s((e, t, r) => {
    if (Qx(e) === !1)
      throw new TypeError("toRegexRange: expected the first argument to be a number");
    if (t === void 0 || e === t)
      return String(e);
    if (Qx(t) === !1)
      throw new TypeError("toRegexRange: expected the second argument to be a number.");
    let n = { relaxZeros: !0, ...r };
    typeof n.strictZeros == "boolean" && (n.relaxZeros = n.strictZeros === !1);
    let i = String(n.relaxZeros), o = String(n.shorthand), a = String(n.capture), u = String(n.wrap), l = e + ":" + t + "=" + i + o + a + u;
    if (gi.cache.hasOwnProperty(l))
      return gi.cache[l].result;
    let c = Math.min(e, t), p = Math.max(e, t);
    if (Math.abs(c - p) === 1) {
      let g = e + "|" + t;
      return n.capture ? `(${g})` : n.wrap === !1 ? g : `(?:${g})`;
    }
    let h = sb(e) || sb(t), f = { min: e, max: t, a: c, b: p }, d = [], m = [];
    if (h && (f.isPadded = h, f.maxLen = String(f.max).length), c < 0) {
      let g = p < 0 ? Math.abs(p) : 1;
      m = eb(g, Math.abs(c), f, n), c = f.a = 0;
    }
    return p >= 0 && (d = eb(c, p, f, n)), f.negatives = m, f.positives = d, f.result = o9(m, d, n), n.capture === !0 ? f.result = `(${f.result}\
)` : n.wrap !== !1 && d.length + m.length > 1 && (f.result = `(?:${f.result})`), gi.cache[l] = f, f.result;
  }, "toRegexRange");
  function o9(e, t, r) {
    let n = Zp(e, t, "-", !1, r) || [], i = Zp(t, e, "", !1, r) || [], o = Zp(e, t, "-?", !0, r) || [];
    return n.concat(o).concat(i).join("|");
  }
  s(o9, "collatePatterns");
  function a9(e, t) {
    let r = 1, n = 1, i = rb(e, r), o = /* @__PURE__ */ new Set([t]);
    for (; e <= i && i <= t; )
      o.add(i), r += 1, i = rb(e, r);
    for (i = nb(t + 1, n) - 1; e < i && i <= t; )
      o.add(i), n += 1, i = nb(t + 1, n) - 1;
    return o = [...o], o.sort(c9), o;
  }
  s(a9, "splitToRanges");
  function u9(e, t, r) {
    if (e === t)
      return { pattern: e, count: [], digits: 0 };
    let n = l9(e, t), i = n.length, o = "", a = 0;
    for (let u = 0; u < i; u++) {
      let [l, c] = n[u];
      l === c ? o += l : l !== "0" || c !== "9" ? o += p9(l, c, r) : a++;
    }
    return a && (o += r.shorthand === !0 ? "\\d" : "[0-9]"), { pattern: o, count: [a], digits: i };
  }
  s(u9, "rangeToPattern");
  function eb(e, t, r, n) {
    let i = a9(e, t), o = [], a = e, u;
    for (let l = 0; l < i.length; l++) {
      let c = i[l], p = u9(String(a), String(c), n), h = "";
      if (!r.isPadded && u && u.pattern === p.pattern) {
        u.count.length > 1 && u.count.pop(), u.count.push(p.count[0]), u.string = u.pattern + ib(u.count), a = c + 1;
        continue;
      }
      r.isPadded && (h = h9(c, r, n)), p.string = h + p.pattern + ib(p.count), o.push(p), a = c + 1, u = p;
    }
    return o;
  }
  s(eb, "splitToPatterns");
  function Zp(e, t, r, n, i) {
    let o = [];
    for (let a of e) {
      let { string: u } = a;
      !n && !tb(t, "string", u) && o.push(r + u), n && tb(t, "string", u) && o.push(r + u);
    }
    return o;
  }
  s(Zp, "filterPatterns");
  function l9(e, t) {
    let r = [];
    for (let n = 0; n < e.length; n++) r.push([e[n], t[n]]);
    return r;
  }
  s(l9, "zip");
  function c9(e, t) {
    return e > t ? 1 : t > e ? -1 : 0;
  }
  s(c9, "compare");
  function tb(e, t, r) {
    return e.some((n) => n[t] === r);
  }
  s(tb, "contains");
  function rb(e, t) {
    return Number(String(e).slice(0, -t) + "9".repeat(t));
  }
  s(rb, "countNines");
  function nb(e, t) {
    return e - e % Math.pow(10, t);
  }
  s(nb, "countZeros");
  function ib(e) {
    let [t = 0, r = ""] = e;
    return r || t > 1 ? `{${t + (r ? "," + r : "")}}` : "";
  }
  s(ib, "toQuantifier");
  function p9(e, t, r) {
    return `[${e}${t - e === 1 ? "" : "-"}${t}]`;
  }
  s(p9, "toCharacterClass");
  function sb(e) {
    return /^-?(0+)\d/.test(e);
  }
  s(sb, "hasPadding");
  function h9(e, t, r) {
    if (!t.isPadded)
      return e;
    let n = Math.abs(t.maxLen - String(e).length), i = r.relaxZeros !== !1;
    switch (n) {
      case 0:
        return "";
      case 1:
        return i ? "0?" : "0";
      case 2:
        return i ? "0{0,2}" : "00";
      default:
        return i ? `0{0,${n}}` : `0{${n}}`;
    }
  }
  s(h9, "padZeros");
  gi.cache = {};
  gi.clearCache = () => gi.cache = {};
  ob.exports = gi;
});

// ../node_modules/fill-range/index.js
var Yp = I((Ale, db) => {
  "use strict";
  var f9 = H("util"), lb = ab(), ub = /* @__PURE__ */ s((e) => e !== null && typeof e == "object" && !Array.isArray(e), "isObject"), d9 = /* @__PURE__ */ s(
  (e) => (t) => e === !0 ? Number(t) : String(t), "transform"), Xp = /* @__PURE__ */ s((e) => typeof e == "number" || typeof e == "string" &&
  e !== "", "isValidValue"), Fo = /* @__PURE__ */ s((e) => Number.isInteger(+e), "isNumber"), Kp = /* @__PURE__ */ s((e) => {
    let t = `${e}`, r = -1;
    if (t[0] === "-" && (t = t.slice(1)), t === "0") return !1;
    for (; t[++r] === "0"; ) ;
    return r > 0;
  }, "zeros"), m9 = /* @__PURE__ */ s((e, t, r) => typeof e == "string" || typeof t == "string" ? !0 : r.stringify === !0, "stringify"), g9 = /* @__PURE__ */ s(
  (e, t, r) => {
    if (t > 0) {
      let n = e[0] === "-" ? "-" : "";
      n && (e = e.slice(1)), e = n + e.padStart(n ? t - 1 : t, "0");
    }
    return r === !1 ? String(e) : e;
  }, "pad"), mu = /* @__PURE__ */ s((e, t) => {
    let r = e[0] === "-" ? "-" : "";
    for (r && (e = e.slice(1), t--); e.length < t; ) e = "0" + e;
    return r ? "-" + e : e;
  }, "toMaxLen"), y9 = /* @__PURE__ */ s((e, t, r) => {
    e.negatives.sort((u, l) => u < l ? -1 : u > l ? 1 : 0), e.positives.sort((u, l) => u < l ? -1 : u > l ? 1 : 0);
    let n = t.capture ? "" : "?:", i = "", o = "", a;
    return e.positives.length && (i = e.positives.map((u) => mu(String(u), r)).join("|")), e.negatives.length && (o = `-(${n}${e.negatives.map(
    (u) => mu(String(u), r)).join("|")})`), i && o ? a = `${i}|${o}` : a = i || o, t.wrap ? `(${n}${a})` : a;
  }, "toSequence"), cb = /* @__PURE__ */ s((e, t, r, n) => {
    if (r)
      return lb(e, t, { wrap: !1, ...n });
    let i = String.fromCharCode(e);
    if (e === t) return i;
    let o = String.fromCharCode(t);
    return `[${i}-${o}]`;
  }, "toRange"), pb = /* @__PURE__ */ s((e, t, r) => {
    if (Array.isArray(e)) {
      let n = r.wrap === !0, i = r.capture ? "" : "?:";
      return n ? `(${i}${e.join("|")})` : e.join("|");
    }
    return lb(e, t, r);
  }, "toRegex"), hb = /* @__PURE__ */ s((...e) => new RangeError("Invalid range arguments: " + f9.inspect(...e)), "rangeError"), fb = /* @__PURE__ */ s(
  (e, t, r) => {
    if (r.strictRanges === !0) throw hb([e, t]);
    return [];
  }, "invalidRange"), D9 = /* @__PURE__ */ s((e, t) => {
    if (t.strictRanges === !0)
      throw new TypeError(`Expected step "${e}" to be a number`);
    return [];
  }, "invalidStep"), x9 = /* @__PURE__ */ s((e, t, r = 1, n = {}) => {
    let i = Number(e), o = Number(t);
    if (!Number.isInteger(i) || !Number.isInteger(o)) {
      if (n.strictRanges === !0) throw hb([e, t]);
      return [];
    }
    i === 0 && (i = 0), o === 0 && (o = 0);
    let a = i > o, u = String(e), l = String(t), c = String(r);
    r = Math.max(Math.abs(r), 1);
    let p = Kp(u) || Kp(l) || Kp(c), h = p ? Math.max(u.length, l.length, c.length) : 0, f = p === !1 && m9(e, t, n) === !1, d = n.transform ||
    d9(f);
    if (n.toRegex && r === 1)
      return cb(mu(e, h), mu(t, h), !0, n);
    let m = { negatives: [], positives: [] }, g = /* @__PURE__ */ s((E) => m[E < 0 ? "negatives" : "positives"].push(Math.abs(E)), "push"), b = [],
    y = 0;
    for (; a ? i >= o : i <= o; )
      n.toRegex === !0 && r > 1 ? g(i) : b.push(g9(d(i, y), h, f)), i = a ? i - r : i + r, y++;
    return n.toRegex === !0 ? r > 1 ? y9(m, n, h) : pb(b, null, { wrap: !1, ...n }) : b;
  }, "fillNumbers"), b9 = /* @__PURE__ */ s((e, t, r = 1, n = {}) => {
    if (!Fo(e) && e.length > 1 || !Fo(t) && t.length > 1)
      return fb(e, t, n);
    let i = n.transform || ((f) => String.fromCharCode(f)), o = `${e}`.charCodeAt(0), a = `${t}`.charCodeAt(0), u = o > a, l = Math.min(o, a),
    c = Math.max(o, a);
    if (n.toRegex && r === 1)
      return cb(l, c, !1, n);
    let p = [], h = 0;
    for (; u ? o >= a : o <= a; )
      p.push(i(o, h)), o = u ? o - r : o + r, h++;
    return n.toRegex === !0 ? pb(p, null, { wrap: !1, options: n }) : p;
  }, "fillLetters"), du = /* @__PURE__ */ s((e, t, r, n = {}) => {
    if (t == null && Xp(e))
      return [e];
    if (!Xp(e) || !Xp(t))
      return fb(e, t, n);
    if (typeof r == "function")
      return du(e, t, 1, { transform: r });
    if (ub(r))
      return du(e, t, 0, r);
    let i = { ...n };
    return i.capture === !0 && (i.wrap = !0), r = r || i.step || 1, Fo(r) ? Fo(e) && Fo(t) ? x9(e, t, r, i) : b9(e, t, Math.max(Math.abs(r),
    1), i) : r != null && !ub(r) ? D9(r, i) : du(e, t, 1, r);
  }, "fill");
  db.exports = du;
});

// ../node_modules/braces/lib/compile.js
var yb = I((_le, gb) => {
  "use strict";
  var v9 = Yp(), mb = hu(), E9 = /* @__PURE__ */ s((e, t = {}) => {
    let r = /* @__PURE__ */ s((n, i = {}) => {
      let o = mb.isInvalidBrace(i), a = n.invalid === !0 && t.escapeInvalid === !0, u = o === !0 || a === !0, l = t.escapeInvalid === !0 ? "\
\\" : "", c = "";
      if (n.isOpen === !0)
        return l + n.value;
      if (n.isClose === !0)
        return console.log("node.isClose", l, n.value), l + n.value;
      if (n.type === "open")
        return u ? l + n.value : "(";
      if (n.type === "close")
        return u ? l + n.value : ")";
      if (n.type === "comma")
        return n.prev.type === "comma" ? "" : u ? n.value : "|";
      if (n.value)
        return n.value;
      if (n.nodes && n.ranges > 0) {
        let p = mb.reduce(n.nodes), h = v9(...p, { ...t, wrap: !1, toRegex: !0, strictZeros: !0 });
        if (h.length !== 0)
          return p.length > 1 && h.length > 1 ? `(${h})` : h;
      }
      if (n.nodes)
        for (let p of n.nodes)
          c += r(p, n);
      return c;
    }, "walk");
    return r(e);
  }, "compile");
  gb.exports = E9;
});

// ../node_modules/braces/lib/expand.js
var bb = I((Tle, xb) => {
  "use strict";
  var C9 = Yp(), Db = fu(), is = hu(), yi = /* @__PURE__ */ s((e = "", t = "", r = !1) => {
    let n = [];
    if (e = [].concat(e), t = [].concat(t), !t.length) return e;
    if (!e.length)
      return r ? is.flatten(t).map((i) => `{${i}}`) : t;
    for (let i of e)
      if (Array.isArray(i))
        for (let o of i)
          n.push(yi(o, t, r));
      else
        for (let o of t)
          r === !0 && typeof o == "string" && (o = `{${o}}`), n.push(Array.isArray(o) ? yi(i, o, r) : i + o);
    return is.flatten(n);
  }, "append"), w9 = /* @__PURE__ */ s((e, t = {}) => {
    let r = t.rangeLimit === void 0 ? 1e3 : t.rangeLimit, n = /* @__PURE__ */ s((i, o = {}) => {
      i.queue = [];
      let a = o, u = o.queue;
      for (; a.type !== "brace" && a.type !== "root" && a.parent; )
        a = a.parent, u = a.queue;
      if (i.invalid || i.dollar) {
        u.push(yi(u.pop(), Db(i, t)));
        return;
      }
      if (i.type === "brace" && i.invalid !== !0 && i.nodes.length === 2) {
        u.push(yi(u.pop(), ["{}"]));
        return;
      }
      if (i.nodes && i.ranges > 0) {
        let h = is.reduce(i.nodes);
        if (is.exceedsLimit(...h, t.step, r))
          throw new RangeError("expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.");
        let f = C9(...h, t);
        f.length === 0 && (f = Db(i, t)), u.push(yi(u.pop(), f)), i.nodes = [];
        return;
      }
      let l = is.encloseBrace(i), c = i.queue, p = i;
      for (; p.type !== "brace" && p.type !== "root" && p.parent; )
        p = p.parent, c = p.queue;
      for (let h = 0; h < i.nodes.length; h++) {
        let f = i.nodes[h];
        if (f.type === "comma" && i.type === "brace") {
          h === 1 && c.push(""), c.push("");
          continue;
        }
        if (f.type === "close") {
          u.push(yi(u.pop(), c, l));
          continue;
        }
        if (f.value && f.type !== "open") {
          c.push(yi(c.pop(), f.value));
          continue;
        }
        f.nodes && n(f, i);
      }
      return c;
    }, "walk");
    return is.flatten(n(e));
  }, "expand");
  xb.exports = w9;
});

// ../node_modules/braces/lib/constants.js
var Eb = I((Ple, vb) => {
  "use strict";
  vb.exports = {
    MAX_LENGTH: 1e4,
    // Digits
    CHAR_0: "0",
    /* 0 */
    CHAR_9: "9",
    /* 9 */
    // Alphabet chars.
    CHAR_UPPERCASE_A: "A",
    /* A */
    CHAR_LOWERCASE_A: "a",
    /* a */
    CHAR_UPPERCASE_Z: "Z",
    /* Z */
    CHAR_LOWERCASE_Z: "z",
    /* z */
    CHAR_LEFT_PARENTHESES: "(",
    /* ( */
    CHAR_RIGHT_PARENTHESES: ")",
    /* ) */
    CHAR_ASTERISK: "*",
    /* * */
    // Non-alphabetic chars.
    CHAR_AMPERSAND: "&",
    /* & */
    CHAR_AT: "@",
    /* @ */
    CHAR_BACKSLASH: "\\",
    /* \ */
    CHAR_BACKTICK: "`",
    /* ` */
    CHAR_CARRIAGE_RETURN: "\r",
    /* \r */
    CHAR_CIRCUMFLEX_ACCENT: "^",
    /* ^ */
    CHAR_COLON: ":",
    /* : */
    CHAR_COMMA: ",",
    /* , */
    CHAR_DOLLAR: "$",
    /* . */
    CHAR_DOT: ".",
    /* . */
    CHAR_DOUBLE_QUOTE: '"',
    /* " */
    CHAR_EQUAL: "=",
    /* = */
    CHAR_EXCLAMATION_MARK: "!",
    /* ! */
    CHAR_FORM_FEED: "\f",
    /* \f */
    CHAR_FORWARD_SLASH: "/",
    /* / */
    CHAR_HASH: "#",
    /* # */
    CHAR_HYPHEN_MINUS: "-",
    /* - */
    CHAR_LEFT_ANGLE_BRACKET: "<",
    /* < */
    CHAR_LEFT_CURLY_BRACE: "{",
    /* { */
    CHAR_LEFT_SQUARE_BRACKET: "[",
    /* [ */
    CHAR_LINE_FEED: `
`,
    /* \n */
    CHAR_NO_BREAK_SPACE: "\xA0",
    /* \u00A0 */
    CHAR_PERCENT: "%",
    /* % */
    CHAR_PLUS: "+",
    /* + */
    CHAR_QUESTION_MARK: "?",
    /* ? */
    CHAR_RIGHT_ANGLE_BRACKET: ">",
    /* > */
    CHAR_RIGHT_CURLY_BRACE: "}",
    /* } */
    CHAR_RIGHT_SQUARE_BRACKET: "]",
    /* ] */
    CHAR_SEMICOLON: ";",
    /* ; */
    CHAR_SINGLE_QUOTE: "'",
    /* ' */
    CHAR_SPACE: " ",
    /*   */
    CHAR_TAB: "	",
    /* \t */
    CHAR_UNDERSCORE: "_",
    /* _ */
    CHAR_VERTICAL_LINE: "|",
    /* | */
    CHAR_ZERO_WIDTH_NOBREAK_SPACE: "\uFEFF"
    /* \uFEFF */
  };
});

// ../node_modules/braces/lib/parse.js
var Fb = I((Ble, Ab) => {
  "use strict";
  var S9 = fu(), {
    MAX_LENGTH: Cb,
    CHAR_BACKSLASH: Qp,
    /* \ */
    CHAR_BACKTICK: A9,
    /* ` */
    CHAR_COMMA: F9,
    /* , */
    CHAR_DOT: _9,
    /* . */
    CHAR_LEFT_PARENTHESES: k9,
    /* ( */
    CHAR_RIGHT_PARENTHESES: T9,
    /* ) */
    CHAR_LEFT_CURLY_BRACE: I9,
    /* { */
    CHAR_RIGHT_CURLY_BRACE: P9,
    /* } */
    CHAR_LEFT_SQUARE_BRACKET: wb,
    /* [ */
    CHAR_RIGHT_SQUARE_BRACKET: Sb,
    /* ] */
    CHAR_DOUBLE_QUOTE: B9,
    /* " */
    CHAR_SINGLE_QUOTE: O9,
    /* ' */
    CHAR_NO_BREAK_SPACE: R9,
    CHAR_ZERO_WIDTH_NOBREAK_SPACE: N9
  } = Eb(), L9 = /* @__PURE__ */ s((e, t = {}) => {
    if (typeof e != "string")
      throw new TypeError("Expected a string");
    let r = t || {}, n = typeof r.maxLength == "number" ? Math.min(Cb, r.maxLength) : Cb;
    if (e.length > n)
      throw new SyntaxError(`Input length (${e.length}), exceeds max characters (${n})`);
    let i = { type: "root", input: e, nodes: [] }, o = [i], a = i, u = i, l = 0, c = e.length, p = 0, h = 0, f, d = /* @__PURE__ */ s(() => e[p++],
    "advance"), m = /* @__PURE__ */ s((g) => {
      if (g.type === "text" && u.type === "dot" && (u.type = "text"), u && u.type === "text" && g.type === "text") {
        u.value += g.value;
        return;
      }
      return a.nodes.push(g), g.parent = a, g.prev = u, u = g, g;
    }, "push");
    for (m({ type: "bos" }); p < c; )
      if (a = o[o.length - 1], f = d(), !(f === N9 || f === R9)) {
        if (f === Qp) {
          m({ type: "text", value: (t.keepEscaping ? f : "") + d() });
          continue;
        }
        if (f === Sb) {
          m({ type: "text", value: "\\" + f });
          continue;
        }
        if (f === wb) {
          l++;
          let g;
          for (; p < c && (g = d()); ) {
            if (f += g, g === wb) {
              l++;
              continue;
            }
            if (g === Qp) {
              f += d();
              continue;
            }
            if (g === Sb && (l--, l === 0))
              break;
          }
          m({ type: "text", value: f });
          continue;
        }
        if (f === k9) {
          a = m({ type: "paren", nodes: [] }), o.push(a), m({ type: "text", value: f });
          continue;
        }
        if (f === T9) {
          if (a.type !== "paren") {
            m({ type: "text", value: f });
            continue;
          }
          a = o.pop(), m({ type: "text", value: f }), a = o[o.length - 1];
          continue;
        }
        if (f === B9 || f === O9 || f === A9) {
          let g = f, b;
          for (t.keepQuotes !== !0 && (f = ""); p < c && (b = d()); ) {
            if (b === Qp) {
              f += b + d();
              continue;
            }
            if (b === g) {
              t.keepQuotes === !0 && (f += b);
              break;
            }
            f += b;
          }
          m({ type: "text", value: f });
          continue;
        }
        if (f === I9) {
          h++;
          let b = {
            type: "brace",
            open: !0,
            close: !1,
            dollar: u.value && u.value.slice(-1) === "$" || a.dollar === !0,
            depth: h,
            commas: 0,
            ranges: 0,
            nodes: []
          };
          a = m(b), o.push(a), m({ type: "open", value: f });
          continue;
        }
        if (f === P9) {
          if (a.type !== "brace") {
            m({ type: "text", value: f });
            continue;
          }
          let g = "close";
          a = o.pop(), a.close = !0, m({ type: g, value: f }), h--, a = o[o.length - 1];
          continue;
        }
        if (f === F9 && h > 0) {
          if (a.ranges > 0) {
            a.ranges = 0;
            let g = a.nodes.shift();
            a.nodes = [g, { type: "text", value: S9(a) }];
          }
          m({ type: "comma", value: f }), a.commas++;
          continue;
        }
        if (f === _9 && h > 0 && a.commas === 0) {
          let g = a.nodes;
          if (h === 0 || g.length === 0) {
            m({ type: "text", value: f });
            continue;
          }
          if (u.type === "dot") {
            if (a.range = [], u.value += f, u.type = "range", a.nodes.length !== 3 && a.nodes.length !== 5) {
              a.invalid = !0, a.ranges = 0, u.type = "text";
              continue;
            }
            a.ranges++, a.args = [];
            continue;
          }
          if (u.type === "range") {
            g.pop();
            let b = g[g.length - 1];
            b.value += u.value + f, u = b, a.ranges--;
            continue;
          }
          m({ type: "dot", value: f });
          continue;
        }
        m({ type: "text", value: f });
      }
    do
      if (a = o.pop(), a.type !== "root") {
        a.nodes.forEach((y) => {
          y.nodes || (y.type === "open" && (y.isOpen = !0), y.type === "close" && (y.isClose = !0), y.nodes || (y.type = "text"), y.invalid =
          !0);
        });
        let g = o[o.length - 1], b = g.nodes.indexOf(a);
        g.nodes.splice(b, 1, ...a.nodes);
      }
    while (o.length > 0);
    return m({ type: "eos" }), i;
  }, "parse");
  Ab.exports = L9;
});

// ../node_modules/braces/index.js
var Tb = I((Rle, kb) => {
  "use strict";
  var _b = fu(), j9 = yb(), M9 = bb(), q9 = Fb(), Zt = /* @__PURE__ */ s((e, t = {}) => {
    let r = [];
    if (Array.isArray(e))
      for (let n of e) {
        let i = Zt.create(n, t);
        Array.isArray(i) ? r.push(...i) : r.push(i);
      }
    else
      r = [].concat(Zt.create(e, t));
    return t && t.expand === !0 && t.nodupes === !0 && (r = [...new Set(r)]), r;
  }, "braces");
  Zt.parse = (e, t = {}) => q9(e, t);
  Zt.stringify = (e, t = {}) => _b(typeof e == "string" ? Zt.parse(e, t) : e, t);
  Zt.compile = (e, t = {}) => (typeof e == "string" && (e = Zt.parse(e, t)), j9(e, t));
  Zt.expand = (e, t = {}) => {
    typeof e == "string" && (e = Zt.parse(e, t));
    let r = M9(e, t);
    return t.noempty === !0 && (r = r.filter(Boolean)), t.nodupes === !0 && (r = [...new Set(r)]), r;
  };
  Zt.create = (e, t = {}) => e === "" || e.length < 3 ? [e] : t.expand !== !0 ? Zt.compile(e, t) : Zt.expand(e, t);
  kb.exports = Zt;
});

// ../node_modules/picomatch/lib/constants.js
var _o = I((Lle, Rb) => {
  "use strict";
  var $9 = H("path"), Ur = "\\\\/", Ib = `[^${Ur}]`, hn = "\\.", V9 = "\\+", U9 = "\\?", gu = "\\/", W9 = "(?=.)", Pb = "[^/]", eh = `(?:${gu}\
|$)`, Bb = `(?:^|${gu})`, th = `${hn}{1,2}${eh}`, z9 = `(?!${hn})`, H9 = `(?!${Bb}${th})`, G9 = `(?!${hn}{0,1}${eh})`, J9 = `(?!${th})`, Z9 = `\
[^.${gu}]`, X9 = `${Pb}*?`, Ob = {
    DOT_LITERAL: hn,
    PLUS_LITERAL: V9,
    QMARK_LITERAL: U9,
    SLASH_LITERAL: gu,
    ONE_CHAR: W9,
    QMARK: Pb,
    END_ANCHOR: eh,
    DOTS_SLASH: th,
    NO_DOT: z9,
    NO_DOTS: H9,
    NO_DOT_SLASH: G9,
    NO_DOTS_SLASH: J9,
    QMARK_NO_DOT: Z9,
    STAR: X9,
    START_ANCHOR: Bb
  }, K9 = {
    ...Ob,
    SLASH_LITERAL: `[${Ur}]`,
    QMARK: Ib,
    STAR: `${Ib}*?`,
    DOTS_SLASH: `${hn}{1,2}(?:[${Ur}]|$)`,
    NO_DOT: `(?!${hn})`,
    NO_DOTS: `(?!(?:^|[${Ur}])${hn}{1,2}(?:[${Ur}]|$))`,
    NO_DOT_SLASH: `(?!${hn}{0,1}(?:[${Ur}]|$))`,
    NO_DOTS_SLASH: `(?!${hn}{1,2}(?:[${Ur}]|$))`,
    QMARK_NO_DOT: `[^.${Ur}]`,
    START_ANCHOR: `(?:^|[${Ur}])`,
    END_ANCHOR: `(?:[${Ur}]|$)`
  }, Y9 = {
    alnum: "a-zA-Z0-9",
    alpha: "a-zA-Z",
    ascii: "\\x00-\\x7F",
    blank: " \\t",
    cntrl: "\\x00-\\x1F\\x7F",
    digit: "0-9",
    graph: "\\x21-\\x7E",
    lower: "a-z",
    print: "\\x20-\\x7E ",
    punct: "\\-!\"#$%&'()\\*+,./:;<=>?@[\\]^_`{|}~",
    space: " \\t\\r\\n\\v\\f",
    upper: "A-Z",
    word: "A-Za-z0-9_",
    xdigit: "A-Fa-f0-9"
  };
  Rb.exports = {
    MAX_LENGTH: 1024 * 64,
    POSIX_REGEX_SOURCE: Y9,
    // regular expressions
    REGEX_BACKSLASH: /\\(?![*+?^${}(|)[\]])/g,
    REGEX_NON_SPECIAL_CHARS: /^[^@![\].,$*+?^{}()|\\/]+/,
    REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\]]/,
    REGEX_SPECIAL_CHARS_BACKREF: /(\\?)((\W)(\3*))/g,
    REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\]])/g,
    REGEX_REMOVE_BACKSLASH: /(?:\[.*?[^\\]\]|\\(?=.))/g,
    // Replace globs with equivalent patterns to reduce parsing time.
    REPLACEMENTS: {
      "***": "*",
      "**/**": "**",
      "**/**/**": "**"
    },
    // Digits
    CHAR_0: 48,
    /* 0 */
    CHAR_9: 57,
    /* 9 */
    // Alphabet chars.
    CHAR_UPPERCASE_A: 65,
    /* A */
    CHAR_LOWERCASE_A: 97,
    /* a */
    CHAR_UPPERCASE_Z: 90,
    /* Z */
    CHAR_LOWERCASE_Z: 122,
    /* z */
    CHAR_LEFT_PARENTHESES: 40,
    /* ( */
    CHAR_RIGHT_PARENTHESES: 41,
    /* ) */
    CHAR_ASTERISK: 42,
    /* * */
    // Non-alphabetic chars.
    CHAR_AMPERSAND: 38,
    /* & */
    CHAR_AT: 64,
    /* @ */
    CHAR_BACKWARD_SLASH: 92,
    /* \ */
    CHAR_CARRIAGE_RETURN: 13,
    /* \r */
    CHAR_CIRCUMFLEX_ACCENT: 94,
    /* ^ */
    CHAR_COLON: 58,
    /* : */
    CHAR_COMMA: 44,
    /* , */
    CHAR_DOT: 46,
    /* . */
    CHAR_DOUBLE_QUOTE: 34,
    /* " */
    CHAR_EQUAL: 61,
    /* = */
    CHAR_EXCLAMATION_MARK: 33,
    /* ! */
    CHAR_FORM_FEED: 12,
    /* \f */
    CHAR_FORWARD_SLASH: 47,
    /* / */
    CHAR_GRAVE_ACCENT: 96,
    /* ` */
    CHAR_HASH: 35,
    /* # */
    CHAR_HYPHEN_MINUS: 45,
    /* - */
    CHAR_LEFT_ANGLE_BRACKET: 60,
    /* < */
    CHAR_LEFT_CURLY_BRACE: 123,
    /* { */
    CHAR_LEFT_SQUARE_BRACKET: 91,
    /* [ */
    CHAR_LINE_FEED: 10,
    /* \n */
    CHAR_NO_BREAK_SPACE: 160,
    /* \u00A0 */
    CHAR_PERCENT: 37,
    /* % */
    CHAR_PLUS: 43,
    /* + */
    CHAR_QUESTION_MARK: 63,
    /* ? */
    CHAR_RIGHT_ANGLE_BRACKET: 62,
    /* > */
    CHAR_RIGHT_CURLY_BRACE: 125,
    /* } */
    CHAR_RIGHT_SQUARE_BRACKET: 93,
    /* ] */
    CHAR_SEMICOLON: 59,
    /* ; */
    CHAR_SINGLE_QUOTE: 39,
    /* ' */
    CHAR_SPACE: 32,
    /*   */
    CHAR_TAB: 9,
    /* \t */
    CHAR_UNDERSCORE: 95,
    /* _ */
    CHAR_VERTICAL_LINE: 124,
    /* | */
    CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279,
    /* \uFEFF */
    SEP: $9.sep,
    /**
     * Create EXTGLOB_CHARS
     */
    extglobChars(e) {
      return {
        "!": { type: "negate", open: "(?:(?!(?:", close: `))${e.STAR})` },
        "?": { type: "qmark", open: "(?:", close: ")?" },
        "+": { type: "plus", open: "(?:", close: ")+" },
        "*": { type: "star", open: "(?:", close: ")*" },
        "@": { type: "at", open: "(?:", close: ")" }
      };
    },
    /**
     * Create GLOB_CHARS
     */
    globChars(e) {
      return e === !0 ? K9 : Ob;
    }
  };
});

// ../node_modules/picomatch/lib/utils.js
var ko = I((qt) => {
  "use strict";
  var Q9 = H("path"), e4 = process.platform === "win32", {
    REGEX_BACKSLASH: t4,
    REGEX_REMOVE_BACKSLASH: r4,
    REGEX_SPECIAL_CHARS: n4,
    REGEX_SPECIAL_CHARS_GLOBAL: i4
  } = _o();
  qt.isObject = (e) => e !== null && typeof e == "object" && !Array.isArray(e);
  qt.hasRegexChars = (e) => n4.test(e);
  qt.isRegexChar = (e) => e.length === 1 && qt.hasRegexChars(e);
  qt.escapeRegex = (e) => e.replace(i4, "\\$1");
  qt.toPosixSlashes = (e) => e.replace(t4, "/");
  qt.removeBackslashes = (e) => e.replace(r4, (t) => t === "\\" ? "" : t);
  qt.supportsLookbehinds = () => {
    let e = process.version.slice(1).split(".").map(Number);
    return e.length === 3 && e[0] >= 9 || e[0] === 8 && e[1] >= 10;
  };
  qt.isWindows = (e) => e && typeof e.windows == "boolean" ? e.windows : e4 === !0 || Q9.sep === "\\";
  qt.escapeLast = (e, t, r) => {
    let n = e.lastIndexOf(t, r);
    return n === -1 ? e : e[n - 1] === "\\" ? qt.escapeLast(e, t, n - 1) : `${e.slice(0, n)}\\${e.slice(n)}`;
  };
  qt.removePrefix = (e, t = {}) => {
    let r = e;
    return r.startsWith("./") && (r = r.slice(2), t.prefix = "./"), r;
  };
  qt.wrapOutput = (e, t = {}, r = {}) => {
    let n = r.contains ? "" : "^", i = r.contains ? "" : "$", o = `${n}(?:${e})${i}`;
    return t.negated === !0 && (o = `(?:^(?!${o}).*$)`), o;
  };
});

// ../node_modules/picomatch/lib/scan.js
var Ub = I((Mle, Vb) => {
  "use strict";
  var Nb = ko(), {
    CHAR_ASTERISK: rh,
    /* * */
    CHAR_AT: s4,
    /* @ */
    CHAR_BACKWARD_SLASH: To,
    /* \ */
    CHAR_COMMA: o4,
    /* , */
    CHAR_DOT: nh,
    /* . */
    CHAR_EXCLAMATION_MARK: ih,
    /* ! */
    CHAR_FORWARD_SLASH: $b,
    /* / */
    CHAR_LEFT_CURLY_BRACE: sh,
    /* { */
    CHAR_LEFT_PARENTHESES: oh,
    /* ( */
    CHAR_LEFT_SQUARE_BRACKET: a4,
    /* [ */
    CHAR_PLUS: u4,
    /* + */
    CHAR_QUESTION_MARK: Lb,
    /* ? */
    CHAR_RIGHT_CURLY_BRACE: l4,
    /* } */
    CHAR_RIGHT_PARENTHESES: jb,
    /* ) */
    CHAR_RIGHT_SQUARE_BRACKET: c4
    /* ] */
  } = _o(), Mb = /* @__PURE__ */ s((e) => e === $b || e === To, "isPathSeparator"), qb = /* @__PURE__ */ s((e) => {
    e.isPrefix !== !0 && (e.depth = e.isGlobstar ? 1 / 0 : 1);
  }, "depth"), p4 = /* @__PURE__ */ s((e, t) => {
    let r = t || {}, n = e.length - 1, i = r.parts === !0 || r.scanToEnd === !0, o = [], a = [], u = [], l = e, c = -1, p = 0, h = 0, f = !1,
    d = !1, m = !1, g = !1, b = !1, y = !1, E = !1, A = !1, k = !1, O = !1, w = 0, C, T, F = { value: "", depth: 0, isGlob: !1 }, $ = /* @__PURE__ */ s(
    () => c >= n, "eos"), R = /* @__PURE__ */ s(() => l.charCodeAt(c + 1), "peek"), U = /* @__PURE__ */ s(() => (C = T, l.charCodeAt(++c)), "\
advance");
    for (; c < n; ) {
      T = U();
      let z;
      if (T === To) {
        E = F.backslashes = !0, T = U(), T === sh && (y = !0);
        continue;
      }
      if (y === !0 || T === sh) {
        for (w++; $() !== !0 && (T = U()); ) {
          if (T === To) {
            E = F.backslashes = !0, U();
            continue;
          }
          if (T === sh) {
            w++;
            continue;
          }
          if (y !== !0 && T === nh && (T = U()) === nh) {
            if (f = F.isBrace = !0, m = F.isGlob = !0, O = !0, i === !0)
              continue;
            break;
          }
          if (y !== !0 && T === o4) {
            if (f = F.isBrace = !0, m = F.isGlob = !0, O = !0, i === !0)
              continue;
            break;
          }
          if (T === l4 && (w--, w === 0)) {
            y = !1, f = F.isBrace = !0, O = !0;
            break;
          }
        }
        if (i === !0)
          continue;
        break;
      }
      if (T === $b) {
        if (o.push(c), a.push(F), F = { value: "", depth: 0, isGlob: !1 }, O === !0) continue;
        if (C === nh && c === p + 1) {
          p += 2;
          continue;
        }
        h = c + 1;
        continue;
      }
      if (r.noext !== !0 && (T === u4 || T === s4 || T === rh || T === Lb || T === ih) === !0 && R() === oh) {
        if (m = F.isGlob = !0, g = F.isExtglob = !0, O = !0, T === ih && c === p && (k = !0), i === !0) {
          for (; $() !== !0 && (T = U()); ) {
            if (T === To) {
              E = F.backslashes = !0, T = U();
              continue;
            }
            if (T === jb) {
              m = F.isGlob = !0, O = !0;
              break;
            }
          }
          continue;
        }
        break;
      }
      if (T === rh) {
        if (C === rh && (b = F.isGlobstar = !0), m = F.isGlob = !0, O = !0, i === !0)
          continue;
        break;
      }
      if (T === Lb) {
        if (m = F.isGlob = !0, O = !0, i === !0)
          continue;
        break;
      }
      if (T === a4) {
        for (; $() !== !0 && (z = U()); ) {
          if (z === To) {
            E = F.backslashes = !0, U();
            continue;
          }
          if (z === c4) {
            d = F.isBracket = !0, m = F.isGlob = !0, O = !0;
            break;
          }
        }
        if (i === !0)
          continue;
        break;
      }
      if (r.nonegate !== !0 && T === ih && c === p) {
        A = F.negated = !0, p++;
        continue;
      }
      if (r.noparen !== !0 && T === oh) {
        if (m = F.isGlob = !0, i === !0) {
          for (; $() !== !0 && (T = U()); ) {
            if (T === oh) {
              E = F.backslashes = !0, T = U();
              continue;
            }
            if (T === jb) {
              O = !0;
              break;
            }
          }
          continue;
        }
        break;
      }
      if (m === !0) {
        if (O = !0, i === !0)
          continue;
        break;
      }
    }
    r.noext === !0 && (g = !1, m = !1);
    let W = l, Y = "", j = "";
    p > 0 && (Y = l.slice(0, p), l = l.slice(p), h -= p), W && m === !0 && h > 0 ? (W = l.slice(0, h), j = l.slice(h)) : m === !0 ? (W = "",
    j = l) : W = l, W && W !== "" && W !== "/" && W !== l && Mb(W.charCodeAt(W.length - 1)) && (W = W.slice(0, -1)), r.unescape === !0 && (j &&
    (j = Nb.removeBackslashes(j)), W && E === !0 && (W = Nb.removeBackslashes(W)));
    let N = {
      prefix: Y,
      input: e,
      start: p,
      base: W,
      glob: j,
      isBrace: f,
      isBracket: d,
      isGlob: m,
      isExtglob: g,
      isGlobstar: b,
      negated: A,
      negatedExtglob: k
    };
    if (r.tokens === !0 && (N.maxDepth = 0, Mb(T) || a.push(F), N.tokens = a), r.parts === !0 || r.tokens === !0) {
      let z;
      for (let Q = 0; Q < o.length; Q++) {
        let ie = z ? z + 1 : p, B = o[Q], ce = e.slice(ie, B);
        r.tokens && (Q === 0 && p !== 0 ? (a[Q].isPrefix = !0, a[Q].value = Y) : a[Q].value = ce, qb(a[Q]), N.maxDepth += a[Q].depth), (Q !==
        0 || ce !== "") && u.push(ce), z = B;
      }
      if (z && z + 1 < e.length) {
        let Q = e.slice(z + 1);
        u.push(Q), r.tokens && (a[a.length - 1].value = Q, qb(a[a.length - 1]), N.maxDepth += a[a.length - 1].depth);
      }
      N.slashes = o, N.parts = u;
    }
    return N;
  }, "scan");
  Vb.exports = p4;
});

// ../node_modules/picomatch/lib/parse.js
var Hb = I(($le, zb) => {
  "use strict";
  var yu = _o(), Xt = ko(), {
    MAX_LENGTH: Du,
    POSIX_REGEX_SOURCE: h4,
    REGEX_NON_SPECIAL_CHARS: f4,
    REGEX_SPECIAL_CHARS_BACKREF: d4,
    REPLACEMENTS: Wb
  } = yu, m4 = /* @__PURE__ */ s((e, t) => {
    if (typeof t.expandRange == "function")
      return t.expandRange(...e, t);
    e.sort();
    let r = `[${e.join("-")}]`;
    try {
      new RegExp(r);
    } catch {
      return e.map((i) => Xt.escapeRegex(i)).join("..");
    }
    return r;
  }, "expandRange"), ss = /* @__PURE__ */ s((e, t) => `Missing ${e}: "${t}" - use "\\\\${t}" to match literal characters`, "syntaxError"), ah = /* @__PURE__ */ s(
  (e, t) => {
    if (typeof e != "string")
      throw new TypeError("Expected a string");
    e = Wb[e] || e;
    let r = { ...t }, n = typeof r.maxLength == "number" ? Math.min(Du, r.maxLength) : Du, i = e.length;
    if (i > n)
      throw new SyntaxError(`Input length: ${i}, exceeds maximum allowed length: ${n}`);
    let o = { type: "bos", value: "", output: r.prepend || "" }, a = [o], u = r.capture ? "" : "?:", l = Xt.isWindows(t), c = yu.globChars(l),
    p = yu.extglobChars(c), {
      DOT_LITERAL: h,
      PLUS_LITERAL: f,
      SLASH_LITERAL: d,
      ONE_CHAR: m,
      DOTS_SLASH: g,
      NO_DOT: b,
      NO_DOT_SLASH: y,
      NO_DOTS_SLASH: E,
      QMARK: A,
      QMARK_NO_DOT: k,
      STAR: O,
      START_ANCHOR: w
    } = c, C = /* @__PURE__ */ s((re) => `(${u}(?:(?!${w}${re.dot ? g : h}).)*?)`, "globstar"), T = r.dot ? "" : b, F = r.dot ? A : k, $ = r.
    bash === !0 ? C(r) : O;
    r.capture && ($ = `(${$})`), typeof r.noext == "boolean" && (r.noextglob = r.noext);
    let R = {
      input: e,
      index: -1,
      start: 0,
      dot: r.dot === !0,
      consumed: "",
      output: "",
      prefix: "",
      backtrack: !1,
      negated: !1,
      brackets: 0,
      braces: 0,
      parens: 0,
      quotes: 0,
      globstar: !1,
      tokens: a
    };
    e = Xt.removePrefix(e, R), i = e.length;
    let U = [], W = [], Y = [], j = o, N, z = /* @__PURE__ */ s(() => R.index === i - 1, "eos"), Q = R.peek = (re = 1) => e[R.index + re], ie = R.
    advance = () => e[++R.index] || "", B = /* @__PURE__ */ s(() => e.slice(R.index + 1), "remaining"), ce = /* @__PURE__ */ s((re = "", be = 0) => {
      R.consumed += re, R.index += be;
    }, "consume"), Je = /* @__PURE__ */ s((re) => {
      R.output += re.output != null ? re.output : re.value, ce(re.value);
    }, "append"), L = /* @__PURE__ */ s(() => {
      let re = 1;
      for (; Q() === "!" && (Q(2) !== "(" || Q(3) === "?"); )
        ie(), R.start++, re++;
      return re % 2 === 0 ? !1 : (R.negated = !0, R.start++, !0);
    }, "negate"), Ue = /* @__PURE__ */ s((re) => {
      R[re]++, Y.push(re);
    }, "increment"), Ve = /* @__PURE__ */ s((re) => {
      R[re]--, Y.pop();
    }, "decrement"), ge = /* @__PURE__ */ s((re) => {
      if (j.type === "globstar") {
        let be = R.braces > 0 && (re.type === "comma" || re.type === "brace"), K = re.extglob === !0 || U.length && (re.type === "pipe" || re.
        type === "paren");
        re.type !== "slash" && re.type !== "paren" && !be && !K && (R.output = R.output.slice(0, -j.output.length), j.type = "star", j.value =
        "*", j.output = $, R.output += j.output);
      }
      if (U.length && re.type !== "paren" && (U[U.length - 1].inner += re.value), (re.value || re.output) && Je(re), j && j.type === "text" &&
      re.type === "text") {
        j.value += re.value, j.output = (j.output || "") + re.value;
        return;
      }
      re.prev = j, a.push(re), j = re;
    }, "push"), _t = /* @__PURE__ */ s((re, be) => {
      let K = { ...p[be], conditions: 1, inner: "" };
      K.prev = j, K.parens = R.parens, K.output = R.output;
      let se = (r.capture ? "(" : "") + K.open;
      Ue("parens"), ge({ type: re, value: be, output: R.output ? "" : m }), ge({ type: "paren", extglob: !0, value: ie(), output: se }), U.push(
      K);
    }, "extglobOpen"), qe = /* @__PURE__ */ s((re) => {
      let be = re.close + (r.capture ? ")" : ""), K;
      if (re.type === "negate") {
        let se = $;
        if (re.inner && re.inner.length > 1 && re.inner.includes("/") && (se = C(r)), (se !== $ || z() || /^\)+$/.test(B())) && (be = re.close =
        `)$))${se}`), re.inner.includes("*") && (K = B()) && /^\.[^\\/.]+$/.test(K)) {
          let ye = ah(K, { ...t, fastpaths: !1 }).output;
          be = re.close = `)${ye})${se})`;
        }
        re.prev.type === "bos" && (R.negatedExtglob = !0);
      }
      ge({ type: "paren", extglob: !0, value: N, output: be }), Ve("parens");
    }, "extglobClose");
    if (r.fastpaths !== !1 && !/(^[*!]|[/()[\]{}"])/.test(e)) {
      let re = !1, be = e.replace(d4, (K, se, ye, ve, Ce, rt) => ve === "\\" ? (re = !0, K) : ve === "?" ? se ? se + ve + (Ce ? A.repeat(Ce.
      length) : "") : rt === 0 ? F + (Ce ? A.repeat(Ce.length) : "") : A.repeat(ye.length) : ve === "." ? h.repeat(ye.length) : ve === "*" ?
      se ? se + ve + (Ce ? $ : "") : $ : se ? K : `\\${K}`);
      return re === !0 && (r.unescape === !0 ? be = be.replace(/\\/g, "") : be = be.replace(/\\+/g, (K) => K.length % 2 === 0 ? "\\\\" : K ?
      "\\" : "")), be === e && r.contains === !0 ? (R.output = e, R) : (R.output = Xt.wrapOutput(be, R, t), R);
    }
    for (; !z(); ) {
      if (N = ie(), N === "\0")
        continue;
      if (N === "\\") {
        let K = Q();
        if (K === "/" && r.bash !== !0 || K === "." || K === ";")
          continue;
        if (!K) {
          N += "\\", ge({ type: "text", value: N });
          continue;
        }
        let se = /^\\+/.exec(B()), ye = 0;
        if (se && se[0].length > 2 && (ye = se[0].length, R.index += ye, ye % 2 !== 0 && (N += "\\")), r.unescape === !0 ? N = ie() : N += ie(),
        R.brackets === 0) {
          ge({ type: "text", value: N });
          continue;
        }
      }
      if (R.brackets > 0 && (N !== "]" || j.value === "[" || j.value === "[^")) {
        if (r.posix !== !1 && N === ":") {
          let K = j.value.slice(1);
          if (K.includes("[") && (j.posix = !0, K.includes(":"))) {
            let se = j.value.lastIndexOf("["), ye = j.value.slice(0, se), ve = j.value.slice(se + 2), Ce = h4[ve];
            if (Ce) {
              j.value = ye + Ce, R.backtrack = !0, ie(), !o.output && a.indexOf(j) === 1 && (o.output = m);
              continue;
            }
          }
        }
        (N === "[" && Q() !== ":" || N === "-" && Q() === "]") && (N = `\\${N}`), N === "]" && (j.value === "[" || j.value === "[^") && (N =
        `\\${N}`), r.posix === !0 && N === "!" && j.value === "[" && (N = "^"), j.value += N, Je({ value: N });
        continue;
      }
      if (R.quotes === 1 && N !== '"') {
        N = Xt.escapeRegex(N), j.value += N, Je({ value: N });
        continue;
      }
      if (N === '"') {
        R.quotes = R.quotes === 1 ? 0 : 1, r.keepQuotes === !0 && ge({ type: "text", value: N });
        continue;
      }
      if (N === "(") {
        Ue("parens"), ge({ type: "paren", value: N });
        continue;
      }
      if (N === ")") {
        if (R.parens === 0 && r.strictBrackets === !0)
          throw new SyntaxError(ss("opening", "("));
        let K = U[U.length - 1];
        if (K && R.parens === K.parens + 1) {
          qe(U.pop());
          continue;
        }
        ge({ type: "paren", value: N, output: R.parens ? ")" : "\\)" }), Ve("parens");
        continue;
      }
      if (N === "[") {
        if (r.nobracket === !0 || !B().includes("]")) {
          if (r.nobracket !== !0 && r.strictBrackets === !0)
            throw new SyntaxError(ss("closing", "]"));
          N = `\\${N}`;
        } else
          Ue("brackets");
        ge({ type: "bracket", value: N });
        continue;
      }
      if (N === "]") {
        if (r.nobracket === !0 || j && j.type === "bracket" && j.value.length === 1) {
          ge({ type: "text", value: N, output: `\\${N}` });
          continue;
        }
        if (R.brackets === 0) {
          if (r.strictBrackets === !0)
            throw new SyntaxError(ss("opening", "["));
          ge({ type: "text", value: N, output: `\\${N}` });
          continue;
        }
        Ve("brackets");
        let K = j.value.slice(1);
        if (j.posix !== !0 && K[0] === "^" && !K.includes("/") && (N = `/${N}`), j.value += N, Je({ value: N }), r.literalBrackets === !1 ||
        Xt.hasRegexChars(K))
          continue;
        let se = Xt.escapeRegex(j.value);
        if (R.output = R.output.slice(0, -j.value.length), r.literalBrackets === !0) {
          R.output += se, j.value = se;
          continue;
        }
        j.value = `(${u}${se}|${j.value})`, R.output += j.value;
        continue;
      }
      if (N === "{" && r.nobrace !== !0) {
        Ue("braces");
        let K = {
          type: "brace",
          value: N,
          output: "(",
          outputIndex: R.output.length,
          tokensIndex: R.tokens.length
        };
        W.push(K), ge(K);
        continue;
      }
      if (N === "}") {
        let K = W[W.length - 1];
        if (r.nobrace === !0 || !K) {
          ge({ type: "text", value: N, output: N });
          continue;
        }
        let se = ")";
        if (K.dots === !0) {
          let ye = a.slice(), ve = [];
          for (let Ce = ye.length - 1; Ce >= 0 && (a.pop(), ye[Ce].type !== "brace"); Ce--)
            ye[Ce].type !== "dots" && ve.unshift(ye[Ce].value);
          se = m4(ve, r), R.backtrack = !0;
        }
        if (K.comma !== !0 && K.dots !== !0) {
          let ye = R.output.slice(0, K.outputIndex), ve = R.tokens.slice(K.tokensIndex);
          K.value = K.output = "\\{", N = se = "\\}", R.output = ye;
          for (let Ce of ve)
            R.output += Ce.output || Ce.value;
        }
        ge({ type: "brace", value: N, output: se }), Ve("braces"), W.pop();
        continue;
      }
      if (N === "|") {
        U.length > 0 && U[U.length - 1].conditions++, ge({ type: "text", value: N });
        continue;
      }
      if (N === ",") {
        let K = N, se = W[W.length - 1];
        se && Y[Y.length - 1] === "braces" && (se.comma = !0, K = "|"), ge({ type: "comma", value: N, output: K });
        continue;
      }
      if (N === "/") {
        if (j.type === "dot" && R.index === R.start + 1) {
          R.start = R.index + 1, R.consumed = "", R.output = "", a.pop(), j = o;
          continue;
        }
        ge({ type: "slash", value: N, output: d });
        continue;
      }
      if (N === ".") {
        if (R.braces > 0 && j.type === "dot") {
          j.value === "." && (j.output = h);
          let K = W[W.length - 1];
          j.type = "dots", j.output += N, j.value += N, K.dots = !0;
          continue;
        }
        if (R.braces + R.parens === 0 && j.type !== "bos" && j.type !== "slash") {
          ge({ type: "text", value: N, output: h });
          continue;
        }
        ge({ type: "dot", value: N, output: h });
        continue;
      }
      if (N === "?") {
        if (!(j && j.value === "(") && r.noextglob !== !0 && Q() === "(" && Q(2) !== "?") {
          _t("qmark", N);
          continue;
        }
        if (j && j.type === "paren") {
          let se = Q(), ye = N;
          if (se === "<" && !Xt.supportsLookbehinds())
            throw new Error("Node.js v10 or higher is required for regex lookbehinds");
          (j.value === "(" && !/[!=<:]/.test(se) || se === "<" && !/<([!=]|\w+>)/.test(B())) && (ye = `\\${N}`), ge({ type: "text", value: N,
          output: ye });
          continue;
        }
        if (r.dot !== !0 && (j.type === "slash" || j.type === "bos")) {
          ge({ type: "qmark", value: N, output: k });
          continue;
        }
        ge({ type: "qmark", value: N, output: A });
        continue;
      }
      if (N === "!") {
        if (r.noextglob !== !0 && Q() === "(" && (Q(2) !== "?" || !/[!=<:]/.test(Q(3)))) {
          _t("negate", N);
          continue;
        }
        if (r.nonegate !== !0 && R.index === 0) {
          L();
          continue;
        }
      }
      if (N === "+") {
        if (r.noextglob !== !0 && Q() === "(" && Q(2) !== "?") {
          _t("plus", N);
          continue;
        }
        if (j && j.value === "(" || r.regex === !1) {
          ge({ type: "plus", value: N, output: f });
          continue;
        }
        if (j && (j.type === "bracket" || j.type === "paren" || j.type === "brace") || R.parens > 0) {
          ge({ type: "plus", value: N });
          continue;
        }
        ge({ type: "plus", value: f });
        continue;
      }
      if (N === "@") {
        if (r.noextglob !== !0 && Q() === "(" && Q(2) !== "?") {
          ge({ type: "at", extglob: !0, value: N, output: "" });
          continue;
        }
        ge({ type: "text", value: N });
        continue;
      }
      if (N !== "*") {
        (N === "$" || N === "^") && (N = `\\${N}`);
        let K = f4.exec(B());
        K && (N += K[0], R.index += K[0].length), ge({ type: "text", value: N });
        continue;
      }
      if (j && (j.type === "globstar" || j.star === !0)) {
        j.type = "star", j.star = !0, j.value += N, j.output = $, R.backtrack = !0, R.globstar = !0, ce(N);
        continue;
      }
      let re = B();
      if (r.noextglob !== !0 && /^\([^?]/.test(re)) {
        _t("star", N);
        continue;
      }
      if (j.type === "star") {
        if (r.noglobstar === !0) {
          ce(N);
          continue;
        }
        let K = j.prev, se = K.prev, ye = K.type === "slash" || K.type === "bos", ve = se && (se.type === "star" || se.type === "globstar");
        if (r.bash === !0 && (!ye || re[0] && re[0] !== "/")) {
          ge({ type: "star", value: N, output: "" });
          continue;
        }
        let Ce = R.braces > 0 && (K.type === "comma" || K.type === "brace"), rt = U.length && (K.type === "pipe" || K.type === "paren");
        if (!ye && K.type !== "paren" && !Ce && !rt) {
          ge({ type: "star", value: N, output: "" });
          continue;
        }
        for (; re.slice(0, 3) === "/**"; ) {
          let vt = e[R.index + 4];
          if (vt && vt !== "/")
            break;
          re = re.slice(3), ce("/**", 3);
        }
        if (K.type === "bos" && z()) {
          j.type = "globstar", j.value += N, j.output = C(r), R.output = j.output, R.globstar = !0, ce(N);
          continue;
        }
        if (K.type === "slash" && K.prev.type !== "bos" && !ve && z()) {
          R.output = R.output.slice(0, -(K.output + j.output).length), K.output = `(?:${K.output}`, j.type = "globstar", j.output = C(r) + (r.
          strictSlashes ? ")" : "|$)"), j.value += N, R.globstar = !0, R.output += K.output + j.output, ce(N);
          continue;
        }
        if (K.type === "slash" && K.prev.type !== "bos" && re[0] === "/") {
          let vt = re[1] !== void 0 ? "|$" : "";
          R.output = R.output.slice(0, -(K.output + j.output).length), K.output = `(?:${K.output}`, j.type = "globstar", j.output = `${C(r)}${d}\
|${d}${vt})`, j.value += N, R.output += K.output + j.output, R.globstar = !0, ce(N + ie()), ge({ type: "slash", value: "/", output: "" });
          continue;
        }
        if (K.type === "bos" && re[0] === "/") {
          j.type = "globstar", j.value += N, j.output = `(?:^|${d}|${C(r)}${d})`, R.output = j.output, R.globstar = !0, ce(N + ie()), ge({ type: "\
slash", value: "/", output: "" });
          continue;
        }
        R.output = R.output.slice(0, -j.output.length), j.type = "globstar", j.output = C(r), j.value += N, R.output += j.output, R.globstar =
        !0, ce(N);
        continue;
      }
      let be = { type: "star", value: N, output: $ };
      if (r.bash === !0) {
        be.output = ".*?", (j.type === "bos" || j.type === "slash") && (be.output = T + be.output), ge(be);
        continue;
      }
      if (j && (j.type === "bracket" || j.type === "paren") && r.regex === !0) {
        be.output = N, ge(be);
        continue;
      }
      (R.index === R.start || j.type === "slash" || j.type === "dot") && (j.type === "dot" ? (R.output += y, j.output += y) : r.dot === !0 ?
      (R.output += E, j.output += E) : (R.output += T, j.output += T), Q() !== "*" && (R.output += m, j.output += m)), ge(be);
    }
    for (; R.brackets > 0; ) {
      if (r.strictBrackets === !0) throw new SyntaxError(ss("closing", "]"));
      R.output = Xt.escapeLast(R.output, "["), Ve("brackets");
    }
    for (; R.parens > 0; ) {
      if (r.strictBrackets === !0) throw new SyntaxError(ss("closing", ")"));
      R.output = Xt.escapeLast(R.output, "("), Ve("parens");
    }
    for (; R.braces > 0; ) {
      if (r.strictBrackets === !0) throw new SyntaxError(ss("closing", "}"));
      R.output = Xt.escapeLast(R.output, "{"), Ve("braces");
    }
    if (r.strictSlashes !== !0 && (j.type === "star" || j.type === "bracket") && ge({ type: "maybe_slash", value: "", output: `${d}?` }), R.
    backtrack === !0) {
      R.output = "";
      for (let re of R.tokens)
        R.output += re.output != null ? re.output : re.value, re.suffix && (R.output += re.suffix);
    }
    return R;
  }, "parse");
  ah.fastpaths = (e, t) => {
    let r = { ...t }, n = typeof r.maxLength == "number" ? Math.min(Du, r.maxLength) : Du, i = e.length;
    if (i > n)
      throw new SyntaxError(`Input length: ${i}, exceeds maximum allowed length: ${n}`);
    e = Wb[e] || e;
    let o = Xt.isWindows(t), {
      DOT_LITERAL: a,
      SLASH_LITERAL: u,
      ONE_CHAR: l,
      DOTS_SLASH: c,
      NO_DOT: p,
      NO_DOTS: h,
      NO_DOTS_SLASH: f,
      STAR: d,
      START_ANCHOR: m
    } = yu.globChars(o), g = r.dot ? h : p, b = r.dot ? f : p, y = r.capture ? "" : "?:", E = { negated: !1, prefix: "" }, A = r.bash === !0 ?
    ".*?" : d;
    r.capture && (A = `(${A})`);
    let k = /* @__PURE__ */ s((T) => T.noglobstar === !0 ? A : `(${y}(?:(?!${m}${T.dot ? c : a}).)*?)`, "globstar"), O = /* @__PURE__ */ s((T) => {
      switch (T) {
        case "*":
          return `${g}${l}${A}`;
        case ".*":
          return `${a}${l}${A}`;
        case "*.*":
          return `${g}${A}${a}${l}${A}`;
        case "*/*":
          return `${g}${A}${u}${l}${b}${A}`;
        case "**":
          return g + k(r);
        case "**/*":
          return `(?:${g}${k(r)}${u})?${b}${l}${A}`;
        case "**/*.*":
          return `(?:${g}${k(r)}${u})?${b}${A}${a}${l}${A}`;
        case "**/.*":
          return `(?:${g}${k(r)}${u})?${a}${l}${A}`;
        default: {
          let F = /^(.*?)\.(\w+)$/.exec(T);
          if (!F) return;
          let $ = O(F[1]);
          return $ ? $ + a + F[2] : void 0;
        }
      }
    }, "create"), w = Xt.removePrefix(e, E), C = O(w);
    return C && r.strictSlashes !== !0 && (C += `${u}?`), C;
  };
  zb.exports = ah;
});

// ../node_modules/picomatch/lib/picomatch.js
var Jb = I((Ule, Gb) => {
  "use strict";
  var g4 = H("path"), y4 = Ub(), uh = Hb(), lh = ko(), D4 = _o(), x4 = /* @__PURE__ */ s((e) => e && typeof e == "object" && !Array.isArray(
  e), "isObject"), ct = /* @__PURE__ */ s((e, t, r = !1) => {
    if (Array.isArray(e)) {
      let p = e.map((f) => ct(f, t, r));
      return /* @__PURE__ */ s((f) => {
        for (let d of p) {
          let m = d(f);
          if (m) return m;
        }
        return !1;
      }, "arrayMatcher");
    }
    let n = x4(e) && e.tokens && e.input;
    if (e === "" || typeof e != "string" && !n)
      throw new TypeError("Expected pattern to be a non-empty string");
    let i = t || {}, o = lh.isWindows(t), a = n ? ct.compileRe(e, t) : ct.makeRe(e, t, !1, !0), u = a.state;
    delete a.state;
    let l = /* @__PURE__ */ s(() => !1, "isIgnored");
    if (i.ignore) {
      let p = { ...t, ignore: null, onMatch: null, onResult: null };
      l = ct(i.ignore, p, r);
    }
    let c = /* @__PURE__ */ s((p, h = !1) => {
      let { isMatch: f, match: d, output: m } = ct.test(p, a, t, { glob: e, posix: o }), g = { glob: e, state: u, regex: a, posix: o, input: p,
      output: m, match: d, isMatch: f };
      return typeof i.onResult == "function" && i.onResult(g), f === !1 ? (g.isMatch = !1, h ? g : !1) : l(p) ? (typeof i.onIgnore == "funct\
ion" && i.onIgnore(g), g.isMatch = !1, h ? g : !1) : (typeof i.onMatch == "function" && i.onMatch(g), h ? g : !0);
    }, "matcher");
    return r && (c.state = u), c;
  }, "picomatch");
  ct.test = (e, t, r, { glob: n, posix: i } = {}) => {
    if (typeof e != "string")
      throw new TypeError("Expected input to be a string");
    if (e === "")
      return { isMatch: !1, output: "" };
    let o = r || {}, a = o.format || (i ? lh.toPosixSlashes : null), u = e === n, l = u && a ? a(e) : e;
    return u === !1 && (l = a ? a(e) : e, u = l === n), (u === !1 || o.capture === !0) && (o.matchBase === !0 || o.basename === !0 ? u = ct.
    matchBase(e, t, r, i) : u = t.exec(l)), { isMatch: !!u, match: u, output: l };
  };
  ct.matchBase = (e, t, r, n = lh.isWindows(r)) => (t instanceof RegExp ? t : ct.makeRe(t, r)).test(g4.basename(e));
  ct.isMatch = (e, t, r) => ct(t, r)(e);
  ct.parse = (e, t) => Array.isArray(e) ? e.map((r) => ct.parse(r, t)) : uh(e, { ...t, fastpaths: !1 });
  ct.scan = (e, t) => y4(e, t);
  ct.compileRe = (e, t, r = !1, n = !1) => {
    if (r === !0)
      return e.output;
    let i = t || {}, o = i.contains ? "" : "^", a = i.contains ? "" : "$", u = `${o}(?:${e.output})${a}`;
    e && e.negated === !0 && (u = `^(?!${u}).*$`);
    let l = ct.toRegex(u, t);
    return n === !0 && (l.state = e), l;
  };
  ct.makeRe = (e, t = {}, r = !1, n = !1) => {
    if (!e || typeof e != "string")
      throw new TypeError("Expected a non-empty string");
    let i = { negated: !1, fastpaths: !0 };
    return t.fastpaths !== !1 && (e[0] === "." || e[0] === "*") && (i.output = uh.fastpaths(e, t)), i.output || (i = uh(e, t)), ct.compileRe(
    i, t, r, n);
  };
  ct.toRegex = (e, t) => {
    try {
      let r = t || {};
      return new RegExp(e, r.flags || (r.nocase ? "i" : ""));
    } catch (r) {
      if (t && t.debug === !0) throw r;
      return /$^/;
    }
  };
  ct.constants = D4;
  Gb.exports = ct;
});

// ../node_modules/picomatch/index.js
var Xb = I((zle, Zb) => {
  "use strict";
  Zb.exports = Jb();
});

// ../node_modules/micromatch/index.js
var rv = I((Hle, tv) => {
  "use strict";
  var Yb = H("util"), Qb = Tb(), Wr = Xb(), ch = ko(), Kb = /* @__PURE__ */ s((e) => e === "" || e === "./", "isEmptyString"), ev = /* @__PURE__ */ s(
  (e) => {
    let t = e.indexOf("{");
    return t > -1 && e.indexOf("}", t) > -1;
  }, "hasBraces"), Ke = /* @__PURE__ */ s((e, t, r) => {
    t = [].concat(t), e = [].concat(e);
    let n = /* @__PURE__ */ new Set(), i = /* @__PURE__ */ new Set(), o = /* @__PURE__ */ new Set(), a = 0, u = /* @__PURE__ */ s((p) => {
      o.add(p.output), r && r.onResult && r.onResult(p);
    }, "onResult");
    for (let p = 0; p < t.length; p++) {
      let h = Wr(String(t[p]), { ...r, onResult: u }, !0), f = h.state.negated || h.state.negatedExtglob;
      f && a++;
      for (let d of e) {
        let m = h(d, !0);
        (f ? !m.isMatch : m.isMatch) && (f ? n.add(m.output) : (n.delete(m.output), i.add(m.output)));
      }
    }
    let c = (a === t.length ? [...o] : [...i]).filter((p) => !n.has(p));
    if (r && c.length === 0) {
      if (r.failglob === !0)
        throw new Error(`No matches found for "${t.join(", ")}"`);
      if (r.nonull === !0 || r.nullglob === !0)
        return r.unescape ? t.map((p) => p.replace(/\\/g, "")) : t;
    }
    return c;
  }, "micromatch");
  Ke.match = Ke;
  Ke.matcher = (e, t) => Wr(e, t);
  Ke.isMatch = (e, t, r) => Wr(t, r)(e);
  Ke.any = Ke.isMatch;
  Ke.not = (e, t, r = {}) => {
    t = [].concat(t).map(String);
    let n = /* @__PURE__ */ new Set(), i = [], o = /* @__PURE__ */ s((u) => {
      r.onResult && r.onResult(u), i.push(u.output);
    }, "onResult"), a = new Set(Ke(e, t, { ...r, onResult: o }));
    for (let u of i)
      a.has(u) || n.add(u);
    return [...n];
  };
  Ke.contains = (e, t, r) => {
    if (typeof e != "string")
      throw new TypeError(`Expected a string: "${Yb.inspect(e)}"`);
    if (Array.isArray(t))
      return t.some((n) => Ke.contains(e, n, r));
    if (typeof t == "string") {
      if (Kb(e) || Kb(t))
        return !1;
      if (e.includes(t) || e.startsWith("./") && e.slice(2).includes(t))
        return !0;
    }
    return Ke.isMatch(e, t, { ...r, contains: !0 });
  };
  Ke.matchKeys = (e, t, r) => {
    if (!ch.isObject(e))
      throw new TypeError("Expected the first argument to be an object");
    let n = Ke(Object.keys(e), t, r), i = {};
    for (let o of n) i[o] = e[o];
    return i;
  };
  Ke.some = (e, t, r) => {
    let n = [].concat(e);
    for (let i of [].concat(t)) {
      let o = Wr(String(i), r);
      if (n.some((a) => o(a)))
        return !0;
    }
    return !1;
  };
  Ke.every = (e, t, r) => {
    let n = [].concat(e);
    for (let i of [].concat(t)) {
      let o = Wr(String(i), r);
      if (!n.every((a) => o(a)))
        return !1;
    }
    return !0;
  };
  Ke.all = (e, t, r) => {
    if (typeof e != "string")
      throw new TypeError(`Expected a string: "${Yb.inspect(e)}"`);
    return [].concat(t).every((n) => Wr(n, r)(e));
  };
  Ke.capture = (e, t, r) => {
    let n = ch.isWindows(r), o = Wr.makeRe(String(e), { ...r, capture: !0 }).exec(n ? ch.toPosixSlashes(t) : t);
    if (o)
      return o.slice(1).map((a) => a === void 0 ? "" : a);
  };
  Ke.makeRe = (...e) => Wr.makeRe(...e);
  Ke.scan = (...e) => Wr.scan(...e);
  Ke.parse = (e, t) => {
    let r = [];
    for (let n of [].concat(e || []))
      for (let i of Qb(String(n), t))
        r.push(Wr.parse(i, t));
    return r;
  };
  Ke.braces = (e, t) => {
    if (typeof e != "string") throw new TypeError("Expected a string");
    return t && t.nobrace === !0 || !ev(e) ? [e] : Qb(e, t);
  };
  Ke.braceExpand = (e, t) => {
    if (typeof e != "string") throw new TypeError("Expected a string");
    return Ke.braces(e, { ...t, expand: !0 });
  };
  Ke.hasBraces = ev;
  tv.exports = Ke;
});

// ../node_modules/fast-glob/out/utils/pattern.js
var hv = I((me) => {
  "use strict";
  Object.defineProperty(me, "__esModule", { value: !0 });
  me.isAbsolute = me.partitionAbsoluteAndRelative = me.removeDuplicateSlashes = me.matchAny = me.convertPatternsToRe = me.makeRe = me.getPatternParts =
  me.expandBraceExpansion = me.expandPatternsWithBraceExpansion = me.isAffectDepthOfReadingPattern = me.endsWithSlashGlobStar = me.hasGlobStar =
  me.getBaseDirectory = me.isPatternRelatedToParentDirectory = me.getPatternsOutsideCurrentDirectory = me.getPatternsInsideCurrentDirectory =
  me.getPositivePatterns = me.getNegativePatterns = me.isPositivePattern = me.isNegativePattern = me.convertToNegativePattern = me.convertToPositivePattern =
  me.isDynamicPattern = me.isStaticPattern = void 0;
  var nv = H("path"), b4 = Jx(), ph = rv(), iv = "**", v4 = "\\", E4 = /[*?]|^!/, C4 = /\[[^[]*]/, w4 = /(?:^|[^!*+?@])\([^(]*\|[^|]*\)/, S4 = /[!*+?@]\([^(]*\)/,
  A4 = /,|\.\./, F4 = /(?!^)\/{2,}/g;
  function sv(e, t = {}) {
    return !ov(e, t);
  }
  s(sv, "isStaticPattern");
  me.isStaticPattern = sv;
  function ov(e, t = {}) {
    return e === "" ? !1 : !!(t.caseSensitiveMatch === !1 || e.includes(v4) || E4.test(e) || C4.test(e) || w4.test(e) || t.extglob !== !1 &&
    S4.test(e) || t.braceExpansion !== !1 && _4(e));
  }
  s(ov, "isDynamicPattern");
  me.isDynamicPattern = ov;
  function _4(e) {
    let t = e.indexOf("{");
    if (t === -1)
      return !1;
    let r = e.indexOf("}", t + 1);
    if (r === -1)
      return !1;
    let n = e.slice(t, r);
    return A4.test(n);
  }
  s(_4, "hasBraceExpansion");
  function k4(e) {
    return xu(e) ? e.slice(1) : e;
  }
  s(k4, "convertToPositivePattern");
  me.convertToPositivePattern = k4;
  function T4(e) {
    return "!" + e;
  }
  s(T4, "convertToNegativePattern");
  me.convertToNegativePattern = T4;
  function xu(e) {
    return e.startsWith("!") && e[1] !== "(";
  }
  s(xu, "isNegativePattern");
  me.isNegativePattern = xu;
  function av(e) {
    return !xu(e);
  }
  s(av, "isPositivePattern");
  me.isPositivePattern = av;
  function I4(e) {
    return e.filter(xu);
  }
  s(I4, "getNegativePatterns");
  me.getNegativePatterns = I4;
  function P4(e) {
    return e.filter(av);
  }
  s(P4, "getPositivePatterns");
  me.getPositivePatterns = P4;
  function B4(e) {
    return e.filter((t) => !hh(t));
  }
  s(B4, "getPatternsInsideCurrentDirectory");
  me.getPatternsInsideCurrentDirectory = B4;
  function O4(e) {
    return e.filter(hh);
  }
  s(O4, "getPatternsOutsideCurrentDirectory");
  me.getPatternsOutsideCurrentDirectory = O4;
  function hh(e) {
    return e.startsWith("..") || e.startsWith("./..");
  }
  s(hh, "isPatternRelatedToParentDirectory");
  me.isPatternRelatedToParentDirectory = hh;
  function R4(e) {
    return b4(e, { flipBackslashes: !1 });
  }
  s(R4, "getBaseDirectory");
  me.getBaseDirectory = R4;
  function N4(e) {
    return e.includes(iv);
  }
  s(N4, "hasGlobStar");
  me.hasGlobStar = N4;
  function uv(e) {
    return e.endsWith("/" + iv);
  }
  s(uv, "endsWithSlashGlobStar");
  me.endsWithSlashGlobStar = uv;
  function L4(e) {
    let t = nv.basename(e);
    return uv(e) || sv(t);
  }
  s(L4, "isAffectDepthOfReadingPattern");
  me.isAffectDepthOfReadingPattern = L4;
  function j4(e) {
    return e.reduce((t, r) => t.concat(lv(r)), []);
  }
  s(j4, "expandPatternsWithBraceExpansion");
  me.expandPatternsWithBraceExpansion = j4;
  function lv(e) {
    let t = ph.braces(e, { expand: !0, nodupes: !0, keepEscaping: !0 });
    return t.sort((r, n) => r.length - n.length), t.filter((r) => r !== "");
  }
  s(lv, "expandBraceExpansion");
  me.expandBraceExpansion = lv;
  function M4(e, t) {
    let { parts: r } = ph.scan(e, Object.assign(Object.assign({}, t), { parts: !0 }));
    return r.length === 0 && (r = [e]), r[0].startsWith("/") && (r[0] = r[0].slice(1), r.unshift("")), r;
  }
  s(M4, "getPatternParts");
  me.getPatternParts = M4;
  function cv(e, t) {
    return ph.makeRe(e, t);
  }
  s(cv, "makeRe");
  me.makeRe = cv;
  function q4(e, t) {
    return e.map((r) => cv(r, t));
  }
  s(q4, "convertPatternsToRe");
  me.convertPatternsToRe = q4;
  function $4(e, t) {
    return t.some((r) => r.test(e));
  }
  s($4, "matchAny");
  me.matchAny = $4;
  function V4(e) {
    return e.replace(F4, "/");
  }
  s(V4, "removeDuplicateSlashes");
  me.removeDuplicateSlashes = V4;
  function U4(e) {
    let t = [], r = [];
    for (let n of e)
      pv(n) ? t.push(n) : r.push(n);
    return [t, r];
  }
  s(U4, "partitionAbsoluteAndRelative");
  me.partitionAbsoluteAndRelative = U4;
  function pv(e) {
    return nv.isAbsolute(e);
  }
  s(pv, "isAbsolute");
  me.isAbsolute = pv;
});

// ../node_modules/merge2/index.js
var gv = I((Xle, mv) => {
  "use strict";
  var W4 = H("stream"), fv = W4.PassThrough, z4 = Array.prototype.slice;
  mv.exports = H4;
  function H4() {
    let e = [], t = z4.call(arguments), r = !1, n = t[t.length - 1];
    n && !Array.isArray(n) && n.pipe == null ? t.pop() : n = {};
    let i = n.end !== !1, o = n.pipeError === !0;
    n.objectMode == null && (n.objectMode = !0), n.highWaterMark == null && (n.highWaterMark = 64 * 1024);
    let a = fv(n);
    function u() {
      for (let p = 0, h = arguments.length; p < h; p++)
        e.push(dv(arguments[p], n));
      return l(), this;
    }
    s(u, "addStream");
    function l() {
      if (r)
        return;
      r = !0;
      let p = e.shift();
      if (!p) {
        process.nextTick(c);
        return;
      }
      Array.isArray(p) || (p = [p]);
      let h = p.length + 1;
      function f() {
        --h > 0 || (r = !1, l());
      }
      s(f, "next");
      function d(m) {
        function g() {
          m.removeListener("merge2UnpipeEnd", g), m.removeListener("end", g), o && m.removeListener("error", b), f();
        }
        s(g, "onend");
        function b(y) {
          a.emit("error", y);
        }
        if (s(b, "onerror"), m._readableState.endEmitted)
          return f();
        m.on("merge2UnpipeEnd", g), m.on("end", g), o && m.on("error", b), m.pipe(a, { end: !1 }), m.resume();
      }
      s(d, "pipe");
      for (let m = 0; m < p.length; m++)
        d(p[m]);
      f();
    }
    s(l, "mergeStream");
    function c() {
      r = !1, a.emit("queueDrain"), i && a.end();
    }
    return s(c, "endStream"), a.setMaxListeners(0), a.add = u, a.on("unpipe", function(p) {
      p.emit("merge2UnpipeEnd");
    }), t.length && u.apply(null, t), a;
  }
  s(H4, "merge2");
  function dv(e, t) {
    if (Array.isArray(e))
      for (let r = 0, n = e.length; r < n; r++)
        e[r] = dv(e[r], t);
    else {
      if (!e._readableState && e.pipe && (e = e.pipe(fv(t))), !e._readableState || !e.pause || !e.pipe)
        throw new Error("Only readable stream can be merged.");
      e.pause();
    }
    return e;
  }
  s(dv, "pauseStreams");
});

// ../node_modules/fast-glob/out/utils/stream.js
var Dv = I((bu) => {
  "use strict";
  Object.defineProperty(bu, "__esModule", { value: !0 });
  bu.merge = void 0;
  var G4 = gv();
  function J4(e) {
    let t = G4(e);
    return e.forEach((r) => {
      r.once("error", (n) => t.emit("error", n));
    }), t.once("close", () => yv(e)), t.once("end", () => yv(e)), t;
  }
  s(J4, "merge");
  bu.merge = J4;
  function yv(e) {
    e.forEach((t) => t.emit("close"));
  }
  s(yv, "propagateCloseEventToSources");
});

// ../node_modules/fast-glob/out/utils/string.js
var xv = I((os) => {
  "use strict";
  Object.defineProperty(os, "__esModule", { value: !0 });
  os.isEmpty = os.isString = void 0;
  function Z4(e) {
    return typeof e == "string";
  }
  s(Z4, "isString");
  os.isString = Z4;
  function X4(e) {
    return e === "";
  }
  s(X4, "isEmpty");
  os.isEmpty = X4;
});

// ../node_modules/fast-glob/out/utils/index.js
var fn = I((wt) => {
  "use strict";
  Object.defineProperty(wt, "__esModule", { value: !0 });
  wt.string = wt.stream = wt.pattern = wt.path = wt.fs = wt.errno = wt.array = void 0;
  var K4 = Rx();
  wt.array = K4;
  var Y4 = Nx();
  wt.errno = Y4;
  var Q4 = Lx();
  wt.fs = Q4;
  var eN = $x();
  wt.path = eN;
  var tN = hv();
  wt.pattern = tN;
  var rN = Dv();
  wt.stream = rN;
  var nN = xv();
  wt.string = nN;
});

// ../node_modules/fast-glob/out/managers/tasks.js
var Cv = I((St) => {
  "use strict";
  Object.defineProperty(St, "__esModule", { value: !0 });
  St.convertPatternGroupToTask = St.convertPatternGroupsToTasks = St.groupPatternsByBaseDirectory = St.getNegativePatternsAsPositive = St.getPositivePatterns =
  St.convertPatternsToTasks = St.generate = void 0;
  var kr = fn();
  function iN(e, t) {
    let r = bv(e, t), n = bv(t.ignore, t), i = vv(r), o = Ev(r, n), a = i.filter((p) => kr.pattern.isStaticPattern(p, t)), u = i.filter((p) => kr.
    pattern.isDynamicPattern(p, t)), l = fh(
      a,
      o,
      /* dynamic */
      !1
    ), c = fh(
      u,
      o,
      /* dynamic */
      !0
    );
    return l.concat(c);
  }
  s(iN, "generate");
  St.generate = iN;
  function bv(e, t) {
    let r = e;
    return t.braceExpansion && (r = kr.pattern.expandPatternsWithBraceExpansion(r)), t.baseNameMatch && (r = r.map((n) => n.includes("/") ? n :
    `**/${n}`)), r.map((n) => kr.pattern.removeDuplicateSlashes(n));
  }
  s(bv, "processPatterns");
  function fh(e, t, r) {
    let n = [], i = kr.pattern.getPatternsOutsideCurrentDirectory(e), o = kr.pattern.getPatternsInsideCurrentDirectory(e), a = dh(i), u = dh(
    o);
    return n.push(...mh(a, t, r)), "." in u ? n.push(gh(".", o, t, r)) : n.push(...mh(u, t, r)), n;
  }
  s(fh, "convertPatternsToTasks");
  St.convertPatternsToTasks = fh;
  function vv(e) {
    return kr.pattern.getPositivePatterns(e);
  }
  s(vv, "getPositivePatterns");
  St.getPositivePatterns = vv;
  function Ev(e, t) {
    return kr.pattern.getNegativePatterns(e).concat(t).map(kr.pattern.convertToPositivePattern);
  }
  s(Ev, "getNegativePatternsAsPositive");
  St.getNegativePatternsAsPositive = Ev;
  function dh(e) {
    let t = {};
    return e.reduce((r, n) => {
      let i = kr.pattern.getBaseDirectory(n);
      return i in r ? r[i].push(n) : r[i] = [n], r;
    }, t);
  }
  s(dh, "groupPatternsByBaseDirectory");
  St.groupPatternsByBaseDirectory = dh;
  function mh(e, t, r) {
    return Object.keys(e).map((n) => gh(n, e[n], t, r));
  }
  s(mh, "convertPatternGroupsToTasks");
  St.convertPatternGroupsToTasks = mh;
  function gh(e, t, r, n) {
    return {
      dynamic: n,
      positive: t,
      negative: r,
      base: e,
      patterns: [].concat(t, r.map(kr.pattern.convertToNegativePattern))
    };
  }
  s(gh, "convertPatternGroupToTask");
  St.convertPatternGroupToTask = gh;
});

// ../node_modules/@nodelib/fs.stat/out/providers/async.js
var Sv = I((vu) => {
  "use strict";
  Object.defineProperty(vu, "__esModule", { value: !0 });
  vu.read = void 0;
  function sN(e, t, r) {
    t.fs.lstat(e, (n, i) => {
      if (n !== null) {
        wv(r, n);
        return;
      }
      if (!i.isSymbolicLink() || !t.followSymbolicLink) {
        yh(r, i);
        return;
      }
      t.fs.stat(e, (o, a) => {
        if (o !== null) {
          if (t.throwErrorOnBrokenSymbolicLink) {
            wv(r, o);
            return;
          }
          yh(r, i);
          return;
        }
        t.markSymbolicLink && (a.isSymbolicLink = () => !0), yh(r, a);
      });
    });
  }
  s(sN, "read");
  vu.read = sN;
  function wv(e, t) {
    e(t);
  }
  s(wv, "callFailureCallback");
  function yh(e, t) {
    e(null, t);
  }
  s(yh, "callSuccessCallback");
});

// ../node_modules/@nodelib/fs.stat/out/providers/sync.js
var Av = I((Eu) => {
  "use strict";
  Object.defineProperty(Eu, "__esModule", { value: !0 });
  Eu.read = void 0;
  function oN(e, t) {
    let r = t.fs.lstatSync(e);
    if (!r.isSymbolicLink() || !t.followSymbolicLink)
      return r;
    try {
      let n = t.fs.statSync(e);
      return t.markSymbolicLink && (n.isSymbolicLink = () => !0), n;
    } catch (n) {
      if (!t.throwErrorOnBrokenSymbolicLink)
        return r;
      throw n;
    }
  }
  s(oN, "read");
  Eu.read = oN;
});

// ../node_modules/@nodelib/fs.stat/out/adapters/fs.js
var Fv = I((Rn) => {
  "use strict";
  Object.defineProperty(Rn, "__esModule", { value: !0 });
  Rn.createFileSystemAdapter = Rn.FILE_SYSTEM_ADAPTER = void 0;
  var Cu = H("fs");
  Rn.FILE_SYSTEM_ADAPTER = {
    lstat: Cu.lstat,
    stat: Cu.stat,
    lstatSync: Cu.lstatSync,
    statSync: Cu.statSync
  };
  function aN(e) {
    return e === void 0 ? Rn.FILE_SYSTEM_ADAPTER : Object.assign(Object.assign({}, Rn.FILE_SYSTEM_ADAPTER), e);
  }
  s(aN, "createFileSystemAdapter");
  Rn.createFileSystemAdapter = aN;
});

// ../node_modules/@nodelib/fs.stat/out/settings.js
var _v = I((xh) => {
  "use strict";
  Object.defineProperty(xh, "__esModule", { value: !0 });
  var uN = Fv(), Dh = class {
    static {
      s(this, "Settings");
    }
    constructor(t = {}) {
      this._options = t, this.followSymbolicLink = this._getValue(this._options.followSymbolicLink, !0), this.fs = uN.createFileSystemAdapter(
      this._options.fs), this.markSymbolicLink = this._getValue(this._options.markSymbolicLink, !1), this.throwErrorOnBrokenSymbolicLink = this.
      _getValue(this._options.throwErrorOnBrokenSymbolicLink, !0);
    }
    _getValue(t, r) {
      return t ?? r;
    }
  };
  xh.default = Dh;
});

// ../node_modules/@nodelib/fs.stat/out/index.js
var Di = I((Nn) => {
  "use strict";
  Object.defineProperty(Nn, "__esModule", { value: !0 });
  Nn.statSync = Nn.stat = Nn.Settings = void 0;
  var kv = Sv(), lN = Av(), bh = _v();
  Nn.Settings = bh.default;
  function cN(e, t, r) {
    if (typeof t == "function") {
      kv.read(e, vh(), t);
      return;
    }
    kv.read(e, vh(t), r);
  }
  s(cN, "stat");
  Nn.stat = cN;
  function pN(e, t) {
    let r = vh(t);
    return lN.read(e, r);
  }
  s(pN, "statSync");
  Nn.statSync = pN;
  function vh(e = {}) {
    return e instanceof bh.default ? e : new bh.default(e);
  }
  s(vh, "getSettings");
});

// ../node_modules/queue-microtask/index.js
var Pv = I((mce, Iv) => {
  var Tv;
  Iv.exports = typeof queueMicrotask == "function" ? queueMicrotask.bind(typeof window < "u" ? window : global) : (e) => (Tv || (Tv = Promise.
  resolve())).then(e).catch((t) => setTimeout(() => {
    throw t;
  }, 0));
});

// ../node_modules/run-parallel/index.js
var Ov = I((gce, Bv) => {
  Bv.exports = fN;
  var hN = Pv();
  function fN(e, t) {
    let r, n, i, o = !0;
    Array.isArray(e) ? (r = [], n = e.length) : (i = Object.keys(e), r = {}, n = i.length);
    function a(l) {
      function c() {
        t && t(l, r), t = null;
      }
      s(c, "end"), o ? hN(c) : c();
    }
    s(a, "done");
    function u(l, c, p) {
      r[l] = p, (--n === 0 || c) && a(c);
    }
    s(u, "each"), n ? i ? i.forEach(function(l) {
      e[l](function(c, p) {
        u(l, c, p);
      });
    }) : e.forEach(function(l, c) {
      l(function(p, h) {
        u(c, p, h);
      });
    }) : a(null), o = !1;
  }
  s(fN, "runParallel");
});

// ../node_modules/@nodelib/fs.scandir/out/constants.js
var Eh = I((Su) => {
  "use strict";
  Object.defineProperty(Su, "__esModule", { value: !0 });
  Su.IS_SUPPORT_READDIR_WITH_FILE_TYPES = void 0;
  var wu = process.versions.node.split(".");
  if (wu[0] === void 0 || wu[1] === void 0)
    throw new Error(`Unexpected behavior. The 'process.versions.node' variable has invalid value: ${process.versions.node}`);
  var Rv = Number.parseInt(wu[0], 10), dN = Number.parseInt(wu[1], 10), Nv = 10, mN = 10, gN = Rv > Nv, yN = Rv === Nv && dN >= mN;
  Su.IS_SUPPORT_READDIR_WITH_FILE_TYPES = gN || yN;
});

// ../node_modules/@nodelib/fs.scandir/out/utils/fs.js
var Lv = I((Au) => {
  "use strict";
  Object.defineProperty(Au, "__esModule", { value: !0 });
  Au.createDirentFromStats = void 0;
  var Ch = class {
    static {
      s(this, "DirentFromStats");
    }
    constructor(t, r) {
      this.name = t, this.isBlockDevice = r.isBlockDevice.bind(r), this.isCharacterDevice = r.isCharacterDevice.bind(r), this.isDirectory = r.
      isDirectory.bind(r), this.isFIFO = r.isFIFO.bind(r), this.isFile = r.isFile.bind(r), this.isSocket = r.isSocket.bind(r), this.isSymbolicLink =
      r.isSymbolicLink.bind(r);
    }
  };
  function DN(e, t) {
    return new Ch(e, t);
  }
  s(DN, "createDirentFromStats");
  Au.createDirentFromStats = DN;
});

// ../node_modules/@nodelib/fs.scandir/out/utils/index.js
var wh = I((Fu) => {
  "use strict";
  Object.defineProperty(Fu, "__esModule", { value: !0 });
  Fu.fs = void 0;
  var xN = Lv();
  Fu.fs = xN;
});

// ../node_modules/@nodelib/fs.scandir/out/providers/common.js
var Sh = I((_u) => {
  "use strict";
  Object.defineProperty(_u, "__esModule", { value: !0 });
  _u.joinPathSegments = void 0;
  function bN(e, t, r) {
    return e.endsWith(r) ? e + t : e + r + t;
  }
  s(bN, "joinPathSegments");
  _u.joinPathSegments = bN;
});

// ../node_modules/@nodelib/fs.scandir/out/providers/async.js
var Uv = I((Ln) => {
  "use strict";
  Object.defineProperty(Ln, "__esModule", { value: !0 });
  Ln.readdir = Ln.readdirWithFileTypes = Ln.read = void 0;
  var vN = Di(), jv = Ov(), EN = Eh(), Mv = wh(), qv = Sh();
  function CN(e, t, r) {
    if (!t.stats && EN.IS_SUPPORT_READDIR_WITH_FILE_TYPES) {
      $v(e, t, r);
      return;
    }
    Vv(e, t, r);
  }
  s(CN, "read");
  Ln.read = CN;
  function $v(e, t, r) {
    t.fs.readdir(e, { withFileTypes: !0 }, (n, i) => {
      if (n !== null) {
        ku(r, n);
        return;
      }
      let o = i.map((u) => ({
        dirent: u,
        name: u.name,
        path: qv.joinPathSegments(e, u.name, t.pathSegmentSeparator)
      }));
      if (!t.followSymbolicLinks) {
        Ah(r, o);
        return;
      }
      let a = o.map((u) => wN(u, t));
      jv(a, (u, l) => {
        if (u !== null) {
          ku(r, u);
          return;
        }
        Ah(r, l);
      });
    });
  }
  s($v, "readdirWithFileTypes");
  Ln.readdirWithFileTypes = $v;
  function wN(e, t) {
    return (r) => {
      if (!e.dirent.isSymbolicLink()) {
        r(null, e);
        return;
      }
      t.fs.stat(e.path, (n, i) => {
        if (n !== null) {
          if (t.throwErrorOnBrokenSymbolicLink) {
            r(n);
            return;
          }
          r(null, e);
          return;
        }
        e.dirent = Mv.fs.createDirentFromStats(e.name, i), r(null, e);
      });
    };
  }
  s(wN, "makeRplTaskEntry");
  function Vv(e, t, r) {
    t.fs.readdir(e, (n, i) => {
      if (n !== null) {
        ku(r, n);
        return;
      }
      let o = i.map((a) => {
        let u = qv.joinPathSegments(e, a, t.pathSegmentSeparator);
        return (l) => {
          vN.stat(u, t.fsStatSettings, (c, p) => {
            if (c !== null) {
              l(c);
              return;
            }
            let h = {
              name: a,
              path: u,
              dirent: Mv.fs.createDirentFromStats(a, p)
            };
            t.stats && (h.stats = p), l(null, h);
          });
        };
      });
      jv(o, (a, u) => {
        if (a !== null) {
          ku(r, a);
          return;
        }
        Ah(r, u);
      });
    });
  }
  s(Vv, "readdir");
  Ln.readdir = Vv;
  function ku(e, t) {
    e(t);
  }
  s(ku, "callFailureCallback");
  function Ah(e, t) {
    e(null, t);
  }
  s(Ah, "callSuccessCallback");
});

// ../node_modules/@nodelib/fs.scandir/out/providers/sync.js
var Jv = I((jn) => {
  "use strict";
  Object.defineProperty(jn, "__esModule", { value: !0 });
  jn.readdir = jn.readdirWithFileTypes = jn.read = void 0;
  var SN = Di(), AN = Eh(), Wv = wh(), zv = Sh();
  function FN(e, t) {
    return !t.stats && AN.IS_SUPPORT_READDIR_WITH_FILE_TYPES ? Hv(e, t) : Gv(e, t);
  }
  s(FN, "read");
  jn.read = FN;
  function Hv(e, t) {
    return t.fs.readdirSync(e, { withFileTypes: !0 }).map((n) => {
      let i = {
        dirent: n,
        name: n.name,
        path: zv.joinPathSegments(e, n.name, t.pathSegmentSeparator)
      };
      if (i.dirent.isSymbolicLink() && t.followSymbolicLinks)
        try {
          let o = t.fs.statSync(i.path);
          i.dirent = Wv.fs.createDirentFromStats(i.name, o);
        } catch (o) {
          if (t.throwErrorOnBrokenSymbolicLink)
            throw o;
        }
      return i;
    });
  }
  s(Hv, "readdirWithFileTypes");
  jn.readdirWithFileTypes = Hv;
  function Gv(e, t) {
    return t.fs.readdirSync(e).map((n) => {
      let i = zv.joinPathSegments(e, n, t.pathSegmentSeparator), o = SN.statSync(i, t.fsStatSettings), a = {
        name: n,
        path: i,
        dirent: Wv.fs.createDirentFromStats(n, o)
      };
      return t.stats && (a.stats = o), a;
    });
  }
  s(Gv, "readdir");
  jn.readdir = Gv;
});

// ../node_modules/@nodelib/fs.scandir/out/adapters/fs.js
var Zv = I((Mn) => {
  "use strict";
  Object.defineProperty(Mn, "__esModule", { value: !0 });
  Mn.createFileSystemAdapter = Mn.FILE_SYSTEM_ADAPTER = void 0;
  var as = H("fs");
  Mn.FILE_SYSTEM_ADAPTER = {
    lstat: as.lstat,
    stat: as.stat,
    lstatSync: as.lstatSync,
    statSync: as.statSync,
    readdir: as.readdir,
    readdirSync: as.readdirSync
  };
  function _N(e) {
    return e === void 0 ? Mn.FILE_SYSTEM_ADAPTER : Object.assign(Object.assign({}, Mn.FILE_SYSTEM_ADAPTER), e);
  }
  s(_N, "createFileSystemAdapter");
  Mn.createFileSystemAdapter = _N;
});

// ../node_modules/@nodelib/fs.scandir/out/settings.js
var Xv = I((_h) => {
  "use strict";
  Object.defineProperty(_h, "__esModule", { value: !0 });
  var kN = H("path"), TN = Di(), IN = Zv(), Fh = class {
    static {
      s(this, "Settings");
    }
    constructor(t = {}) {
      this._options = t, this.followSymbolicLinks = this._getValue(this._options.followSymbolicLinks, !1), this.fs = IN.createFileSystemAdapter(
      this._options.fs), this.pathSegmentSeparator = this._getValue(this._options.pathSegmentSeparator, kN.sep), this.stats = this._getValue(
      this._options.stats, !1), this.throwErrorOnBrokenSymbolicLink = this._getValue(this._options.throwErrorOnBrokenSymbolicLink, !0), this.
      fsStatSettings = new TN.Settings({
        followSymbolicLink: this.followSymbolicLinks,
        fs: this.fs,
        throwErrorOnBrokenSymbolicLink: this.throwErrorOnBrokenSymbolicLink
      });
    }
    _getValue(t, r) {
      return t ?? r;
    }
  };
  _h.default = Fh;
});

// ../node_modules/@nodelib/fs.scandir/out/index.js
var Tu = I((qn) => {
  "use strict";
  Object.defineProperty(qn, "__esModule", { value: !0 });
  qn.Settings = qn.scandirSync = qn.scandir = void 0;
  var Kv = Uv(), PN = Jv(), kh = Xv();
  qn.Settings = kh.default;
  function BN(e, t, r) {
    if (typeof t == "function") {
      Kv.read(e, Th(), t);
      return;
    }
    Kv.read(e, Th(t), r);
  }
  s(BN, "scandir");
  qn.scandir = BN;
  function ON(e, t) {
    let r = Th(t);
    return PN.read(e, r);
  }
  s(ON, "scandirSync");
  qn.scandirSync = ON;
  function Th(e = {}) {
    return e instanceof kh.default ? e : new kh.default(e);
  }
  s(Th, "getSettings");
});

// ../node_modules/reusify/reusify.js
var Qv = I((Oce, Yv) => {
  "use strict";
  function RN(e) {
    var t = new e(), r = t;
    function n() {
      var o = t;
      return o.next ? t = o.next : (t = new e(), r = t), o.next = null, o;
    }
    s(n, "get");
    function i(o) {
      r.next = o, r = o;
    }
    return s(i, "release"), {
      get: n,
      release: i
    };
  }
  s(RN, "reusify");
  Yv.exports = RN;
});

// ../node_modules/fastq/queue.js
var tE = I((Nce, Ih) => {
  "use strict";
  var NN = Qv();
  function eE(e, t, r) {
    if (typeof e == "function" && (r = t, t = e, e = null), !(r >= 1))
      throw new Error("fastqueue concurrency must be equal to or greater than 1");
    var n = NN(LN), i = null, o = null, a = 0, u = null, l = {
      push: g,
      drain: or,
      saturated: or,
      pause: p,
      paused: !1,
      get concurrency() {
        return r;
      },
      set concurrency(O) {
        if (!(O >= 1))
          throw new Error("fastqueue concurrency must be equal to or greater than 1");
        if (r = O, !l.paused)
          for (; i && a < r; )
            a++, y();
      },
      running: c,
      resume: d,
      idle: m,
      length: h,
      getQueue: f,
      unshift: b,
      empty: or,
      kill: E,
      killAndDrain: A,
      error: k
    };
    return l;
    function c() {
      return a;
    }
    function p() {
      l.paused = !0;
    }
    function h() {
      for (var O = i, w = 0; O; )
        O = O.next, w++;
      return w;
    }
    function f() {
      for (var O = i, w = []; O; )
        w.push(O.value), O = O.next;
      return w;
    }
    function d() {
      if (l.paused) {
        if (l.paused = !1, i === null) {
          a++, y();
          return;
        }
        for (; i && a < r; )
          a++, y();
      }
    }
    function m() {
      return a === 0 && l.length() === 0;
    }
    function g(O, w) {
      var C = n.get();
      C.context = e, C.release = y, C.value = O, C.callback = w || or, C.errorHandler = u, a >= r || l.paused ? o ? (o.next = C, o = C) : (i =
      C, o = C, l.saturated()) : (a++, t.call(e, C.value, C.worked));
    }
    function b(O, w) {
      var C = n.get();
      C.context = e, C.release = y, C.value = O, C.callback = w || or, C.errorHandler = u, a >= r || l.paused ? i ? (C.next = i, i = C) : (i =
      C, o = C, l.saturated()) : (a++, t.call(e, C.value, C.worked));
    }
    function y(O) {
      O && n.release(O);
      var w = i;
      w && a <= r ? l.paused ? a-- : (o === i && (o = null), i = w.next, w.next = null, t.call(e, w.value, w.worked), o === null && l.empty()) :
      --a === 0 && l.drain();
    }
    function E() {
      i = null, o = null, l.drain = or;
    }
    function A() {
      i = null, o = null, l.drain(), l.drain = or;
    }
    function k(O) {
      u = O;
    }
  }
  s(eE, "fastqueue");
  function or() {
  }
  s(or, "noop");
  function LN() {
    this.value = null, this.callback = or, this.next = null, this.release = or, this.context = null, this.errorHandler = null;
    var e = this;
    this.worked = /* @__PURE__ */ s(function(r, n) {
      var i = e.callback, o = e.errorHandler, a = e.value;
      e.value = null, e.callback = or, e.errorHandler && o(r, a), i.call(e.context, r, n), e.release(e);
    }, "worked");
  }
  s(LN, "Task");
  function jN(e, t, r) {
    typeof e == "function" && (r = t, t = e, e = null);
    function n(p, h) {
      t.call(this, p).then(function(f) {
        h(null, f);
      }, h);
    }
    s(n, "asyncWrapper");
    var i = eE(e, n, r), o = i.push, a = i.unshift;
    return i.push = u, i.unshift = l, i.drained = c, i;
    function u(p) {
      var h = new Promise(function(f, d) {
        o(p, function(m, g) {
          if (m) {
            d(m);
            return;
          }
          f(g);
        });
      });
      return h.catch(or), h;
    }
    s(u, "push");
    function l(p) {
      var h = new Promise(function(f, d) {
        a(p, function(m, g) {
          if (m) {
            d(m);
            return;
          }
          f(g);
        });
      });
      return h.catch(or), h;
    }
    s(l, "unshift");
    function c() {
      var p = new Promise(function(h) {
        process.nextTick(function() {
          if (i.idle())
            h();
          else {
            var f = i.drain;
            i.drain = function() {
              typeof f == "function" && f(), h(), i.drain = f;
            };
          }
        });
      });
      return p;
    }
    s(c, "drained");
  }
  s(jN, "queueAsPromised");
  Ih.exports = eE;
  Ih.exports.promise = jN;
});

// ../node_modules/@nodelib/fs.walk/out/readers/common.js
var Iu = I((zr) => {
  "use strict";
  Object.defineProperty(zr, "__esModule", { value: !0 });
  zr.joinPathSegments = zr.replacePathSegmentSeparator = zr.isAppliedFilter = zr.isFatalError = void 0;
  function MN(e, t) {
    return e.errorFilter === null ? !0 : !e.errorFilter(t);
  }
  s(MN, "isFatalError");
  zr.isFatalError = MN;
  function qN(e, t) {
    return e === null || e(t);
  }
  s(qN, "isAppliedFilter");
  zr.isAppliedFilter = qN;
  function $N(e, t) {
    return e.split(/[/\\]/).join(t);
  }
  s($N, "replacePathSegmentSeparator");
  zr.replacePathSegmentSeparator = $N;
  function VN(e, t, r) {
    return e === "" ? t : e.endsWith(r) ? e + t : e + r + t;
  }
  s(VN, "joinPathSegments");
  zr.joinPathSegments = VN;
});

// ../node_modules/@nodelib/fs.walk/out/readers/reader.js
var Oh = I((Bh) => {
  "use strict";
  Object.defineProperty(Bh, "__esModule", { value: !0 });
  var UN = Iu(), Ph = class {
    static {
      s(this, "Reader");
    }
    constructor(t, r) {
      this._root = t, this._settings = r, this._root = UN.replacePathSegmentSeparator(t, r.pathSegmentSeparator);
    }
  };
  Bh.default = Ph;
});

// ../node_modules/@nodelib/fs.walk/out/readers/async.js
var Lh = I((Nh) => {
  "use strict";
  Object.defineProperty(Nh, "__esModule", { value: !0 });
  var WN = H("events"), zN = Tu(), HN = tE(), Pu = Iu(), GN = Oh(), Rh = class extends GN.default {
    static {
      s(this, "AsyncReader");
    }
    constructor(t, r) {
      super(t, r), this._settings = r, this._scandir = zN.scandir, this._emitter = new WN.EventEmitter(), this._queue = HN(this._worker.bind(
      this), this._settings.concurrency), this._isFatalError = !1, this._isDestroyed = !1, this._queue.drain = () => {
        this._isFatalError || this._emitter.emit("end");
      };
    }
    read() {
      return this._isFatalError = !1, this._isDestroyed = !1, setImmediate(() => {
        this._pushToQueue(this._root, this._settings.basePath);
      }), this._emitter;
    }
    get isDestroyed() {
      return this._isDestroyed;
    }
    destroy() {
      if (this._isDestroyed)
        throw new Error("The reader is already destroyed");
      this._isDestroyed = !0, this._queue.killAndDrain();
    }
    onEntry(t) {
      this._emitter.on("entry", t);
    }
    onError(t) {
      this._emitter.once("error", t);
    }
    onEnd(t) {
      this._emitter.once("end", t);
    }
    _pushToQueue(t, r) {
      let n = { directory: t, base: r };
      this._queue.push(n, (i) => {
        i !== null && this._handleError(i);
      });
    }
    _worker(t, r) {
      this._scandir(t.directory, this._settings.fsScandirSettings, (n, i) => {
        if (n !== null) {
          r(n, void 0);
          return;
        }
        for (let o of i)
          this._handleEntry(o, t.base);
        r(null, void 0);
      });
    }
    _handleError(t) {
      this._isDestroyed || !Pu.isFatalError(this._settings, t) || (this._isFatalError = !0, this._isDestroyed = !0, this._emitter.emit("erro\
r", t));
    }
    _handleEntry(t, r) {
      if (this._isDestroyed || this._isFatalError)
        return;
      let n = t.path;
      r !== void 0 && (t.path = Pu.joinPathSegments(r, t.name, this._settings.pathSegmentSeparator)), Pu.isAppliedFilter(this._settings.entryFilter,
      t) && this._emitEntry(t), t.dirent.isDirectory() && Pu.isAppliedFilter(this._settings.deepFilter, t) && this._pushToQueue(n, r === void 0 ?
      void 0 : t.path);
    }
    _emitEntry(t) {
      this._emitter.emit("entry", t);
    }
  };
  Nh.default = Rh;
});

// ../node_modules/@nodelib/fs.walk/out/providers/async.js
var rE = I((Mh) => {
  "use strict";
  Object.defineProperty(Mh, "__esModule", { value: !0 });
  var JN = Lh(), jh = class {
    static {
      s(this, "AsyncProvider");
    }
    constructor(t, r) {
      this._root = t, this._settings = r, this._reader = new JN.default(this._root, this._settings), this._storage = [];
    }
    read(t) {
      this._reader.onError((r) => {
        ZN(t, r);
      }), this._reader.onEntry((r) => {
        this._storage.push(r);
      }), this._reader.onEnd(() => {
        XN(t, this._storage);
      }), this._reader.read();
    }
  };
  Mh.default = jh;
  function ZN(e, t) {
    e(t);
  }
  s(ZN, "callFailureCallback");
  function XN(e, t) {
    e(null, t);
  }
  s(XN, "callSuccessCallback");
});

// ../node_modules/@nodelib/fs.walk/out/providers/stream.js
var nE = I(($h) => {
  "use strict";
  Object.defineProperty($h, "__esModule", { value: !0 });
  var KN = H("stream"), YN = Lh(), qh = class {
    static {
      s(this, "StreamProvider");
    }
    constructor(t, r) {
      this._root = t, this._settings = r, this._reader = new YN.default(this._root, this._settings), this._stream = new KN.Readable({
        objectMode: !0,
        read: /* @__PURE__ */ s(() => {
        }, "read"),
        destroy: /* @__PURE__ */ s(() => {
          this._reader.isDestroyed || this._reader.destroy();
        }, "destroy")
      });
    }
    read() {
      return this._reader.onError((t) => {
        this._stream.emit("error", t);
      }), this._reader.onEntry((t) => {
        this._stream.push(t);
      }), this._reader.onEnd(() => {
        this._stream.push(null);
      }), this._reader.read(), this._stream;
    }
  };
  $h.default = qh;
});

// ../node_modules/@nodelib/fs.walk/out/readers/sync.js
var iE = I((Uh) => {
  "use strict";
  Object.defineProperty(Uh, "__esModule", { value: !0 });
  var QN = Tu(), Bu = Iu(), e5 = Oh(), Vh = class extends e5.default {
    static {
      s(this, "SyncReader");
    }
    constructor() {
      super(...arguments), this._scandir = QN.scandirSync, this._storage = [], this._queue = /* @__PURE__ */ new Set();
    }
    read() {
      return this._pushToQueue(this._root, this._settings.basePath), this._handleQueue(), this._storage;
    }
    _pushToQueue(t, r) {
      this._queue.add({ directory: t, base: r });
    }
    _handleQueue() {
      for (let t of this._queue.values())
        this._handleDirectory(t.directory, t.base);
    }
    _handleDirectory(t, r) {
      try {
        let n = this._scandir(t, this._settings.fsScandirSettings);
        for (let i of n)
          this._handleEntry(i, r);
      } catch (n) {
        this._handleError(n);
      }
    }
    _handleError(t) {
      if (Bu.isFatalError(this._settings, t))
        throw t;
    }
    _handleEntry(t, r) {
      let n = t.path;
      r !== void 0 && (t.path = Bu.joinPathSegments(r, t.name, this._settings.pathSegmentSeparator)), Bu.isAppliedFilter(this._settings.entryFilter,
      t) && this._pushToStorage(t), t.dirent.isDirectory() && Bu.isAppliedFilter(this._settings.deepFilter, t) && this._pushToQueue(n, r ===
      void 0 ? void 0 : t.path);
    }
    _pushToStorage(t) {
      this._storage.push(t);
    }
  };
  Uh.default = Vh;
});

// ../node_modules/@nodelib/fs.walk/out/providers/sync.js
var sE = I((zh) => {
  "use strict";
  Object.defineProperty(zh, "__esModule", { value: !0 });
  var t5 = iE(), Wh = class {
    static {
      s(this, "SyncProvider");
    }
    constructor(t, r) {
      this._root = t, this._settings = r, this._reader = new t5.default(this._root, this._settings);
    }
    read() {
      return this._reader.read();
    }
  };
  zh.default = Wh;
});

// ../node_modules/@nodelib/fs.walk/out/settings.js
var oE = I((Gh) => {
  "use strict";
  Object.defineProperty(Gh, "__esModule", { value: !0 });
  var r5 = H("path"), n5 = Tu(), Hh = class {
    static {
      s(this, "Settings");
    }
    constructor(t = {}) {
      this._options = t, this.basePath = this._getValue(this._options.basePath, void 0), this.concurrency = this._getValue(this._options.concurrency,
      Number.POSITIVE_INFINITY), this.deepFilter = this._getValue(this._options.deepFilter, null), this.entryFilter = this._getValue(this._options.
      entryFilter, null), this.errorFilter = this._getValue(this._options.errorFilter, null), this.pathSegmentSeparator = this._getValue(this.
      _options.pathSegmentSeparator, r5.sep), this.fsScandirSettings = new n5.Settings({
        followSymbolicLinks: this._options.followSymbolicLinks,
        fs: this._options.fs,
        pathSegmentSeparator: this._options.pathSegmentSeparator,
        stats: this._options.stats,
        throwErrorOnBrokenSymbolicLink: this._options.throwErrorOnBrokenSymbolicLink
      });
    }
    _getValue(t, r) {
      return t ?? r;
    }
  };
  Gh.default = Hh;
});

// ../node_modules/@nodelib/fs.walk/out/index.js
var Ru = I((Hr) => {
  "use strict";
  Object.defineProperty(Hr, "__esModule", { value: !0 });
  Hr.Settings = Hr.walkStream = Hr.walkSync = Hr.walk = void 0;
  var aE = rE(), i5 = nE(), s5 = sE(), Jh = oE();
  Hr.Settings = Jh.default;
  function o5(e, t, r) {
    if (typeof t == "function") {
      new aE.default(e, Ou()).read(t);
      return;
    }
    new aE.default(e, Ou(t)).read(r);
  }
  s(o5, "walk");
  Hr.walk = o5;
  function a5(e, t) {
    let r = Ou(t);
    return new s5.default(e, r).read();
  }
  s(a5, "walkSync");
  Hr.walkSync = a5;
  function u5(e, t) {
    let r = Ou(t);
    return new i5.default(e, r).read();
  }
  s(u5, "walkStream");
  Hr.walkStream = u5;
  function Ou(e = {}) {
    return e instanceof Jh.default ? e : new Jh.default(e);
  }
  s(Ou, "getSettings");
});

// ../node_modules/fast-glob/out/readers/reader.js
var Nu = I((Xh) => {
  "use strict";
  Object.defineProperty(Xh, "__esModule", { value: !0 });
  var l5 = H("path"), c5 = Di(), uE = fn(), Zh = class {
    static {
      s(this, "Reader");
    }
    constructor(t) {
      this._settings = t, this._fsStatSettings = new c5.Settings({
        followSymbolicLink: this._settings.followSymbolicLinks,
        fs: this._settings.fs,
        throwErrorOnBrokenSymbolicLink: this._settings.followSymbolicLinks
      });
    }
    _getFullEntryPath(t) {
      return l5.resolve(this._settings.cwd, t);
    }
    _makeEntry(t, r) {
      let n = {
        name: r,
        path: r,
        dirent: uE.fs.createDirentFromStats(r, t)
      };
      return this._settings.stats && (n.stats = t), n;
    }
    _isFatalError(t) {
      return !uE.errno.isEnoentCodeError(t) && !this._settings.suppressErrors;
    }
  };
  Xh.default = Zh;
});

// ../node_modules/fast-glob/out/readers/stream.js
var Qh = I((Yh) => {
  "use strict";
  Object.defineProperty(Yh, "__esModule", { value: !0 });
  var p5 = H("stream"), h5 = Di(), f5 = Ru(), d5 = Nu(), Kh = class extends d5.default {
    static {
      s(this, "ReaderStream");
    }
    constructor() {
      super(...arguments), this._walkStream = f5.walkStream, this._stat = h5.stat;
    }
    dynamic(t, r) {
      return this._walkStream(t, r);
    }
    static(t, r) {
      let n = t.map(this._getFullEntryPath, this), i = new p5.PassThrough({ objectMode: !0 });
      i._write = (o, a, u) => this._getEntry(n[o], t[o], r).then((l) => {
        l !== null && r.entryFilter(l) && i.push(l), o === n.length - 1 && i.end(), u();
      }).catch(u);
      for (let o = 0; o < n.length; o++)
        i.write(o);
      return i;
    }
    _getEntry(t, r, n) {
      return this._getStat(t).then((i) => this._makeEntry(i, r)).catch((i) => {
        if (n.errorFilter(i))
          return null;
        throw i;
      });
    }
    _getStat(t) {
      return new Promise((r, n) => {
        this._stat(t, this._fsStatSettings, (i, o) => i === null ? r(o) : n(i));
      });
    }
  };
  Yh.default = Kh;
});

// ../node_modules/fast-glob/out/readers/async.js
var lE = I((tf) => {
  "use strict";
  Object.defineProperty(tf, "__esModule", { value: !0 });
  var m5 = Ru(), g5 = Nu(), y5 = Qh(), ef = class extends g5.default {
    static {
      s(this, "ReaderAsync");
    }
    constructor() {
      super(...arguments), this._walkAsync = m5.walk, this._readerStream = new y5.default(this._settings);
    }
    dynamic(t, r) {
      return new Promise((n, i) => {
        this._walkAsync(t, r, (o, a) => {
          o === null ? n(a) : i(o);
        });
      });
    }
    async static(t, r) {
      let n = [], i = this._readerStream.static(t, r);
      return new Promise((o, a) => {
        i.once("error", a), i.on("data", (u) => n.push(u)), i.once("end", () => o(n));
      });
    }
  };
  tf.default = ef;
});

// ../node_modules/fast-glob/out/providers/matchers/matcher.js
var cE = I((nf) => {
  "use strict";
  Object.defineProperty(nf, "__esModule", { value: !0 });
  var Io = fn(), rf = class {
    static {
      s(this, "Matcher");
    }
    constructor(t, r, n) {
      this._patterns = t, this._settings = r, this._micromatchOptions = n, this._storage = [], this._fillStorage();
    }
    _fillStorage() {
      for (let t of this._patterns) {
        let r = this._getPatternSegments(t), n = this._splitSegmentsIntoSections(r);
        this._storage.push({
          complete: n.length <= 1,
          pattern: t,
          segments: r,
          sections: n
        });
      }
    }
    _getPatternSegments(t) {
      return Io.pattern.getPatternParts(t, this._micromatchOptions).map((n) => Io.pattern.isDynamicPattern(n, this._settings) ? {
        dynamic: !0,
        pattern: n,
        patternRe: Io.pattern.makeRe(n, this._micromatchOptions)
      } : {
        dynamic: !1,
        pattern: n
      });
    }
    _splitSegmentsIntoSections(t) {
      return Io.array.splitWhen(t, (r) => r.dynamic && Io.pattern.hasGlobStar(r.pattern));
    }
  };
  nf.default = rf;
});

// ../node_modules/fast-glob/out/providers/matchers/partial.js
var pE = I((of) => {
  "use strict";
  Object.defineProperty(of, "__esModule", { value: !0 });
  var D5 = cE(), sf = class extends D5.default {
    static {
      s(this, "PartialMatcher");
    }
    match(t) {
      let r = t.split("/"), n = r.length, i = this._storage.filter((o) => !o.complete || o.segments.length > n);
      for (let o of i) {
        let a = o.sections[0];
        if (!o.complete && n > a.length || r.every((l, c) => {
          let p = o.segments[c];
          return !!(p.dynamic && p.patternRe.test(l) || !p.dynamic && p.pattern === l);
        }))
          return !0;
      }
      return !1;
    }
  };
  of.default = sf;
});

// ../node_modules/fast-glob/out/providers/filters/deep.js
var hE = I((uf) => {
  "use strict";
  Object.defineProperty(uf, "__esModule", { value: !0 });
  var Lu = fn(), x5 = pE(), af = class {
    static {
      s(this, "DeepFilter");
    }
    constructor(t, r) {
      this._settings = t, this._micromatchOptions = r;
    }
    getFilter(t, r, n) {
      let i = this._getMatcher(r), o = this._getNegativePatternsRe(n);
      return (a) => this._filter(t, a, i, o);
    }
    _getMatcher(t) {
      return new x5.default(t, this._settings, this._micromatchOptions);
    }
    _getNegativePatternsRe(t) {
      let r = t.filter(Lu.pattern.isAffectDepthOfReadingPattern);
      return Lu.pattern.convertPatternsToRe(r, this._micromatchOptions);
    }
    _filter(t, r, n, i) {
      if (this._isSkippedByDeep(t, r.path) || this._isSkippedSymbolicLink(r))
        return !1;
      let o = Lu.path.removeLeadingDotSegment(r.path);
      return this._isSkippedByPositivePatterns(o, n) ? !1 : this._isSkippedByNegativePatterns(o, i);
    }
    _isSkippedByDeep(t, r) {
      return this._settings.deep === 1 / 0 ? !1 : this._getEntryLevel(t, r) >= this._settings.deep;
    }
    _getEntryLevel(t, r) {
      let n = r.split("/").length;
      if (t === "")
        return n;
      let i = t.split("/").length;
      return n - i;
    }
    _isSkippedSymbolicLink(t) {
      return !this._settings.followSymbolicLinks && t.dirent.isSymbolicLink();
    }
    _isSkippedByPositivePatterns(t, r) {
      return !this._settings.baseNameMatch && !r.match(t);
    }
    _isSkippedByNegativePatterns(t, r) {
      return !Lu.pattern.matchAny(t, r);
    }
  };
  uf.default = af;
});

// ../node_modules/fast-glob/out/providers/filters/entry.js
var fE = I((cf) => {
  "use strict";
  Object.defineProperty(cf, "__esModule", { value: !0 });
  var $n = fn(), lf = class {
    static {
      s(this, "EntryFilter");
    }
    constructor(t, r) {
      this._settings = t, this._micromatchOptions = r, this.index = /* @__PURE__ */ new Map();
    }
    getFilter(t, r) {
      let [n, i] = $n.pattern.partitionAbsoluteAndRelative(r), o = {
        positive: {
          all: $n.pattern.convertPatternsToRe(t, this._micromatchOptions)
        },
        negative: {
          absolute: $n.pattern.convertPatternsToRe(n, Object.assign(Object.assign({}, this._micromatchOptions), { dot: !0 })),
          relative: $n.pattern.convertPatternsToRe(i, Object.assign(Object.assign({}, this._micromatchOptions), { dot: !0 }))
        }
      };
      return (a) => this._filter(a, o);
    }
    _filter(t, r) {
      let n = $n.path.removeLeadingDotSegment(t.path);
      if (this._settings.unique && this._isDuplicateEntry(n) || this._onlyFileFilter(t) || this._onlyDirectoryFilter(t))
        return !1;
      let i = this._isMatchToPatternsSet(n, r, t.dirent.isDirectory());
      return this._settings.unique && i && this._createIndexRecord(n), i;
    }
    _isDuplicateEntry(t) {
      return this.index.has(t);
    }
    _createIndexRecord(t) {
      this.index.set(t, void 0);
    }
    _onlyFileFilter(t) {
      return this._settings.onlyFiles && !t.dirent.isFile();
    }
    _onlyDirectoryFilter(t) {
      return this._settings.onlyDirectories && !t.dirent.isDirectory();
    }
    _isMatchToPatternsSet(t, r, n) {
      return !(!this._isMatchToPatterns(t, r.positive.all, n) || this._isMatchToPatterns(t, r.negative.relative, n) || this._isMatchToAbsoluteNegative(
      t, r.negative.absolute, n));
    }
    _isMatchToAbsoluteNegative(t, r, n) {
      if (r.length === 0)
        return !1;
      let i = $n.path.makeAbsolute(this._settings.cwd, t);
      return this._isMatchToPatterns(i, r, n);
    }
    _isMatchToPatterns(t, r, n) {
      if (r.length === 0)
        return !1;
      let i = $n.pattern.matchAny(t, r);
      return !i && n ? $n.pattern.matchAny(t + "/", r) : i;
    }
  };
  cf.default = lf;
});

// ../node_modules/fast-glob/out/providers/filters/error.js
var dE = I((hf) => {
  "use strict";
  Object.defineProperty(hf, "__esModule", { value: !0 });
  var b5 = fn(), pf = class {
    static {
      s(this, "ErrorFilter");
    }
    constructor(t) {
      this._settings = t;
    }
    getFilter() {
      return (t) => this._isNonFatalError(t);
    }
    _isNonFatalError(t) {
      return b5.errno.isEnoentCodeError(t) || this._settings.suppressErrors;
    }
  };
  hf.default = pf;
});

// ../node_modules/fast-glob/out/providers/transformers/entry.js
var gE = I((df) => {
  "use strict";
  Object.defineProperty(df, "__esModule", { value: !0 });
  var mE = fn(), ff = class {
    static {
      s(this, "EntryTransformer");
    }
    constructor(t) {
      this._settings = t;
    }
    getTransformer() {
      return (t) => this._transform(t);
    }
    _transform(t) {
      let r = t.path;
      return this._settings.absolute && (r = mE.path.makeAbsolute(this._settings.cwd, r), r = mE.path.unixify(r)), this._settings.markDirectories &&
      t.dirent.isDirectory() && (r += "/"), this._settings.objectMode ? Object.assign(Object.assign({}, t), { path: r }) : r;
    }
  };
  df.default = ff;
});

// ../node_modules/fast-glob/out/providers/provider.js
var ju = I((gf) => {
  "use strict";
  Object.defineProperty(gf, "__esModule", { value: !0 });
  var v5 = H("path"), E5 = hE(), C5 = fE(), w5 = dE(), S5 = gE(), mf = class {
    static {
      s(this, "Provider");
    }
    constructor(t) {
      this._settings = t, this.errorFilter = new w5.default(this._settings), this.entryFilter = new C5.default(this._settings, this._getMicromatchOptions()),
      this.deepFilter = new E5.default(this._settings, this._getMicromatchOptions()), this.entryTransformer = new S5.default(this._settings);
    }
    _getRootDirectory(t) {
      return v5.resolve(this._settings.cwd, t.base);
    }
    _getReaderOptions(t) {
      let r = t.base === "." ? "" : t.base;
      return {
        basePath: r,
        pathSegmentSeparator: "/",
        concurrency: this._settings.concurrency,
        deepFilter: this.deepFilter.getFilter(r, t.positive, t.negative),
        entryFilter: this.entryFilter.getFilter(t.positive, t.negative),
        errorFilter: this.errorFilter.getFilter(),
        followSymbolicLinks: this._settings.followSymbolicLinks,
        fs: this._settings.fs,
        stats: this._settings.stats,
        throwErrorOnBrokenSymbolicLink: this._settings.throwErrorOnBrokenSymbolicLink,
        transform: this.entryTransformer.getTransformer()
      };
    }
    _getMicromatchOptions() {
      return {
        dot: this._settings.dot,
        matchBase: this._settings.baseNameMatch,
        nobrace: !this._settings.braceExpansion,
        nocase: !this._settings.caseSensitiveMatch,
        noext: !this._settings.extglob,
        noglobstar: !this._settings.globstar,
        posix: !0,
        strictSlashes: !1
      };
    }
  };
  gf.default = mf;
});

// ../node_modules/fast-glob/out/providers/async.js
var yE = I((Df) => {
  "use strict";
  Object.defineProperty(Df, "__esModule", { value: !0 });
  var A5 = lE(), F5 = ju(), yf = class extends F5.default {
    static {
      s(this, "ProviderAsync");
    }
    constructor() {
      super(...arguments), this._reader = new A5.default(this._settings);
    }
    async read(t) {
      let r = this._getRootDirectory(t), n = this._getReaderOptions(t);
      return (await this.api(r, t, n)).map((o) => n.transform(o));
    }
    api(t, r, n) {
      return r.dynamic ? this._reader.dynamic(t, n) : this._reader.static(r.patterns, n);
    }
  };
  Df.default = yf;
});

// ../node_modules/fast-glob/out/providers/stream.js
var DE = I((bf) => {
  "use strict";
  Object.defineProperty(bf, "__esModule", { value: !0 });
  var _5 = H("stream"), k5 = Qh(), T5 = ju(), xf = class extends T5.default {
    static {
      s(this, "ProviderStream");
    }
    constructor() {
      super(...arguments), this._reader = new k5.default(this._settings);
    }
    read(t) {
      let r = this._getRootDirectory(t), n = this._getReaderOptions(t), i = this.api(r, t, n), o = new _5.Readable({ objectMode: !0, read: /* @__PURE__ */ s(
      () => {
      }, "read") });
      return i.once("error", (a) => o.emit("error", a)).on("data", (a) => o.emit("data", n.transform(a))).once("end", () => o.emit("end")), o.
      once("close", () => i.destroy()), o;
    }
    api(t, r, n) {
      return r.dynamic ? this._reader.dynamic(t, n) : this._reader.static(r.patterns, n);
    }
  };
  bf.default = xf;
});

// ../node_modules/fast-glob/out/readers/sync.js
var xE = I((Ef) => {
  "use strict";
  Object.defineProperty(Ef, "__esModule", { value: !0 });
  var I5 = Di(), P5 = Ru(), B5 = Nu(), vf = class extends B5.default {
    static {
      s(this, "ReaderSync");
    }
    constructor() {
      super(...arguments), this._walkSync = P5.walkSync, this._statSync = I5.statSync;
    }
    dynamic(t, r) {
      return this._walkSync(t, r);
    }
    static(t, r) {
      let n = [];
      for (let i of t) {
        let o = this._getFullEntryPath(i), a = this._getEntry(o, i, r);
        a === null || !r.entryFilter(a) || n.push(a);
      }
      return n;
    }
    _getEntry(t, r, n) {
      try {
        let i = this._getStat(t);
        return this._makeEntry(i, r);
      } catch (i) {
        if (n.errorFilter(i))
          return null;
        throw i;
      }
    }
    _getStat(t) {
      return this._statSync(t, this._fsStatSettings);
    }
  };
  Ef.default = vf;
});

// ../node_modules/fast-glob/out/providers/sync.js
var bE = I((wf) => {
  "use strict";
  Object.defineProperty(wf, "__esModule", { value: !0 });
  var O5 = xE(), R5 = ju(), Cf = class extends R5.default {
    static {
      s(this, "ProviderSync");
    }
    constructor() {
      super(...arguments), this._reader = new O5.default(this._settings);
    }
    read(t) {
      let r = this._getRootDirectory(t), n = this._getReaderOptions(t);
      return this.api(r, t, n).map(n.transform);
    }
    api(t, r, n) {
      return r.dynamic ? this._reader.dynamic(t, n) : this._reader.static(r.patterns, n);
    }
  };
  wf.default = Cf;
});

// ../node_modules/fast-glob/out/settings.js
var vE = I((ls) => {
  "use strict";
  Object.defineProperty(ls, "__esModule", { value: !0 });
  ls.DEFAULT_FILE_SYSTEM_ADAPTER = void 0;
  var us = H("fs"), N5 = H("os"), L5 = Math.max(N5.cpus().length, 1);
  ls.DEFAULT_FILE_SYSTEM_ADAPTER = {
    lstat: us.lstat,
    lstatSync: us.lstatSync,
    stat: us.stat,
    statSync: us.statSync,
    readdir: us.readdir,
    readdirSync: us.readdirSync
  };
  var Sf = class {
    static {
      s(this, "Settings");
    }
    constructor(t = {}) {
      this._options = t, this.absolute = this._getValue(this._options.absolute, !1), this.baseNameMatch = this._getValue(this._options.baseNameMatch,
      !1), this.braceExpansion = this._getValue(this._options.braceExpansion, !0), this.caseSensitiveMatch = this._getValue(this._options.caseSensitiveMatch,
      !0), this.concurrency = this._getValue(this._options.concurrency, L5), this.cwd = this._getValue(this._options.cwd, process.cwd()), this.
      deep = this._getValue(this._options.deep, 1 / 0), this.dot = this._getValue(this._options.dot, !1), this.extglob = this._getValue(this.
      _options.extglob, !0), this.followSymbolicLinks = this._getValue(this._options.followSymbolicLinks, !0), this.fs = this._getFileSystemMethods(
      this._options.fs), this.globstar = this._getValue(this._options.globstar, !0), this.ignore = this._getValue(this._options.ignore, []),
      this.markDirectories = this._getValue(this._options.markDirectories, !1), this.objectMode = this._getValue(this._options.objectMode, !1),
      this.onlyDirectories = this._getValue(this._options.onlyDirectories, !1), this.onlyFiles = this._getValue(this._options.onlyFiles, !0),
      this.stats = this._getValue(this._options.stats, !1), this.suppressErrors = this._getValue(this._options.suppressErrors, !1), this.throwErrorOnBrokenSymbolicLink =
      this._getValue(this._options.throwErrorOnBrokenSymbolicLink, !1), this.unique = this._getValue(this._options.unique, !0), this.onlyDirectories &&
      (this.onlyFiles = !1), this.stats && (this.objectMode = !0), this.ignore = [].concat(this.ignore);
    }
    _getValue(t, r) {
      return t === void 0 ? r : t;
    }
    _getFileSystemMethods(t = {}) {
      return Object.assign(Object.assign({}, ls.DEFAULT_FILE_SYSTEM_ADAPTER), t);
    }
  };
  ls.default = Sf;
});

// ../node_modules/fast-glob/out/index.js
var kf = I((Ppe, CE) => {
  "use strict";
  var EE = Cv(), j5 = yE(), M5 = DE(), q5 = bE(), Af = vE(), ar = fn();
  async function Ff(e, t) {
    Tr(e);
    let r = _f(e, j5.default, t), n = await Promise.all(r);
    return ar.array.flatten(n);
  }
  s(Ff, "FastGlob");
  (function(e) {
    e.glob = e, e.globSync = t, e.globStream = r, e.async = e;
    function t(c, p) {
      Tr(c);
      let h = _f(c, q5.default, p);
      return ar.array.flatten(h);
    }
    s(t, "sync"), e.sync = t;
    function r(c, p) {
      Tr(c);
      let h = _f(c, M5.default, p);
      return ar.stream.merge(h);
    }
    s(r, "stream"), e.stream = r;
    function n(c, p) {
      Tr(c);
      let h = [].concat(c), f = new Af.default(p);
      return EE.generate(h, f);
    }
    s(n, "generateTasks"), e.generateTasks = n;
    function i(c, p) {
      Tr(c);
      let h = new Af.default(p);
      return ar.pattern.isDynamicPattern(c, h);
    }
    s(i, "isDynamicPattern"), e.isDynamicPattern = i;
    function o(c) {
      return Tr(c), ar.path.escape(c);
    }
    s(o, "escapePath"), e.escapePath = o;
    function a(c) {
      return Tr(c), ar.path.convertPathToPattern(c);
    }
    s(a, "convertPathToPattern"), e.convertPathToPattern = a;
    let u;
    (function(c) {
      function p(f) {
        return Tr(f), ar.path.escapePosixPath(f);
      }
      s(p, "escapePath"), c.escapePath = p;
      function h(f) {
        return Tr(f), ar.path.convertPosixPathToPattern(f);
      }
      s(h, "convertPathToPattern"), c.convertPathToPattern = h;
    })(u = e.posix || (e.posix = {}));
    let l;
    (function(c) {
      function p(f) {
        return Tr(f), ar.path.escapeWindowsPath(f);
      }
      s(p, "escapePath"), c.escapePath = p;
      function h(f) {
        return Tr(f), ar.path.convertWindowsPathToPattern(f);
      }
      s(h, "convertPathToPattern"), c.convertPathToPattern = h;
    })(l = e.win32 || (e.win32 = {}));
  })(Ff || (Ff = {}));
  function _f(e, t, r) {
    let n = [].concat(e), i = new Af.default(r), o = EE.generate(n, i), a = new t(i);
    return o.map(a.read, a);
  }
  s(_f, "getWorks");
  function Tr(e) {
    if (![].concat(e).every((n) => ar.string.isString(n) && !ar.string.isEmpty(n)))
      throw new TypeError("Patterns must be a string (non empty) or an array of strings");
  }
  s(Tr, "assertPatternsInput");
  CE.exports = Ff;
});

// ../node_modules/globby/node_modules/path-type/index.js
import $5 from "node:fs";
import V5 from "node:fs/promises";
async function Tf(e, t, r) {
  if (typeof r != "string")
    throw new TypeError(`Expected a string, got ${typeof r}`);
  try {
    return (await V5[e](r))[t]();
  } catch (n) {
    if (n.code === "ENOENT")
      return !1;
    throw n;
  }
}
function If(e, t, r) {
  if (typeof r != "string")
    throw new TypeError(`Expected a string, got ${typeof r}`);
  try {
    return $5[e](r)[t]();
  } catch (n) {
    if (n.code === "ENOENT")
      return !1;
    throw n;
  }
}
var Npe, wE, Lpe, jpe, SE, Mpe, AE = Et(() => {
  s(Tf, "isType");
  s(If, "isTypeSync");
  Npe = Tf.bind(void 0, "stat", "isFile"), wE = Tf.bind(void 0, "stat", "isDirectory"), Lpe = Tf.bind(void 0, "lstat", "isSymbolicLink"), jpe =
  If.bind(void 0, "statSync", "isFile"), SE = If.bind(void 0, "statSync", "isDirectory"), Mpe = If.bind(void 0, "lstatSync", "isSymbolicLink");
});

// ../node_modules/unicorn-magic/default.js
var FE = Et(() => {
});

// ../node_modules/unicorn-magic/node.js
import { promisify as U5 } from "node:util";
import { execFile as W5, execFileSync as Hpe } from "node:child_process";
import Jpe from "node:path";
import { fileURLToPath as z5 } from "node:url";
function Po(e) {
  return e instanceof URL ? z5(e) : e;
}
var Xpe, Kpe, Pf = Et(() => {
  FE();
  Xpe = U5(W5);
  s(Po, "toPath");
  Kpe = 10 * 1024 * 1024;
});

// ../node_modules/globby/node_modules/ignore/index.js
var RE = I((the, Mf) => {
  function TE(e) {
    return Array.isArray(e) ? e : [e];
  }
  s(TE, "makeArray");
  var H5 = void 0, Of = "", _E = " ", Bf = "\\", G5 = /^\s+$/, J5 = /(?:[^\\]|^)\\$/, Z5 = /^\\!/, X5 = /^\\#/, K5 = /\r?\n/g, Y5 = /^\.{0,2}\/|^\.{1,2}$/,
  Q5 = /\/$/, cs = "/", IE = "node-ignore";
  typeof Symbol < "u" && (IE = Symbol.for("node-ignore"));
  var PE = IE, Bo = /* @__PURE__ */ s((e, t, r) => (Object.defineProperty(e, t, { value: r }), r), "define"), e7 = /([0-z])-([0-z])/g, BE = /* @__PURE__ */ s(
  () => !1, "RETURN_FALSE"), t7 = /* @__PURE__ */ s((e) => e.replace(
    e7,
    (t, r, n) => r.charCodeAt(0) <= n.charCodeAt(0) ? t : Of
  ), "sanitizeRange"), r7 = /* @__PURE__ */ s((e) => {
    let { length: t } = e;
    return e.slice(0, t - t % 2);
  }, "cleanRangeBackSlash"), n7 = [
    [
      // Remove BOM
      // TODO:
      // Other similar zero-width characters?
      /^\uFEFF/,
      () => Of
    ],
    // > Trailing spaces are ignored unless they are quoted with backslash ("\")
    [
      // (a\ ) -> (a )
      // (a  ) -> (a)
      // (a ) -> (a)
      // (a \ ) -> (a  )
      /((?:\\\\)*?)(\\?\s+)$/,
      (e, t, r) => t + (r.indexOf("\\") === 0 ? _E : Of)
    ],
    // Replace (\ ) with ' '
    // (\ ) -> ' '
    // (\\ ) -> '\\ '
    // (\\\ ) -> '\\ '
    [
      /(\\+?)\s/g,
      (e, t) => {
        let { length: r } = t;
        return t.slice(0, r - r % 2) + _E;
      }
    ],
    // Escape metacharacters
    // which is written down by users but means special for regular expressions.
    // > There are 12 characters with special meanings:
    // > - the backslash \,
    // > - the caret ^,
    // > - the dollar sign $,
    // > - the period or dot .,
    // > - the vertical bar or pipe symbol |,
    // > - the question mark ?,
    // > - the asterisk or star *,
    // > - the plus sign +,
    // > - the opening parenthesis (,
    // > - the closing parenthesis ),
    // > - and the opening square bracket [,
    // > - the opening curly brace {,
    // > These special characters are often called "metacharacters".
    [
      /[\\$.|*+(){^]/g,
      (e) => `\\${e}`
    ],
    [
      // > a question mark (?) matches a single character
      /(?!\\)\?/g,
      () => "[^/]"
    ],
    // leading slash
    [
      // > A leading slash matches the beginning of the pathname.
      // > For example, "/*.c" matches "cat-file.c" but not "mozilla-sha1/sha1.c".
      // A leading slash matches the beginning of the pathname
      /^\//,
      () => "^"
    ],
    // replace special metacharacter slash after the leading slash
    [
      /\//g,
      () => "\\/"
    ],
    [
      // > A leading "**" followed by a slash means match in all directories.
      // > For example, "**/foo" matches file or directory "foo" anywhere,
      // > the same as pattern "foo".
      // > "**/foo/bar" matches file or directory "bar" anywhere that is directly
      // >   under directory "foo".
      // Notice that the '*'s have been replaced as '\\*'
      /^\^*\\\*\\\*\\\//,
      // '**/foo' <-> 'foo'
      () => "^(?:.*\\/)?"
    ],
    // starting
    [
      // there will be no leading '/'
      //   (which has been replaced by section "leading slash")
      // If starts with '**', adding a '^' to the regular expression also works
      /^(?=[^^])/,
      /* @__PURE__ */ s(function() {
        return /\/(?!$)/.test(this) ? "^" : "(?:^|\\/)";
      }, "startingReplacer")
    ],
    // two globstars
    [
      // Use lookahead assertions so that we could match more than one `'/**'`
      /\\\/\\\*\\\*(?=\\\/|$)/g,
      // Zero, one or several directories
      // should not use '*', or it will be replaced by the next replacer
      // Check if it is not the last `'/**'`
      (e, t, r) => t + 6 < r.length ? "(?:\\/[^\\/]+)*" : "\\/.+"
    ],
    // normal intermediate wildcards
    [
      // Never replace escaped '*'
      // ignore rule '\*' will match the path '*'
      // 'abc.*/' -> go
      // 'abc.*'  -> skip this rule,
      //    coz trailing single wildcard will be handed by [trailing wildcard]
      /(^|[^\\]+)(\\\*)+(?=.+)/g,
      // '*.js' matches '.js'
      // '*.js' doesn't match 'abc'
      (e, t, r) => {
        let n = r.replace(/\\\*/g, "[^\\/]*");
        return t + n;
      }
    ],
    [
      // unescape, revert step 3 except for back slash
      // For example, if a user escape a '\\*',
      // after step 3, the result will be '\\\\\\*'
      /\\\\\\(?=[$.|*+(){^])/g,
      () => Bf
    ],
    [
      // '\\\\' -> '\\'
      /\\\\/g,
      () => Bf
    ],
    [
      // > The range notation, e.g. [a-zA-Z],
      // > can be used to match one of the characters in a range.
      // `\` is escaped by step 3
      /(\\)?\[([^\]/]*?)(\\*)($|\])/g,
      (e, t, r, n, i) => t === Bf ? `\\[${r}${r7(n)}${i}` : i === "]" && n.length % 2 === 0 ? `[${t7(r)}${n}]` : "[]"
    ],
    // ending
    [
      // 'js' will not match 'js.'
      // 'ab' will not match 'abc'
      /(?:[^*])$/,
      // WTF!
      // https://git-scm.com/docs/gitignore
      // changes in [2.22.1](https://git-scm.com/docs/gitignore/2.22.1)
      // which re-fixes #24, #38
      // > If there is a separator at the end of the pattern then the pattern
      // > will only match directories, otherwise the pattern can match both
      // > files and directories.
      // 'js*' will not match 'a.js'
      // 'js/' will not match 'a.js'
      // 'js' will match 'a.js' and 'a.js/'
      (e) => /\/$/.test(e) ? `${e}$` : `${e}(?=$|\\/$)`
    ]
  ], i7 = /(^|\\\/)?\\\*$/, Oo = "regex", Mu = "checkRegex", kE = "_", s7 = {
    [Oo](e, t) {
      return `${t ? `${t}[^/]+` : "[^/]*"}(?=$|\\/$)`;
    },
    [Mu](e, t) {
      return `${t ? `${t}[^/]*` : "[^/]*"}(?=$|\\/$)`;
    }
  }, o7 = /* @__PURE__ */ s((e) => n7.reduce(
    (t, [r, n]) => t.replace(r, n.bind(e)),
    e
  ), "makeRegexPrefix"), qu = /* @__PURE__ */ s((e) => typeof e == "string", "isString"), a7 = /* @__PURE__ */ s((e) => e && qu(e) && !G5.test(
  e) && !J5.test(e) && e.indexOf("#") !== 0, "checkPattern"), u7 = /* @__PURE__ */ s((e) => e.split(K5).filter(Boolean), "splitPattern"), Rf = class {
    static {
      s(this, "IgnoreRule");
    }
    constructor(t, r, n, i, o, a) {
      this.pattern = t, this.mark = r, this.negative = o, Bo(this, "body", n), Bo(this, "ignoreCase", i), Bo(this, "regexPrefix", a);
    }
    get regex() {
      let t = kE + Oo;
      return this[t] ? this[t] : this._make(Oo, t);
    }
    get checkRegex() {
      let t = kE + Mu;
      return this[t] ? this[t] : this._make(Mu, t);
    }
    _make(t, r) {
      let n = this.regexPrefix.replace(
        i7,
        // It does not need to bind pattern
        s7[t]
      ), i = this.ignoreCase ? new RegExp(n, "i") : new RegExp(n);
      return Bo(this, r, i);
    }
  }, l7 = /* @__PURE__ */ s(({
    pattern: e,
    mark: t
  }, r) => {
    let n = !1, i = e;
    i.indexOf("!") === 0 && (n = !0, i = i.substr(1)), i = i.replace(Z5, "!").replace(X5, "#");
    let o = o7(i);
    return new Rf(
      e,
      t,
      i,
      r,
      n,
      o
    );
  }, "createRule"), Nf = class {
    static {
      s(this, "RuleManager");
    }
    constructor(t) {
      this._ignoreCase = t, this._rules = [];
    }
    _add(t) {
      if (t && t[PE]) {
        this._rules = this._rules.concat(t._rules._rules), this._added = !0;
        return;
      }
      if (qu(t) && (t = {
        pattern: t
      }), a7(t.pattern)) {
        let r = l7(t, this._ignoreCase);
        this._added = !0, this._rules.push(r);
      }
    }
    // @param {Array<string> | string | Ignore} pattern
    add(t) {
      return this._added = !1, TE(
        qu(t) ? u7(t) : t
      ).forEach(this._add, this), this._added;
    }
    // Test one single path without recursively checking parent directories
    //
    // - checkUnignored `boolean` whether should check if the path is unignored,
    //   setting `checkUnignored` to `false` could reduce additional
    //   path matching.
    // - check `string` either `MODE_IGNORE` or `MODE_CHECK_IGNORE`
    // @returns {TestResult} true if a file is ignored
    test(t, r, n) {
      let i = !1, o = !1, a;
      this._rules.forEach((l) => {
        let { negative: c } = l;
        o === c && i !== o || c && !i && !o && !r || !l[n].test(t) || (i = !c, o = c, a = c ? H5 : l);
      });
      let u = {
        ignored: i,
        unignored: o
      };
      return a && (u.rule = a), u;
    }
  }, c7 = /* @__PURE__ */ s((e, t) => {
    throw new t(e);
  }, "throwError"), dn = /* @__PURE__ */ s((e, t, r) => qu(e) ? e ? dn.isNotRelative(e) ? r(
    `path should be a \`path.relative()\`d string, but got "${t}"`,
    RangeError
  ) : !0 : r("path must not be empty", TypeError) : r(
    `path must be a string, but got \`${t}\``,
    TypeError
  ), "checkPath"), OE = /* @__PURE__ */ s((e) => Y5.test(e), "isNotRelative");
  dn.isNotRelative = OE;
  dn.convert = (e) => e;
  var Lf = class {
    static {
      s(this, "Ignore");
    }
    constructor({
      ignorecase: t = !0,
      ignoreCase: r = t,
      allowRelativePaths: n = !1
    } = {}) {
      Bo(this, PE, !0), this._rules = new Nf(r), this._strictPathCheck = !n, this._initCache();
    }
    _initCache() {
      this._ignoreCache = /* @__PURE__ */ Object.create(null), this._testCache = /* @__PURE__ */ Object.create(null);
    }
    add(t) {
      return this._rules.add(t) && this._initCache(), this;
    }
    // legacy
    addPattern(t) {
      return this.add(t);
    }
    // @returns {TestResult}
    _test(t, r, n, i) {
      let o = t && dn.convert(t);
      return dn(
        o,
        t,
        this._strictPathCheck ? c7 : BE
      ), this._t(o, r, n, i);
    }
    checkIgnore(t) {
      if (!Q5.test(t))
        return this.test(t);
      let r = t.split(cs).filter(Boolean);
      if (r.pop(), r.length) {
        let n = this._t(
          r.join(cs) + cs,
          this._testCache,
          !0,
          r
        );
        if (n.ignored)
          return n;
      }
      return this._rules.test(t, !1, Mu);
    }
    _t(t, r, n, i) {
      if (t in r)
        return r[t];
      if (i || (i = t.split(cs).filter(Boolean)), i.pop(), !i.length)
        return r[t] = this._rules.test(t, n, Oo);
      let o = this._t(
        i.join(cs) + cs,
        r,
        n,
        i
      );
      return r[t] = o.ignored ? o : this._rules.test(t, n, Oo);
    }
    ignores(t) {
      return this._test(t, this._ignoreCache, !1).ignored;
    }
    createFilter() {
      return (t) => !this.ignores(t);
    }
    filter(t) {
      return TE(t).filter(this.createFilter());
    }
    // @returns {TestResult}
    test(t) {
      return this._test(t, this._testCache, !0);
    }
  }, jf = /* @__PURE__ */ s((e) => new Lf(e), "factory"), p7 = /* @__PURE__ */ s((e) => dn(e && dn.convert(e), e, BE), "isPathValid");
  if (
    // Detect `process` so that it can run in browsers.
    typeof process < "u" && (process.env && process.env.IGNORE_TEST_WIN32 || process.platform === "win32")
  ) {
    let e = /* @__PURE__ */ s((r) => /^\\\\\?\\/.test(r) || /["<>|\u0000-\u001F]+/u.test(r) ? r : r.replace(/\\/g, "/"), "makePosix");
    dn.convert = e;
    let t = /^[a-z]:\//i;
    dn.isNotRelative = (r) => t.test(r) || OE(r);
  }
  Mf.exports = jf;
  jf.default = jf;
  Mf.exports.isPathValid = p7;
});

// ../node_modules/globby/utilities.js
var Ro, qf = Et(() => {
  Ro = /* @__PURE__ */ s((e) => e[0] === "!", "isNegativePattern");
});

// ../node_modules/globby/ignore.js
import h7 from "node:process";
import f7 from "node:fs";
import d7 from "node:fs/promises";
import ps from "node:path";
var $f, NE, m7, LE, $u, g7, y7, D7, jE, ME, No, Lo, qE, $E, Vf = Et(() => {
  $f = fe(kf(), 1), NE = fe(RE(), 1);
  hi();
  Pf();
  qf();
  m7 = [
    "**/node_modules",
    "**/flow-typed",
    "**/coverage",
    "**/.git"
  ], LE = {
    absolute: !0,
    dot: !0
  }, $u = "**/.gitignore", g7 = /* @__PURE__ */ s((e, t) => Ro(e) ? "!" + ps.posix.join(t, e.slice(1)) : ps.posix.join(t, e), "applyBaseToPa\
ttern"), y7 = /* @__PURE__ */ s((e, t) => {
    let r = it(ps.relative(t, ps.dirname(e.filePath)));
    return e.content.split(/\r?\n/).filter((n) => n && !n.startsWith("#")).map((n) => g7(n, r));
  }, "parseIgnoreFile"), D7 = /* @__PURE__ */ s((e, t) => {
    if (t = it(t), ps.isAbsolute(e)) {
      if (it(e).startsWith(t))
        return ps.relative(t, e);
      throw new Error(`Path ${e} is not in cwd ${t}`);
    }
    return e;
  }, "toRelativePath"), jE = /* @__PURE__ */ s((e, t) => {
    let r = e.flatMap((i) => y7(i, t)), n = (0, NE.default)().add(r);
    return (i) => (i = Po(i), i = D7(i, t), i ? n.ignores(it(i)) : !1);
  }, "getIsIgnoredPredicate"), ME = /* @__PURE__ */ s((e = {}) => ({
    cwd: Po(e.cwd) ?? h7.cwd(),
    suppressErrors: !!e.suppressErrors,
    deep: typeof e.deep == "number" ? e.deep : Number.POSITIVE_INFINITY,
    ignore: [...e.ignore ?? [], ...m7]
  }), "normalizeOptions"), No = /* @__PURE__ */ s(async (e, t) => {
    let { cwd: r, suppressErrors: n, deep: i, ignore: o } = ME(t), a = await (0, $f.default)(e, {
      cwd: r,
      suppressErrors: n,
      deep: i,
      ignore: o,
      ...LE
    }), u = await Promise.all(
      a.map(async (l) => ({
        filePath: l,
        content: await d7.readFile(l, "utf8")
      }))
    );
    return jE(u, r);
  }, "isIgnoredByIgnoreFiles"), Lo = /* @__PURE__ */ s((e, t) => {
    let { cwd: r, suppressErrors: n, deep: i, ignore: o } = ME(t), u = $f.default.sync(e, {
      cwd: r,
      suppressErrors: n,
      deep: i,
      ignore: o,
      ...LE
    }).map((l) => ({
      filePath: l,
      content: f7.readFileSync(l, "utf8")
    }));
    return jE(u, r);
  }, "isIgnoredByIgnoreFilesSync"), qE = /* @__PURE__ */ s((e) => No($u, e), "isGitIgnored"), $E = /* @__PURE__ */ s((e) => Lo($u, e), "isGi\
tIgnoredSync");
});

// ../node_modules/globby/index.js
var zf = {};
pi(zf, {
  convertPathToPattern: () => k7,
  generateGlobTasks: () => F7,
  generateGlobTasksSync: () => _7,
  globby: () => C7,
  globbyStream: () => S7,
  globbySync: () => w7,
  isDynamicPattern: () => A7,
  isGitIgnored: () => qE,
  isGitIgnoredSync: () => $E,
  isIgnoredByIgnoreFiles: () => No,
  isIgnoredByIgnoreFilesSync: () => Lo
});
import WE from "node:process";
import x7 from "node:fs";
import hs from "node:path";
var fs, b7, zE, HE, VE, UE, Uf, v7, GE, JE, Vu, ZE, E7, XE, KE, YE, QE, e1, t1, Wf, C7, w7, S7, A7, F7, _7, k7, Hf = Et(() => {
  Ox();
  fs = fe(kf(), 1);
  AE();
  Pf();
  Vf();
  qf();
  Vf();
  b7 = /* @__PURE__ */ s((e) => {
    if (e.some((t) => typeof t != "string"))
      throw new TypeError("Patterns must be a string or an array of strings");
  }, "assertPatternsInput"), zE = /* @__PURE__ */ s((e, t) => {
    let r = Ro(e) ? e.slice(1) : e;
    return hs.isAbsolute(r) ? r : hs.join(t, r);
  }, "normalizePathForDirectoryGlob"), HE = /* @__PURE__ */ s(({ directoryPath: e, files: t, extensions: r }) => {
    let n = r?.length > 0 ? `.${r.length > 1 ? `{${r.join(",")}}` : r[0]}` : "";
    return t ? t.map((i) => hs.posix.join(e, `**/${hs.extname(i) ? i : `${i}${n}`}`)) : [hs.posix.join(e, `**${n ? `/*${n}` : ""}`)];
  }, "getDirectoryGlob"), VE = /* @__PURE__ */ s(async (e, {
    cwd: t = WE.cwd(),
    files: r,
    extensions: n
  } = {}) => (await Promise.all(
    e.map(async (o) => await wE(zE(o, t)) ? HE({ directoryPath: o, files: r, extensions: n }) : o)
  )).flat(), "directoryToGlob"), UE = /* @__PURE__ */ s((e, {
    cwd: t = WE.cwd(),
    files: r,
    extensions: n
  } = {}) => e.flatMap((i) => SE(zE(i, t)) ? HE({ directoryPath: i, files: r, extensions: n }) : i), "directoryToGlobSync"), Uf = /* @__PURE__ */ s(
  (e) => (e = [...new Set([e].flat())], b7(e), e), "toPatternsArray"), v7 = /* @__PURE__ */ s((e) => {
    if (!e)
      return;
    let t;
    try {
      t = x7.statSync(e);
    } catch {
      return;
    }
    if (!t.isDirectory())
      throw new Error("The `cwd` option must be a path to a directory");
  }, "checkCwdOption"), GE = /* @__PURE__ */ s((e = {}) => (e = {
    ...e,
    ignore: e.ignore ?? [],
    expandDirectories: e.expandDirectories ?? !0,
    cwd: Po(e.cwd)
  }, v7(e.cwd), e), "normalizeOptions"), JE = /* @__PURE__ */ s((e) => async (t, r) => e(Uf(t), GE(r)), "normalizeArguments"), Vu = /* @__PURE__ */ s(
  (e) => (t, r) => e(Uf(t), GE(r)), "normalizeArgumentsSync"), ZE = /* @__PURE__ */ s((e) => {
    let { ignoreFiles: t, gitignore: r } = e, n = t ? Uf(t) : [];
    return r && n.push($u), n;
  }, "getIgnoreFilesPatterns"), E7 = /* @__PURE__ */ s(async (e) => {
    let t = ZE(e);
    return KE(
      t.length > 0 && await No(t, e)
    );
  }, "getFilter"), XE = /* @__PURE__ */ s((e) => {
    let t = ZE(e);
    return KE(
      t.length > 0 && Lo(t, e)
    );
  }, "getFilterSync"), KE = /* @__PURE__ */ s((e) => {
    let t = /* @__PURE__ */ new Set();
    return (r) => {
      let n = hs.normalize(r.path ?? r);
      return t.has(n) || e && e(n) ? !1 : (t.add(n), !0);
    };
  }, "createFilterFunction"), YE = /* @__PURE__ */ s((e, t) => e.flat().filter((r) => t(r)), "unionFastGlobResults"), QE = /* @__PURE__ */ s(
  (e, t) => {
    let r = [];
    for (; e.length > 0; ) {
      let n = e.findIndex((o) => Ro(o));
      if (n === -1) {
        r.push({ patterns: e, options: t });
        break;
      }
      let i = e[n].slice(1);
      for (let o of r)
        o.options.ignore.push(i);
      n !== 0 && r.push({
        patterns: e.slice(0, n),
        options: {
          ...t,
          ignore: [
            ...t.ignore,
            i
          ]
        }
      }), e = e.slice(n + 1);
    }
    return r;
  }, "convertNegativePatterns"), e1 = /* @__PURE__ */ s((e, t) => ({
    ...t ? { cwd: t } : {},
    ...Array.isArray(e) ? { files: e } : e
  }), "normalizeExpandDirectoriesOption"), t1 = /* @__PURE__ */ s(async (e, t) => {
    let r = QE(e, t), { cwd: n, expandDirectories: i } = t;
    if (!i)
      return r;
    let o = e1(i, n);
    return Promise.all(
      r.map(async (a) => {
        let { patterns: u, options: l } = a;
        return [
          u,
          l.ignore
        ] = await Promise.all([
          VE(u, o),
          VE(l.ignore, { cwd: n })
        ]), { patterns: u, options: l };
      })
    );
  }, "generateTasks"), Wf = /* @__PURE__ */ s((e, t) => {
    let r = QE(e, t), { cwd: n, expandDirectories: i } = t;
    if (!i)
      return r;
    let o = e1(i, n);
    return r.map((a) => {
      let { patterns: u, options: l } = a;
      return u = UE(u, o), l.ignore = UE(l.ignore, { cwd: n }), { patterns: u, options: l };
    });
  }, "generateTasksSync"), C7 = JE(async (e, t) => {
    let [
      r,
      n
    ] = await Promise.all([
      t1(e, t),
      E7(t)
    ]), i = await Promise.all(r.map((o) => (0, fs.default)(o.patterns, o.options)));
    return YE(i, n);
  }), w7 = Vu((e, t) => {
    let r = Wf(e, t), n = XE(t), i = r.map((o) => fs.default.sync(o.patterns, o.options));
    return YE(i, n);
  }), S7 = Vu((e, t) => {
    let r = Wf(e, t), n = XE(t), i = r.map((a) => fs.default.stream(a.patterns, a.options));
    return Wp(i).filter((a) => n(a));
  }), A7 = Vu(
    (e, t) => e.some((r) => fs.default.isDynamicPattern(r, t))
  ), F7 = JE(t1), _7 = Vu(Wf), { convertPathToPattern: k7 } = fs.default;
});

// ../node_modules/@storybook/docs-mdx/dist/chunk-H6DQNFQR.js
function c1(e, t) {
  let r = {}, n = {}, i = -1;
  for (; ++i < e.length; )
    Object.assign(r, e[i].property), Object.assign(n, e[i].normal);
  return new jo(r, n, t);
}
function Jf(e) {
  return e.toLowerCase();
}
function xi() {
  return 2 ** ++L7;
}
function r1(e, t, r) {
  r && (e[t] = r);
}
function gs(e) {
  let t = {}, r = {}, n;
  for (n in e.properties)
    if (j7.call(e.properties, n)) {
      let i = e.properties[n], o = new Qf(
        n,
        e.transform(e.attributes || {}, n),
        i,
        e.space
      );
      e.mustUseProperty && e.mustUseProperty.includes(n) && (o.mustUseProperty = !0), t[n] = o, r[Jf(n)] = n, r[Jf(o.attribute)] = n;
    }
  return new jo(t, r, e.space);
}
function d1(e, t) {
  return t in e ? e[t] : t;
}
function m1(e, t) {
  return d1(e, t.toLowerCase());
}
function U7(e, t) {
  let r = Jf(t), n = t, i = ur;
  if (r in e.normal)
    return e.property[e.normal[r]];
  if (r.length > 4 && r.slice(0, 4) === "data" && $7.test(t)) {
    if (t.charAt(4) === "-") {
      let o = t.slice(5).replace(n1, z7);
      n = "data" + o.charAt(0).toUpperCase() + o.slice(1);
    } else {
      let o = t.slice(4);
      if (!n1.test(o)) {
        let a = o.replace(V7, W7);
        a.charAt(0) !== "-" && (a = "-" + a), t = "data" + a;
      }
    }
    i = Qf;
  }
  return new i(n, t);
}
function W7(e) {
  return "-" + e.toLowerCase();
}
function z7(e) {
  return e.charAt(1).toUpperCase();
}
function D1(e) {
  return t;
  function t(r) {
    let n = r && r.position && r.position[e] || {};
    if (typeof n.line == "number" && n.line > 0 && typeof n.column == "number" && n.column > 0)
      return {
        line: n.line,
        column: n.column,
        offset: typeof n.offset == "number" && n.offset > -1 ? n.offset : void 0
      };
  }
}
function nd(e) {
  let t = rd(e), r = td(e);
  if (t && r)
    return { start: t, end: r };
}
function J7(e, t) {
  let r = t || {};
  function n(i, ...o) {
    let a = n.invalid, u = n.handlers;
    if (i && i1.call(i, e)) {
      let l = String(i[e]);
      a = i1.call(u, l) ? u[l] : n.unknown;
    }
    if (a)
      return a.call(this, i, ...o);
  }
  return s(n, "one"), n.handlers = r.handlers || {}, n.invalid = r.invalid, n.unknown = r.unknown, n;
}
function Z7(e, t) {
  let r = { type: "Block", value: e.value };
  t.inherit(e, r), t.comments.push(r);
  let n = {
    type: "JSXEmptyExpression",
    // @ts-expect-error: `comments` is custom.
    comments: [Object.assign({}, r, { leading: !1, trailing: !0 })]
  };
  t.patch(e, n);
  let i = { type: "JSXExpressionContainer", expression: n };
  return t.patch(e, i), i;
}
function X7(e, t) {
  let r = t || {};
  return (e[e.length - 1] === "" ? [...e, ""] : e).join(
    (r.padRight ? " " : "") + "," + (r.padLeft === !1 ? "" : " ")
  ).trim();
}
function lr(e) {
  return e ? K7.test(String.fromCodePoint(e)) : !1;
}
function ys(e, t) {
  let n = (t || x1).jsx ? Q7 : Y7;
  return e ? n.test(String.fromCodePoint(e)) : !1;
}
function Ir(e, t) {
  return ((t || x1).jsx ? tL : eL).test(e);
}
function rL(e) {
  return e.join(" ").trim();
}
function uL(e, t) {
  let r = t.schema, n = r, i = e.properties || {};
  r.space === "html" && e.tagName.toLowerCase() === "svg" && (n = ed, t.schema = n);
  let o = t.all(e), a = [], u, l, c;
  for (u in i)
    if (Zf.call(i, u)) {
      let h = i[u], f = U7(n, u), d;
      if (h == null || h === !1 || typeof h == "number" && Number.isNaN(h) || !h && f.boolean)
        continue;
      if (u = t.elementAttributeNameCase === "react" && f.space ? H7[f.property] || f.property : f.attribute, Array.isArray(h) && (h = f.commaSeparated ?
      X7(h) : rL(h)), u === "style") {
        let m = typeof h == "object" ? h : lL(String(h), e.tagName);
        t.stylePropertyNameCase === "css" && (m = cL(m));
        let g = [], b;
        for (b in m)
          Zf.call(m, b) && g.push({
            type: "Property",
            method: !1,
            shorthand: !1,
            computed: !1,
            key: Ir(b) ? { type: "Identifier", name: b } : { type: "Literal", value: b },
            value: { type: "Literal", value: String(m[b]) },
            kind: "init"
          });
        c = g, d = {
          type: "JSXExpressionContainer",
          expression: { type: "ObjectExpression", properties: g }
        };
      } else if (h === !0)
        d = null;
      else if (t.tableCellAlignToStyle && aL.has(e.tagName) && u === "align") {
        l = String(h);
        continue;
      } else
        d = { type: "Literal", value: String(h) };
      Ir(u, { jsx: !0 }) ? a.push({
        type: "JSXAttribute",
        name: { type: "JSXIdentifier", name: u },
        value: d
      }) : a.push({
        type: "JSXSpreadAttribute",
        argument: {
          type: "ObjectExpression",
          properties: [
            {
              type: "Property",
              method: !1,
              shorthand: !1,
              computed: !1,
              key: { type: "Literal", value: String(u) },
              // @ts-expect-error No need to worry about `style` (which has a
              // `JSXExpressionContainer` value) because that’s a valid identifier.
              value: d || { type: "Literal", value: !0 },
              kind: "init"
            }
          ]
        }
      });
    }
  if (l !== void 0) {
    c || (c = [], a.push({
      type: "JSXAttribute",
      name: { type: "JSXIdentifier", name: "style" },
      value: {
        type: "JSXExpressionContainer",
        expression: { type: "ObjectExpression", properties: c }
      }
    }));
    let h = t.stylePropertyNameCase === "css" ? b1("textAlign") : "textAlign";
    c.push({
      type: "Property",
      method: !1,
      shorthand: !1,
      computed: !1,
      key: Ir(h) ? { type: "Identifier", name: h } : { type: "Literal", value: h },
      value: { type: "Literal", value: l },
      kind: "init"
    });
  }
  t.schema = r;
  let p = {
    type: "JSXElement",
    openingElement: {
      type: "JSXOpeningElement",
      attributes: a,
      name: t.createJsxElementName(e.tagName),
      selfClosing: o.length === 0
    },
    closingElement: o.length > 0 ? {
      type: "JSXClosingElement",
      name: t.createJsxElementName(e.tagName)
    } : null,
    children: o
  };
  return t.inherit(e, p), p;
}
function lL(e, t) {
  let r = {};
  try {
    iL(e, n);
  } catch (i) {
    let o = (
      /** @type {Error} */
      i
    );
    throw new Error(
      "Could not parse `style` attribute on `" + t + "`",
      { cause: o }
    );
  }
  return r;
  function n(i, o) {
    let a = i;
    a.slice(0, 2) !== "--" && (a.slice(0, 4) === "-ms-" && (a = "ms-" + a.slice(4)), a = a.replace(oL, pL)), r[a] = o;
  }
}
function cL(e) {
  let t = {}, r;
  for (r in e)
    Zf.call(e, r) && (t[b1(r)] = e[r]);
  return t;
}
function b1(e) {
  let t = e.replace(sL, hL);
  return t.slice(0, 3) === "ms-" && (t = "-" + t), t;
}
function pL(e, t) {
  return t.toUpperCase();
}
function hL(e) {
  return "-" + e.toLowerCase();
}
function Wu(e, t) {
  let r = t ? [...t].sort(id) : dL;
  r.length > 0 && v1(e, { comments: r, index: 0 });
}
function v1(e, t) {
  if (t.index === t.comments.length)
    return;
  let r = [], n = [], i;
  for (i in e)
    if (fL.call(e, i)) {
      let a = e[i];
      if (a && typeof a == "object" && i !== "comments")
        if (Array.isArray(a)) {
          let u = -1;
          for (; ++u < a.length; )
            a[u] && typeof a[u].type == "string" && r.push(a[u]);
        } else typeof a.type == "string" && r.push(a);
    }
  r.sort(id), n.push(...s1(t, e, !1, { leading: !0, trailing: !1 }));
  let o = -1;
  for (; ++o < r.length; )
    v1(r[o], t);
  n.push(
    ...s1(t, e, !0, {
      leading: !1,
      trailing: r.length > 0
    })
  ), n.length > 0 && (e.comments = n);
}
function s1(e, t, r, n) {
  let i = [];
  for (; e.comments[e.index] && id(e.comments[e.index], t, r) < 1; )
    i.push(Object.assign({}, e.comments[e.index++], n));
  return i;
}
function id(e, t, r) {
  let n = r ? "end" : "start";
  return e.range && t.range ? e.range[0] - t.range[r ? 1 : 0] : e.loc && e.loc.start && t.loc && t.loc[n] ? e.loc.start.line - t.loc[n].line ||
  e.loc.start.column - t.loc[n].column : "start" in e && n in t ? e.start - t[n] : Number.NaN;
}
function o1(e, t) {
  let r = e.data && e.data.estree, n = r && r.comments || [], i;
  r && (t.comments.push(...n), Wu(r, r.comments), i = r.body[0] && r.body[0].type === "ExpressionStatement" && r.body[0].expression || void 0),
  i || (i = { type: "JSXEmptyExpression" }, t.patch(e, i));
  let o = { type: "JSXExpressionContainer", expression: i };
  return t.inherit(e, o), o;
}
function a1(e, t) {
  let r = t.schema, n = r, i = e.attributes || [], o = -1;
  e.name && r.space === "html" && e.name.toLowerCase() === "svg" && (n = ed, t.schema = n);
  let a = t.all(e), u = [];
  for (; ++o < i.length; ) {
    let c = i[o], p = c.value, h;
    if (c.type === "mdxJsxAttribute") {
      if (p == null)
        h = null;
      else if (typeof p == "object") {
        let d = p.data && p.data.estree, m = d && d.comments || [], g;
        d && (t.comments.push(...m), Wu(d, d.comments), g = d.body[0] && d.body[0].type === "ExpressionStatement" && d.body[0].expression ||
        void 0), h = {
          type: "JSXExpressionContainer",
          expression: g || { type: "JSXEmptyExpression" }
        }, t.inherit(p, h);
      } else
        h = { type: "Literal", value: String(p) };
      let f = {
        type: "JSXAttribute",
        name: t.createJsxAttributeName(c.name),
        value: h
      };
      t.inherit(c, f), u.push(f);
    } else {
      let f = c.data && c.data.estree, d = f && f.comments || [], m;
      f && (t.comments.push(...d), Wu(f, f.comments), m = f.body[0] && f.body[0].type === "ExpressionStatement" && f.body[0].expression && f.
      body[0].expression.type === "ObjectExpression" && f.body[0].expression.properties && f.body[0].expression.properties[0] && f.body[0].expression.
      properties[0].type === "SpreadElement" && f.body[0].expression.properties[0].argument || void 0);
      let g = {
        type: "JSXSpreadAttribute",
        argument: m || { type: "ObjectExpression", properties: [] }
      };
      t.inherit(c, g), u.push(g);
    }
  }
  t.schema = r;
  let l = e.name ? {
    type: "JSXElement",
    openingElement: {
      type: "JSXOpeningElement",
      attributes: u,
      name: t.createJsxElementName(e.name),
      selfClosing: a.length === 0
    },
    closingElement: a.length > 0 ? {
      type: "JSXClosingElement",
      name: t.createJsxElementName(e.name)
    } : null,
    children: a
  } : {
    type: "JSXFragment",
    openingFragment: { type: "JSXOpeningFragment" },
    closingFragment: { type: "JSXClosingFragment" },
    children: a
  };
  return t.inherit(e, l), l;
}
function mL(e, t) {
  let r = e.data && e.data.estree, n = r && r.comments || [];
  r && (t.comments.push(...n), Wu(r, n), t.esm.push(...r.body));
}
function yL(e) {
  return typeof e == "object" ? e.type === "text" ? u1(e.value) : !1 : u1(e);
}
function u1(e) {
  return e.replace(gL, "") === "";
}
function DL(e, t) {
  let r = t.all(e), n = [], i = -1, o;
  for (; ++i < r.length; ) {
    let u = r[i];
    u.type === "JSXExpressionContainer" && u.expression.type === "Literal" && yL(String(u.expression.value)) ? o && o.push(u) : (o && n.push(
    ...o), n.push(u), o = []);
  }
  let a = {
    type: "JSXFragment",
    openingFragment: { type: "JSXOpeningFragment" },
    closingFragment: { type: "JSXClosingFragment" },
    children: n
  };
  return t.inherit(e, a), a;
}
function xL(e, t) {
  let r = String(e.value || "");
  if (r) {
    let n = { type: "Literal", value: r };
    t.inherit(e, n);
    let i = { type: "JSXExpressionContainer", expression: n };
    return t.patch(e, i), i;
  }
}
function vL() {
}
function wL(e) {
  let t = J7("type", {
    invalid: SL,
    unknown: AL,
    handlers: { ...bL, ...e.handlers }
  });
  return {
    // Current space.
    elementAttributeNameCase: e.elementAttributeNameCase || "react",
    schema: e.space === "svg" ? ed : G7,
    stylePropertyNameCase: e.stylePropertyNameCase || "dom",
    tableCellAlignToStyle: e.tableCellAlignToStyle !== !1,
    // Results.
    comments: [],
    esm: [],
    // Useful functions.
    all: FL,
    createJsxAttributeName: kL,
    createJsxElementName: TL,
    handle: r,
    inherit: _L,
    patch: E1
  };
  function r(n) {
    return t(n, this);
  }
}
function SL(e) {
  throw new Error("Cannot handle value `" + e + "`, expected node");
}
function AL(e) {
  throw "type" in e, new Error("Cannot handle unknown node `" + e.type + "`");
}
function FL(e) {
  let t = e.children || [], r = -1, n = [], i = this.schema.space === "html" && e.type === "element" && CL.has(e.tagName.toLowerCase());
  for (; ++r < t.length; ) {
    let o = t[r];
    if (i && o.type === "text" && o.value === `
`)
      continue;
    let a = this.handle(o);
    Array.isArray(a) ? n.push(...a) : a && n.push(a);
  }
  return n;
}
function _L(e, t) {
  let r = (
    /** @type {Record<string, unknown> | undefined} */
    e.data
  ), n, i;
  if (E1(e, t), r) {
    for (i in r)
      EL.call(r, i) && i !== "estree" && (n || (n = {}), n[i] = r[i]);
    n && (t.data = n);
  }
}
function E1(e, t) {
  let r = nd(e);
  r && r.start.offset !== void 0 && r.end.offset !== void 0 && (t.start = r.start.offset, t.end = r.end.offset, t.loc = {
    start: { line: r.start.line, column: r.start.column - 1 },
    end: { line: r.end.line, column: r.end.column - 1 }
  }, t.range = [r.start.offset, r.end.offset]);
}
function kL(e) {
  let t = C1(e);
  if (t.type === "JSXMemberExpression")
    throw new Error("Member expressions in attribute names are not supported");
  return t;
}
function TL(e) {
  return C1(e);
}
function C1(e) {
  if (e.includes(".")) {
    let t = e.split("."), r = t.shift();
    let n = { type: "JSXIdentifier", name: r };
    for (; r = t.shift(); )
      n = {
        type: "JSXMemberExpression",
        object: n,
        property: { type: "JSXIdentifier", name: r }
      };
    return n;
  }
  if (e.includes(":")) {
    let t = e.split(":");
    return {
      type: "JSXNamespacedName",
      namespace: { type: "JSXIdentifier", name: t[0] },
      name: { type: "JSXIdentifier", name: t[1] }
    };
  }
  return { type: "JSXIdentifier", name: e };
}
function Hu(e, t) {
  let r = wL(t || {}), n = r.handle(e), i = r.esm;
  if (n) {
    n.type !== "JSXFragment" && n.type !== "JSXElement" && (n = {
      type: "JSXFragment",
      openingFragment: { type: "JSXOpeningFragment" },
      closingFragment: { type: "JSXClosingFragment" },
      children: [n]
    }, r.patch(e, n));
    let a = { type: "ExpressionStatement", expression: n };
    r.patch(e, a), i.push(a);
  }
  let o = {
    type: "Program",
    body: i,
    sourceType: "module",
    comments: r.comments
  };
  return r.patch(e, o), o;
}
var T7, Xf, I7, l1, P7, B7, Kf, ms, Yf, O7, zu, R7, N7, jo, ur, Uu, L7, we, ft, p1, ee, ze, ds, Kt, Gf, Qf, j7, h1, f1, g1, y1, M7, q7, $7, n1,
V7, H7, G7, ed, td, rd, i1, K7, Y7, Q7, eL, tL, x1, nL, iL, Zf, sL, oL, aL, fL, dL, gL, bL, EL, CL, sd = Et(() => {
  T7 = Object.create, Xf = Object.defineProperty, I7 = Object.getOwnPropertyDescriptor, l1 = Object.getOwnPropertyNames, P7 = Object.getPrototypeOf,
  B7 = Object.prototype.hasOwnProperty, Kf = /* @__PURE__ */ ((e) => typeof H < "u" ? H : typeof Proxy < "u" ? new Proxy(e, {
    get: /* @__PURE__ */ s((t, r) => (typeof H < "u" ? H : t)[r], "get")
  }) : e)(function(e) {
    if (typeof H < "u")
      return H.apply(this, arguments);
    throw new Error('Dynamic require of "' + e + '" is not supported');
  }), ms = /* @__PURE__ */ s((e, t) => /* @__PURE__ */ s(function() {
    return t || (0, e[l1(e)[0]])((t = { exports: {} }).exports, t), t.exports;
  }, "__require2"), "__commonJS"), Yf = /* @__PURE__ */ s((e, t) => {
    for (var r in t)
      Xf(e, r, { get: t[r], enumerable: !0 });
  }, "__export"), O7 = /* @__PURE__ */ s((e, t, r, n) => {
    if (t && typeof t == "object" || typeof t == "function")
      for (let i of l1(t))
        !B7.call(e, i) && i !== r && Xf(e, i, { get: /* @__PURE__ */ s(() => t[i], "get"), enumerable: !(n = I7(t, i)) || n.enumerable });
    return e;
  }, "__copyProps"), zu = /* @__PURE__ */ s((e, t, r) => (r = e != null ? T7(P7(e)) : {}, O7(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    t || !e || !e.__esModule ? Xf(r, "default", { value: e, enumerable: !0 }) : r,
    e
  )), "__toESM"), R7 = ms({
    "node_modules/inline-style-parser/index.js"(e, t) {
      var r = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//g, n = /\n/g, i = /^\s*/, o = /^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/, a = /^:\s*/, u = /^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/,
      l = /^[;\s]*/, c = /^\s+|\s+$/g, p = `
`, h = "/", f = "*", d = "", m = "comment", g = "declaration";
      t.exports = function(y, E) {
        if (typeof y != "string")
          throw new TypeError("First argument must be a string");
        if (!y)
          return [];
        E = E || {};
        var A = 1, k = 1;
        function O(N) {
          var z = N.match(n);
          z && (A += z.length);
          var Q = N.lastIndexOf(p);
          k = ~Q ? N.length - Q : k + N.length;
        }
        s(O, "updatePosition");
        function w() {
          var N = { line: A, column: k };
          return function(z) {
            return z.position = new C(N), R(), z;
          };
        }
        s(w, "position2");
        function C(N) {
          this.start = N, this.end = { line: A, column: k }, this.source = E.source;
        }
        s(C, "Position"), C.prototype.content = y;
        var T = [];
        function F(N) {
          var z = new Error(
            E.source + ":" + A + ":" + k + ": " + N
          );
          if (z.reason = N, z.filename = E.source, z.line = A, z.column = k, z.source = y, E.silent)
            T.push(z);
          else
            throw z;
        }
        s(F, "error");
        function $(N) {
          var z = N.exec(y);
          if (z) {
            var Q = z[0];
            return O(Q), y = y.slice(Q.length), z;
          }
        }
        s($, "match");
        function R() {
          $(i);
        }
        s(R, "whitespace2");
        function U(N) {
          var z;
          for (N = N || []; z = W(); )
            z !== !1 && N.push(z);
          return N;
        }
        s(U, "comments");
        function W() {
          var N = w();
          if (!(h != y.charAt(0) || f != y.charAt(1))) {
            for (var z = 2; d != y.charAt(z) && (f != y.charAt(z) || h != y.charAt(z + 1)); )
              ++z;
            if (z += 2, d === y.charAt(z - 1))
              return F("End of comment missing");
            var Q = y.slice(2, z - 2);
            return k += 2, O(Q), y = y.slice(z), k += 2, N({
              type: m,
              comment: Q
            });
          }
        }
        s(W, "comment2");
        function Y() {
          var N = w(), z = $(o);
          if (z) {
            if (W(), !$(a))
              return F("property missing ':'");
            var Q = $(u), ie = N({
              type: g,
              property: b(z[0].replace(r, d)),
              value: Q ? b(Q[0].replace(r, d)) : d
            });
            return $(l), ie;
          }
        }
        s(Y, "declaration");
        function j() {
          var N = [];
          U(N);
          for (var z; z = Y(); )
            z !== !1 && (N.push(z), U(N));
          return N;
        }
        return s(j, "declarations"), R(), j();
      };
      function b(y) {
        return y ? y.replace(c, d) : d;
      }
      s(b, "trim");
    }
  }), N7 = ms({
    "node_modules/style-to-object/index.js"(e, t) {
      var r = R7();
      function n(i, o) {
        var a = null;
        if (!i || typeof i != "string")
          return a;
        for (var u, l = r(i), c = typeof o == "function", p, h, f = 0, d = l.length; f < d; f++)
          u = l[f], p = u.property, h = u.value, c ? o(p, h, u) : h && (a || (a = {}), a[p] = h);
        return a;
      }
      s(n, "StyleToObject2"), t.exports = n, t.exports.default = n;
    }
  }), jo = class {
    static {
      s(this, "Schema");
    }
    /**
     * @constructor
     * @param {Properties} property
     * @param {Normal} normal
     * @param {string} [space]
     */
    constructor(e, t, r) {
      this.property = e, this.normal = t, r && (this.space = r);
    }
  };
  jo.prototype.property = {};
  jo.prototype.normal = {};
  jo.prototype.space = null;
  s(c1, "merge");
  s(Jf, "normalize");
  ur = class {
    static {
      s(this, "Info");
    }
    /**
     * @constructor
     * @param {string} property
     * @param {string} attribute
     */
    constructor(e, t) {
      this.property = e, this.attribute = t;
    }
  };
  ur.prototype.space = null;
  ur.prototype.boolean = !1;
  ur.prototype.booleanish = !1;
  ur.prototype.overloadedBoolean = !1;
  ur.prototype.number = !1;
  ur.prototype.commaSeparated = !1;
  ur.prototype.spaceSeparated = !1;
  ur.prototype.commaOrSpaceSeparated = !1;
  ur.prototype.mustUseProperty = !1;
  ur.prototype.defined = !1;
  Uu = {};
  Yf(Uu, {
    boolean: /* @__PURE__ */ s(() => we, "boolean"),
    booleanish: /* @__PURE__ */ s(() => ft, "booleanish"),
    commaOrSpaceSeparated: /* @__PURE__ */ s(() => Kt, "commaOrSpaceSeparated"),
    commaSeparated: /* @__PURE__ */ s(() => ds, "commaSeparated"),
    number: /* @__PURE__ */ s(() => ee, "number"),
    overloadedBoolean: /* @__PURE__ */ s(() => p1, "overloadedBoolean"),
    spaceSeparated: /* @__PURE__ */ s(() => ze, "spaceSeparated")
  });
  L7 = 0, we = xi(), ft = xi(), p1 = xi(), ee = xi(), ze = xi(), ds = xi(), Kt = xi();
  s(xi, "increment");
  Gf = Object.keys(Uu), Qf = class extends ur {
    static {
      s(this, "DefinedInfo");
    }
    /**
     * @constructor
     * @param {string} property
     * @param {string} attribute
     * @param {number|null} [mask]
     * @param {string} [space]
     */
    constructor(e, t, r, n) {
      let i = -1;
      if (super(e, t), r1(this, "space", n), typeof r == "number")
        for (; ++i < Gf.length; ) {
          let o = Gf[i];
          r1(this, Gf[i], (r & Uu[o]) === Uu[o]);
        }
    }
  };
  Qf.prototype.defined = !0;
  s(r1, "mark");
  j7 = {}.hasOwnProperty;
  s(gs, "create");
  h1 = gs({
    space: "xlink",
    transform(e, t) {
      return "xlink:" + t.slice(5).toLowerCase();
    },
    properties: {
      xLinkActuate: null,
      xLinkArcRole: null,
      xLinkHref: null,
      xLinkRole: null,
      xLinkShow: null,
      xLinkTitle: null,
      xLinkType: null
    }
  }), f1 = gs({
    space: "xml",
    transform(e, t) {
      return "xml:" + t.slice(3).toLowerCase();
    },
    properties: { xmlLang: null, xmlBase: null, xmlSpace: null }
  });
  s(d1, "caseSensitiveTransform");
  s(m1, "caseInsensitiveTransform");
  g1 = gs({
    space: "xmlns",
    attributes: { xmlnsxlink: "xmlns:xlink" },
    transform: m1,
    properties: { xmlns: null, xmlnsXLink: null }
  }), y1 = gs({
    transform(e, t) {
      return t === "role" ? t : "aria-" + t.slice(4).toLowerCase();
    },
    properties: {
      ariaActiveDescendant: null,
      ariaAtomic: ft,
      ariaAutoComplete: null,
      ariaBusy: ft,
      ariaChecked: ft,
      ariaColCount: ee,
      ariaColIndex: ee,
      ariaColSpan: ee,
      ariaControls: ze,
      ariaCurrent: null,
      ariaDescribedBy: ze,
      ariaDetails: null,
      ariaDisabled: ft,
      ariaDropEffect: ze,
      ariaErrorMessage: null,
      ariaExpanded: ft,
      ariaFlowTo: ze,
      ariaGrabbed: ft,
      ariaHasPopup: null,
      ariaHidden: ft,
      ariaInvalid: null,
      ariaKeyShortcuts: null,
      ariaLabel: null,
      ariaLabelledBy: ze,
      ariaLevel: ee,
      ariaLive: null,
      ariaModal: ft,
      ariaMultiLine: ft,
      ariaMultiSelectable: ft,
      ariaOrientation: null,
      ariaOwns: ze,
      ariaPlaceholder: null,
      ariaPosInSet: ee,
      ariaPressed: ft,
      ariaReadOnly: ft,
      ariaRelevant: null,
      ariaRequired: ft,
      ariaRoleDescription: ze,
      ariaRowCount: ee,
      ariaRowIndex: ee,
      ariaRowSpan: ee,
      ariaSelected: ft,
      ariaSetSize: ee,
      ariaSort: null,
      ariaValueMax: ee,
      ariaValueMin: ee,
      ariaValueNow: ee,
      ariaValueText: null,
      role: null
    }
  }), M7 = gs({
    space: "html",
    attributes: {
      acceptcharset: "accept-charset",
      classname: "class",
      htmlfor: "for",
      httpequiv: "http-equiv"
    },
    transform: m1,
    mustUseProperty: ["checked", "multiple", "muted", "selected"],
    properties: {
      // Standard Properties.
      abbr: null,
      accept: ds,
      acceptCharset: ze,
      accessKey: ze,
      action: null,
      allow: null,
      allowFullScreen: we,
      allowPaymentRequest: we,
      allowUserMedia: we,
      alt: null,
      as: null,
      async: we,
      autoCapitalize: null,
      autoComplete: ze,
      autoFocus: we,
      autoPlay: we,
      blocking: ze,
      capture: we,
      charSet: null,
      checked: we,
      cite: null,
      className: ze,
      cols: ee,
      colSpan: null,
      content: null,
      contentEditable: ft,
      controls: we,
      controlsList: ze,
      coords: ee | ds,
      crossOrigin: null,
      data: null,
      dateTime: null,
      decoding: null,
      default: we,
      defer: we,
      dir: null,
      dirName: null,
      disabled: we,
      download: p1,
      draggable: ft,
      encType: null,
      enterKeyHint: null,
      fetchPriority: null,
      form: null,
      formAction: null,
      formEncType: null,
      formMethod: null,
      formNoValidate: we,
      formTarget: null,
      headers: ze,
      height: ee,
      hidden: we,
      high: ee,
      href: null,
      hrefLang: null,
      htmlFor: ze,
      httpEquiv: ze,
      id: null,
      imageSizes: null,
      imageSrcSet: null,
      inert: we,
      inputMode: null,
      integrity: null,
      is: null,
      isMap: we,
      itemId: null,
      itemProp: ze,
      itemRef: ze,
      itemScope: we,
      itemType: ze,
      kind: null,
      label: null,
      lang: null,
      language: null,
      list: null,
      loading: null,
      loop: we,
      low: ee,
      manifest: null,
      max: null,
      maxLength: ee,
      media: null,
      method: null,
      min: null,
      minLength: ee,
      multiple: we,
      muted: we,
      name: null,
      nonce: null,
      noModule: we,
      noValidate: we,
      onAbort: null,
      onAfterPrint: null,
      onAuxClick: null,
      onBeforeMatch: null,
      onBeforePrint: null,
      onBeforeToggle: null,
      onBeforeUnload: null,
      onBlur: null,
      onCancel: null,
      onCanPlay: null,
      onCanPlayThrough: null,
      onChange: null,
      onClick: null,
      onClose: null,
      onContextLost: null,
      onContextMenu: null,
      onContextRestored: null,
      onCopy: null,
      onCueChange: null,
      onCut: null,
      onDblClick: null,
      onDrag: null,
      onDragEnd: null,
      onDragEnter: null,
      onDragExit: null,
      onDragLeave: null,
      onDragOver: null,
      onDragStart: null,
      onDrop: null,
      onDurationChange: null,
      onEmptied: null,
      onEnded: null,
      onError: null,
      onFocus: null,
      onFormData: null,
      onHashChange: null,
      onInput: null,
      onInvalid: null,
      onKeyDown: null,
      onKeyPress: null,
      onKeyUp: null,
      onLanguageChange: null,
      onLoad: null,
      onLoadedData: null,
      onLoadedMetadata: null,
      onLoadEnd: null,
      onLoadStart: null,
      onMessage: null,
      onMessageError: null,
      onMouseDown: null,
      onMouseEnter: null,
      onMouseLeave: null,
      onMouseMove: null,
      onMouseOut: null,
      onMouseOver: null,
      onMouseUp: null,
      onOffline: null,
      onOnline: null,
      onPageHide: null,
      onPageShow: null,
      onPaste: null,
      onPause: null,
      onPlay: null,
      onPlaying: null,
      onPopState: null,
      onProgress: null,
      onRateChange: null,
      onRejectionHandled: null,
      onReset: null,
      onResize: null,
      onScroll: null,
      onScrollEnd: null,
      onSecurityPolicyViolation: null,
      onSeeked: null,
      onSeeking: null,
      onSelect: null,
      onSlotChange: null,
      onStalled: null,
      onStorage: null,
      onSubmit: null,
      onSuspend: null,
      onTimeUpdate: null,
      onToggle: null,
      onUnhandledRejection: null,
      onUnload: null,
      onVolumeChange: null,
      onWaiting: null,
      onWheel: null,
      open: we,
      optimum: ee,
      pattern: null,
      ping: ze,
      placeholder: null,
      playsInline: we,
      popover: null,
      popoverTarget: null,
      popoverTargetAction: null,
      poster: null,
      preload: null,
      readOnly: we,
      referrerPolicy: null,
      rel: ze,
      required: we,
      reversed: we,
      rows: ee,
      rowSpan: ee,
      sandbox: ze,
      scope: null,
      scoped: we,
      seamless: we,
      selected: we,
      shadowRootDelegatesFocus: we,
      shadowRootMode: null,
      shape: null,
      size: ee,
      sizes: null,
      slot: null,
      span: ee,
      spellCheck: ft,
      src: null,
      srcDoc: null,
      srcLang: null,
      srcSet: null,
      start: ee,
      step: null,
      style: null,
      tabIndex: ee,
      target: null,
      title: null,
      translate: null,
      type: null,
      typeMustMatch: we,
      useMap: null,
      value: ft,
      width: ee,
      wrap: null,
      // Legacy.
      // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis
      align: null,
      // Several. Use CSS `text-align` instead,
      aLink: null,
      // `<body>`. Use CSS `a:active {color}` instead
      archive: ze,
      // `<object>`. List of URIs to archives
      axis: null,
      // `<td>` and `<th>`. Use `scope` on `<th>`
      background: null,
      // `<body>`. Use CSS `background-image` instead
      bgColor: null,
      // `<body>` and table elements. Use CSS `background-color` instead
      border: ee,
      // `<table>`. Use CSS `border-width` instead,
      borderColor: null,
      // `<table>`. Use CSS `border-color` instead,
      bottomMargin: ee,
      // `<body>`
      cellPadding: null,
      // `<table>`
      cellSpacing: null,
      // `<table>`
      char: null,
      // Several table elements. When `align=char`, sets the character to align on
      charOff: null,
      // Several table elements. When `char`, offsets the alignment
      classId: null,
      // `<object>`
      clear: null,
      // `<br>`. Use CSS `clear` instead
      code: null,
      // `<object>`
      codeBase: null,
      // `<object>`
      codeType: null,
      // `<object>`
      color: null,
      // `<font>` and `<hr>`. Use CSS instead
      compact: we,
      // Lists. Use CSS to reduce space between items instead
      declare: we,
      // `<object>`
      event: null,
      // `<script>`
      face: null,
      // `<font>`. Use CSS instead
      frame: null,
      // `<table>`
      frameBorder: null,
      // `<iframe>`. Use CSS `border` instead
      hSpace: ee,
      // `<img>` and `<object>`
      leftMargin: ee,
      // `<body>`
      link: null,
      // `<body>`. Use CSS `a:link {color: *}` instead
      longDesc: null,
      // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`
      lowSrc: null,
      // `<img>`. Use a `<picture>`
      marginHeight: ee,
      // `<body>`
      marginWidth: ee,
      // `<body>`
      noResize: we,
      // `<frame>`
      noHref: we,
      // `<area>`. Use no href instead of an explicit `nohref`
      noShade: we,
      // `<hr>`. Use background-color and height instead of borders
      noWrap: we,
      // `<td>` and `<th>`
      object: null,
      // `<applet>`
      profile: null,
      // `<head>`
      prompt: null,
      // `<isindex>`
      rev: null,
      // `<link>`
      rightMargin: ee,
      // `<body>`
      rules: null,
      // `<table>`
      scheme: null,
      // `<meta>`
      scrolling: ft,
      // `<frame>`. Use overflow in the child context
      standby: null,
      // `<object>`
      summary: null,
      // `<table>`
      text: null,
      // `<body>`. Use CSS `color` instead
      topMargin: ee,
      // `<body>`
      valueType: null,
      // `<param>`
      version: null,
      // `<html>`. Use a doctype.
      vAlign: null,
      // Several. Use CSS `vertical-align` instead
      vLink: null,
      // `<body>`. Use CSS `a:visited {color}` instead
      vSpace: ee,
      // `<img>` and `<object>`
      // Non-standard Properties.
      allowTransparency: null,
      autoCorrect: null,
      autoSave: null,
      disablePictureInPicture: we,
      disableRemotePlayback: we,
      prefix: null,
      property: null,
      results: ee,
      security: null,
      unselectable: null
    }
  }), q7 = gs({
    space: "svg",
    attributes: {
      accentHeight: "accent-height",
      alignmentBaseline: "alignment-baseline",
      arabicForm: "arabic-form",
      baselineShift: "baseline-shift",
      capHeight: "cap-height",
      className: "class",
      clipPath: "clip-path",
      clipRule: "clip-rule",
      colorInterpolation: "color-interpolation",
      colorInterpolationFilters: "color-interpolation-filters",
      colorProfile: "color-profile",
      colorRendering: "color-rendering",
      crossOrigin: "crossorigin",
      dataType: "datatype",
      dominantBaseline: "dominant-baseline",
      enableBackground: "enable-background",
      fillOpacity: "fill-opacity",
      fillRule: "fill-rule",
      floodColor: "flood-color",
      floodOpacity: "flood-opacity",
      fontFamily: "font-family",
      fontSize: "font-size",
      fontSizeAdjust: "font-size-adjust",
      fontStretch: "font-stretch",
      fontStyle: "font-style",
      fontVariant: "font-variant",
      fontWeight: "font-weight",
      glyphName: "glyph-name",
      glyphOrientationHorizontal: "glyph-orientation-horizontal",
      glyphOrientationVertical: "glyph-orientation-vertical",
      hrefLang: "hreflang",
      horizAdvX: "horiz-adv-x",
      horizOriginX: "horiz-origin-x",
      horizOriginY: "horiz-origin-y",
      imageRendering: "image-rendering",
      letterSpacing: "letter-spacing",
      lightingColor: "lighting-color",
      markerEnd: "marker-end",
      markerMid: "marker-mid",
      markerStart: "marker-start",
      navDown: "nav-down",
      navDownLeft: "nav-down-left",
      navDownRight: "nav-down-right",
      navLeft: "nav-left",
      navNext: "nav-next",
      navPrev: "nav-prev",
      navRight: "nav-right",
      navUp: "nav-up",
      navUpLeft: "nav-up-left",
      navUpRight: "nav-up-right",
      onAbort: "onabort",
      onActivate: "onactivate",
      onAfterPrint: "onafterprint",
      onBeforePrint: "onbeforeprint",
      onBegin: "onbegin",
      onCancel: "oncancel",
      onCanPlay: "oncanplay",
      onCanPlayThrough: "oncanplaythrough",
      onChange: "onchange",
      onClick: "onclick",
      onClose: "onclose",
      onCopy: "oncopy",
      onCueChange: "oncuechange",
      onCut: "oncut",
      onDblClick: "ondblclick",
      onDrag: "ondrag",
      onDragEnd: "ondragend",
      onDragEnter: "ondragenter",
      onDragExit: "ondragexit",
      onDragLeave: "ondragleave",
      onDragOver: "ondragover",
      onDragStart: "ondragstart",
      onDrop: "ondrop",
      onDurationChange: "ondurationchange",
      onEmptied: "onemptied",
      onEnd: "onend",
      onEnded: "onended",
      onError: "onerror",
      onFocus: "onfocus",
      onFocusIn: "onfocusin",
      onFocusOut: "onfocusout",
      onHashChange: "onhashchange",
      onInput: "oninput",
      onInvalid: "oninvalid",
      onKeyDown: "onkeydown",
      onKeyPress: "onkeypress",
      onKeyUp: "onkeyup",
      onLoad: "onload",
      onLoadedData: "onloadeddata",
      onLoadedMetadata: "onloadedmetadata",
      onLoadStart: "onloadstart",
      onMessage: "onmessage",
      onMouseDown: "onmousedown",
      onMouseEnter: "onmouseenter",
      onMouseLeave: "onmouseleave",
      onMouseMove: "onmousemove",
      onMouseOut: "onmouseout",
      onMouseOver: "onmouseover",
      onMouseUp: "onmouseup",
      onMouseWheel: "onmousewheel",
      onOffline: "onoffline",
      onOnline: "ononline",
      onPageHide: "onpagehide",
      onPageShow: "onpageshow",
      onPaste: "onpaste",
      onPause: "onpause",
      onPlay: "onplay",
      onPlaying: "onplaying",
      onPopState: "onpopstate",
      onProgress: "onprogress",
      onRateChange: "onratechange",
      onRepeat: "onrepeat",
      onReset: "onreset",
      onResize: "onresize",
      onScroll: "onscroll",
      onSeeked: "onseeked",
      onSeeking: "onseeking",
      onSelect: "onselect",
      onShow: "onshow",
      onStalled: "onstalled",
      onStorage: "onstorage",
      onSubmit: "onsubmit",
      onSuspend: "onsuspend",
      onTimeUpdate: "ontimeupdate",
      onToggle: "ontoggle",
      onUnload: "onunload",
      onVolumeChange: "onvolumechange",
      onWaiting: "onwaiting",
      onZoom: "onzoom",
      overlinePosition: "overline-position",
      overlineThickness: "overline-thickness",
      paintOrder: "paint-order",
      panose1: "panose-1",
      pointerEvents: "pointer-events",
      referrerPolicy: "referrerpolicy",
      renderingIntent: "rendering-intent",
      shapeRendering: "shape-rendering",
      stopColor: "stop-color",
      stopOpacity: "stop-opacity",
      strikethroughPosition: "strikethrough-position",
      strikethroughThickness: "strikethrough-thickness",
      strokeDashArray: "stroke-dasharray",
      strokeDashOffset: "stroke-dashoffset",
      strokeLineCap: "stroke-linecap",
      strokeLineJoin: "stroke-linejoin",
      strokeMiterLimit: "stroke-miterlimit",
      strokeOpacity: "stroke-opacity",
      strokeWidth: "stroke-width",
      tabIndex: "tabindex",
      textAnchor: "text-anchor",
      textDecoration: "text-decoration",
      textRendering: "text-rendering",
      transformOrigin: "transform-origin",
      typeOf: "typeof",
      underlinePosition: "underline-position",
      underlineThickness: "underline-thickness",
      unicodeBidi: "unicode-bidi",
      unicodeRange: "unicode-range",
      unitsPerEm: "units-per-em",
      vAlphabetic: "v-alphabetic",
      vHanging: "v-hanging",
      vIdeographic: "v-ideographic",
      vMathematical: "v-mathematical",
      vectorEffect: "vector-effect",
      vertAdvY: "vert-adv-y",
      vertOriginX: "vert-origin-x",
      vertOriginY: "vert-origin-y",
      wordSpacing: "word-spacing",
      writingMode: "writing-mode",
      xHeight: "x-height",
      // These were camelcased in Tiny. Now lowercased in SVG 2
      playbackOrder: "playbackorder",
      timelineBegin: "timelinebegin"
    },
    transform: d1,
    properties: {
      about: Kt,
      accentHeight: ee,
      accumulate: null,
      additive: null,
      alignmentBaseline: null,
      alphabetic: ee,
      amplitude: ee,
      arabicForm: null,
      ascent: ee,
      attributeName: null,
      attributeType: null,
      azimuth: ee,
      bandwidth: null,
      baselineShift: null,
      baseFrequency: null,
      baseProfile: null,
      bbox: null,
      begin: null,
      bias: ee,
      by: null,
      calcMode: null,
      capHeight: ee,
      className: ze,
      clip: null,
      clipPath: null,
      clipPathUnits: null,
      clipRule: null,
      color: null,
      colorInterpolation: null,
      colorInterpolationFilters: null,
      colorProfile: null,
      colorRendering: null,
      content: null,
      contentScriptType: null,
      contentStyleType: null,
      crossOrigin: null,
      cursor: null,
      cx: null,
      cy: null,
      d: null,
      dataType: null,
      defaultAction: null,
      descent: ee,
      diffuseConstant: ee,
      direction: null,
      display: null,
      dur: null,
      divisor: ee,
      dominantBaseline: null,
      download: we,
      dx: null,
      dy: null,
      edgeMode: null,
      editable: null,
      elevation: ee,
      enableBackground: null,
      end: null,
      event: null,
      exponent: ee,
      externalResourcesRequired: null,
      fill: null,
      fillOpacity: ee,
      fillRule: null,
      filter: null,
      filterRes: null,
      filterUnits: null,
      floodColor: null,
      floodOpacity: null,
      focusable: null,
      focusHighlight: null,
      fontFamily: null,
      fontSize: null,
      fontSizeAdjust: null,
      fontStretch: null,
      fontStyle: null,
      fontVariant: null,
      fontWeight: null,
      format: null,
      fr: null,
      from: null,
      fx: null,
      fy: null,
      g1: ds,
      g2: ds,
      glyphName: ds,
      glyphOrientationHorizontal: null,
      glyphOrientationVertical: null,
      glyphRef: null,
      gradientTransform: null,
      gradientUnits: null,
      handler: null,
      hanging: ee,
      hatchContentUnits: null,
      hatchUnits: null,
      height: null,
      href: null,
      hrefLang: null,
      horizAdvX: ee,
      horizOriginX: ee,
      horizOriginY: ee,
      id: null,
      ideographic: ee,
      imageRendering: null,
      initialVisibility: null,
      in: null,
      in2: null,
      intercept: ee,
      k: ee,
      k1: ee,
      k2: ee,
      k3: ee,
      k4: ee,
      kernelMatrix: Kt,
      kernelUnitLength: null,
      keyPoints: null,
      // SEMI_COLON_SEPARATED
      keySplines: null,
      // SEMI_COLON_SEPARATED
      keyTimes: null,
      // SEMI_COLON_SEPARATED
      kerning: null,
      lang: null,
      lengthAdjust: null,
      letterSpacing: null,
      lightingColor: null,
      limitingConeAngle: ee,
      local: null,
      markerEnd: null,
      markerMid: null,
      markerStart: null,
      markerHeight: null,
      markerUnits: null,
      markerWidth: null,
      mask: null,
      maskContentUnits: null,
      maskUnits: null,
      mathematical: null,
      max: null,
      media: null,
      mediaCharacterEncoding: null,
      mediaContentEncodings: null,
      mediaSize: ee,
      mediaTime: null,
      method: null,
      min: null,
      mode: null,
      name: null,
      navDown: null,
      navDownLeft: null,
      navDownRight: null,
      navLeft: null,
      navNext: null,
      navPrev: null,
      navRight: null,
      navUp: null,
      navUpLeft: null,
      navUpRight: null,
      numOctaves: null,
      observer: null,
      offset: null,
      onAbort: null,
      onActivate: null,
      onAfterPrint: null,
      onBeforePrint: null,
      onBegin: null,
      onCancel: null,
      onCanPlay: null,
      onCanPlayThrough: null,
      onChange: null,
      onClick: null,
      onClose: null,
      onCopy: null,
      onCueChange: null,
      onCut: null,
      onDblClick: null,
      onDrag: null,
      onDragEnd: null,
      onDragEnter: null,
      onDragExit: null,
      onDragLeave: null,
      onDragOver: null,
      onDragStart: null,
      onDrop: null,
      onDurationChange: null,
      onEmptied: null,
      onEnd: null,
      onEnded: null,
      onError: null,
      onFocus: null,
      onFocusIn: null,
      onFocusOut: null,
      onHashChange: null,
      onInput: null,
      onInvalid: null,
      onKeyDown: null,
      onKeyPress: null,
      onKeyUp: null,
      onLoad: null,
      onLoadedData: null,
      onLoadedMetadata: null,
      onLoadStart: null,
      onMessage: null,
      onMouseDown: null,
      onMouseEnter: null,
      onMouseLeave: null,
      onMouseMove: null,
      onMouseOut: null,
      onMouseOver: null,
      onMouseUp: null,
      onMouseWheel: null,
      onOffline: null,
      onOnline: null,
      onPageHide: null,
      onPageShow: null,
      onPaste: null,
      onPause: null,
      onPlay: null,
      onPlaying: null,
      onPopState: null,
      onProgress: null,
      onRateChange: null,
      onRepeat: null,
      onReset: null,
      onResize: null,
      onScroll: null,
      onSeeked: null,
      onSeeking: null,
      onSelect: null,
      onShow: null,
      onStalled: null,
      onStorage: null,
      onSubmit: null,
      onSuspend: null,
      onTimeUpdate: null,
      onToggle: null,
      onUnload: null,
      onVolumeChange: null,
      onWaiting: null,
      onZoom: null,
      opacity: null,
      operator: null,
      order: null,
      orient: null,
      orientation: null,
      origin: null,
      overflow: null,
      overlay: null,
      overlinePosition: ee,
      overlineThickness: ee,
      paintOrder: null,
      panose1: null,
      path: null,
      pathLength: ee,
      patternContentUnits: null,
      patternTransform: null,
      patternUnits: null,
      phase: null,
      ping: ze,
      pitch: null,
      playbackOrder: null,
      pointerEvents: null,
      points: null,
      pointsAtX: ee,
      pointsAtY: ee,
      pointsAtZ: ee,
      preserveAlpha: null,
      preserveAspectRatio: null,
      primitiveUnits: null,
      propagate: null,
      property: Kt,
      r: null,
      radius: null,
      referrerPolicy: null,
      refX: null,
      refY: null,
      rel: Kt,
      rev: Kt,
      renderingIntent: null,
      repeatCount: null,
      repeatDur: null,
      requiredExtensions: Kt,
      requiredFeatures: Kt,
      requiredFonts: Kt,
      requiredFormats: Kt,
      resource: null,
      restart: null,
      result: null,
      rotate: null,
      rx: null,
      ry: null,
      scale: null,
      seed: null,
      shapeRendering: null,
      side: null,
      slope: null,
      snapshotTime: null,
      specularConstant: ee,
      specularExponent: ee,
      spreadMethod: null,
      spacing: null,
      startOffset: null,
      stdDeviation: null,
      stemh: null,
      stemv: null,
      stitchTiles: null,
      stopColor: null,
      stopOpacity: null,
      strikethroughPosition: ee,
      strikethroughThickness: ee,
      string: null,
      stroke: null,
      strokeDashArray: Kt,
      strokeDashOffset: null,
      strokeLineCap: null,
      strokeLineJoin: null,
      strokeMiterLimit: ee,
      strokeOpacity: ee,
      strokeWidth: null,
      style: null,
      surfaceScale: ee,
      syncBehavior: null,
      syncBehaviorDefault: null,
      syncMaster: null,
      syncTolerance: null,
      syncToleranceDefault: null,
      systemLanguage: Kt,
      tabIndex: ee,
      tableValues: null,
      target: null,
      targetX: ee,
      targetY: ee,
      textAnchor: null,
      textDecoration: null,
      textRendering: null,
      textLength: null,
      timelineBegin: null,
      title: null,
      transformBehavior: null,
      type: null,
      typeOf: Kt,
      to: null,
      transform: null,
      transformOrigin: null,
      u1: null,
      u2: null,
      underlinePosition: ee,
      underlineThickness: ee,
      unicode: null,
      unicodeBidi: null,
      unicodeRange: null,
      unitsPerEm: ee,
      values: null,
      vAlphabetic: ee,
      vMathematical: ee,
      vectorEffect: null,
      vHanging: ee,
      vIdeographic: ee,
      version: null,
      vertAdvY: ee,
      vertOriginX: ee,
      vertOriginY: ee,
      viewBox: null,
      viewTarget: null,
      visibility: null,
      width: null,
      widths: null,
      wordSpacing: null,
      writingMode: null,
      x: null,
      x1: null,
      x2: null,
      xChannelSelector: null,
      xHeight: ee,
      y: null,
      y1: null,
      y2: null,
      yChannelSelector: null,
      z: null,
      zoomAndPan: null
    }
  }), $7 = /^data[-\w.:]+$/i, n1 = /-[a-z]/g, V7 = /[A-Z]/g;
  s(U7, "find");
  s(W7, "kebab");
  s(z7, "camelcase");
  H7 = {
    classId: "classID",
    dataType: "datatype",
    itemId: "itemID",
    strokeDashArray: "strokeDasharray",
    strokeDashOffset: "strokeDashoffset",
    strokeLineCap: "strokeLinecap",
    strokeLineJoin: "strokeLinejoin",
    strokeMiterLimit: "strokeMiterlimit",
    typeOf: "typeof",
    xLinkActuate: "xlinkActuate",
    xLinkArcRole: "xlinkArcrole",
    xLinkHref: "xlinkHref",
    xLinkRole: "xlinkRole",
    xLinkShow: "xlinkShow",
    xLinkTitle: "xlinkTitle",
    xLinkType: "xlinkType",
    xmlnsXLink: "xmlnsXlink"
  }, G7 = c1([f1, h1, g1, y1, M7], "html"), ed = c1([f1, h1, g1, y1, q7], "svg"), td = D1("end"), rd = D1("start");
  s(D1, "point");
  s(nd, "position");
  i1 = {}.hasOwnProperty;
  s(J7, "zwitch");
  s(Z7, "comment");
  s(X7, "stringify");
  K7 = /[$_\p{ID_Start}]/u, Y7 = /[$_\u{200C}\u{200D}\p{ID_Continue}]/u, Q7 = /[-$_\u{200C}\u{200D}\p{ID_Continue}]/u, eL = /^[$_\p{ID_Start}][$_\u{200C}\u{200D}\p{ID_Continue}]*$/u,
  tL = /^[$_\p{ID_Start}][-$_\u{200C}\u{200D}\p{ID_Continue}]*$/u, x1 = {};
  s(lr, "start");
  s(ys, "cont");
  s(Ir, "name");
  s(rL, "stringify2");
  nL = zu(N7(), 1), iL = nL.default, Zf = {}.hasOwnProperty, sL = /[A-Z]/g, oL = /-([a-z])/g, aL = /* @__PURE__ */ new Set(["td", "th"]);
  s(uL, "element");
  s(lL, "parseStyle");
  s(cL, "transformStylesToCssCasing");
  s(b1, "transformStyleToCssCasing");
  s(pL, "toCamel");
  s(hL, "toDash");
  fL = {}.hasOwnProperty, dL = [];
  s(Wu, "attachComments");
  s(v1, "walk");
  s(s1, "slice");
  s(id, "compare");
  s(o1, "mdxExpression");
  s(a1, "mdxJsxElement");
  s(mL, "mdxjsEsm");
  gL = /[ \t\n\f\r]/g;
  s(yL, "whitespace");
  s(u1, "empty");
  s(DL, "root");
  s(xL, "text");
  bL = {
    comment: Z7,
    doctype: vL,
    element: uL,
    mdxFlowExpression: o1,
    mdxJsxFlowElement: a1,
    mdxJsxTextElement: a1,
    mdxTextExpression: o1,
    mdxjsEsm: mL,
    root: DL,
    text: xL
  };
  s(vL, "ignore");
  EL = {}.hasOwnProperty, CL = /* @__PURE__ */ new Set(["table", "tbody", "thead", "tfoot", "tr"]);
  s(wL, "createState");
  s(SL, "invalid");
  s(AL, "unknown");
  s(FL, "all");
  s(_L, "inherit");
  s(E1, "patch");
  s(kL, "createJsxAttributeName");
  s(TL, "createJsxElementName");
  s(C1, "createJsxNameFromString");
  s(Hu, "toEstree");
});

// ../node_modules/@storybook/docs-mdx/node_modules/acorn/dist/acorn.mjs
function ld(e, t) {
  for (var r = 65536, n = 0; n < t.length; n += 2) {
    if (r += t[n], r > e)
      return !1;
    if (r += t[n + 1], r >= e)
      return !0;
  }
  return !1;
}
function mn(e, t) {
  return e < 65 ? e === 36 : e < 91 ? !0 : e < 97 ? e === 95 : e < 123 ? !0 : e <= 65535 ? e >= 170 && RL.test(String.fromCharCode(e)) : t ===
  !1 ? !1 : ld(e, k1);
}
function Ds(e, t) {
  return e < 48 ? e === 36 : e < 58 ? !0 : e < 65 ? !1 : e < 91 ? !0 : e < 97 ? e === 95 : e < 123 ? !0 : e <= 65535 ? e >= 170 && NL.test(String.
  fromCharCode(e)) : t === !1 ? !1 : ld(e, k1) || ld(e, IL);
}
function cr(e, t) {
  return new Ne(e, { beforeExpr: !0, binop: t });
}
function Oe(e, t) {
  return t === void 0 && (t = {}), t.keyword = e, fd[e] = new Ne(e, t);
}
function xs(e) {
  return e === 10 || e === 13 || e === 8232 || e === 8233;
}
function I1(e, t, r) {
  r === void 0 && (r = e.length);
  for (var n = t; n < r; n++) {
    var i = e.charCodeAt(n);
    if (xs(i))
      return n < r - 1 && i === 13 && e.charCodeAt(n + 1) === 10 ? n + 2 : n + 1;
  }
  return -1;
}
function Vn(e) {
  return S1[e] || (S1[e] = new RegExp("^(?:" + e.replace(/ /g, "|") + ")$"));
}
function gn(e) {
  return e <= 65535 ? String.fromCharCode(e) : (e -= 65536, String.fromCharCode((e >> 10) + 55296, (e & 1023) + 56320));
}
function O1(e, t) {
  for (var r = 1, n = 0; ; ) {
    var i = I1(e, n, t);
    if (i < 0)
      return new qo(r, t - n);
    ++r, n = i;
  }
}
function $L(e) {
  var t = {};
  for (var r in cd)
    t[r] = e && bs(e, r) ? e[r] : cd[r];
  if (t.ecmaVersion === "latest" ? t.ecmaVersion = 1e8 : t.ecmaVersion == null ? (!A1 && typeof console == "object" && console.warn && (A1 =
  !0, console.warn(`Since Acorn 8.0.0, options.ecmaVersion is required.
Defaulting to 2020, but this will stop working in the future.`)), t.ecmaVersion = 11) : t.ecmaVersion >= 2015 && (t.ecmaVersion -= 2009), t.
  allowReserved == null && (t.allowReserved = t.ecmaVersion < 5), (!e || e.allowHashBang == null) && (t.allowHashBang = t.ecmaVersion >= 14),
  w1(t.onToken)) {
    var n = t.onToken;
    t.onToken = function(i) {
      return n.push(i);
    };
  }
  return w1(t.onComment) && (t.onComment = VL(t, t.onComment)), t;
}
function VL(e, t) {
  return function(r, n, i, o, a, u) {
    var l = {
      type: r ? "Block" : "Line",
      value: n,
      start: i,
      end: o
    };
    e.locations && (l.loc = new Yu(this, a, u)), e.ranges && (l.range = [i, o]), t.push(l);
  };
}
function gd(e, t) {
  return vs | (e ? dd : 0) | (t ? R1 : 0);
}
function HL(e, t) {
  var r = t.key.name, n = e[r], i = "true";
  return t.type === "MethodDefinition" && (t.kind === "get" || t.kind === "set") && (i = (t.static ? "s" : "i") + t.kind), n === "iget" && i ===
  "iset" || n === "iset" && i === "iget" || n === "sget" && i === "sset" || n === "sset" && i === "sget" ? (e[r] = "true", !1) : n ? !0 : (e[r] =
  i, !1);
}
function Zu(e, t) {
  var r = e.computed, n = e.key;
  return !r && (n.type === "Identifier" && n.name === t || n.type === "Literal" && n.value === t);
}
function V1(e) {
  return e.type === "Identifier" || e.type === "ParenthesizedExpression" && V1(e.expression);
}
function hd(e) {
  return e.type === "MemberExpression" && e.property.type === "PrivateIdentifier" || e.type === "ChainExpression" && hd(e.expression) || e.type ===
  "ParenthesizedExpression" && hd(e.expression);
}
function U1(e, t, r, n) {
  return e.type = t, e.end = r, this.options.locations && (e.loc.end = n), this.options.ranges && (e.range[1] = r), e;
}
function rj(e) {
  var t = eC[e] = {
    binary: Vn(KL[e] + " " + F1),
    binaryOfStrings: Vn(QL[e]),
    nonBinary: {
      General_Category: Vn(F1),
      Script: Vn(tj[e])
    }
  };
  t.nonBinary.Script_Extensions = t.nonBinary.Script, t.nonBinary.gc = t.nonBinary.General_Category, t.nonBinary.sc = t.nonBinary.Script, t.
  nonBinary.scx = t.nonBinary.Script_Extensions;
}
function nj(e) {
  for (var t in e)
    return !0;
  return !1;
}
function ij(e) {
  return e === 105 || e === 109 || e === 115;
}
function tC(e) {
  return e === 36 || e >= 40 && e <= 43 || e === 46 || e === 63 || e >= 91 && e <= 94 || e >= 123 && e <= 125;
}
function sj(e) {
  return mn(e, !0) || e === 36 || e === 95;
}
function oj(e) {
  return Ds(e, !0) || e === 36 || e === 95 || e === 8204 || e === 8205;
}
function rC(e) {
  return e >= 65 && e <= 90 || e >= 97 && e <= 122;
}
function aj(e) {
  return e >= 0 && e <= 1114111;
}
function uj(e) {
  return e === 100 || e === 68 || e === 115 || e === 83 || e === 119 || e === 87;
}
function iC(e) {
  return rC(e) || e === 95;
}
function lj(e) {
  return iC(e) || nl(e);
}
function cj(e) {
  return e === 33 || e >= 35 && e <= 38 || e >= 42 && e <= 44 || e === 46 || e >= 58 && e <= 64 || e === 94 || e === 96 || e === 126;
}
function pj(e) {
  return e === 40 || e === 41 || e === 45 || e === 47 || e >= 91 && e <= 93 || e >= 123 && e <= 125;
}
function hj(e) {
  return e === 33 || e === 35 || e === 37 || e === 38 || e === 44 || e === 45 || e >= 58 && e <= 62 || e === 64 || e === 96 || e === 126;
}
function nl(e) {
  return e >= 48 && e <= 57;
}
function sC(e) {
  return e >= 48 && e <= 57 || e >= 65 && e <= 70 || e >= 97 && e <= 102;
}
function oC(e) {
  return e >= 65 && e <= 70 ? 10 + (e - 65) : e >= 97 && e <= 102 ? 10 + (e - 97) : e - 48;
}
function aC(e) {
  return e >= 48 && e <= 55;
}
function fj(e, t) {
  return t ? parseInt(e, 8) : parseFloat(e.replace(/_/g, ""));
}
function uC(e) {
  return typeof BigInt != "function" ? null : BigInt(e.replace(/_/g, ""));
}
var IL, k1, PL, T1, od, ad, BL, OL, RL, NL, Ne, pr, $t, fd, S, dr, LL, P1, hr, B1, jL, ML, bs, w1, S1, qL, qo, Yu, cd, A1, $o, vs, dd, R1, md,
N1, Qu, L1, bi, Vo, el, Ju, yd, Dn, j1, M1, q1, dt, Gr, Pt, UL, tl, ae, Dd, WL, zL, Mo, pd, $1, mr, Pr, Qe, Es, xe, GL, Xu, Un, JL, rl, Uo, ZL,
W1, z1, H1, G1, J1, XL, KL, YL, QL, F1, Z1, X1, K1, Y1, Q1, ej, tj, eC, _1, Gu, ud, oe, Ku, Jr, nC, yn, fr, xd, Be, lC, dj, cC = Et(() => {
  IL = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 7, 9, 32, 4, 318, 1, 80, 3, 71, 10, 50, 3, 123,
  2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158,
  11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 68, 8, 2, 0, 3, 0, 2, 3, 2, 4, 2, 0, 15, 1, 83, 17, 10, 9, 5, 0, 82, 19,
  13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 7, 19, 58, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6,
  3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 343, 9, 54, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49,
  4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 10, 5350, 0, 7, 14, 11465, 27, 2343, 9, 87, 9, 39, 4, 60, 6, 26, 9, 535, 9, 470,
  0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4178, 9, 519, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15,
  0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 245, 1, 2, 9, 726, 6, 110, 6, 6, 9, 4759,
  9, 787719, 239], k1 = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7,
  2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 4, 51, 13, 310, 10, 21, 11, 7, 25, 5, 2, 41,
  2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28,
  4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 39, 27, 10, 22, 251, 41, 7, 1, 17, 2, 60, 28, 11, 0,
  9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2,
  24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 31, 9, 2, 0, 3, 0, 2, 37, 2, 0,
  26, 0, 2, 0, 45, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32,
  7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 200, 32, 32, 8, 2, 36,
  18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637,
  96, 16, 1071, 18, 5, 26, 3994, 6, 582, 6842, 29, 1763, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 433, 44, 212, 63, 129, 74,
  6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 42, 9, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8,
  8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2,
  24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27,
  229, 29, 3, 0, 496, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0,
  2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719,
  33, 4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191], PL = "\u200C\u200D\xB7\u0300-\u036F\u0387\u0483-\u0487\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u0669\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u06F0-\u06F9\u0711\u0730-\u074A\u07A6-\u07B0\u07C0-\u07C9\u07EB-\u07F3\
\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u0897-\u089F\u08CA-\u08E1\u08E3-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0966-\u096F\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u09E6-\u09EF\u09FE\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A66-\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0AE6-\u0AEF\u0AFA-\u0AFF\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B66-\u0B6F\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0BE6-\u0BEF\u0C00-\u0C04\u0C3C\u0C3E-\u0C44\u0C46-\u0C48\
\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0CE6-\u0CEF\u0CF3\u0D00-\u0D03\u0D3B\u0D3C\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D66-\u0D6F\u0D81-\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0E50-\u0E59\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECE\u0ED0-\u0ED9\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1040-\u1049\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F-\u109D\u135D-\u135F\u1369\
-\u1371\u1712-\u1715\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u17E0-\u17E9\u180B-\u180D\u180F-\u1819\u18A9\u1920-\u192B\u1930-\u193B\u1946-\u194F\u19D0-\u19DA\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AB0-\u1ABD\u1ABF-\u1ACE\u1B00-\u1B04\u1B34-\u1B44\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BB0-\u1BB9\u1BE6-\u1BF3\u1C24-\u1C37\u1C40-\u1C49\u1C50-\u1C59\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF4\u1CF7-\u1CF9\u1DC0-\u1DFF\u200C\u200D\u203F\u2040\u2054\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\u30FB\uA620-\uA629\uA66F\uA674-\uA67D\uA69E\uA69F\
\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA82C\uA880\uA881\uA8B4-\uA8C5\uA8D0-\uA8D9\uA8E0-\uA8F1\uA8FF-\uA909\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9D0-\uA9D9\uA9E5\uA9F0-\uA9F9\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA50-\uAA59\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uABF0-\uABF9\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFF10-\uFF19\uFF3F\uFF65",
  T1 = "\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\
\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\
\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\
\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C8A\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18\
-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\
\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CD\uA7D0\uA7D1\uA7D3\uA7D5-\uA7DC\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\
\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC",
  od = {
    3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package pri\
vate protected public short static super synchronized throws transient volatile",
    5: "class enum extends super const export import",
    6: "enum",
    strict: "implements interface let package private protected public static yield",
    strictBind: "eval arguments"
  }, ad = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false\
 instanceof typeof void delete new in this", BL = {
    5: ad,
    "5module": ad + " export import",
    6: ad + " const class extends export import super"
  }, OL = /^in(stanceof)?$/, RL = new RegExp("[" + T1 + "]"), NL = new RegExp("[" + T1 + PL + "]");
  s(ld, "isInAstralSet");
  s(mn, "isIdentifierStart");
  s(Ds, "isIdentifierChar");
  Ne = /* @__PURE__ */ s(function(t, r) {
    r === void 0 && (r = {}), this.label = t, this.keyword = r.keyword, this.beforeExpr = !!r.beforeExpr, this.startsExpr = !!r.startsExpr, this.
    isLoop = !!r.isLoop, this.isAssign = !!r.isAssign, this.prefix = !!r.prefix, this.postfix = !!r.postfix, this.binop = r.binop || null, this.
    updateContext = null;
  }, "TokenType");
  s(cr, "binop");
  pr = { beforeExpr: !0 }, $t = { startsExpr: !0 }, fd = {};
  s(Oe, "kw");
  S = {
    num: new Ne("num", $t),
    regexp: new Ne("regexp", $t),
    string: new Ne("string", $t),
    name: new Ne("name", $t),
    privateId: new Ne("privateId", $t),
    eof: new Ne("eof"),
    // Punctuation token types.
    bracketL: new Ne("[", { beforeExpr: !0, startsExpr: !0 }),
    bracketR: new Ne("]"),
    braceL: new Ne("{", { beforeExpr: !0, startsExpr: !0 }),
    braceR: new Ne("}"),
    parenL: new Ne("(", { beforeExpr: !0, startsExpr: !0 }),
    parenR: new Ne(")"),
    comma: new Ne(",", pr),
    semi: new Ne(";", pr),
    colon: new Ne(":", pr),
    dot: new Ne("."),
    question: new Ne("?", pr),
    questionDot: new Ne("?."),
    arrow: new Ne("=>", pr),
    template: new Ne("template"),
    invalidTemplate: new Ne("invalidTemplate"),
    ellipsis: new Ne("...", pr),
    backQuote: new Ne("`", $t),
    dollarBraceL: new Ne("${", { beforeExpr: !0, startsExpr: !0 }),
    // Operators. These carry several kinds of properties to help the
    // parser use them properly (the presence of these properties is
    // what categorizes them as operators).
    //
    // `binop`, when present, specifies that this operator is a binary
    // operator, and will refer to its precedence.
    //
    // `prefix` and `postfix` mark the operator as a prefix or postfix
    // unary operator.
    //
    // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as
    // binary operators with a very low precedence, that should result
    // in AssignmentExpression nodes.
    eq: new Ne("=", { beforeExpr: !0, isAssign: !0 }),
    assign: new Ne("_=", { beforeExpr: !0, isAssign: !0 }),
    incDec: new Ne("++/--", { prefix: !0, postfix: !0, startsExpr: !0 }),
    prefix: new Ne("!/~", { beforeExpr: !0, prefix: !0, startsExpr: !0 }),
    logicalOR: cr("||", 1),
    logicalAND: cr("&&", 2),
    bitwiseOR: cr("|", 3),
    bitwiseXOR: cr("^", 4),
    bitwiseAND: cr("&", 5),
    equality: cr("==/!=/===/!==", 6),
    relational: cr("</>/<=/>=", 7),
    bitShift: cr("<</>>/>>>", 8),
    plusMin: new Ne("+/-", { beforeExpr: !0, binop: 9, prefix: !0, startsExpr: !0 }),
    modulo: cr("%", 10),
    star: cr("*", 10),
    slash: cr("/", 10),
    starstar: new Ne("**", { beforeExpr: !0 }),
    coalesce: cr("??", 1),
    // Keyword token types.
    _break: Oe("break"),
    _case: Oe("case", pr),
    _catch: Oe("catch"),
    _continue: Oe("continue"),
    _debugger: Oe("debugger"),
    _default: Oe("default", pr),
    _do: Oe("do", { isLoop: !0, beforeExpr: !0 }),
    _else: Oe("else", pr),
    _finally: Oe("finally"),
    _for: Oe("for", { isLoop: !0 }),
    _function: Oe("function", $t),
    _if: Oe("if"),
    _return: Oe("return", pr),
    _switch: Oe("switch"),
    _throw: Oe("throw", pr),
    _try: Oe("try"),
    _var: Oe("var"),
    _const: Oe("const"),
    _while: Oe("while", { isLoop: !0 }),
    _with: Oe("with"),
    _new: Oe("new", { beforeExpr: !0, startsExpr: !0 }),
    _this: Oe("this", $t),
    _super: Oe("super", $t),
    _class: Oe("class", $t),
    _extends: Oe("extends", pr),
    _export: Oe("export"),
    _import: Oe("import", $t),
    _null: Oe("null", $t),
    _true: Oe("true", $t),
    _false: Oe("false", $t),
    _in: Oe("in", { beforeExpr: !0, binop: 7 }),
    _instanceof: Oe("instanceof", { beforeExpr: !0, binop: 7 }),
    _typeof: Oe("typeof", { beforeExpr: !0, prefix: !0, startsExpr: !0 }),
    _void: Oe("void", { beforeExpr: !0, prefix: !0, startsExpr: !0 }),
    _delete: Oe("delete", { beforeExpr: !0, prefix: !0, startsExpr: !0 })
  }, dr = /\r\n?|\n|\u2028|\u2029/, LL = new RegExp(dr.source, "g");
  s(xs, "isNewLine");
  s(I1, "nextLineBreak");
  P1 = /[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/, hr = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g, B1 = Object.prototype, jL = B1.hasOwnProperty,
  ML = B1.toString, bs = Object.hasOwn || function(e, t) {
    return jL.call(e, t);
  }, w1 = Array.isArray || function(e) {
    return ML.call(e) === "[object Array]";
  }, S1 = /* @__PURE__ */ Object.create(null);
  s(Vn, "wordsRegexp");
  s(gn, "codePointToString");
  qL = /(?:[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/, qo = /* @__PURE__ */ s(function(t, r) {
    this.line = t, this.column = r;
  }, "Position");
  qo.prototype.offset = /* @__PURE__ */ s(function(t) {
    return new qo(this.line, this.column + t);
  }, "offset");
  Yu = /* @__PURE__ */ s(function(t, r, n) {
    this.start = r, this.end = n, t.sourceFile !== null && (this.source = t.sourceFile);
  }, "SourceLocation");
  s(O1, "getLineInfo");
  cd = {
    // `ecmaVersion` indicates the ECMAScript version to parse. Must be
    // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10
    // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `"latest"`
    // (the latest version the library supports). This influences
    // support for strict mode, the set of reserved words, and support
    // for new syntax features.
    ecmaVersion: null,
    // `sourceType` indicates the mode the code should be parsed in.
    // Can be either `"script"` or `"module"`. This influences global
    // strict mode and parsing of `import` and `export` declarations.
    sourceType: "script",
    // `onInsertedSemicolon` can be a callback that will be called when
    // a semicolon is automatically inserted. It will be passed the
    // position of the inserted semicolon as an offset, and if
    // `locations` is enabled, it is given the location as a `{line,
    // column}` object as second argument.
    onInsertedSemicolon: null,
    // `onTrailingComma` is similar to `onInsertedSemicolon`, but for
    // trailing commas.
    onTrailingComma: null,
    // By default, reserved words are only enforced if ecmaVersion >= 5.
    // Set `allowReserved` to a boolean value to explicitly turn this on
    // an off. When this option has the value "never", reserved words
    // and keywords can also not be used as property names.
    allowReserved: null,
    // When enabled, a return at the top level is not considered an
    // error.
    allowReturnOutsideFunction: !1,
    // When enabled, import/export statements are not constrained to
    // appearing at the top of the program, and an import.meta expression
    // in a script isn't considered an error.
    allowImportExportEverywhere: !1,
    // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.
    // When enabled, await identifiers are allowed to appear at the top-level scope,
    // but they are still not allowed in non-async functions.
    allowAwaitOutsideFunction: null,
    // When enabled, super identifiers are not constrained to
    // appearing in methods and do not raise an error when they appear elsewhere.
    allowSuperOutsideMethod: null,
    // When enabled, hashbang directive in the beginning of file is
    // allowed and treated as a line comment. Enabled by default when
    // `ecmaVersion` >= 2023.
    allowHashBang: !1,
    // By default, the parser will verify that private properties are
    // only used in places where they are valid and have been declared.
    // Set this to false to turn such checks off.
    checkPrivateFields: !0,
    // When `locations` is on, `loc` properties holding objects with
    // `start` and `end` properties in `{line, column}` form (with
    // line being 1-based and column 0-based) will be attached to the
    // nodes.
    locations: !1,
    // A function can be passed as `onToken` option, which will
    // cause Acorn to call that function with object in the same
    // format as tokens returned from `tokenizer().getToken()`. Note
    // that you are not allowed to call the parser from the
    // callback—that will corrupt its internal state.
    onToken: null,
    // A function can be passed as `onComment` option, which will
    // cause Acorn to call that function with `(block, text, start,
    // end)` parameters whenever a comment is skipped. `block` is a
    // boolean indicating whether this is a block (`/* */`) comment,
    // `text` is the content of the comment, and `start` and `end` are
    // character offsets that denote the start and end of the comment.
    // When the `locations` option is on, two more parameters are
    // passed, the full `{line, column}` locations of the start and
    // end of the comments. Note that you are not allowed to call the
    // parser from the callback—that will corrupt its internal state.
    // When this option has an array as value, objects representing the
    // comments are pushed to it.
    onComment: null,
    // Nodes have their start and end characters offsets recorded in
    // `start` and `end` properties (directly on the node, rather than
    // the `loc` object, which holds line/column data. To also add a
    // [semi-standardized][range] `range` property holding a `[start,
    // end]` array with the same numbers, set the `ranges` option to
    // `true`.
    //
    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678
    ranges: !1,
    // It is possible to parse multiple files into a single AST by
    // passing the tree produced by parsing the first file as
    // `program` option in subsequent parses. This will add the
    // toplevel forms of the parsed file to the `Program` (top) node
    // of an existing parse tree.
    program: null,
    // When `locations` is on, you can pass this to record the source
    // file in every node's `loc` object.
    sourceFile: null,
    // This value, if given, is stored in every node, whether
    // `locations` is on or off.
    directSourceFile: null,
    // When enabled, parenthesized expressions are represented by
    // (non-standard) ParenthesizedExpression nodes
    preserveParens: !1
  }, A1 = !1;
  s($L, "getOptions");
  s(VL, "pushComment");
  $o = 1, vs = 2, dd = 4, R1 = 8, md = 16, N1 = 32, Qu = 64, L1 = 128, bi = 256, Vo = 512, el = $o | vs | bi;
  s(gd, "functionFlags");
  Ju = 0, yd = 1, Dn = 2, j1 = 3, M1 = 4, q1 = 5, dt = /* @__PURE__ */ s(function(t, r, n) {
    this.options = t = $L(t), this.sourceFile = t.sourceFile, this.keywords = Vn(BL[t.ecmaVersion >= 6 ? 6 : t.sourceType === "module" ? "5m\
odule" : 5]);
    var i = "";
    t.allowReserved !== !0 && (i = od[t.ecmaVersion >= 6 ? 6 : t.ecmaVersion === 5 ? 5 : 3], t.sourceType === "module" && (i += " await")), this.
    reservedWords = Vn(i);
    var o = (i ? i + " " : "") + od.strict;
    this.reservedWordsStrict = Vn(o), this.reservedWordsStrictBind = Vn(o + " " + od.strictBind), this.input = String(r), this.containsEsc =
    !1, n ? (this.pos = n, this.lineStart = this.input.lastIndexOf(`
`, n - 1) + 1, this.curLine = this.input.slice(0, this.lineStart).split(dr).length) : (this.pos = this.lineStart = 0, this.curLine = 1), this.
    type = S.eof, this.value = null, this.start = this.end = this.pos, this.startLoc = this.endLoc = this.curPosition(), this.lastTokEndLoc =
    this.lastTokStartLoc = null, this.lastTokStart = this.lastTokEnd = this.pos, this.context = this.initialContext(), this.exprAllowed = !0,
    this.inModule = t.sourceType === "module", this.strict = this.inModule || this.strictDirective(this.pos), this.potentialArrowAt = -1, this.
    potentialArrowInForAwait = !1, this.yieldPos = this.awaitPos = this.awaitIdentPos = 0, this.labels = [], this.undefinedExports = /* @__PURE__ */ Object.
    create(null), this.pos === 0 && t.allowHashBang && this.input.slice(0, 2) === "#!" && this.skipLineComment(2), this.scopeStack = [], this.
    enterScope($o), this.regexpState = null, this.privateNameStack = [];
  }, "Parser"), Gr = { inFunction: { configurable: !0 }, inGenerator: { configurable: !0 }, inAsync: { configurable: !0 }, canAwait: { configurable: !0 },
  allowSuper: { configurable: !0 }, allowDirectSuper: { configurable: !0 }, treatFunctionsAsVar: { configurable: !0 }, allowNewDotTarget: { configurable: !0 },
  inClassStaticBlock: { configurable: !0 } };
  dt.prototype.parse = /* @__PURE__ */ s(function() {
    var t = this.options.program || this.startNode();
    return this.nextToken(), this.parseTopLevel(t);
  }, "parse");
  Gr.inFunction.get = function() {
    return (this.currentVarScope().flags & vs) > 0;
  };
  Gr.inGenerator.get = function() {
    return (this.currentVarScope().flags & R1) > 0;
  };
  Gr.inAsync.get = function() {
    return (this.currentVarScope().flags & dd) > 0;
  };
  Gr.canAwait.get = function() {
    for (var e = this.scopeStack.length - 1; e >= 0; e--) {
      var t = this.scopeStack[e], r = t.flags;
      if (r & (bi | Vo))
        return !1;
      if (r & vs)
        return (r & dd) > 0;
    }
    return this.inModule && this.options.ecmaVersion >= 13 || this.options.allowAwaitOutsideFunction;
  };
  Gr.allowSuper.get = function() {
    var e = this.currentThisScope(), t = e.flags;
    return (t & Qu) > 0 || this.options.allowSuperOutsideMethod;
  };
  Gr.allowDirectSuper.get = function() {
    return (this.currentThisScope().flags & L1) > 0;
  };
  Gr.treatFunctionsAsVar.get = function() {
    return this.treatFunctionsAsVarInScope(this.currentScope());
  };
  Gr.allowNewDotTarget.get = function() {
    for (var e = this.scopeStack.length - 1; e >= 0; e--) {
      var t = this.scopeStack[e], r = t.flags;
      if (r & (bi | Vo) || r & vs && !(r & md))
        return !0;
    }
    return !1;
  };
  Gr.inClassStaticBlock.get = function() {
    return (this.currentVarScope().flags & bi) > 0;
  };
  dt.extend = /* @__PURE__ */ s(function() {
    for (var t = [], r = arguments.length; r--; ) t[r] = arguments[r];
    for (var n = this, i = 0; i < t.length; i++)
      n = t[i](n);
    return n;
  }, "extend");
  dt.parse = /* @__PURE__ */ s(function(t, r) {
    return new this(r, t).parse();
  }, "parse");
  dt.parseExpressionAt = /* @__PURE__ */ s(function(t, r, n) {
    var i = new this(n, t, r);
    return i.nextToken(), i.parseExpression();
  }, "parseExpressionAt");
  dt.tokenizer = /* @__PURE__ */ s(function(t, r) {
    return new this(r, t);
  }, "tokenizer");
  Object.defineProperties(dt.prototype, Gr);
  Pt = dt.prototype, UL = /^(?:'((?:\\[^]|[^'\\])*?)'|"((?:\\[^]|[^"\\])*?)")/;
  Pt.strictDirective = function(e) {
    if (this.options.ecmaVersion < 5)
      return !1;
    for (; ; ) {
      hr.lastIndex = e, e += hr.exec(this.input)[0].length;
      var t = UL.exec(this.input.slice(e));
      if (!t)
        return !1;
      if ((t[1] || t[2]) === "use strict") {
        hr.lastIndex = e + t[0].length;
        var r = hr.exec(this.input), n = r.index + r[0].length, i = this.input.charAt(n);
        return i === ";" || i === "}" || dr.test(r[0]) && !(/[(`.[+\-/*%<>=,?^&]/.test(i) || i === "!" && this.input.charAt(n + 1) === "=");
      }
      e += t[0].length, hr.lastIndex = e, e += hr.exec(this.input)[0].length, this.input[e] === ";" && e++;
    }
  };
  Pt.eat = function(e) {
    return this.type === e ? (this.next(), !0) : !1;
  };
  Pt.isContextual = function(e) {
    return this.type === S.name && this.value === e && !this.containsEsc;
  };
  Pt.eatContextual = function(e) {
    return this.isContextual(e) ? (this.next(), !0) : !1;
  };
  Pt.expectContextual = function(e) {
    this.eatContextual(e) || this.unexpected();
  };
  Pt.canInsertSemicolon = function() {
    return this.type === S.eof || this.type === S.braceR || dr.test(this.input.slice(this.lastTokEnd, this.start));
  };
  Pt.insertSemicolon = function() {
    if (this.canInsertSemicolon())
      return this.options.onInsertedSemicolon && this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc), !0;
  };
  Pt.semicolon = function() {
    !this.eat(S.semi) && !this.insertSemicolon() && this.unexpected();
  };
  Pt.afterTrailingComma = function(e, t) {
    if (this.type === e)
      return this.options.onTrailingComma && this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc), t || this.next(), !0;
  };
  Pt.expect = function(e) {
    this.eat(e) || this.unexpected();
  };
  Pt.unexpected = function(e) {
    this.raise(e ?? this.start, "Unexpected token");
  };
  tl = /* @__PURE__ */ s(function() {
    this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = this.doubleProto = -1;
  }, "DestructuringErrors");
  Pt.checkPatternErrors = function(e, t) {
    if (e) {
      e.trailingComma > -1 && this.raiseRecoverable(e.trailingComma, "Comma is not permitted after the rest element");
      var r = t ? e.parenthesizedAssign : e.parenthesizedBind;
      r > -1 && this.raiseRecoverable(r, t ? "Assigning to rvalue" : "Parenthesized pattern");
    }
  };
  Pt.checkExpressionErrors = function(e, t) {
    if (!e)
      return !1;
    var r = e.shorthandAssign, n = e.doubleProto;
    if (!t)
      return r >= 0 || n >= 0;
    r >= 0 && this.raise(r, "Shorthand property assignments are valid only in destructuring patterns"), n >= 0 && this.raiseRecoverable(n, "\
Redefinition of __proto__ property");
  };
  Pt.checkYieldAwaitInDefaultParams = function() {
    this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos) && this.raise(this.yieldPos, "Yield expression cannot be a default va\
lue"), this.awaitPos && this.raise(this.awaitPos, "Await expression cannot be a default value");
  };
  Pt.isSimpleAssignTarget = function(e) {
    return e.type === "ParenthesizedExpression" ? this.isSimpleAssignTarget(e.expression) : e.type === "Identifier" || e.type === "MemberExp\
ression";
  };
  ae = dt.prototype;
  ae.parseTopLevel = function(e) {
    var t = /* @__PURE__ */ Object.create(null);
    for (e.body || (e.body = []); this.type !== S.eof; ) {
      var r = this.parseStatement(null, !0, t);
      e.body.push(r);
    }
    if (this.inModule)
      for (var n = 0, i = Object.keys(this.undefinedExports); n < i.length; n += 1) {
        var o = i[n];
        this.raiseRecoverable(this.undefinedExports[o].start, "Export '" + o + "' is not defined");
      }
    return this.adaptDirectivePrologue(e.body), this.next(), e.sourceType = this.options.sourceType, this.finishNode(e, "Program");
  };
  Dd = { kind: "loop" }, WL = { kind: "switch" };
  ae.isLet = function(e) {
    if (this.options.ecmaVersion < 6 || !this.isContextual("let"))
      return !1;
    hr.lastIndex = this.pos;
    var t = hr.exec(this.input), r = this.pos + t[0].length, n = this.input.charCodeAt(r);
    if (n === 91 || n === 92)
      return !0;
    if (e)
      return !1;
    if (n === 123 || n > 55295 && n < 56320)
      return !0;
    if (mn(n, !0)) {
      for (var i = r + 1; Ds(n = this.input.charCodeAt(i), !0); )
        ++i;
      if (n === 92 || n > 55295 && n < 56320)
        return !0;
      var o = this.input.slice(r, i);
      if (!OL.test(o))
        return !0;
    }
    return !1;
  };
  ae.isAsyncFunction = function() {
    if (this.options.ecmaVersion < 8 || !this.isContextual("async"))
      return !1;
    hr.lastIndex = this.pos;
    var e = hr.exec(this.input), t = this.pos + e[0].length, r;
    return !dr.test(this.input.slice(this.pos, t)) && this.input.slice(t, t + 8) === "function" && (t + 8 === this.input.length || !(Ds(r = this.
    input.charCodeAt(t + 8)) || r > 55295 && r < 56320));
  };
  ae.parseStatement = function(e, t, r) {
    var n = this.type, i = this.startNode(), o;
    switch (this.isLet(e) && (n = S._var, o = "let"), n) {
      case S._break:
      case S._continue:
        return this.parseBreakContinueStatement(i, n.keyword);
      case S._debugger:
        return this.parseDebuggerStatement(i);
      case S._do:
        return this.parseDoStatement(i);
      case S._for:
        return this.parseForStatement(i);
      case S._function:
        return e && (this.strict || e !== "if" && e !== "label") && this.options.ecmaVersion >= 6 && this.unexpected(), this.parseFunctionStatement(
        i, !1, !e);
      case S._class:
        return e && this.unexpected(), this.parseClass(i, !0);
      case S._if:
        return this.parseIfStatement(i);
      case S._return:
        return this.parseReturnStatement(i);
      case S._switch:
        return this.parseSwitchStatement(i);
      case S._throw:
        return this.parseThrowStatement(i);
      case S._try:
        return this.parseTryStatement(i);
      case S._const:
      case S._var:
        return o = o || this.value, e && o !== "var" && this.unexpected(), this.parseVarStatement(i, o);
      case S._while:
        return this.parseWhileStatement(i);
      case S._with:
        return this.parseWithStatement(i);
      case S.braceL:
        return this.parseBlock(!0, i);
      case S.semi:
        return this.parseEmptyStatement(i);
      case S._export:
      case S._import:
        if (this.options.ecmaVersion > 10 && n === S._import) {
          hr.lastIndex = this.pos;
          var a = hr.exec(this.input), u = this.pos + a[0].length, l = this.input.charCodeAt(u);
          if (l === 40 || l === 46)
            return this.parseExpressionStatement(i, this.parseExpression());
        }
        return this.options.allowImportExportEverywhere || (t || this.raise(this.start, "'import' and 'export' may only appear at the top le\
vel"), this.inModule || this.raise(this.start, "'import' and 'export' may appear only with 'sourceType: module'")), n === S._import ? this.parseImport(
        i) : this.parseExport(i, r);
      // If the statement does not start with a statement keyword or a
      // brace, it's an ExpressionStatement or LabeledStatement. We
      // simply start parsing an expression, and afterwards, if the
      // next token is a colon and the expression was a simple
      // Identifier node, we switch to interpreting it as a label.
      default:
        if (this.isAsyncFunction())
          return e && this.unexpected(), this.next(), this.parseFunctionStatement(i, !0, !e);
        var c = this.value, p = this.parseExpression();
        return n === S.name && p.type === "Identifier" && this.eat(S.colon) ? this.parseLabeledStatement(i, c, p, e) : this.parseExpressionStatement(
        i, p);
    }
  };
  ae.parseBreakContinueStatement = function(e, t) {
    var r = t === "break";
    this.next(), this.eat(S.semi) || this.insertSemicolon() ? e.label = null : this.type !== S.name ? this.unexpected() : (e.label = this.parseIdent(),
    this.semicolon());
    for (var n = 0; n < this.labels.length; ++n) {
      var i = this.labels[n];
      if ((e.label == null || i.name === e.label.name) && (i.kind != null && (r || i.kind === "loop") || e.label && r))
        break;
    }
    return n === this.labels.length && this.raise(e.start, "Unsyntactic " + t), this.finishNode(e, r ? "BreakStatement" : "ContinueStatement");
  };
  ae.parseDebuggerStatement = function(e) {
    return this.next(), this.semicolon(), this.finishNode(e, "DebuggerStatement");
  };
  ae.parseDoStatement = function(e) {
    return this.next(), this.labels.push(Dd), e.body = this.parseStatement("do"), this.labels.pop(), this.expect(S._while), e.test = this.parseParenExpression(),
    this.options.ecmaVersion >= 6 ? this.eat(S.semi) : this.semicolon(), this.finishNode(e, "DoWhileStatement");
  };
  ae.parseForStatement = function(e) {
    this.next();
    var t = this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual("await") ? this.lastTokStart : -1;
    if (this.labels.push(Dd), this.enterScope(0), this.expect(S.parenL), this.type === S.semi)
      return t > -1 && this.unexpected(t), this.parseFor(e, null);
    var r = this.isLet();
    if (this.type === S._var || this.type === S._const || r) {
      var n = this.startNode(), i = r ? "let" : this.value;
      return this.next(), this.parseVar(n, !0, i), this.finishNode(n, "VariableDeclaration"), (this.type === S._in || this.options.ecmaVersion >=
      6 && this.isContextual("of")) && n.declarations.length === 1 ? (this.options.ecmaVersion >= 9 && (this.type === S._in ? t > -1 && this.
      unexpected(t) : e.await = t > -1), this.parseForIn(e, n)) : (t > -1 && this.unexpected(t), this.parseFor(e, n));
    }
    var o = this.isContextual("let"), a = !1, u = this.containsEsc, l = new tl(), c = this.start, p = t > -1 ? this.parseExprSubscripts(l, "\
await") : this.parseExpression(!0, l);
    return this.type === S._in || (a = this.options.ecmaVersion >= 6 && this.isContextual("of")) ? (t > -1 ? (this.type === S._in && this.unexpected(
    t), e.await = !0) : a && this.options.ecmaVersion >= 8 && (p.start === c && !u && p.type === "Identifier" && p.name === "async" ? this.unexpected() :
    this.options.ecmaVersion >= 9 && (e.await = !1)), o && a && this.raise(p.start, "The left-hand side of a for-of loop may not start with \
'let'."), this.toAssignable(p, !1, l), this.checkLValPattern(p), this.parseForIn(e, p)) : (this.checkExpressionErrors(l, !0), t > -1 && this.
    unexpected(t), this.parseFor(e, p));
  };
  ae.parseFunctionStatement = function(e, t, r) {
    return this.next(), this.parseFunction(e, Mo | (r ? 0 : pd), !1, t);
  };
  ae.parseIfStatement = function(e) {
    return this.next(), e.test = this.parseParenExpression(), e.consequent = this.parseStatement("if"), e.alternate = this.eat(S._else) ? this.
    parseStatement("if") : null, this.finishNode(e, "IfStatement");
  };
  ae.parseReturnStatement = function(e) {
    return !this.inFunction && !this.options.allowReturnOutsideFunction && this.raise(this.start, "'return' outside of function"), this.next(),
    this.eat(S.semi) || this.insertSemicolon() ? e.argument = null : (e.argument = this.parseExpression(), this.semicolon()), this.finishNode(
    e, "ReturnStatement");
  };
  ae.parseSwitchStatement = function(e) {
    this.next(), e.discriminant = this.parseParenExpression(), e.cases = [], this.expect(S.braceL), this.labels.push(WL), this.enterScope(0);
    for (var t, r = !1; this.type !== S.braceR; )
      if (this.type === S._case || this.type === S._default) {
        var n = this.type === S._case;
        t && this.finishNode(t, "SwitchCase"), e.cases.push(t = this.startNode()), t.consequent = [], this.next(), n ? t.test = this.parseExpression() :
        (r && this.raiseRecoverable(this.lastTokStart, "Multiple default clauses"), r = !0, t.test = null), this.expect(S.colon);
      } else
        t || this.unexpected(), t.consequent.push(this.parseStatement(null));
    return this.exitScope(), t && this.finishNode(t, "SwitchCase"), this.next(), this.labels.pop(), this.finishNode(e, "SwitchStatement");
  };
  ae.parseThrowStatement = function(e) {
    return this.next(), dr.test(this.input.slice(this.lastTokEnd, this.start)) && this.raise(this.lastTokEnd, "Illegal newline after throw"),
    e.argument = this.parseExpression(), this.semicolon(), this.finishNode(e, "ThrowStatement");
  };
  zL = [];
  ae.parseCatchClauseParam = function() {
    var e = this.parseBindingAtom(), t = e.type === "Identifier";
    return this.enterScope(t ? N1 : 0), this.checkLValPattern(e, t ? M1 : Dn), this.expect(S.parenR), e;
  };
  ae.parseTryStatement = function(e) {
    if (this.next(), e.block = this.parseBlock(), e.handler = null, this.type === S._catch) {
      var t = this.startNode();
      this.next(), this.eat(S.parenL) ? t.param = this.parseCatchClauseParam() : (this.options.ecmaVersion < 10 && this.unexpected(), t.param =
      null, this.enterScope(0)), t.body = this.parseBlock(!1), this.exitScope(), e.handler = this.finishNode(t, "CatchClause");
    }
    return e.finalizer = this.eat(S._finally) ? this.parseBlock() : null, !e.handler && !e.finalizer && this.raise(e.start, "Missing catch o\
r finally clause"), this.finishNode(e, "TryStatement");
  };
  ae.parseVarStatement = function(e, t, r) {
    return this.next(), this.parseVar(e, !1, t, r), this.semicolon(), this.finishNode(e, "VariableDeclaration");
  };
  ae.parseWhileStatement = function(e) {
    return this.next(), e.test = this.parseParenExpression(), this.labels.push(Dd), e.body = this.parseStatement("while"), this.labels.pop(),
    this.finishNode(e, "WhileStatement");
  };
  ae.parseWithStatement = function(e) {
    return this.strict && this.raise(this.start, "'with' in strict mode"), this.next(), e.object = this.parseParenExpression(), e.body = this.
    parseStatement("with"), this.finishNode(e, "WithStatement");
  };
  ae.parseEmptyStatement = function(e) {
    return this.next(), this.finishNode(e, "EmptyStatement");
  };
  ae.parseLabeledStatement = function(e, t, r, n) {
    for (var i = 0, o = this.labels; i < o.length; i += 1) {
      var a = o[i];
      a.name === t && this.raise(r.start, "Label '" + t + "' is already declared");
    }
    for (var u = this.type.isLoop ? "loop" : this.type === S._switch ? "switch" : null, l = this.labels.length - 1; l >= 0; l--) {
      var c = this.labels[l];
      if (c.statementStart === e.start)
        c.statementStart = this.start, c.kind = u;
      else
        break;
    }
    return this.labels.push({ name: t, kind: u, statementStart: this.start }), e.body = this.parseStatement(n ? n.indexOf("label") === -1 ? n +
    "label" : n : "label"), this.labels.pop(), e.label = r, this.finishNode(e, "LabeledStatement");
  };
  ae.parseExpressionStatement = function(e, t) {
    return e.expression = t, this.semicolon(), this.finishNode(e, "ExpressionStatement");
  };
  ae.parseBlock = function(e, t, r) {
    for (e === void 0 && (e = !0), t === void 0 && (t = this.startNode()), t.body = [], this.expect(S.braceL), e && this.enterScope(0); this.
    type !== S.braceR; ) {
      var n = this.parseStatement(null);
      t.body.push(n);
    }
    return r && (this.strict = !1), this.next(), e && this.exitScope(), this.finishNode(t, "BlockStatement");
  };
  ae.parseFor = function(e, t) {
    return e.init = t, this.expect(S.semi), e.test = this.type === S.semi ? null : this.parseExpression(), this.expect(S.semi), e.update = this.
    type === S.parenR ? null : this.parseExpression(), this.expect(S.parenR), e.body = this.parseStatement("for"), this.exitScope(), this.labels.
    pop(), this.finishNode(e, "ForStatement");
  };
  ae.parseForIn = function(e, t) {
    var r = this.type === S._in;
    return this.next(), t.type === "VariableDeclaration" && t.declarations[0].init != null && (!r || this.options.ecmaVersion < 8 || this.strict ||
    t.kind !== "var" || t.declarations[0].id.type !== "Identifier") && this.raise(
      t.start,
      (r ? "for-in" : "for-of") + " loop variable declaration may not have an initializer"
    ), e.left = t, e.right = r ? this.parseExpression() : this.parseMaybeAssign(), this.expect(S.parenR), e.body = this.parseStatement("for"),
    this.exitScope(), this.labels.pop(), this.finishNode(e, r ? "ForInStatement" : "ForOfStatement");
  };
  ae.parseVar = function(e, t, r, n) {
    for (e.declarations = [], e.kind = r; ; ) {
      var i = this.startNode();
      if (this.parseVarId(i, r), this.eat(S.eq) ? i.init = this.parseMaybeAssign(t) : !n && r === "const" && !(this.type === S._in || this.options.
      ecmaVersion >= 6 && this.isContextual("of")) ? this.unexpected() : !n && i.id.type !== "Identifier" && !(t && (this.type === S._in || this.
      isContextual("of"))) ? this.raise(this.lastTokEnd, "Complex binding patterns require an initialization value") : i.init = null, e.declarations.
      push(this.finishNode(i, "VariableDeclarator")), !this.eat(S.comma))
        break;
    }
    return e;
  };
  ae.parseVarId = function(e, t) {
    e.id = this.parseBindingAtom(), this.checkLValPattern(e.id, t === "var" ? yd : Dn, !1);
  };
  Mo = 1, pd = 2, $1 = 4;
  ae.parseFunction = function(e, t, r, n, i) {
    this.initFunction(e), (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !n) && (this.type === S.star && t & pd && this.
    unexpected(), e.generator = this.eat(S.star)), this.options.ecmaVersion >= 8 && (e.async = !!n), t & Mo && (e.id = t & $1 && this.type !==
    S.name ? null : this.parseIdent(), e.id && !(t & pd) && this.checkLValSimple(e.id, this.strict || e.generator || e.async ? this.treatFunctionsAsVar ?
    yd : Dn : j1));
    var o = this.yieldPos, a = this.awaitPos, u = this.awaitIdentPos;
    return this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, this.enterScope(gd(e.async, e.generator)), t & Mo || (e.id = this.type ===
    S.name ? this.parseIdent() : null), this.parseFunctionParams(e), this.parseFunctionBody(e, r, !1, i), this.yieldPos = o, this.awaitPos =
    a, this.awaitIdentPos = u, this.finishNode(e, t & Mo ? "FunctionDeclaration" : "FunctionExpression");
  };
  ae.parseFunctionParams = function(e) {
    this.expect(S.parenL), e.params = this.parseBindingList(S.parenR, !1, this.options.ecmaVersion >= 8), this.checkYieldAwaitInDefaultParams();
  };
  ae.parseClass = function(e, t) {
    this.next();
    var r = this.strict;
    this.strict = !0, this.parseClassId(e, t), this.parseClassSuper(e);
    var n = this.enterClassBody(), i = this.startNode(), o = !1;
    for (i.body = [], this.expect(S.braceL); this.type !== S.braceR; ) {
      var a = this.parseClassElement(e.superClass !== null);
      a && (i.body.push(a), a.type === "MethodDefinition" && a.kind === "constructor" ? (o && this.raiseRecoverable(a.start, "Duplicate cons\
tructor in the same class"), o = !0) : a.key && a.key.type === "PrivateIdentifier" && HL(n, a) && this.raiseRecoverable(a.key.start, "Identi\
fier '#" + a.key.name + "' has already been declared"));
    }
    return this.strict = r, this.next(), e.body = this.finishNode(i, "ClassBody"), this.exitClassBody(), this.finishNode(e, t ? "ClassDeclar\
ation" : "ClassExpression");
  };
  ae.parseClassElement = function(e) {
    if (this.eat(S.semi))
      return null;
    var t = this.options.ecmaVersion, r = this.startNode(), n = "", i = !1, o = !1, a = "method", u = !1;
    if (this.eatContextual("static")) {
      if (t >= 13 && this.eat(S.braceL))
        return this.parseClassStaticBlock(r), r;
      this.isClassElementNameStart() || this.type === S.star ? u = !0 : n = "static";
    }
    if (r.static = u, !n && t >= 8 && this.eatContextual("async") && ((this.isClassElementNameStart() || this.type === S.star) && !this.canInsertSemicolon() ?
    o = !0 : n = "async"), !n && (t >= 9 || !o) && this.eat(S.star) && (i = !0), !n && !o && !i) {
      var l = this.value;
      (this.eatContextual("get") || this.eatContextual("set")) && (this.isClassElementNameStart() ? a = l : n = l);
    }
    if (n ? (r.computed = !1, r.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc), r.key.name = n, this.finishNode(r.key, "Ide\
ntifier")) : this.parseClassElementName(r), t < 13 || this.type === S.parenL || a !== "method" || i || o) {
      var c = !r.static && Zu(r, "constructor"), p = c && e;
      c && a !== "method" && this.raise(r.key.start, "Constructor can't have get/set modifier"), r.kind = c ? "constructor" : a, this.parseClassMethod(
      r, i, o, p);
    } else
      this.parseClassField(r);
    return r;
  };
  ae.isClassElementNameStart = function() {
    return this.type === S.name || this.type === S.privateId || this.type === S.num || this.type === S.string || this.type === S.bracketL ||
    this.type.keyword;
  };
  ae.parseClassElementName = function(e) {
    this.type === S.privateId ? (this.value === "constructor" && this.raise(this.start, "Classes can't have an element named '#constructor'"),
    e.computed = !1, e.key = this.parsePrivateIdent()) : this.parsePropertyName(e);
  };
  ae.parseClassMethod = function(e, t, r, n) {
    var i = e.key;
    e.kind === "constructor" ? (t && this.raise(i.start, "Constructor can't be a generator"), r && this.raise(i.start, "Constructor can't be\
 an async method")) : e.static && Zu(e, "prototype") && this.raise(i.start, "Classes may not have a static property named prototype");
    var o = e.value = this.parseMethod(t, r, n);
    return e.kind === "get" && o.params.length !== 0 && this.raiseRecoverable(o.start, "getter should have no params"), e.kind === "set" && o.
    params.length !== 1 && this.raiseRecoverable(o.start, "setter should have exactly one param"), e.kind === "set" && o.params[0].type === "\
RestElement" && this.raiseRecoverable(o.params[0].start, "Setter cannot use rest params"), this.finishNode(e, "MethodDefinition");
  };
  ae.parseClassField = function(e) {
    return Zu(e, "constructor") ? this.raise(e.key.start, "Classes can't have a field named 'constructor'") : e.static && Zu(e, "prototype") &&
    this.raise(e.key.start, "Classes can't have a static field named 'prototype'"), this.eat(S.eq) ? (this.enterScope(Vo | Qu), e.value = this.
    parseMaybeAssign(), this.exitScope()) : e.value = null, this.semicolon(), this.finishNode(e, "PropertyDefinition");
  };
  ae.parseClassStaticBlock = function(e) {
    e.body = [];
    var t = this.labels;
    for (this.labels = [], this.enterScope(bi | Qu); this.type !== S.braceR; ) {
      var r = this.parseStatement(null);
      e.body.push(r);
    }
    return this.next(), this.exitScope(), this.labels = t, this.finishNode(e, "StaticBlock");
  };
  ae.parseClassId = function(e, t) {
    this.type === S.name ? (e.id = this.parseIdent(), t && this.checkLValSimple(e.id, Dn, !1)) : (t === !0 && this.unexpected(), e.id = null);
  };
  ae.parseClassSuper = function(e) {
    e.superClass = this.eat(S._extends) ? this.parseExprSubscripts(null, !1) : null;
  };
  ae.enterClassBody = function() {
    var e = { declared: /* @__PURE__ */ Object.create(null), used: [] };
    return this.privateNameStack.push(e), e.declared;
  };
  ae.exitClassBody = function() {
    var e = this.privateNameStack.pop(), t = e.declared, r = e.used;
    if (this.options.checkPrivateFields)
      for (var n = this.privateNameStack.length, i = n === 0 ? null : this.privateNameStack[n - 1], o = 0; o < r.length; ++o) {
        var a = r[o];
        bs(t, a.name) || (i ? i.used.push(a) : this.raiseRecoverable(a.start, "Private field '#" + a.name + "' must be declared in an enclos\
ing class"));
      }
  };
  s(HL, "isPrivateNameConflicted");
  s(Zu, "checkKeyName");
  ae.parseExportAllDeclaration = function(e, t) {
    return this.options.ecmaVersion >= 11 && (this.eatContextual("as") ? (e.exported = this.parseModuleExportName(), this.checkExport(t, e.exported,
    this.lastTokStart)) : e.exported = null), this.expectContextual("from"), this.type !== S.string && this.unexpected(), e.source = this.parseExprAtom(),
    this.options.ecmaVersion >= 16 && (e.attributes = this.parseWithClause()), this.semicolon(), this.finishNode(e, "ExportAllDeclaration");
  };
  ae.parseExport = function(e, t) {
    if (this.next(), this.eat(S.star))
      return this.parseExportAllDeclaration(e, t);
    if (this.eat(S._default))
      return this.checkExport(t, "default", this.lastTokStart), e.declaration = this.parseExportDefaultDeclaration(), this.finishNode(e, "Ex\
portDefaultDeclaration");
    if (this.shouldParseExportStatement())
      e.declaration = this.parseExportDeclaration(e), e.declaration.type === "VariableDeclaration" ? this.checkVariableExport(t, e.declaration.
      declarations) : this.checkExport(t, e.declaration.id, e.declaration.id.start), e.specifiers = [], e.source = null, this.options.ecmaVersion >=
      16 && (e.attributes = []);
    else {
      if (e.declaration = null, e.specifiers = this.parseExportSpecifiers(t), this.eatContextual("from"))
        this.type !== S.string && this.unexpected(), e.source = this.parseExprAtom(), this.options.ecmaVersion >= 16 && (e.attributes = this.
        parseWithClause());
      else {
        for (var r = 0, n = e.specifiers; r < n.length; r += 1) {
          var i = n[r];
          this.checkUnreserved(i.local), this.checkLocalExport(i.local), i.local.type === "Literal" && this.raise(i.local.start, "A string l\
iteral cannot be used as an exported binding without `from`.");
        }
        e.source = null, this.options.ecmaVersion >= 16 && (e.attributes = []);
      }
      this.semicolon();
    }
    return this.finishNode(e, "ExportNamedDeclaration");
  };
  ae.parseExportDeclaration = function(e) {
    return this.parseStatement(null);
  };
  ae.parseExportDefaultDeclaration = function() {
    var e;
    if (this.type === S._function || (e = this.isAsyncFunction())) {
      var t = this.startNode();
      return this.next(), e && this.next(), this.parseFunction(t, Mo | $1, !1, e);
    } else if (this.type === S._class) {
      var r = this.startNode();
      return this.parseClass(r, "nullableID");
    } else {
      var n = this.parseMaybeAssign();
      return this.semicolon(), n;
    }
  };
  ae.checkExport = function(e, t, r) {
    e && (typeof t != "string" && (t = t.type === "Identifier" ? t.name : t.value), bs(e, t) && this.raiseRecoverable(r, "Duplicate export '" +
    t + "'"), e[t] = !0);
  };
  ae.checkPatternExport = function(e, t) {
    var r = t.type;
    if (r === "Identifier")
      this.checkExport(e, t, t.start);
    else if (r === "ObjectPattern")
      for (var n = 0, i = t.properties; n < i.length; n += 1) {
        var o = i[n];
        this.checkPatternExport(e, o);
      }
    else if (r === "ArrayPattern")
      for (var a = 0, u = t.elements; a < u.length; a += 1) {
        var l = u[a];
        l && this.checkPatternExport(e, l);
      }
    else r === "Property" ? this.checkPatternExport(e, t.value) : r === "AssignmentPattern" ? this.checkPatternExport(e, t.left) : r === "Re\
stElement" && this.checkPatternExport(e, t.argument);
  };
  ae.checkVariableExport = function(e, t) {
    if (e)
      for (var r = 0, n = t; r < n.length; r += 1) {
        var i = n[r];
        this.checkPatternExport(e, i.id);
      }
  };
  ae.shouldParseExportStatement = function() {
    return this.type.keyword === "var" || this.type.keyword === "const" || this.type.keyword === "class" || this.type.keyword === "function" ||
    this.isLet() || this.isAsyncFunction();
  };
  ae.parseExportSpecifier = function(e) {
    var t = this.startNode();
    return t.local = this.parseModuleExportName(), t.exported = this.eatContextual("as") ? this.parseModuleExportName() : t.local, this.checkExport(
      e,
      t.exported,
      t.exported.start
    ), this.finishNode(t, "ExportSpecifier");
  };
  ae.parseExportSpecifiers = function(e) {
    var t = [], r = !0;
    for (this.expect(S.braceL); !this.eat(S.braceR); ) {
      if (r)
        r = !1;
      else if (this.expect(S.comma), this.afterTrailingComma(S.braceR))
        break;
      t.push(this.parseExportSpecifier(e));
    }
    return t;
  };
  ae.parseImport = function(e) {
    return this.next(), this.type === S.string ? (e.specifiers = zL, e.source = this.parseExprAtom()) : (e.specifiers = this.parseImportSpecifiers(),
    this.expectContextual("from"), e.source = this.type === S.string ? this.parseExprAtom() : this.unexpected()), this.options.ecmaVersion >=
    16 && (e.attributes = this.parseWithClause()), this.semicolon(), this.finishNode(e, "ImportDeclaration");
  };
  ae.parseImportSpecifier = function() {
    var e = this.startNode();
    return e.imported = this.parseModuleExportName(), this.eatContextual("as") ? e.local = this.parseIdent() : (this.checkUnreserved(e.imported),
    e.local = e.imported), this.checkLValSimple(e.local, Dn), this.finishNode(e, "ImportSpecifier");
  };
  ae.parseImportDefaultSpecifier = function() {
    var e = this.startNode();
    return e.local = this.parseIdent(), this.checkLValSimple(e.local, Dn), this.finishNode(e, "ImportDefaultSpecifier");
  };
  ae.parseImportNamespaceSpecifier = function() {
    var e = this.startNode();
    return this.next(), this.expectContextual("as"), e.local = this.parseIdent(), this.checkLValSimple(e.local, Dn), this.finishNode(e, "Imp\
ortNamespaceSpecifier");
  };
  ae.parseImportSpecifiers = function() {
    var e = [], t = !0;
    if (this.type === S.name && (e.push(this.parseImportDefaultSpecifier()), !this.eat(S.comma)))
      return e;
    if (this.type === S.star)
      return e.push(this.parseImportNamespaceSpecifier()), e;
    for (this.expect(S.braceL); !this.eat(S.braceR); ) {
      if (t)
        t = !1;
      else if (this.expect(S.comma), this.afterTrailingComma(S.braceR))
        break;
      e.push(this.parseImportSpecifier());
    }
    return e;
  };
  ae.parseWithClause = function() {
    var e = [];
    if (!this.eat(S._with))
      return e;
    this.expect(S.braceL);
    for (var t = {}, r = !0; !this.eat(S.braceR); ) {
      if (r)
        r = !1;
      else if (this.expect(S.comma), this.afterTrailingComma(S.braceR))
        break;
      var n = this.parseImportAttribute(), i = n.key.type === "Identifier" ? n.key.name : n.key.value;
      bs(t, i) && this.raiseRecoverable(n.key.start, "Duplicate attribute key '" + i + "'"), t[i] = !0, e.push(n);
    }
    return e;
  };
  ae.parseImportAttribute = function() {
    var e = this.startNode();
    return e.key = this.type === S.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "never"), this.expect(S.colon),
    this.type !== S.string && this.unexpected(), e.value = this.parseExprAtom(), this.finishNode(e, "ImportAttribute");
  };
  ae.parseModuleExportName = function() {
    if (this.options.ecmaVersion >= 13 && this.type === S.string) {
      var e = this.parseLiteral(this.value);
      return qL.test(e.value) && this.raise(e.start, "An export name cannot include a lone surrogate."), e;
    }
    return this.parseIdent(!0);
  };
  ae.adaptDirectivePrologue = function(e) {
    for (var t = 0; t < e.length && this.isDirectiveCandidate(e[t]); ++t)
      e[t].directive = e[t].expression.raw.slice(1, -1);
  };
  ae.isDirectiveCandidate = function(e) {
    return this.options.ecmaVersion >= 5 && e.type === "ExpressionStatement" && e.expression.type === "Literal" && typeof e.expression.value ==
    "string" && // Reject parenthesized strings.
    (this.input[e.start] === '"' || this.input[e.start] === "'");
  };
  mr = dt.prototype;
  mr.toAssignable = function(e, t, r) {
    if (this.options.ecmaVersion >= 6 && e)
      switch (e.type) {
        case "Identifier":
          this.inAsync && e.name === "await" && this.raise(e.start, "Cannot use 'await' as identifier inside an async function");
          break;
        case "ObjectPattern":
        case "ArrayPattern":
        case "AssignmentPattern":
        case "RestElement":
          break;
        case "ObjectExpression":
          e.type = "ObjectPattern", r && this.checkPatternErrors(r, !0);
          for (var n = 0, i = e.properties; n < i.length; n += 1) {
            var o = i[n];
            this.toAssignable(o, t), o.type === "RestElement" && (o.argument.type === "ArrayPattern" || o.argument.type === "ObjectPattern") &&
            this.raise(o.argument.start, "Unexpected token");
          }
          break;
        case "Property":
          e.kind !== "init" && this.raise(e.key.start, "Object pattern can't contain getter or setter"), this.toAssignable(e.value, t);
          break;
        case "ArrayExpression":
          e.type = "ArrayPattern", r && this.checkPatternErrors(r, !0), this.toAssignableList(e.elements, t);
          break;
        case "SpreadElement":
          e.type = "RestElement", this.toAssignable(e.argument, t), e.argument.type === "AssignmentPattern" && this.raise(e.argument.start, "\
Rest elements cannot have a default value");
          break;
        case "AssignmentExpression":
          e.operator !== "=" && this.raise(e.left.end, "Only '=' operator can be used for specifying default value."), e.type = "AssignmentP\
attern", delete e.operator, this.toAssignable(e.left, t);
          break;
        case "ParenthesizedExpression":
          this.toAssignable(e.expression, t, r);
          break;
        case "ChainExpression":
          this.raiseRecoverable(e.start, "Optional chaining cannot appear in left-hand side");
          break;
        case "MemberExpression":
          if (!t)
            break;
        default:
          this.raise(e.start, "Assigning to rvalue");
      }
    else r && this.checkPatternErrors(r, !0);
    return e;
  };
  mr.toAssignableList = function(e, t) {
    for (var r = e.length, n = 0; n < r; n++) {
      var i = e[n];
      i && this.toAssignable(i, t);
    }
    if (r) {
      var o = e[r - 1];
      this.options.ecmaVersion === 6 && t && o && o.type === "RestElement" && o.argument.type !== "Identifier" && this.unexpected(o.argument.
      start);
    }
    return e;
  };
  mr.parseSpread = function(e) {
    var t = this.startNode();
    return this.next(), t.argument = this.parseMaybeAssign(!1, e), this.finishNode(t, "SpreadElement");
  };
  mr.parseRestBinding = function() {
    var e = this.startNode();
    return this.next(), this.options.ecmaVersion === 6 && this.type !== S.name && this.unexpected(), e.argument = this.parseBindingAtom(), this.
    finishNode(e, "RestElement");
  };
  mr.parseBindingAtom = function() {
    if (this.options.ecmaVersion >= 6)
      switch (this.type) {
        case S.bracketL:
          var e = this.startNode();
          return this.next(), e.elements = this.parseBindingList(S.bracketR, !0, !0), this.finishNode(e, "ArrayPattern");
        case S.braceL:
          return this.parseObj(!0);
      }
    return this.parseIdent();
  };
  mr.parseBindingList = function(e, t, r, n) {
    for (var i = [], o = !0; !this.eat(e); )
      if (o ? o = !1 : this.expect(S.comma), t && this.type === S.comma)
        i.push(null);
      else {
        if (r && this.afterTrailingComma(e))
          break;
        if (this.type === S.ellipsis) {
          var a = this.parseRestBinding();
          this.parseBindingListItem(a), i.push(a), this.type === S.comma && this.raiseRecoverable(this.start, "Comma is not permitted after \
the rest element"), this.expect(e);
          break;
        } else
          i.push(this.parseAssignableListItem(n));
      }
    return i;
  };
  mr.parseAssignableListItem = function(e) {
    var t = this.parseMaybeDefault(this.start, this.startLoc);
    return this.parseBindingListItem(t), t;
  };
  mr.parseBindingListItem = function(e) {
    return e;
  };
  mr.parseMaybeDefault = function(e, t, r) {
    if (r = r || this.parseBindingAtom(), this.options.ecmaVersion < 6 || !this.eat(S.eq))
      return r;
    var n = this.startNodeAt(e, t);
    return n.left = r, n.right = this.parseMaybeAssign(), this.finishNode(n, "AssignmentPattern");
  };
  mr.checkLValSimple = function(e, t, r) {
    t === void 0 && (t = Ju);
    var n = t !== Ju;
    switch (e.type) {
      case "Identifier":
        this.strict && this.reservedWordsStrictBind.test(e.name) && this.raiseRecoverable(e.start, (n ? "Binding " : "Assigning to ") + e.name +
        " in strict mode"), n && (t === Dn && e.name === "let" && this.raiseRecoverable(e.start, "let is disallowed as a lexically bound nam\
e"), r && (bs(r, e.name) && this.raiseRecoverable(e.start, "Argument name clash"), r[e.name] = !0), t !== q1 && this.declareName(e.name, t, e.
        start));
        break;
      case "ChainExpression":
        this.raiseRecoverable(e.start, "Optional chaining cannot appear in left-hand side");
        break;
      case "MemberExpression":
        n && this.raiseRecoverable(e.start, "Binding member expression");
        break;
      case "ParenthesizedExpression":
        return n && this.raiseRecoverable(e.start, "Binding parenthesized expression"), this.checkLValSimple(e.expression, t, r);
      default:
        this.raise(e.start, (n ? "Binding" : "Assigning to") + " rvalue");
    }
  };
  mr.checkLValPattern = function(e, t, r) {
    switch (t === void 0 && (t = Ju), e.type) {
      case "ObjectPattern":
        for (var n = 0, i = e.properties; n < i.length; n += 1) {
          var o = i[n];
          this.checkLValInnerPattern(o, t, r);
        }
        break;
      case "ArrayPattern":
        for (var a = 0, u = e.elements; a < u.length; a += 1) {
          var l = u[a];
          l && this.checkLValInnerPattern(l, t, r);
        }
        break;
      default:
        this.checkLValSimple(e, t, r);
    }
  };
  mr.checkLValInnerPattern = function(e, t, r) {
    switch (t === void 0 && (t = Ju), e.type) {
      case "Property":
        this.checkLValInnerPattern(e.value, t, r);
        break;
      case "AssignmentPattern":
        this.checkLValPattern(e.left, t, r);
        break;
      case "RestElement":
        this.checkLValPattern(e.argument, t, r);
        break;
      default:
        this.checkLValPattern(e, t, r);
    }
  };
  Pr = /* @__PURE__ */ s(function(t, r, n, i, o) {
    this.token = t, this.isExpr = !!r, this.preserveSpace = !!n, this.override = i, this.generator = !!o;
  }, "TokContext"), Qe = {
    b_stat: new Pr("{", !1),
    b_expr: new Pr("{", !0),
    b_tmpl: new Pr("${", !1),
    p_stat: new Pr("(", !1),
    p_expr: new Pr("(", !0),
    q_tmpl: new Pr("`", !0, !0, function(e) {
      return e.tryReadTemplateToken();
    }),
    f_stat: new Pr("function", !1),
    f_expr: new Pr("function", !0),
    f_expr_gen: new Pr("function", !0, !1, null, !0),
    f_gen: new Pr("function", !1, !1, null, !0)
  }, Es = dt.prototype;
  Es.initialContext = function() {
    return [Qe.b_stat];
  };
  Es.curContext = function() {
    return this.context[this.context.length - 1];
  };
  Es.braceIsBlock = function(e) {
    var t = this.curContext();
    return t === Qe.f_expr || t === Qe.f_stat ? !0 : e === S.colon && (t === Qe.b_stat || t === Qe.b_expr) ? !t.isExpr : e === S._return || e ===
    S.name && this.exprAllowed ? dr.test(this.input.slice(this.lastTokEnd, this.start)) : e === S._else || e === S.semi || e === S.eof || e ===
    S.parenR || e === S.arrow ? !0 : e === S.braceL ? t === Qe.b_stat : e === S._var || e === S._const || e === S.name ? !1 : !this.exprAllowed;
  };
  Es.inGeneratorContext = function() {
    for (var e = this.context.length - 1; e >= 1; e--) {
      var t = this.context[e];
      if (t.token === "function")
        return t.generator;
    }
    return !1;
  };
  Es.updateContext = function(e) {
    var t, r = this.type;
    r.keyword && e === S.dot ? this.exprAllowed = !1 : (t = r.updateContext) ? t.call(this, e) : this.exprAllowed = r.beforeExpr;
  };
  Es.overrideContext = function(e) {
    this.curContext() !== e && (this.context[this.context.length - 1] = e);
  };
  S.parenR.updateContext = S.braceR.updateContext = function() {
    if (this.context.length === 1) {
      this.exprAllowed = !0;
      return;
    }
    var e = this.context.pop();
    e === Qe.b_stat && this.curContext().token === "function" && (e = this.context.pop()), this.exprAllowed = !e.isExpr;
  };
  S.braceL.updateContext = function(e) {
    this.context.push(this.braceIsBlock(e) ? Qe.b_stat : Qe.b_expr), this.exprAllowed = !0;
  };
  S.dollarBraceL.updateContext = function() {
    this.context.push(Qe.b_tmpl), this.exprAllowed = !0;
  };
  S.parenL.updateContext = function(e) {
    var t = e === S._if || e === S._for || e === S._with || e === S._while;
    this.context.push(t ? Qe.p_stat : Qe.p_expr), this.exprAllowed = !0;
  };
  S.incDec.updateContext = function() {
  };
  S._function.updateContext = S._class.updateContext = function(e) {
    e.beforeExpr && e !== S._else && !(e === S.semi && this.curContext() !== Qe.p_stat) && !(e === S._return && dr.test(this.input.slice(this.
    lastTokEnd, this.start))) && !((e === S.colon || e === S.braceL) && this.curContext() === Qe.b_stat) ? this.context.push(Qe.f_expr) : this.
    context.push(Qe.f_stat), this.exprAllowed = !1;
  };
  S.colon.updateContext = function() {
    this.curContext().token === "function" && this.context.pop(), this.exprAllowed = !0;
  };
  S.backQuote.updateContext = function() {
    this.curContext() === Qe.q_tmpl ? this.context.pop() : this.context.push(Qe.q_tmpl), this.exprAllowed = !1;
  };
  S.star.updateContext = function(e) {
    if (e === S._function) {
      var t = this.context.length - 1;
      this.context[t] === Qe.f_expr ? this.context[t] = Qe.f_expr_gen : this.context[t] = Qe.f_gen;
    }
    this.exprAllowed = !0;
  };
  S.name.updateContext = function(e) {
    var t = !1;
    this.options.ecmaVersion >= 6 && e !== S.dot && (this.value === "of" && !this.exprAllowed || this.value === "yield" && this.inGeneratorContext()) &&
    (t = !0), this.exprAllowed = t;
  };
  xe = dt.prototype;
  xe.checkPropClash = function(e, t, r) {
    if (!(this.options.ecmaVersion >= 9 && e.type === "SpreadElement") && !(this.options.ecmaVersion >= 6 && (e.computed || e.method || e.shorthand))) {
      var n = e.key, i;
      switch (n.type) {
        case "Identifier":
          i = n.name;
          break;
        case "Literal":
          i = String(n.value);
          break;
        default:
          return;
      }
      var o = e.kind;
      if (this.options.ecmaVersion >= 6) {
        i === "__proto__" && o === "init" && (t.proto && (r ? r.doubleProto < 0 && (r.doubleProto = n.start) : this.raiseRecoverable(n.start,
        "Redefinition of __proto__ property")), t.proto = !0);
        return;
      }
      i = "$" + i;
      var a = t[i];
      if (a) {
        var u;
        o === "init" ? u = this.strict && a.init || a.get || a.set : u = a.init || a[o], u && this.raiseRecoverable(n.start, "Redefinition o\
f property");
      } else
        a = t[i] = {
          init: !1,
          get: !1,
          set: !1
        };
      a[o] = !0;
    }
  };
  xe.parseExpression = function(e, t) {
    var r = this.start, n = this.startLoc, i = this.parseMaybeAssign(e, t);
    if (this.type === S.comma) {
      var o = this.startNodeAt(r, n);
      for (o.expressions = [i]; this.eat(S.comma); )
        o.expressions.push(this.parseMaybeAssign(e, t));
      return this.finishNode(o, "SequenceExpression");
    }
    return i;
  };
  xe.parseMaybeAssign = function(e, t, r) {
    if (this.isContextual("yield")) {
      if (this.inGenerator)
        return this.parseYield(e);
      this.exprAllowed = !1;
    }
    var n = !1, i = -1, o = -1, a = -1;
    t ? (i = t.parenthesizedAssign, o = t.trailingComma, a = t.doubleProto, t.parenthesizedAssign = t.trailingComma = -1) : (t = new tl(), n =
    !0);
    var u = this.start, l = this.startLoc;
    (this.type === S.parenL || this.type === S.name) && (this.potentialArrowAt = this.start, this.potentialArrowInForAwait = e === "await");
    var c = this.parseMaybeConditional(e, t);
    if (r && (c = r.call(this, c, u, l)), this.type.isAssign) {
      var p = this.startNodeAt(u, l);
      return p.operator = this.value, this.type === S.eq && (c = this.toAssignable(c, !1, t)), n || (t.parenthesizedAssign = t.trailingComma =
      t.doubleProto = -1), t.shorthandAssign >= c.start && (t.shorthandAssign = -1), this.type === S.eq ? this.checkLValPattern(c) : this.checkLValSimple(
      c), p.left = c, this.next(), p.right = this.parseMaybeAssign(e), a > -1 && (t.doubleProto = a), this.finishNode(p, "AssignmentExpressi\
on");
    } else
      n && this.checkExpressionErrors(t, !0);
    return i > -1 && (t.parenthesizedAssign = i), o > -1 && (t.trailingComma = o), c;
  };
  xe.parseMaybeConditional = function(e, t) {
    var r = this.start, n = this.startLoc, i = this.parseExprOps(e, t);
    if (this.checkExpressionErrors(t))
      return i;
    if (this.eat(S.question)) {
      var o = this.startNodeAt(r, n);
      return o.test = i, o.consequent = this.parseMaybeAssign(), this.expect(S.colon), o.alternate = this.parseMaybeAssign(e), this.finishNode(
      o, "ConditionalExpression");
    }
    return i;
  };
  xe.parseExprOps = function(e, t) {
    var r = this.start, n = this.startLoc, i = this.parseMaybeUnary(t, !1, !1, e);
    return this.checkExpressionErrors(t) || i.start === r && i.type === "ArrowFunctionExpression" ? i : this.parseExprOp(i, r, n, -1, e);
  };
  xe.parseExprOp = function(e, t, r, n, i) {
    var o = this.type.binop;
    if (o != null && (!i || this.type !== S._in) && o > n) {
      var a = this.type === S.logicalOR || this.type === S.logicalAND, u = this.type === S.coalesce;
      u && (o = S.logicalAND.binop);
      var l = this.value;
      this.next();
      var c = this.start, p = this.startLoc, h = this.parseExprOp(this.parseMaybeUnary(null, !1, !1, i), c, p, o, i), f = this.buildBinary(t,
      r, e, h, l, a || u);
      return (a && this.type === S.coalesce || u && (this.type === S.logicalOR || this.type === S.logicalAND)) && this.raiseRecoverable(this.
      start, "Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses"), this.parseExprOp(f, t, r, n, i);
    }
    return e;
  };
  xe.buildBinary = function(e, t, r, n, i, o) {
    n.type === "PrivateIdentifier" && this.raise(n.start, "Private identifier can only be left side of binary expression");
    var a = this.startNodeAt(e, t);
    return a.left = r, a.operator = i, a.right = n, this.finishNode(a, o ? "LogicalExpression" : "BinaryExpression");
  };
  xe.parseMaybeUnary = function(e, t, r, n) {
    var i = this.start, o = this.startLoc, a;
    if (this.isContextual("await") && this.canAwait)
      a = this.parseAwait(n), t = !0;
    else if (this.type.prefix) {
      var u = this.startNode(), l = this.type === S.incDec;
      u.operator = this.value, u.prefix = !0, this.next(), u.argument = this.parseMaybeUnary(null, !0, l, n), this.checkExpressionErrors(e, !0),
      l ? this.checkLValSimple(u.argument) : this.strict && u.operator === "delete" && V1(u.argument) ? this.raiseRecoverable(u.start, "Dele\
ting local variable in strict mode") : u.operator === "delete" && hd(u.argument) ? this.raiseRecoverable(u.start, "Private fields can not be\
 deleted") : t = !0, a = this.finishNode(u, l ? "UpdateExpression" : "UnaryExpression");
    } else if (!t && this.type === S.privateId)
      (n || this.privateNameStack.length === 0) && this.options.checkPrivateFields && this.unexpected(), a = this.parsePrivateIdent(), this.
      type !== S._in && this.unexpected();
    else {
      if (a = this.parseExprSubscripts(e, n), this.checkExpressionErrors(e))
        return a;
      for (; this.type.postfix && !this.canInsertSemicolon(); ) {
        var c = this.startNodeAt(i, o);
        c.operator = this.value, c.prefix = !1, c.argument = a, this.checkLValSimple(a), this.next(), a = this.finishNode(c, "UpdateExpressi\
on");
      }
    }
    if (!r && this.eat(S.starstar))
      if (t)
        this.unexpected(this.lastTokStart);
      else
        return this.buildBinary(i, o, a, this.parseMaybeUnary(null, !1, !1, n), "**", !1);
    else
      return a;
  };
  s(V1, "isLocalVariableAccess");
  s(hd, "isPrivateFieldAccess");
  xe.parseExprSubscripts = function(e, t) {
    var r = this.start, n = this.startLoc, i = this.parseExprAtom(e, t);
    if (i.type === "ArrowFunctionExpression" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== ")")
      return i;
    var o = this.parseSubscripts(i, r, n, !1, t);
    return e && o.type === "MemberExpression" && (e.parenthesizedAssign >= o.start && (e.parenthesizedAssign = -1), e.parenthesizedBind >= o.
    start && (e.parenthesizedBind = -1), e.trailingComma >= o.start && (e.trailingComma = -1)), o;
  };
  xe.parseSubscripts = function(e, t, r, n, i) {
    for (var o = this.options.ecmaVersion >= 8 && e.type === "Identifier" && e.name === "async" && this.lastTokEnd === e.end && !this.canInsertSemicolon() &&
    e.end - e.start === 5 && this.potentialArrowAt === e.start, a = !1; ; ) {
      var u = this.parseSubscript(e, t, r, n, o, a, i);
      if (u.optional && (a = !0), u === e || u.type === "ArrowFunctionExpression") {
        if (a) {
          var l = this.startNodeAt(t, r);
          l.expression = u, u = this.finishNode(l, "ChainExpression");
        }
        return u;
      }
      e = u;
    }
  };
  xe.shouldParseAsyncArrow = function() {
    return !this.canInsertSemicolon() && this.eat(S.arrow);
  };
  xe.parseSubscriptAsyncArrow = function(e, t, r, n) {
    return this.parseArrowExpression(this.startNodeAt(e, t), r, !0, n);
  };
  xe.parseSubscript = function(e, t, r, n, i, o, a) {
    var u = this.options.ecmaVersion >= 11, l = u && this.eat(S.questionDot);
    n && l && this.raise(this.lastTokStart, "Optional chaining cannot appear in the callee of new expressions");
    var c = this.eat(S.bracketL);
    if (c || l && this.type !== S.parenL && this.type !== S.backQuote || this.eat(S.dot)) {
      var p = this.startNodeAt(t, r);
      p.object = e, c ? (p.property = this.parseExpression(), this.expect(S.bracketR)) : this.type === S.privateId && e.type !== "Super" ? p.
      property = this.parsePrivateIdent() : p.property = this.parseIdent(this.options.allowReserved !== "never"), p.computed = !!c, u && (p.
      optional = l), e = this.finishNode(p, "MemberExpression");
    } else if (!n && this.eat(S.parenL)) {
      var h = new tl(), f = this.yieldPos, d = this.awaitPos, m = this.awaitIdentPos;
      this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0;
      var g = this.parseExprList(S.parenR, this.options.ecmaVersion >= 8, !1, h);
      if (i && !l && this.shouldParseAsyncArrow())
        return this.checkPatternErrors(h, !1), this.checkYieldAwaitInDefaultParams(), this.awaitIdentPos > 0 && this.raise(this.awaitIdentPos,
        "Cannot use 'await' as identifier inside an async function"), this.yieldPos = f, this.awaitPos = d, this.awaitIdentPos = m, this.parseSubscriptAsyncArrow(
        t, r, g, a);
      this.checkExpressionErrors(h, !0), this.yieldPos = f || this.yieldPos, this.awaitPos = d || this.awaitPos, this.awaitIdentPos = m || this.
      awaitIdentPos;
      var b = this.startNodeAt(t, r);
      b.callee = e, b.arguments = g, u && (b.optional = l), e = this.finishNode(b, "CallExpression");
    } else if (this.type === S.backQuote) {
      (l || o) && this.raise(this.start, "Optional chaining cannot appear in the tag of tagged template expressions");
      var y = this.startNodeAt(t, r);
      y.tag = e, y.quasi = this.parseTemplate({ isTagged: !0 }), e = this.finishNode(y, "TaggedTemplateExpression");
    }
    return e;
  };
  xe.parseExprAtom = function(e, t, r) {
    this.type === S.slash && this.readRegexp();
    var n, i = this.potentialArrowAt === this.start;
    switch (this.type) {
      case S._super:
        return this.allowSuper || this.raise(this.start, "'super' keyword outside a method"), n = this.startNode(), this.next(), this.type ===
        S.parenL && !this.allowDirectSuper && this.raise(n.start, "super() call outside constructor of a subclass"), this.type !== S.dot && this.
        type !== S.bracketL && this.type !== S.parenL && this.unexpected(), this.finishNode(n, "Super");
      case S._this:
        return n = this.startNode(), this.next(), this.finishNode(n, "ThisExpression");
      case S.name:
        var o = this.start, a = this.startLoc, u = this.containsEsc, l = this.parseIdent(!1);
        if (this.options.ecmaVersion >= 8 && !u && l.name === "async" && !this.canInsertSemicolon() && this.eat(S._function))
          return this.overrideContext(Qe.f_expr), this.parseFunction(this.startNodeAt(o, a), 0, !1, !0, t);
        if (i && !this.canInsertSemicolon()) {
          if (this.eat(S.arrow))
            return this.parseArrowExpression(this.startNodeAt(o, a), [l], !1, t);
          if (this.options.ecmaVersion >= 8 && l.name === "async" && this.type === S.name && !u && (!this.potentialArrowInForAwait || this.value !==
          "of" || this.containsEsc))
            return l = this.parseIdent(!1), (this.canInsertSemicolon() || !this.eat(S.arrow)) && this.unexpected(), this.parseArrowExpression(
            this.startNodeAt(o, a), [l], !0, t);
        }
        return l;
      case S.regexp:
        var c = this.value;
        return n = this.parseLiteral(c.value), n.regex = { pattern: c.pattern, flags: c.flags }, n;
      case S.num:
      case S.string:
        return this.parseLiteral(this.value);
      case S._null:
      case S._true:
      case S._false:
        return n = this.startNode(), n.value = this.type === S._null ? null : this.type === S._true, n.raw = this.type.keyword, this.next(),
        this.finishNode(n, "Literal");
      case S.parenL:
        var p = this.start, h = this.parseParenAndDistinguishExpression(i, t);
        return e && (e.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(h) && (e.parenthesizedAssign = p), e.parenthesizedBind < 0 && (e.
        parenthesizedBind = p)), h;
      case S.bracketL:
        return n = this.startNode(), this.next(), n.elements = this.parseExprList(S.bracketR, !0, !0, e), this.finishNode(n, "ArrayExpressio\
n");
      case S.braceL:
        return this.overrideContext(Qe.b_expr), this.parseObj(!1, e);
      case S._function:
        return n = this.startNode(), this.next(), this.parseFunction(n, 0);
      case S._class:
        return this.parseClass(this.startNode(), !1);
      case S._new:
        return this.parseNew();
      case S.backQuote:
        return this.parseTemplate();
      case S._import:
        return this.options.ecmaVersion >= 11 ? this.parseExprImport(r) : this.unexpected();
      default:
        return this.parseExprAtomDefault();
    }
  };
  xe.parseExprAtomDefault = function() {
    this.unexpected();
  };
  xe.parseExprImport = function(e) {
    var t = this.startNode();
    if (this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword import"), this.next(), this.type === S.parenL && !e)
      return this.parseDynamicImport(t);
    if (this.type === S.dot) {
      var r = this.startNodeAt(t.start, t.loc && t.loc.start);
      return r.name = "import", t.meta = this.finishNode(r, "Identifier"), this.parseImportMeta(t);
    } else
      this.unexpected();
  };
  xe.parseDynamicImport = function(e) {
    if (this.next(), e.source = this.parseMaybeAssign(), this.options.ecmaVersion >= 16)
      this.eat(S.parenR) ? e.options = null : (this.expect(S.comma), this.afterTrailingComma(S.parenR) ? e.options = null : (e.options = this.
      parseMaybeAssign(), this.eat(S.parenR) || (this.expect(S.comma), this.afterTrailingComma(S.parenR) || this.unexpected())));
    else if (!this.eat(S.parenR)) {
      var t = this.start;
      this.eat(S.comma) && this.eat(S.parenR) ? this.raiseRecoverable(t, "Trailing comma is not allowed in import()") : this.unexpected(t);
    }
    return this.finishNode(e, "ImportExpression");
  };
  xe.parseImportMeta = function(e) {
    this.next();
    var t = this.containsEsc;
    return e.property = this.parseIdent(!0), e.property.name !== "meta" && this.raiseRecoverable(e.property.start, "The only valid meta prop\
erty for import is 'import.meta'"), t && this.raiseRecoverable(e.start, "'import.meta' must not contain escaped characters"), this.options.sourceType !==
    "module" && !this.options.allowImportExportEverywhere && this.raiseRecoverable(e.start, "Cannot use 'import.meta' outside a module"), this.
    finishNode(e, "MetaProperty");
  };
  xe.parseLiteral = function(e) {
    var t = this.startNode();
    return t.value = e, t.raw = this.input.slice(this.start, this.end), t.raw.charCodeAt(t.raw.length - 1) === 110 && (t.bigint = t.raw.slice(
    0, -1).replace(/_/g, "")), this.next(), this.finishNode(t, "Literal");
  };
  xe.parseParenExpression = function() {
    this.expect(S.parenL);
    var e = this.parseExpression();
    return this.expect(S.parenR), e;
  };
  xe.shouldParseArrow = function(e) {
    return !this.canInsertSemicolon();
  };
  xe.parseParenAndDistinguishExpression = function(e, t) {
    var r = this.start, n = this.startLoc, i, o = this.options.ecmaVersion >= 8;
    if (this.options.ecmaVersion >= 6) {
      this.next();
      var a = this.start, u = this.startLoc, l = [], c = !0, p = !1, h = new tl(), f = this.yieldPos, d = this.awaitPos, m;
      for (this.yieldPos = 0, this.awaitPos = 0; this.type !== S.parenR; )
        if (c ? c = !1 : this.expect(S.comma), o && this.afterTrailingComma(S.parenR, !0)) {
          p = !0;
          break;
        } else if (this.type === S.ellipsis) {
          m = this.start, l.push(this.parseParenItem(this.parseRestBinding())), this.type === S.comma && this.raiseRecoverable(
            this.start,
            "Comma is not permitted after the rest element"
          );
          break;
        } else
          l.push(this.parseMaybeAssign(!1, h, this.parseParenItem));
      var g = this.lastTokEnd, b = this.lastTokEndLoc;
      if (this.expect(S.parenR), e && this.shouldParseArrow(l) && this.eat(S.arrow))
        return this.checkPatternErrors(h, !1), this.checkYieldAwaitInDefaultParams(), this.yieldPos = f, this.awaitPos = d, this.parseParenArrowList(
        r, n, l, t);
      (!l.length || p) && this.unexpected(this.lastTokStart), m && this.unexpected(m), this.checkExpressionErrors(h, !0), this.yieldPos = f ||
      this.yieldPos, this.awaitPos = d || this.awaitPos, l.length > 1 ? (i = this.startNodeAt(a, u), i.expressions = l, this.finishNodeAt(i,
      "SequenceExpression", g, b)) : i = l[0];
    } else
      i = this.parseParenExpression();
    if (this.options.preserveParens) {
      var y = this.startNodeAt(r, n);
      return y.expression = i, this.finishNode(y, "ParenthesizedExpression");
    } else
      return i;
  };
  xe.parseParenItem = function(e) {
    return e;
  };
  xe.parseParenArrowList = function(e, t, r, n) {
    return this.parseArrowExpression(this.startNodeAt(e, t), r, !1, n);
  };
  GL = [];
  xe.parseNew = function() {
    this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword new");
    var e = this.startNode();
    if (this.next(), this.options.ecmaVersion >= 6 && this.type === S.dot) {
      var t = this.startNodeAt(e.start, e.loc && e.loc.start);
      t.name = "new", e.meta = this.finishNode(t, "Identifier"), this.next();
      var r = this.containsEsc;
      return e.property = this.parseIdent(!0), e.property.name !== "target" && this.raiseRecoverable(e.property.start, "The only valid meta \
property for new is 'new.target'"), r && this.raiseRecoverable(e.start, "'new.target' must not contain escaped characters"), this.allowNewDotTarget ||
      this.raiseRecoverable(e.start, "'new.target' can only be used in functions and class static block"), this.finishNode(e, "MetaProperty");
    }
    var n = this.start, i = this.startLoc;
    return e.callee = this.parseSubscripts(this.parseExprAtom(null, !1, !0), n, i, !0, !1), this.eat(S.parenL) ? e.arguments = this.parseExprList(
    S.parenR, this.options.ecmaVersion >= 8, !1) : e.arguments = GL, this.finishNode(e, "NewExpression");
  };
  xe.parseTemplateElement = function(e) {
    var t = e.isTagged, r = this.startNode();
    return this.type === S.invalidTemplate ? (t || this.raiseRecoverable(this.start, "Bad escape sequence in untagged template literal"), r.
    value = {
      raw: this.value.replace(/\r\n?/g, `
`),
      cooked: null
    }) : r.value = {
      raw: this.input.slice(this.start, this.end).replace(/\r\n?/g, `
`),
      cooked: this.value
    }, this.next(), r.tail = this.type === S.backQuote, this.finishNode(r, "TemplateElement");
  };
  xe.parseTemplate = function(e) {
    e === void 0 && (e = {});
    var t = e.isTagged;
    t === void 0 && (t = !1);
    var r = this.startNode();
    this.next(), r.expressions = [];
    var n = this.parseTemplateElement({ isTagged: t });
    for (r.quasis = [n]; !n.tail; )
      this.type === S.eof && this.raise(this.pos, "Unterminated template literal"), this.expect(S.dollarBraceL), r.expressions.push(this.parseExpression()),
      this.expect(S.braceR), r.quasis.push(n = this.parseTemplateElement({ isTagged: t }));
    return this.next(), this.finishNode(r, "TemplateLiteral");
  };
  xe.isAsyncProp = function(e) {
    return !e.computed && e.key.type === "Identifier" && e.key.name === "async" && (this.type === S.name || this.type === S.num || this.type ===
    S.string || this.type === S.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type === S.star) && !dr.test(this.input.
    slice(this.lastTokEnd, this.start));
  };
  xe.parseObj = function(e, t) {
    var r = this.startNode(), n = !0, i = {};
    for (r.properties = [], this.next(); !this.eat(S.braceR); ) {
      if (n)
        n = !1;
      else if (this.expect(S.comma), this.options.ecmaVersion >= 5 && this.afterTrailingComma(S.braceR))
        break;
      var o = this.parseProperty(e, t);
      e || this.checkPropClash(o, i, t), r.properties.push(o);
    }
    return this.finishNode(r, e ? "ObjectPattern" : "ObjectExpression");
  };
  xe.parseProperty = function(e, t) {
    var r = this.startNode(), n, i, o, a;
    if (this.options.ecmaVersion >= 9 && this.eat(S.ellipsis))
      return e ? (r.argument = this.parseIdent(!1), this.type === S.comma && this.raiseRecoverable(this.start, "Comma is not permitted after\
 the rest element"), this.finishNode(r, "RestElement")) : (r.argument = this.parseMaybeAssign(!1, t), this.type === S.comma && t && t.trailingComma <
      0 && (t.trailingComma = this.start), this.finishNode(r, "SpreadElement"));
    this.options.ecmaVersion >= 6 && (r.method = !1, r.shorthand = !1, (e || t) && (o = this.start, a = this.startLoc), e || (n = this.eat(S.
    star)));
    var u = this.containsEsc;
    return this.parsePropertyName(r), !e && !u && this.options.ecmaVersion >= 8 && !n && this.isAsyncProp(r) ? (i = !0, n = this.options.ecmaVersion >=
    9 && this.eat(S.star), this.parsePropertyName(r)) : i = !1, this.parsePropertyValue(r, e, n, i, o, a, t, u), this.finishNode(r, "Propert\
y");
  };
  xe.parseGetterSetter = function(e) {
    var t = e.key.name;
    this.parsePropertyName(e), e.value = this.parseMethod(!1), e.kind = t;
    var r = e.kind === "get" ? 0 : 1;
    if (e.value.params.length !== r) {
      var n = e.value.start;
      e.kind === "get" ? this.raiseRecoverable(n, "getter should have no params") : this.raiseRecoverable(n, "setter should have exactly one\
 param");
    } else
      e.kind === "set" && e.value.params[0].type === "RestElement" && this.raiseRecoverable(e.value.params[0].start, "Setter cannot use rest\
 params");
  };
  xe.parsePropertyValue = function(e, t, r, n, i, o, a, u) {
    (r || n) && this.type === S.colon && this.unexpected(), this.eat(S.colon) ? (e.value = t ? this.parseMaybeDefault(this.start, this.startLoc) :
    this.parseMaybeAssign(!1, a), e.kind = "init") : this.options.ecmaVersion >= 6 && this.type === S.parenL ? (t && this.unexpected(), e.method =
    !0, e.value = this.parseMethod(r, n), e.kind = "init") : !t && !u && this.options.ecmaVersion >= 5 && !e.computed && e.key.type === "Ide\
ntifier" && (e.key.name === "get" || e.key.name === "set") && this.type !== S.comma && this.type !== S.braceR && this.type !== S.eq ? ((r ||
    n) && this.unexpected(), this.parseGetterSetter(e)) : this.options.ecmaVersion >= 6 && !e.computed && e.key.type === "Identifier" ? ((r ||
    n) && this.unexpected(), this.checkUnreserved(e.key), e.key.name === "await" && !this.awaitIdentPos && (this.awaitIdentPos = i), t ? e.value =
    this.parseMaybeDefault(i, o, this.copyNode(e.key)) : this.type === S.eq && a ? (a.shorthandAssign < 0 && (a.shorthandAssign = this.start),
    e.value = this.parseMaybeDefault(i, o, this.copyNode(e.key))) : e.value = this.copyNode(e.key), e.kind = "init", e.shorthand = !0) : this.
    unexpected();
  };
  xe.parsePropertyName = function(e) {
    if (this.options.ecmaVersion >= 6) {
      if (this.eat(S.bracketL))
        return e.computed = !0, e.key = this.parseMaybeAssign(), this.expect(S.bracketR), e.key;
      e.computed = !1;
    }
    return e.key = this.type === S.num || this.type === S.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "ne\
ver");
  };
  xe.initFunction = function(e) {
    e.id = null, this.options.ecmaVersion >= 6 && (e.generator = e.expression = !1), this.options.ecmaVersion >= 8 && (e.async = !1);
  };
  xe.parseMethod = function(e, t, r) {
    var n = this.startNode(), i = this.yieldPos, o = this.awaitPos, a = this.awaitIdentPos;
    return this.initFunction(n), this.options.ecmaVersion >= 6 && (n.generator = e), this.options.ecmaVersion >= 8 && (n.async = !!t), this.
    yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, this.enterScope(gd(t, n.generator) | Qu | (r ? L1 : 0)), this.expect(S.parenL),
    n.params = this.parseBindingList(S.parenR, !1, this.options.ecmaVersion >= 8), this.checkYieldAwaitInDefaultParams(), this.parseFunctionBody(
    n, !1, !0, !1), this.yieldPos = i, this.awaitPos = o, this.awaitIdentPos = a, this.finishNode(n, "FunctionExpression");
  };
  xe.parseArrowExpression = function(e, t, r, n) {
    var i = this.yieldPos, o = this.awaitPos, a = this.awaitIdentPos;
    return this.enterScope(gd(r, !1) | md), this.initFunction(e), this.options.ecmaVersion >= 8 && (e.async = !!r), this.yieldPos = 0, this.
    awaitPos = 0, this.awaitIdentPos = 0, e.params = this.toAssignableList(t, !0), this.parseFunctionBody(e, !0, !1, n), this.yieldPos = i, this.
    awaitPos = o, this.awaitIdentPos = a, this.finishNode(e, "ArrowFunctionExpression");
  };
  xe.parseFunctionBody = function(e, t, r, n) {
    var i = t && this.type !== S.braceL, o = this.strict, a = !1;
    if (i)
      e.body = this.parseMaybeAssign(n), e.expression = !0, this.checkParams(e, !1);
    else {
      var u = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(e.params);
      (!o || u) && (a = this.strictDirective(this.end), a && u && this.raiseRecoverable(e.start, "Illegal 'use strict' directive in function\
 with non-simple parameter list"));
      var l = this.labels;
      this.labels = [], a && (this.strict = !0), this.checkParams(e, !o && !a && !t && !r && this.isSimpleParamList(e.params)), this.strict &&
      e.id && this.checkLValSimple(e.id, q1), e.body = this.parseBlock(!1, void 0, a && !o), e.expression = !1, this.adaptDirectivePrologue(
      e.body.body), this.labels = l;
    }
    this.exitScope();
  };
  xe.isSimpleParamList = function(e) {
    for (var t = 0, r = e; t < r.length; t += 1) {
      var n = r[t];
      if (n.type !== "Identifier")
        return !1;
    }
    return !0;
  };
  xe.checkParams = function(e, t) {
    for (var r = /* @__PURE__ */ Object.create(null), n = 0, i = e.params; n < i.length; n += 1) {
      var o = i[n];
      this.checkLValInnerPattern(o, yd, t ? null : r);
    }
  };
  xe.parseExprList = function(e, t, r, n) {
    for (var i = [], o = !0; !this.eat(e); ) {
      if (o)
        o = !1;
      else if (this.expect(S.comma), t && this.afterTrailingComma(e))
        break;
      var a = void 0;
      r && this.type === S.comma ? a = null : this.type === S.ellipsis ? (a = this.parseSpread(n), n && this.type === S.comma && n.trailingComma <
      0 && (n.trailingComma = this.start)) : a = this.parseMaybeAssign(!1, n), i.push(a);
    }
    return i;
  };
  xe.checkUnreserved = function(e) {
    var t = e.start, r = e.end, n = e.name;
    if (this.inGenerator && n === "yield" && this.raiseRecoverable(t, "Cannot use 'yield' as identifier inside a generator"), this.inAsync &&
    n === "await" && this.raiseRecoverable(t, "Cannot use 'await' as identifier inside an async function"), !(this.currentThisScope().flags &
    el) && n === "arguments" && this.raiseRecoverable(t, "Cannot use 'arguments' in class field initializer"), this.inClassStaticBlock && (n ===
    "arguments" || n === "await") && this.raise(t, "Cannot use " + n + " in class static initialization block"), this.keywords.test(n) && this.
    raise(t, "Unexpected keyword '" + n + "'"), !(this.options.ecmaVersion < 6 && this.input.slice(t, r).indexOf("\\") !== -1)) {
      var i = this.strict ? this.reservedWordsStrict : this.reservedWords;
      i.test(n) && (!this.inAsync && n === "await" && this.raiseRecoverable(t, "Cannot use keyword 'await' outside an async function"), this.
      raiseRecoverable(t, "The keyword '" + n + "' is reserved"));
    }
  };
  xe.parseIdent = function(e) {
    var t = this.parseIdentNode();
    return this.next(!!e), this.finishNode(t, "Identifier"), e || (this.checkUnreserved(t), t.name === "await" && !this.awaitIdentPos && (this.
    awaitIdentPos = t.start)), t;
  };
  xe.parseIdentNode = function() {
    var e = this.startNode();
    return this.type === S.name ? e.name = this.value : this.type.keyword ? (e.name = this.type.keyword, (e.name === "class" || e.name === "\
function") && (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46) && this.context.pop(), this.type =
    S.name) : this.unexpected(), e;
  };
  xe.parsePrivateIdent = function() {
    var e = this.startNode();
    return this.type === S.privateId ? e.name = this.value : this.unexpected(), this.next(), this.finishNode(e, "PrivateIdentifier"), this.options.
    checkPrivateFields && (this.privateNameStack.length === 0 ? this.raise(e.start, "Private field '#" + e.name + "' must be declared in an \
enclosing class") : this.privateNameStack[this.privateNameStack.length - 1].used.push(e)), e;
  };
  xe.parseYield = function(e) {
    this.yieldPos || (this.yieldPos = this.start);
    var t = this.startNode();
    return this.next(), this.type === S.semi || this.canInsertSemicolon() || this.type !== S.star && !this.type.startsExpr ? (t.delegate = !1,
    t.argument = null) : (t.delegate = this.eat(S.star), t.argument = this.parseMaybeAssign(e)), this.finishNode(t, "YieldExpression");
  };
  xe.parseAwait = function(e) {
    this.awaitPos || (this.awaitPos = this.start);
    var t = this.startNode();
    return this.next(), t.argument = this.parseMaybeUnary(null, !0, !1, e), this.finishNode(t, "AwaitExpression");
  };
  Xu = dt.prototype;
  Xu.raise = function(e, t) {
    var r = O1(this.input, e);
    t += " (" + r.line + ":" + r.column + ")", this.sourceFile && (t += " in " + this.sourceFile);
    var n = new SyntaxError(t);
    throw n.pos = e, n.loc = r, n.raisedAt = this.pos, n;
  };
  Xu.raiseRecoverable = Xu.raise;
  Xu.curPosition = function() {
    if (this.options.locations)
      return new qo(this.curLine, this.pos - this.lineStart);
  };
  Un = dt.prototype, JL = /* @__PURE__ */ s(function(t) {
    this.flags = t, this.var = [], this.lexical = [], this.functions = [];
  }, "Scope");
  Un.enterScope = function(e) {
    this.scopeStack.push(new JL(e));
  };
  Un.exitScope = function() {
    this.scopeStack.pop();
  };
  Un.treatFunctionsAsVarInScope = function(e) {
    return e.flags & vs || !this.inModule && e.flags & $o;
  };
  Un.declareName = function(e, t, r) {
    var n = !1;
    if (t === Dn) {
      var i = this.currentScope();
      n = i.lexical.indexOf(e) > -1 || i.functions.indexOf(e) > -1 || i.var.indexOf(e) > -1, i.lexical.push(e), this.inModule && i.flags & $o &&
      delete this.undefinedExports[e];
    } else if (t === M1) {
      var o = this.currentScope();
      o.lexical.push(e);
    } else if (t === j1) {
      var a = this.currentScope();
      this.treatFunctionsAsVar ? n = a.lexical.indexOf(e) > -1 : n = a.lexical.indexOf(e) > -1 || a.var.indexOf(e) > -1, a.functions.push(e);
    } else
      for (var u = this.scopeStack.length - 1; u >= 0; --u) {
        var l = this.scopeStack[u];
        if (l.lexical.indexOf(e) > -1 && !(l.flags & N1 && l.lexical[0] === e) || !this.treatFunctionsAsVarInScope(l) && l.functions.indexOf(
        e) > -1) {
          n = !0;
          break;
        }
        if (l.var.push(e), this.inModule && l.flags & $o && delete this.undefinedExports[e], l.flags & el)
          break;
      }
    n && this.raiseRecoverable(r, "Identifier '" + e + "' has already been declared");
  };
  Un.checkLocalExport = function(e) {
    this.scopeStack[0].lexical.indexOf(e.name) === -1 && this.scopeStack[0].var.indexOf(e.name) === -1 && (this.undefinedExports[e.name] = e);
  };
  Un.currentScope = function() {
    return this.scopeStack[this.scopeStack.length - 1];
  };
  Un.currentVarScope = function() {
    for (var e = this.scopeStack.length - 1; ; e--) {
      var t = this.scopeStack[e];
      if (t.flags & (el | Vo | bi))
        return t;
    }
  };
  Un.currentThisScope = function() {
    for (var e = this.scopeStack.length - 1; ; e--) {
      var t = this.scopeStack[e];
      if (t.flags & (el | Vo | bi) && !(t.flags & md))
        return t;
    }
  };
  rl = /* @__PURE__ */ s(function(t, r, n) {
    this.type = "", this.start = r, this.end = 0, t.options.locations && (this.loc = new Yu(t, n)), t.options.directSourceFile && (this.sourceFile =
    t.options.directSourceFile), t.options.ranges && (this.range = [r, 0]);
  }, "Node"), Uo = dt.prototype;
  Uo.startNode = function() {
    return new rl(this, this.start, this.startLoc);
  };
  Uo.startNodeAt = function(e, t) {
    return new rl(this, e, t);
  };
  s(U1, "finishNodeAt");
  Uo.finishNode = function(e, t) {
    return U1.call(this, e, t, this.lastTokEnd, this.lastTokEndLoc);
  };
  Uo.finishNodeAt = function(e, t, r, n) {
    return U1.call(this, e, t, r, n);
  };
  Uo.copyNode = function(e) {
    var t = new rl(this, e.start, this.startLoc);
    for (var r in e)
      t[r] = e[r];
    return t;
  };
  ZL = "Gara Garay Gukh Gurung_Khema Hrkt Katakana_Or_Hiragana Kawi Kirat_Rai Krai Nag_Mundari Nagm Ol_Onal Onao Sunu Sunuwar Todhri Todr Tu\
lu_Tigalari Tutg Unknown Zzzz", W1 = "ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case\
_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF\
 Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Compo\
nent Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binar\
y_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowe\
rcase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indic\
ator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White\
_Space space XID_Continue XIDC XID_Start XIDS", z1 = W1 + " Extended_Pictographic", H1 = z1, G1 = H1 + " EBase EComp EMod EPres ExtPict", J1 =
  G1, XL = J1, KL = {
    9: W1,
    10: z1,
    11: H1,
    12: G1,
    13: J1,
    14: XL
  }, YL = "Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequen\
ce RGI_Emoji", QL = {
    9: "",
    10: "",
    11: "",
    12: "",
    13: "",
    14: YL
  }, F1 = "Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Num\
ber Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_L\
etter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C \
Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z S\
pace_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu", Z1 = "Adlam Adlm Ahom Anatol\
ian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks B\
opomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham\
 Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egypti\
an_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru\
 Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phl\
i Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khud\
awadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam \
Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hierog\
lyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Og\
ham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old\
_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahl\
avi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Som\
peng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri\
 Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wa\
ra Yi Yiii Zanabazar_Square Zanb", X1 = Z1 + " Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian \
Sogo Sogdian Sogd", K1 = X1 + " Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho", Y1 = K1 + " Chorasmian Chrs Diak Div\
es_Akuru Khitan_Small_Script Kits Yezi Yezidi", Q1 = Y1 + " Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith", ej = Q1 + " " +
  ZL, tj = {
    9: Z1,
    10: X1,
    11: K1,
    12: Y1,
    13: Q1,
    14: ej
  }, eC = {};
  s(rj, "buildUnicodeData");
  for (Gu = 0, ud = [9, 10, 11, 12, 13, 14]; Gu < ud.length; Gu += 1)
    _1 = ud[Gu], rj(_1);
  oe = dt.prototype, Ku = /* @__PURE__ */ s(function(t, r) {
    this.parent = t, this.base = r || this;
  }, "BranchID");
  Ku.prototype.separatedFrom = /* @__PURE__ */ s(function(t) {
    for (var r = this; r; r = r.parent)
      for (var n = t; n; n = n.parent)
        if (r.base === n.base && r !== n)
          return !0;
    return !1;
  }, "separatedFrom");
  Ku.prototype.sibling = /* @__PURE__ */ s(function() {
    return new Ku(this.parent, this.base);
  }, "sibling");
  Jr = /* @__PURE__ */ s(function(t) {
    this.parser = t, this.validFlags = "gim" + (t.options.ecmaVersion >= 6 ? "uy" : "") + (t.options.ecmaVersion >= 9 ? "s" : "") + (t.options.
    ecmaVersion >= 13 ? "d" : "") + (t.options.ecmaVersion >= 15 ? "v" : ""), this.unicodeProperties = eC[t.options.ecmaVersion >= 14 ? 14 :
    t.options.ecmaVersion], this.source = "", this.flags = "", this.start = 0, this.switchU = !1, this.switchV = !1, this.switchN = !1, this.
    pos = 0, this.lastIntValue = 0, this.lastStringValue = "", this.lastAssertionIsQuantifiable = !1, this.numCapturingParens = 0, this.maxBackReference =
    0, this.groupNames = /* @__PURE__ */ Object.create(null), this.backReferenceNames = [], this.branchID = null;
  }, "RegExpValidationState");
  Jr.prototype.reset = /* @__PURE__ */ s(function(t, r, n) {
    var i = n.indexOf("v") !== -1, o = n.indexOf("u") !== -1;
    this.start = t | 0, this.source = r + "", this.flags = n, i && this.parser.options.ecmaVersion >= 15 ? (this.switchU = !0, this.switchV =
    !0, this.switchN = !0) : (this.switchU = o && this.parser.options.ecmaVersion >= 6, this.switchV = !1, this.switchN = o && this.parser.options.
    ecmaVersion >= 9);
  }, "reset");
  Jr.prototype.raise = /* @__PURE__ */ s(function(t) {
    this.parser.raiseRecoverable(this.start, "Invalid regular expression: /" + this.source + "/: " + t);
  }, "raise");
  Jr.prototype.at = /* @__PURE__ */ s(function(t, r) {
    r === void 0 && (r = !1);
    var n = this.source, i = n.length;
    if (t >= i)
      return -1;
    var o = n.charCodeAt(t);
    if (!(r || this.switchU) || o <= 55295 || o >= 57344 || t + 1 >= i)
      return o;
    var a = n.charCodeAt(t + 1);
    return a >= 56320 && a <= 57343 ? (o << 10) + a - 56613888 : o;
  }, "at");
  Jr.prototype.nextIndex = /* @__PURE__ */ s(function(t, r) {
    r === void 0 && (r = !1);
    var n = this.source, i = n.length;
    if (t >= i)
      return i;
    var o = n.charCodeAt(t), a;
    return !(r || this.switchU) || o <= 55295 || o >= 57344 || t + 1 >= i || (a = n.charCodeAt(t + 1)) < 56320 || a > 57343 ? t + 1 : t + 2;
  }, "nextIndex");
  Jr.prototype.current = /* @__PURE__ */ s(function(t) {
    return t === void 0 && (t = !1), this.at(this.pos, t);
  }, "current");
  Jr.prototype.lookahead = /* @__PURE__ */ s(function(t) {
    return t === void 0 && (t = !1), this.at(this.nextIndex(this.pos, t), t);
  }, "lookahead");
  Jr.prototype.advance = /* @__PURE__ */ s(function(t) {
    t === void 0 && (t = !1), this.pos = this.nextIndex(this.pos, t);
  }, "advance");
  Jr.prototype.eat = /* @__PURE__ */ s(function(t, r) {
    return r === void 0 && (r = !1), this.current(r) === t ? (this.advance(r), !0) : !1;
  }, "eat");
  Jr.prototype.eatChars = /* @__PURE__ */ s(function(t, r) {
    r === void 0 && (r = !1);
    for (var n = this.pos, i = 0, o = t; i < o.length; i += 1) {
      var a = o[i], u = this.at(n, r);
      if (u === -1 || u !== a)
        return !1;
      n = this.nextIndex(n, r);
    }
    return this.pos = n, !0;
  }, "eatChars");
  oe.validateRegExpFlags = function(e) {
    for (var t = e.validFlags, r = e.flags, n = !1, i = !1, o = 0; o < r.length; o++) {
      var a = r.charAt(o);
      t.indexOf(a) === -1 && this.raise(e.start, "Invalid regular expression flag"), r.indexOf(a, o + 1) > -1 && this.raise(e.start, "Duplic\
ate regular expression flag"), a === "u" && (n = !0), a === "v" && (i = !0);
    }
    this.options.ecmaVersion >= 15 && n && i && this.raise(e.start, "Invalid regular expression flag");
  };
  s(nj, "hasProp");
  oe.validateRegExpPattern = function(e) {
    this.regexp_pattern(e), !e.switchN && this.options.ecmaVersion >= 9 && nj(e.groupNames) && (e.switchN = !0, this.regexp_pattern(e));
  };
  oe.regexp_pattern = function(e) {
    e.pos = 0, e.lastIntValue = 0, e.lastStringValue = "", e.lastAssertionIsQuantifiable = !1, e.numCapturingParens = 0, e.maxBackReference =
    0, e.groupNames = /* @__PURE__ */ Object.create(null), e.backReferenceNames.length = 0, e.branchID = null, this.regexp_disjunction(e), e.
    pos !== e.source.length && (e.eat(
      41
      /* ) */
    ) && e.raise("Unmatched ')'"), (e.eat(
      93
      /* ] */
    ) || e.eat(
      125
      /* } */
    )) && e.raise("Lone quantifier brackets")), e.maxBackReference > e.numCapturingParens && e.raise("Invalid escape");
    for (var t = 0, r = e.backReferenceNames; t < r.length; t += 1) {
      var n = r[t];
      e.groupNames[n] || e.raise("Invalid named capture referenced");
    }
  };
  oe.regexp_disjunction = function(e) {
    var t = this.options.ecmaVersion >= 16;
    for (t && (e.branchID = new Ku(e.branchID, null)), this.regexp_alternative(e); e.eat(
      124
      /* | */
    ); )
      t && (e.branchID = e.branchID.sibling()), this.regexp_alternative(e);
    t && (e.branchID = e.branchID.parent), this.regexp_eatQuantifier(e, !0) && e.raise("Nothing to repeat"), e.eat(
      123
      /* { */
    ) && e.raise("Lone quantifier brackets");
  };
  oe.regexp_alternative = function(e) {
    for (; e.pos < e.source.length && this.regexp_eatTerm(e); )
      ;
  };
  oe.regexp_eatTerm = function(e) {
    return this.regexp_eatAssertion(e) ? (e.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(e) && e.switchU && e.raise("Invalid qua\
ntifier"), !0) : (e.switchU ? this.regexp_eatAtom(e) : this.regexp_eatExtendedAtom(e)) ? (this.regexp_eatQuantifier(e), !0) : !1;
  };
  oe.regexp_eatAssertion = function(e) {
    var t = e.pos;
    if (e.lastAssertionIsQuantifiable = !1, e.eat(
      94
      /* ^ */
    ) || e.eat(
      36
      /* $ */
    ))
      return !0;
    if (e.eat(
      92
      /* \ */
    )) {
      if (e.eat(
        66
        /* B */
      ) || e.eat(
        98
        /* b */
      ))
        return !0;
      e.pos = t;
    }
    if (e.eat(
      40
      /* ( */
    ) && e.eat(
      63
      /* ? */
    )) {
      var r = !1;
      if (this.options.ecmaVersion >= 9 && (r = e.eat(
        60
        /* < */
      )), e.eat(
        61
        /* = */
      ) || e.eat(
        33
        /* ! */
      ))
        return this.regexp_disjunction(e), e.eat(
          41
          /* ) */
        ) || e.raise("Unterminated group"), e.lastAssertionIsQuantifiable = !r, !0;
    }
    return e.pos = t, !1;
  };
  oe.regexp_eatQuantifier = function(e, t) {
    return t === void 0 && (t = !1), this.regexp_eatQuantifierPrefix(e, t) ? (e.eat(
      63
      /* ? */
    ), !0) : !1;
  };
  oe.regexp_eatQuantifierPrefix = function(e, t) {
    return e.eat(
      42
      /* * */
    ) || e.eat(
      43
      /* + */
    ) || e.eat(
      63
      /* ? */
    ) || this.regexp_eatBracedQuantifier(e, t);
  };
  oe.regexp_eatBracedQuantifier = function(e, t) {
    var r = e.pos;
    if (e.eat(
      123
      /* { */
    )) {
      var n = 0, i = -1;
      if (this.regexp_eatDecimalDigits(e) && (n = e.lastIntValue, e.eat(
        44
        /* , */
      ) && this.regexp_eatDecimalDigits(e) && (i = e.lastIntValue), e.eat(
        125
        /* } */
      )))
        return i !== -1 && i < n && !t && e.raise("numbers out of order in {} quantifier"), !0;
      e.switchU && !t && e.raise("Incomplete quantifier"), e.pos = r;
    }
    return !1;
  };
  oe.regexp_eatAtom = function(e) {
    return this.regexp_eatPatternCharacters(e) || e.eat(
      46
      /* . */
    ) || this.regexp_eatReverseSolidusAtomEscape(e) || this.regexp_eatCharacterClass(e) || this.regexp_eatUncapturingGroup(e) || this.regexp_eatCapturingGroup(
    e);
  };
  oe.regexp_eatReverseSolidusAtomEscape = function(e) {
    var t = e.pos;
    if (e.eat(
      92
      /* \ */
    )) {
      if (this.regexp_eatAtomEscape(e))
        return !0;
      e.pos = t;
    }
    return !1;
  };
  oe.regexp_eatUncapturingGroup = function(e) {
    var t = e.pos;
    if (e.eat(
      40
      /* ( */
    )) {
      if (e.eat(
        63
        /* ? */
      )) {
        if (this.options.ecmaVersion >= 16) {
          var r = this.regexp_eatModifiers(e), n = e.eat(
            45
            /* - */
          );
          if (r || n) {
            for (var i = 0; i < r.length; i++) {
              var o = r.charAt(i);
              r.indexOf(o, i + 1) > -1 && e.raise("Duplicate regular expression modifiers");
            }
            if (n) {
              var a = this.regexp_eatModifiers(e);
              !r && !a && e.current() === 58 && e.raise("Invalid regular expression modifiers");
              for (var u = 0; u < a.length; u++) {
                var l = a.charAt(u);
                (a.indexOf(l, u + 1) > -1 || r.indexOf(l) > -1) && e.raise("Duplicate regular expression modifiers");
              }
            }
          }
        }
        if (e.eat(
          58
          /* : */
        )) {
          if (this.regexp_disjunction(e), e.eat(
            41
            /* ) */
          ))
            return !0;
          e.raise("Unterminated group");
        }
      }
      e.pos = t;
    }
    return !1;
  };
  oe.regexp_eatCapturingGroup = function(e) {
    if (e.eat(
      40
      /* ( */
    )) {
      if (this.options.ecmaVersion >= 9 ? this.regexp_groupSpecifier(e) : e.current() === 63 && e.raise("Invalid group"), this.regexp_disjunction(
      e), e.eat(
        41
        /* ) */
      ))
        return e.numCapturingParens += 1, !0;
      e.raise("Unterminated group");
    }
    return !1;
  };
  oe.regexp_eatModifiers = function(e) {
    for (var t = "", r = 0; (r = e.current()) !== -1 && ij(r); )
      t += gn(r), e.advance();
    return t;
  };
  s(ij, "isRegularExpressionModifier");
  oe.regexp_eatExtendedAtom = function(e) {
    return e.eat(
      46
      /* . */
    ) || this.regexp_eatReverseSolidusAtomEscape(e) || this.regexp_eatCharacterClass(e) || this.regexp_eatUncapturingGroup(e) || this.regexp_eatCapturingGroup(
    e) || this.regexp_eatInvalidBracedQuantifier(e) || this.regexp_eatExtendedPatternCharacter(e);
  };
  oe.regexp_eatInvalidBracedQuantifier = function(e) {
    return this.regexp_eatBracedQuantifier(e, !0) && e.raise("Nothing to repeat"), !1;
  };
  oe.regexp_eatSyntaxCharacter = function(e) {
    var t = e.current();
    return tC(t) ? (e.lastIntValue = t, e.advance(), !0) : !1;
  };
  s(tC, "isSyntaxCharacter");
  oe.regexp_eatPatternCharacters = function(e) {
    for (var t = e.pos, r = 0; (r = e.current()) !== -1 && !tC(r); )
      e.advance();
    return e.pos !== t;
  };
  oe.regexp_eatExtendedPatternCharacter = function(e) {
    var t = e.current();
    return t !== -1 && t !== 36 && !(t >= 40 && t <= 43) && t !== 46 && t !== 63 && t !== 91 && t !== 94 && t !== 124 ? (e.advance(), !0) : !1;
  };
  oe.regexp_groupSpecifier = function(e) {
    if (e.eat(
      63
      /* ? */
    )) {
      this.regexp_eatGroupName(e) || e.raise("Invalid group");
      var t = this.options.ecmaVersion >= 16, r = e.groupNames[e.lastStringValue];
      if (r)
        if (t)
          for (var n = 0, i = r; n < i.length; n += 1) {
            var o = i[n];
            o.separatedFrom(e.branchID) || e.raise("Duplicate capture group name");
          }
        else
          e.raise("Duplicate capture group name");
      t ? (r || (e.groupNames[e.lastStringValue] = [])).push(e.branchID) : e.groupNames[e.lastStringValue] = !0;
    }
  };
  oe.regexp_eatGroupName = function(e) {
    if (e.lastStringValue = "", e.eat(
      60
      /* < */
    )) {
      if (this.regexp_eatRegExpIdentifierName(e) && e.eat(
        62
        /* > */
      ))
        return !0;
      e.raise("Invalid capture group name");
    }
    return !1;
  };
  oe.regexp_eatRegExpIdentifierName = function(e) {
    if (e.lastStringValue = "", this.regexp_eatRegExpIdentifierStart(e)) {
      for (e.lastStringValue += gn(e.lastIntValue); this.regexp_eatRegExpIdentifierPart(e); )
        e.lastStringValue += gn(e.lastIntValue);
      return !0;
    }
    return !1;
  };
  oe.regexp_eatRegExpIdentifierStart = function(e) {
    var t = e.pos, r = this.options.ecmaVersion >= 11, n = e.current(r);
    return e.advance(r), n === 92 && this.regexp_eatRegExpUnicodeEscapeSequence(e, r) && (n = e.lastIntValue), sj(n) ? (e.lastIntValue = n, !0) :
    (e.pos = t, !1);
  };
  s(sj, "isRegExpIdentifierStart");
  oe.regexp_eatRegExpIdentifierPart = function(e) {
    var t = e.pos, r = this.options.ecmaVersion >= 11, n = e.current(r);
    return e.advance(r), n === 92 && this.regexp_eatRegExpUnicodeEscapeSequence(e, r) && (n = e.lastIntValue), oj(n) ? (e.lastIntValue = n, !0) :
    (e.pos = t, !1);
  };
  s(oj, "isRegExpIdentifierPart");
  oe.regexp_eatAtomEscape = function(e) {
    return this.regexp_eatBackReference(e) || this.regexp_eatCharacterClassEscape(e) || this.regexp_eatCharacterEscape(e) || e.switchN && this.
    regexp_eatKGroupName(e) ? !0 : (e.switchU && (e.current() === 99 && e.raise("Invalid unicode escape"), e.raise("Invalid escape")), !1);
  };
  oe.regexp_eatBackReference = function(e) {
    var t = e.pos;
    if (this.regexp_eatDecimalEscape(e)) {
      var r = e.lastIntValue;
      if (e.switchU)
        return r > e.maxBackReference && (e.maxBackReference = r), !0;
      if (r <= e.numCapturingParens)
        return !0;
      e.pos = t;
    }
    return !1;
  };
  oe.regexp_eatKGroupName = function(e) {
    if (e.eat(
      107
      /* k */
    )) {
      if (this.regexp_eatGroupName(e))
        return e.backReferenceNames.push(e.lastStringValue), !0;
      e.raise("Invalid named reference");
    }
    return !1;
  };
  oe.regexp_eatCharacterEscape = function(e) {
    return this.regexp_eatControlEscape(e) || this.regexp_eatCControlLetter(e) || this.regexp_eatZero(e) || this.regexp_eatHexEscapeSequence(
    e) || this.regexp_eatRegExpUnicodeEscapeSequence(e, !1) || !e.switchU && this.regexp_eatLegacyOctalEscapeSequence(e) || this.regexp_eatIdentityEscape(
    e);
  };
  oe.regexp_eatCControlLetter = function(e) {
    var t = e.pos;
    if (e.eat(
      99
      /* c */
    )) {
      if (this.regexp_eatControlLetter(e))
        return !0;
      e.pos = t;
    }
    return !1;
  };
  oe.regexp_eatZero = function(e) {
    return e.current() === 48 && !nl(e.lookahead()) ? (e.lastIntValue = 0, e.advance(), !0) : !1;
  };
  oe.regexp_eatControlEscape = function(e) {
    var t = e.current();
    return t === 116 ? (e.lastIntValue = 9, e.advance(), !0) : t === 110 ? (e.lastIntValue = 10, e.advance(), !0) : t === 118 ? (e.lastIntValue =
    11, e.advance(), !0) : t === 102 ? (e.lastIntValue = 12, e.advance(), !0) : t === 114 ? (e.lastIntValue = 13, e.advance(), !0) : !1;
  };
  oe.regexp_eatControlLetter = function(e) {
    var t = e.current();
    return rC(t) ? (e.lastIntValue = t % 32, e.advance(), !0) : !1;
  };
  s(rC, "isControlLetter");
  oe.regexp_eatRegExpUnicodeEscapeSequence = function(e, t) {
    t === void 0 && (t = !1);
    var r = e.pos, n = t || e.switchU;
    if (e.eat(
      117
      /* u */
    )) {
      if (this.regexp_eatFixedHexDigits(e, 4)) {
        var i = e.lastIntValue;
        if (n && i >= 55296 && i <= 56319) {
          var o = e.pos;
          if (e.eat(
            92
            /* \ */
          ) && e.eat(
            117
            /* u */
          ) && this.regexp_eatFixedHexDigits(e, 4)) {
            var a = e.lastIntValue;
            if (a >= 56320 && a <= 57343)
              return e.lastIntValue = (i - 55296) * 1024 + (a - 56320) + 65536, !0;
          }
          e.pos = o, e.lastIntValue = i;
        }
        return !0;
      }
      if (n && e.eat(
        123
        /* { */
      ) && this.regexp_eatHexDigits(e) && e.eat(
        125
        /* } */
      ) && aj(e.lastIntValue))
        return !0;
      n && e.raise("Invalid unicode escape"), e.pos = r;
    }
    return !1;
  };
  s(aj, "isValidUnicode");
  oe.regexp_eatIdentityEscape = function(e) {
    if (e.switchU)
      return this.regexp_eatSyntaxCharacter(e) ? !0 : e.eat(
        47
        /* / */
      ) ? (e.lastIntValue = 47, !0) : !1;
    var t = e.current();
    return t !== 99 && (!e.switchN || t !== 107) ? (e.lastIntValue = t, e.advance(), !0) : !1;
  };
  oe.regexp_eatDecimalEscape = function(e) {
    e.lastIntValue = 0;
    var t = e.current();
    if (t >= 49 && t <= 57) {
      do
        e.lastIntValue = 10 * e.lastIntValue + (t - 48), e.advance();
      while ((t = e.current()) >= 48 && t <= 57);
      return !0;
    }
    return !1;
  };
  nC = 0, yn = 1, fr = 2;
  oe.regexp_eatCharacterClassEscape = function(e) {
    var t = e.current();
    if (uj(t))
      return e.lastIntValue = -1, e.advance(), yn;
    var r = !1;
    if (e.switchU && this.options.ecmaVersion >= 9 && ((r = t === 80) || t === 112)) {
      e.lastIntValue = -1, e.advance();
      var n;
      if (e.eat(
        123
        /* { */
      ) && (n = this.regexp_eatUnicodePropertyValueExpression(e)) && e.eat(
        125
        /* } */
      ))
        return r && n === fr && e.raise("Invalid property name"), n;
      e.raise("Invalid property name");
    }
    return nC;
  };
  s(uj, "isCharacterClassEscape");
  oe.regexp_eatUnicodePropertyValueExpression = function(e) {
    var t = e.pos;
    if (this.regexp_eatUnicodePropertyName(e) && e.eat(
      61
      /* = */
    )) {
      var r = e.lastStringValue;
      if (this.regexp_eatUnicodePropertyValue(e)) {
        var n = e.lastStringValue;
        return this.regexp_validateUnicodePropertyNameAndValue(e, r, n), yn;
      }
    }
    if (e.pos = t, this.regexp_eatLoneUnicodePropertyNameOrValue(e)) {
      var i = e.lastStringValue;
      return this.regexp_validateUnicodePropertyNameOrValue(e, i);
    }
    return nC;
  };
  oe.regexp_validateUnicodePropertyNameAndValue = function(e, t, r) {
    bs(e.unicodeProperties.nonBinary, t) || e.raise("Invalid property name"), e.unicodeProperties.nonBinary[t].test(r) || e.raise("Invalid p\
roperty value");
  };
  oe.regexp_validateUnicodePropertyNameOrValue = function(e, t) {
    if (e.unicodeProperties.binary.test(t))
      return yn;
    if (e.switchV && e.unicodeProperties.binaryOfStrings.test(t))
      return fr;
    e.raise("Invalid property name");
  };
  oe.regexp_eatUnicodePropertyName = function(e) {
    var t = 0;
    for (e.lastStringValue = ""; iC(t = e.current()); )
      e.lastStringValue += gn(t), e.advance();
    return e.lastStringValue !== "";
  };
  s(iC, "isUnicodePropertyNameCharacter");
  oe.regexp_eatUnicodePropertyValue = function(e) {
    var t = 0;
    for (e.lastStringValue = ""; lj(t = e.current()); )
      e.lastStringValue += gn(t), e.advance();
    return e.lastStringValue !== "";
  };
  s(lj, "isUnicodePropertyValueCharacter");
  oe.regexp_eatLoneUnicodePropertyNameOrValue = function(e) {
    return this.regexp_eatUnicodePropertyValue(e);
  };
  oe.regexp_eatCharacterClass = function(e) {
    if (e.eat(
      91
      /* [ */
    )) {
      var t = e.eat(
        94
        /* ^ */
      ), r = this.regexp_classContents(e);
      return e.eat(
        93
        /* ] */
      ) || e.raise("Unterminated character class"), t && r === fr && e.raise("Negated character class may contain strings"), !0;
    }
    return !1;
  };
  oe.regexp_classContents = function(e) {
    return e.current() === 93 ? yn : e.switchV ? this.regexp_classSetExpression(e) : (this.regexp_nonEmptyClassRanges(e), yn);
  };
  oe.regexp_nonEmptyClassRanges = function(e) {
    for (; this.regexp_eatClassAtom(e); ) {
      var t = e.lastIntValue;
      if (e.eat(
        45
        /* - */
      ) && this.regexp_eatClassAtom(e)) {
        var r = e.lastIntValue;
        e.switchU && (t === -1 || r === -1) && e.raise("Invalid character class"), t !== -1 && r !== -1 && t > r && e.raise("Range out of or\
der in character class");
      }
    }
  };
  oe.regexp_eatClassAtom = function(e) {
    var t = e.pos;
    if (e.eat(
      92
      /* \ */
    )) {
      if (this.regexp_eatClassEscape(e))
        return !0;
      if (e.switchU) {
        var r = e.current();
        (r === 99 || aC(r)) && e.raise("Invalid class escape"), e.raise("Invalid escape");
      }
      e.pos = t;
    }
    var n = e.current();
    return n !== 93 ? (e.lastIntValue = n, e.advance(), !0) : !1;
  };
  oe.regexp_eatClassEscape = function(e) {
    var t = e.pos;
    if (e.eat(
      98
      /* b */
    ))
      return e.lastIntValue = 8, !0;
    if (e.switchU && e.eat(
      45
      /* - */
    ))
      return e.lastIntValue = 45, !0;
    if (!e.switchU && e.eat(
      99
      /* c */
    )) {
      if (this.regexp_eatClassControlLetter(e))
        return !0;
      e.pos = t;
    }
    return this.regexp_eatCharacterClassEscape(e) || this.regexp_eatCharacterEscape(e);
  };
  oe.regexp_classSetExpression = function(e) {
    var t = yn, r;
    if (!this.regexp_eatClassSetRange(e)) if (r = this.regexp_eatClassSetOperand(e)) {
      r === fr && (t = fr);
      for (var n = e.pos; e.eatChars(
        [38, 38]
        /* && */
      ); ) {
        if (e.current() !== 38 && (r = this.regexp_eatClassSetOperand(e))) {
          r !== fr && (t = yn);
          continue;
        }
        e.raise("Invalid character in character class");
      }
      if (n !== e.pos)
        return t;
      for (; e.eatChars(
        [45, 45]
        /* -- */
      ); )
        this.regexp_eatClassSetOperand(e) || e.raise("Invalid character in character class");
      if (n !== e.pos)
        return t;
    } else
      e.raise("Invalid character in character class");
    for (; ; )
      if (!this.regexp_eatClassSetRange(e)) {
        if (r = this.regexp_eatClassSetOperand(e), !r)
          return t;
        r === fr && (t = fr);
      }
  };
  oe.regexp_eatClassSetRange = function(e) {
    var t = e.pos;
    if (this.regexp_eatClassSetCharacter(e)) {
      var r = e.lastIntValue;
      if (e.eat(
        45
        /* - */
      ) && this.regexp_eatClassSetCharacter(e)) {
        var n = e.lastIntValue;
        return r !== -1 && n !== -1 && r > n && e.raise("Range out of order in character class"), !0;
      }
      e.pos = t;
    }
    return !1;
  };
  oe.regexp_eatClassSetOperand = function(e) {
    return this.regexp_eatClassSetCharacter(e) ? yn : this.regexp_eatClassStringDisjunction(e) || this.regexp_eatNestedClass(e);
  };
  oe.regexp_eatNestedClass = function(e) {
    var t = e.pos;
    if (e.eat(
      91
      /* [ */
    )) {
      var r = e.eat(
        94
        /* ^ */
      ), n = this.regexp_classContents(e);
      if (e.eat(
        93
        /* ] */
      ))
        return r && n === fr && e.raise("Negated character class may contain strings"), n;
      e.pos = t;
    }
    if (e.eat(
      92
      /* \ */
    )) {
      var i = this.regexp_eatCharacterClassEscape(e);
      if (i)
        return i;
      e.pos = t;
    }
    return null;
  };
  oe.regexp_eatClassStringDisjunction = function(e) {
    var t = e.pos;
    if (e.eatChars(
      [92, 113]
      /* \q */
    )) {
      if (e.eat(
        123
        /* { */
      )) {
        var r = this.regexp_classStringDisjunctionContents(e);
        if (e.eat(
          125
          /* } */
        ))
          return r;
      } else
        e.raise("Invalid escape");
      e.pos = t;
    }
    return null;
  };
  oe.regexp_classStringDisjunctionContents = function(e) {
    for (var t = this.regexp_classString(e); e.eat(
      124
      /* | */
    ); )
      this.regexp_classString(e) === fr && (t = fr);
    return t;
  };
  oe.regexp_classString = function(e) {
    for (var t = 0; this.regexp_eatClassSetCharacter(e); )
      t++;
    return t === 1 ? yn : fr;
  };
  oe.regexp_eatClassSetCharacter = function(e) {
    var t = e.pos;
    if (e.eat(
      92
      /* \ */
    ))
      return this.regexp_eatCharacterEscape(e) || this.regexp_eatClassSetReservedPunctuator(e) ? !0 : e.eat(
        98
        /* b */
      ) ? (e.lastIntValue = 8, !0) : (e.pos = t, !1);
    var r = e.current();
    return r < 0 || r === e.lookahead() && cj(r) || pj(r) ? !1 : (e.advance(), e.lastIntValue = r, !0);
  };
  s(cj, "isClassSetReservedDoublePunctuatorCharacter");
  s(pj, "isClassSetSyntaxCharacter");
  oe.regexp_eatClassSetReservedPunctuator = function(e) {
    var t = e.current();
    return hj(t) ? (e.lastIntValue = t, e.advance(), !0) : !1;
  };
  s(hj, "isClassSetReservedPunctuator");
  oe.regexp_eatClassControlLetter = function(e) {
    var t = e.current();
    return nl(t) || t === 95 ? (e.lastIntValue = t % 32, e.advance(), !0) : !1;
  };
  oe.regexp_eatHexEscapeSequence = function(e) {
    var t = e.pos;
    if (e.eat(
      120
      /* x */
    )) {
      if (this.regexp_eatFixedHexDigits(e, 2))
        return !0;
      e.switchU && e.raise("Invalid escape"), e.pos = t;
    }
    return !1;
  };
  oe.regexp_eatDecimalDigits = function(e) {
    var t = e.pos, r = 0;
    for (e.lastIntValue = 0; nl(r = e.current()); )
      e.lastIntValue = 10 * e.lastIntValue + (r - 48), e.advance();
    return e.pos !== t;
  };
  s(nl, "isDecimalDigit");
  oe.regexp_eatHexDigits = function(e) {
    var t = e.pos, r = 0;
    for (e.lastIntValue = 0; sC(r = e.current()); )
      e.lastIntValue = 16 * e.lastIntValue + oC(r), e.advance();
    return e.pos !== t;
  };
  s(sC, "isHexDigit");
  s(oC, "hexToInt");
  oe.regexp_eatLegacyOctalEscapeSequence = function(e) {
    if (this.regexp_eatOctalDigit(e)) {
      var t = e.lastIntValue;
      if (this.regexp_eatOctalDigit(e)) {
        var r = e.lastIntValue;
        t <= 3 && this.regexp_eatOctalDigit(e) ? e.lastIntValue = t * 64 + r * 8 + e.lastIntValue : e.lastIntValue = t * 8 + r;
      } else
        e.lastIntValue = t;
      return !0;
    }
    return !1;
  };
  oe.regexp_eatOctalDigit = function(e) {
    var t = e.current();
    return aC(t) ? (e.lastIntValue = t - 48, e.advance(), !0) : (e.lastIntValue = 0, !1);
  };
  s(aC, "isOctalDigit");
  oe.regexp_eatFixedHexDigits = function(e, t) {
    var r = e.pos;
    e.lastIntValue = 0;
    for (var n = 0; n < t; ++n) {
      var i = e.current();
      if (!sC(i))
        return e.pos = r, !1;
      e.lastIntValue = 16 * e.lastIntValue + oC(i), e.advance();
    }
    return !0;
  };
  xd = /* @__PURE__ */ s(function(t) {
    this.type = t.type, this.value = t.value, this.start = t.start, this.end = t.end, t.options.locations && (this.loc = new Yu(t, t.startLoc,
    t.endLoc)), t.options.ranges && (this.range = [t.start, t.end]);
  }, "Token"), Be = dt.prototype;
  Be.next = function(e) {
    !e && this.type.keyword && this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword " + this.type.keyword), this.
    options.onToken && this.options.onToken(new xd(this)), this.lastTokEnd = this.end, this.lastTokStart = this.start, this.lastTokEndLoc = this.
    endLoc, this.lastTokStartLoc = this.startLoc, this.nextToken();
  };
  Be.getToken = function() {
    return this.next(), new xd(this);
  };
  typeof Symbol < "u" && (Be[Symbol.iterator] = function() {
    var e = this;
    return {
      next: /* @__PURE__ */ s(function() {
        var t = e.getToken();
        return {
          done: t.type === S.eof,
          value: t
        };
      }, "next")
    };
  });
  Be.nextToken = function() {
    var e = this.curContext();
    if ((!e || !e.preserveSpace) && this.skipSpace(), this.start = this.pos, this.options.locations && (this.startLoc = this.curPosition()),
    this.pos >= this.input.length)
      return this.finishToken(S.eof);
    if (e.override)
      return e.override(this);
    this.readToken(this.fullCharCodeAtPos());
  };
  Be.readToken = function(e) {
    return mn(e, this.options.ecmaVersion >= 6) || e === 92 ? this.readWord() : this.getTokenFromCode(e);
  };
  Be.fullCharCodeAtPos = function() {
    var e = this.input.charCodeAt(this.pos);
    if (e <= 55295 || e >= 56320)
      return e;
    var t = this.input.charCodeAt(this.pos + 1);
    return t <= 56319 || t >= 57344 ? e : (e << 10) + t - 56613888;
  };
  Be.skipBlockComment = function() {
    var e = this.options.onComment && this.curPosition(), t = this.pos, r = this.input.indexOf("*/", this.pos += 2);
    if (r === -1 && this.raise(this.pos - 2, "Unterminated comment"), this.pos = r + 2, this.options.locations)
      for (var n = void 0, i = t; (n = I1(this.input, i, this.pos)) > -1; )
        ++this.curLine, i = this.lineStart = n;
    this.options.onComment && this.options.onComment(
      !0,
      this.input.slice(t + 2, r),
      t,
      this.pos,
      e,
      this.curPosition()
    );
  };
  Be.skipLineComment = function(e) {
    for (var t = this.pos, r = this.options.onComment && this.curPosition(), n = this.input.charCodeAt(this.pos += e); this.pos < this.input.
    length && !xs(n); )
      n = this.input.charCodeAt(++this.pos);
    this.options.onComment && this.options.onComment(
      !1,
      this.input.slice(t + e, this.pos),
      t,
      this.pos,
      r,
      this.curPosition()
    );
  };
  Be.skipSpace = function() {
    e: for (; this.pos < this.input.length; ) {
      var e = this.input.charCodeAt(this.pos);
      switch (e) {
        case 32:
        case 160:
          ++this.pos;
          break;
        case 13:
          this.input.charCodeAt(this.pos + 1) === 10 && ++this.pos;
        case 10:
        case 8232:
        case 8233:
          ++this.pos, this.options.locations && (++this.curLine, this.lineStart = this.pos);
          break;
        case 47:
          switch (this.input.charCodeAt(this.pos + 1)) {
            case 42:
              this.skipBlockComment();
              break;
            case 47:
              this.skipLineComment(2);
              break;
            default:
              break e;
          }
          break;
        default:
          if (e > 8 && e < 14 || e >= 5760 && P1.test(String.fromCharCode(e)))
            ++this.pos;
          else
            break e;
      }
    }
  };
  Be.finishToken = function(e, t) {
    this.end = this.pos, this.options.locations && (this.endLoc = this.curPosition());
    var r = this.type;
    this.type = e, this.value = t, this.updateContext(r);
  };
  Be.readToken_dot = function() {
    var e = this.input.charCodeAt(this.pos + 1);
    if (e >= 48 && e <= 57)
      return this.readNumber(!0);
    var t = this.input.charCodeAt(this.pos + 2);
    return this.options.ecmaVersion >= 6 && e === 46 && t === 46 ? (this.pos += 3, this.finishToken(S.ellipsis)) : (++this.pos, this.finishToken(
    S.dot));
  };
  Be.readToken_slash = function() {
    var e = this.input.charCodeAt(this.pos + 1);
    return this.exprAllowed ? (++this.pos, this.readRegexp()) : e === 61 ? this.finishOp(S.assign, 2) : this.finishOp(S.slash, 1);
  };
  Be.readToken_mult_modulo_exp = function(e) {
    var t = this.input.charCodeAt(this.pos + 1), r = 1, n = e === 42 ? S.star : S.modulo;
    return this.options.ecmaVersion >= 7 && e === 42 && t === 42 && (++r, n = S.starstar, t = this.input.charCodeAt(this.pos + 2)), t === 61 ?
    this.finishOp(S.assign, r + 1) : this.finishOp(n, r);
  };
  Be.readToken_pipe_amp = function(e) {
    var t = this.input.charCodeAt(this.pos + 1);
    if (t === e) {
      if (this.options.ecmaVersion >= 12) {
        var r = this.input.charCodeAt(this.pos + 2);
        if (r === 61)
          return this.finishOp(S.assign, 3);
      }
      return this.finishOp(e === 124 ? S.logicalOR : S.logicalAND, 2);
    }
    return t === 61 ? this.finishOp(S.assign, 2) : this.finishOp(e === 124 ? S.bitwiseOR : S.bitwiseAND, 1);
  };
  Be.readToken_caret = function() {
    var e = this.input.charCodeAt(this.pos + 1);
    return e === 61 ? this.finishOp(S.assign, 2) : this.finishOp(S.bitwiseXOR, 1);
  };
  Be.readToken_plus_min = function(e) {
    var t = this.input.charCodeAt(this.pos + 1);
    return t === e ? t === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 && (this.lastTokEnd === 0 || dr.test(this.input.
    slice(this.lastTokEnd, this.pos))) ? (this.skipLineComment(3), this.skipSpace(), this.nextToken()) : this.finishOp(S.incDec, 2) : t === 61 ?
    this.finishOp(S.assign, 2) : this.finishOp(S.plusMin, 1);
  };
  Be.readToken_lt_gt = function(e) {
    var t = this.input.charCodeAt(this.pos + 1), r = 1;
    return t === e ? (r = e === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2, this.input.charCodeAt(this.pos + r) === 61 ? this.
    finishOp(S.assign, r + 1) : this.finishOp(S.bitShift, r)) : t === 33 && e === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) ===
    45 && this.input.charCodeAt(this.pos + 3) === 45 ? (this.skipLineComment(4), this.skipSpace(), this.nextToken()) : (t === 61 && (r = 2),
    this.finishOp(S.relational, r));
  };
  Be.readToken_eq_excl = function(e) {
    var t = this.input.charCodeAt(this.pos + 1);
    return t === 61 ? this.finishOp(S.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) : e === 61 && t === 62 && this.options.ecmaVersion >=
    6 ? (this.pos += 2, this.finishToken(S.arrow)) : this.finishOp(e === 61 ? S.eq : S.prefix, 1);
  };
  Be.readToken_question = function() {
    var e = this.options.ecmaVersion;
    if (e >= 11) {
      var t = this.input.charCodeAt(this.pos + 1);
      if (t === 46) {
        var r = this.input.charCodeAt(this.pos + 2);
        if (r < 48 || r > 57)
          return this.finishOp(S.questionDot, 2);
      }
      if (t === 63) {
        if (e >= 12) {
          var n = this.input.charCodeAt(this.pos + 2);
          if (n === 61)
            return this.finishOp(S.assign, 3);
        }
        return this.finishOp(S.coalesce, 2);
      }
    }
    return this.finishOp(S.question, 1);
  };
  Be.readToken_numberSign = function() {
    var e = this.options.ecmaVersion, t = 35;
    if (e >= 13 && (++this.pos, t = this.fullCharCodeAtPos(), mn(t, !0) || t === 92))
      return this.finishToken(S.privateId, this.readWord1());
    this.raise(this.pos, "Unexpected character '" + gn(t) + "'");
  };
  Be.getTokenFromCode = function(e) {
    switch (e) {
      // The interpretation of a dot depends on whether it is followed
      // by a digit or another two dots.
      case 46:
        return this.readToken_dot();
      // Punctuation tokens.
      case 40:
        return ++this.pos, this.finishToken(S.parenL);
      case 41:
        return ++this.pos, this.finishToken(S.parenR);
      case 59:
        return ++this.pos, this.finishToken(S.semi);
      case 44:
        return ++this.pos, this.finishToken(S.comma);
      case 91:
        return ++this.pos, this.finishToken(S.bracketL);
      case 93:
        return ++this.pos, this.finishToken(S.bracketR);
      case 123:
        return ++this.pos, this.finishToken(S.braceL);
      case 125:
        return ++this.pos, this.finishToken(S.braceR);
      case 58:
        return ++this.pos, this.finishToken(S.colon);
      case 96:
        if (this.options.ecmaVersion < 6)
          break;
        return ++this.pos, this.finishToken(S.backQuote);
      case 48:
        var t = this.input.charCodeAt(this.pos + 1);
        if (t === 120 || t === 88)
          return this.readRadixNumber(16);
        if (this.options.ecmaVersion >= 6) {
          if (t === 111 || t === 79)
            return this.readRadixNumber(8);
          if (t === 98 || t === 66)
            return this.readRadixNumber(2);
        }
      // Anything else beginning with a digit is an integer, octal
      // number, or float.
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
      case 54:
      case 55:
      case 56:
      case 57:
        return this.readNumber(!1);
      // Quotes produce strings.
      case 34:
      case 39:
        return this.readString(e);
      // Operators are parsed inline in tiny state machines. '=' (61) is
      // often referred to. `finishOp` simply skips the amount of
      // characters it is given as second argument, and returns a token
      // of the type given by its first argument.
      case 47:
        return this.readToken_slash();
      case 37:
      case 42:
        return this.readToken_mult_modulo_exp(e);
      case 124:
      case 38:
        return this.readToken_pipe_amp(e);
      case 94:
        return this.readToken_caret();
      case 43:
      case 45:
        return this.readToken_plus_min(e);
      case 60:
      case 62:
        return this.readToken_lt_gt(e);
      case 61:
      case 33:
        return this.readToken_eq_excl(e);
      case 63:
        return this.readToken_question();
      case 126:
        return this.finishOp(S.prefix, 1);
      case 35:
        return this.readToken_numberSign();
    }
    this.raise(this.pos, "Unexpected character '" + gn(e) + "'");
  };
  Be.finishOp = function(e, t) {
    var r = this.input.slice(this.pos, this.pos + t);
    return this.pos += t, this.finishToken(e, r);
  };
  Be.readRegexp = function() {
    for (var e, t, r = this.pos; ; ) {
      this.pos >= this.input.length && this.raise(r, "Unterminated regular expression");
      var n = this.input.charAt(this.pos);
      if (dr.test(n) && this.raise(r, "Unterminated regular expression"), e)
        e = !1;
      else {
        if (n === "[")
          t = !0;
        else if (n === "]" && t)
          t = !1;
        else if (n === "/" && !t)
          break;
        e = n === "\\";
      }
      ++this.pos;
    }
    var i = this.input.slice(r, this.pos);
    ++this.pos;
    var o = this.pos, a = this.readWord1();
    this.containsEsc && this.unexpected(o);
    var u = this.regexpState || (this.regexpState = new Jr(this));
    u.reset(r, i, a), this.validateRegExpFlags(u), this.validateRegExpPattern(u);
    var l = null;
    try {
      l = new RegExp(i, a);
    } catch {
    }
    return this.finishToken(S.regexp, { pattern: i, flags: a, value: l });
  };
  Be.readInt = function(e, t, r) {
    for (var n = this.options.ecmaVersion >= 12 && t === void 0, i = r && this.input.charCodeAt(this.pos) === 48, o = this.pos, a = 0, u = 0,
    l = 0, c = t ?? 1 / 0; l < c; ++l, ++this.pos) {
      var p = this.input.charCodeAt(this.pos), h = void 0;
      if (n && p === 95) {
        i && this.raiseRecoverable(this.pos, "Numeric separator is not allowed in legacy octal numeric literals"), u === 95 && this.raiseRecoverable(
        this.pos, "Numeric separator must be exactly one underscore"), l === 0 && this.raiseRecoverable(this.pos, "Numeric separator is not \
allowed at the first of digits"), u = p;
        continue;
      }
      if (p >= 97 ? h = p - 97 + 10 : p >= 65 ? h = p - 65 + 10 : p >= 48 && p <= 57 ? h = p - 48 : h = 1 / 0, h >= e)
        break;
      u = p, a = a * e + h;
    }
    return n && u === 95 && this.raiseRecoverable(this.pos - 1, "Numeric separator is not allowed at the last of digits"), this.pos === o ||
    t != null && this.pos - o !== t ? null : a;
  };
  s(fj, "stringToNumber");
  s(uC, "stringToBigInt");
  Be.readRadixNumber = function(e) {
    var t = this.pos;
    this.pos += 2;
    var r = this.readInt(e);
    return r == null && this.raise(this.start + 2, "Expected number in radix " + e), this.options.ecmaVersion >= 11 && this.input.charCodeAt(
    this.pos) === 110 ? (r = uC(this.input.slice(t, this.pos)), ++this.pos) : mn(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifi\
er directly after number"), this.finishToken(S.num, r);
  };
  Be.readNumber = function(e) {
    var t = this.pos;
    !e && this.readInt(10, void 0, !0) === null && this.raise(t, "Invalid number");
    var r = this.pos - t >= 2 && this.input.charCodeAt(t) === 48;
    r && this.strict && this.raise(t, "Invalid number");
    var n = this.input.charCodeAt(this.pos);
    if (!r && !e && this.options.ecmaVersion >= 11 && n === 110) {
      var i = uC(this.input.slice(t, this.pos));
      return ++this.pos, mn(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number"), this.finishToken(S.num, i);
    }
    r && /[89]/.test(this.input.slice(t, this.pos)) && (r = !1), n === 46 && !r && (++this.pos, this.readInt(10), n = this.input.charCodeAt(
    this.pos)), (n === 69 || n === 101) && !r && (n = this.input.charCodeAt(++this.pos), (n === 43 || n === 45) && ++this.pos, this.readInt(
    10) === null && this.raise(t, "Invalid number")), mn(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number");
    var o = fj(this.input.slice(t, this.pos), r);
    return this.finishToken(S.num, o);
  };
  Be.readCodePoint = function() {
    var e = this.input.charCodeAt(this.pos), t;
    if (e === 123) {
      this.options.ecmaVersion < 6 && this.unexpected();
      var r = ++this.pos;
      t = this.readHexChar(this.input.indexOf("}", this.pos) - this.pos), ++this.pos, t > 1114111 && this.invalidStringToken(r, "Code point \
out of bounds");
    } else
      t = this.readHexChar(4);
    return t;
  };
  Be.readString = function(e) {
    for (var t = "", r = ++this.pos; ; ) {
      this.pos >= this.input.length && this.raise(this.start, "Unterminated string constant");
      var n = this.input.charCodeAt(this.pos);
      if (n === e)
        break;
      n === 92 ? (t += this.input.slice(r, this.pos), t += this.readEscapedChar(!1), r = this.pos) : n === 8232 || n === 8233 ? (this.options.
      ecmaVersion < 10 && this.raise(this.start, "Unterminated string constant"), ++this.pos, this.options.locations && (this.curLine++, this.
      lineStart = this.pos)) : (xs(n) && this.raise(this.start, "Unterminated string constant"), ++this.pos);
    }
    return t += this.input.slice(r, this.pos++), this.finishToken(S.string, t);
  };
  lC = {};
  Be.tryReadTemplateToken = function() {
    this.inTemplateElement = !0;
    try {
      this.readTmplToken();
    } catch (e) {
      if (e === lC)
        this.readInvalidTemplateToken();
      else
        throw e;
    }
    this.inTemplateElement = !1;
  };
  Be.invalidStringToken = function(e, t) {
    if (this.inTemplateElement && this.options.ecmaVersion >= 9)
      throw lC;
    this.raise(e, t);
  };
  Be.readTmplToken = function() {
    for (var e = "", t = this.pos; ; ) {
      this.pos >= this.input.length && this.raise(this.start, "Unterminated template");
      var r = this.input.charCodeAt(this.pos);
      if (r === 96 || r === 36 && this.input.charCodeAt(this.pos + 1) === 123)
        return this.pos === this.start && (this.type === S.template || this.type === S.invalidTemplate) ? r === 36 ? (this.pos += 2, this.finishToken(
        S.dollarBraceL)) : (++this.pos, this.finishToken(S.backQuote)) : (e += this.input.slice(t, this.pos), this.finishToken(S.template, e));
      if (r === 92)
        e += this.input.slice(t, this.pos), e += this.readEscapedChar(!0), t = this.pos;
      else if (xs(r)) {
        switch (e += this.input.slice(t, this.pos), ++this.pos, r) {
          case 13:
            this.input.charCodeAt(this.pos) === 10 && ++this.pos;
          case 10:
            e += `
`;
            break;
          default:
            e += String.fromCharCode(r);
            break;
        }
        this.options.locations && (++this.curLine, this.lineStart = this.pos), t = this.pos;
      } else
        ++this.pos;
    }
  };
  Be.readInvalidTemplateToken = function() {
    for (; this.pos < this.input.length; this.pos++)
      switch (this.input[this.pos]) {
        case "\\":
          ++this.pos;
          break;
        case "$":
          if (this.input[this.pos + 1] !== "{")
            break;
        // fall through
        case "`":
          return this.finishToken(S.invalidTemplate, this.input.slice(this.start, this.pos));
        case "\r":
          this.input[this.pos + 1] === `
` && ++this.pos;
        // fall through
        case `
`:
        case "\u2028":
        case "\u2029":
          ++this.curLine, this.lineStart = this.pos + 1;
          break;
      }
    this.raise(this.start, "Unterminated template");
  };
  Be.readEscapedChar = function(e) {
    var t = this.input.charCodeAt(++this.pos);
    switch (++this.pos, t) {
      case 110:
        return `
`;
      // 'n' -> '\n'
      case 114:
        return "\r";
      // 'r' -> '\r'
      case 120:
        return String.fromCharCode(this.readHexChar(2));
      // 'x'
      case 117:
        return gn(this.readCodePoint());
      // 'u'
      case 116:
        return "	";
      // 't' -> '\t'
      case 98:
        return "\b";
      // 'b' -> '\b'
      case 118:
        return "\v";
      // 'v' -> '\u000b'
      case 102:
        return "\f";
      // 'f' -> '\f'
      case 13:
        this.input.charCodeAt(this.pos) === 10 && ++this.pos;
      // '\r\n'
      case 10:
        return this.options.locations && (this.lineStart = this.pos, ++this.curLine), "";
      case 56:
      case 57:
        if (this.strict && this.invalidStringToken(
          this.pos - 1,
          "Invalid escape sequence"
        ), e) {
          var r = this.pos - 1;
          this.invalidStringToken(
            r,
            "Invalid escape sequence in template string"
          );
        }
      default:
        if (t >= 48 && t <= 55) {
          var n = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0], i = parseInt(n, 8);
          return i > 255 && (n = n.slice(0, -1), i = parseInt(n, 8)), this.pos += n.length - 1, t = this.input.charCodeAt(this.pos), (n !== "\
0" || t === 56 || t === 57) && (this.strict || e) && this.invalidStringToken(
            this.pos - 1 - n.length,
            e ? "Octal literal in template string" : "Octal literal in strict mode"
          ), String.fromCharCode(i);
        }
        return xs(t) ? (this.options.locations && (this.lineStart = this.pos, ++this.curLine), "") : String.fromCharCode(t);
    }
  };
  Be.readHexChar = function(e) {
    var t = this.pos, r = this.readInt(16, e);
    return r === null && this.invalidStringToken(t, "Bad character escape sequence"), r;
  };
  Be.readWord1 = function() {
    this.containsEsc = !1;
    for (var e = "", t = !0, r = this.pos, n = this.options.ecmaVersion >= 6; this.pos < this.input.length; ) {
      var i = this.fullCharCodeAtPos();
      if (Ds(i, n))
        this.pos += i <= 65535 ? 1 : 2;
      else if (i === 92) {
        this.containsEsc = !0, e += this.input.slice(r, this.pos);
        var o = this.pos;
        this.input.charCodeAt(++this.pos) !== 117 && this.invalidStringToken(this.pos, "Expecting Unicode escape sequence \\uXXXX"), ++this.
        pos;
        var a = this.readCodePoint();
        (t ? mn : Ds)(a, n) || this.invalidStringToken(o, "Invalid Unicode escape"), e += gn(a), r = this.pos;
      } else
        break;
      t = !1;
    }
    return e + this.input.slice(r, this.pos);
  };
  Be.readWord = function() {
    var e = this.readWord1(), t = S.name;
    return this.keywords.test(e) && (t = fd[e]), this.finishToken(t, e);
  };
  dj = "8.14.1";
  dt.acorn = {
    Parser: dt,
    version: dj,
    defaultOptions: cd,
    Position: qo,
    SourceLocation: Yu,
    getLineInfo: O1,
    Node: rl,
    TokenType: Ne,
    tokTypes: S,
    keywordTypes: fd,
    TokContext: Pr,
    tokContexts: Qe,
    isIdentifierChar: Ds,
    isIdentifierStart: mn,
    Token: xd,
    isNewLine: xs,
    lineBreak: dr,
    lineBreakG: LL,
    nonASCIIwhitespace: P1
  };
});

// ../node_modules/@storybook/docs-mdx/dist/mdx-N42X6CFJ.js
var e2 = {};
pi(e2, {
  compile: () => Xw,
  compileSync: () => Kw,
  createProcessor: () => Xd,
  evaluate: () => wU,
  evaluateSync: () => SU,
  nodeTypes: () => Zw,
  run: () => Kd,
  runSync: () => Qw
});
import { default as Zr } from "path";
import { default as Dj } from "process";
import { fileURLToPath as xj } from "url";
function yr(e) {
  return !e || typeof e != "object" ? "" : "position" in e || "type" in e ? pC(e.position) : "start" in e || "end" in e ? pC(e) : "line" in e ||
  "column" in e ? Rd(e) : "";
}
function Rd(e) {
  return hC(e && e.line) + ":" + hC(e && e.column);
}
function pC(e) {
  return Rd(e && e.start) + "-" + Rd(e && e.end);
}
function hC(e) {
  return e && typeof e == "number" ? e : 1;
}
function fC(e) {
  return !!(e !== null && typeof e == "object" && "href" in e && e.href && "protocol" in e && e.protocol && // @ts-expect-error: indexing is fine.
  e.auth === void 0);
}
function vd(e, t) {
  if (e && e.includes(Zr.sep))
    throw new Error(
      "`" + t + "` cannot be a path: did not expect `" + Zr.sep + "`"
    );
}
function Ed(e, t) {
  if (!e)
    throw new Error("`" + t + "` cannot be empty");
}
function dC(e, t) {
  if (!e)
    throw new Error("Setting `" + t + "` requires `path` to be set too");
}
function bj(e) {
  return !!(e && typeof e == "object" && "byteLength" in e && "byteOffset" in e);
}
function hw(e, t) {
  let r = wj(e) ? e : new pw(e), { format: n, ...i } = t || {};
  return {
    file: r,
    options: {
      format: n === "md" || n === "mdx" ? n : r.extname && (i.mdExtensions || Cj).includes(r.extname) ? "md" : "mdx",
      ...i
    }
  };
}
function wj(e) {
  return !!(e && typeof e == "object" && "message" in e && "messages" in e);
}
function Sj() {
  return {
    enter: {
      mdxFlowExpression: Fj,
      mdxTextExpression: _j
    },
    exit: {
      mdxFlowExpression: mC,
      mdxFlowExpressionChunk: gC,
      mdxTextExpression: mC,
      mdxTextExpressionChunk: gC
    }
  };
}
function Aj() {
  return {
    handlers: {
      mdxFlowExpression: yC,
      mdxTextExpression: yC
    },
    unsafe: [
      { character: "{", inConstruct: ["phrasing"] },
      { atBreak: !0, character: "{" }
    ]
  };
}
function Fj(e) {
  this.enter({ type: "mdxFlowExpression", value: "" }, e), this.buffer();
}
function _j(e) {
  this.enter({ type: "mdxTextExpression", value: "" }, e), this.buffer();
}
function mC(e) {
  let t = this.resume(), r = e.estree, n = this.stack[this.stack.length - 1];
  n.type === "mdxFlowExpression" || n.type, this.exit(e), n.value = t, r && (n.data = { estree: r });
}
function gC(e) {
  this.config.enter.data.call(this, e), this.config.exit.data.call(this, e);
}
function yC(e) {
  return "{" + (e.value || "") + "}";
}
function DC(e, t) {
  let r = String(e);
  if (typeof t != "string")
    throw new TypeError("Expected character");
  let n = 0, i = r.indexOf(t);
  for (; i !== -1; )
    n++, i = r.indexOf(t, i + t.length);
  return n;
}
function fw(e) {
  let t = typeof e == "string" ? e.charCodeAt(0) : e;
  return t >= 48 && t <= 57;
}
function Tj(e) {
  let t = typeof e == "string" ? e.charCodeAt(0) : e;
  return t >= 97 && t <= 102 || t >= 65 && t <= 70 || t >= 48 && t <= 57;
}
function Ij(e) {
  let t = typeof e == "string" ? e.charCodeAt(0) : e;
  return t >= 97 && t <= 122 || t >= 65 && t <= 90;
}
function bC(e) {
  return Ij(e) || fw(e);
}
function Go(e) {
  return Pj.call(vC, e) ? vC[e] : !1;
}
function Oj(e, t = {}) {
  let r = typeof t.additional == "string" ? t.additional.charCodeAt(0) : t.additional, n = [], i = 0, o = -1, a = "", u, l;
  t.position && ("start" in t.position || "indent" in t.position ? (l = t.position.indent, u = t.position.start) : u = t.position);
  let c = (u ? u.line : 0) || 1, p = (u ? u.column : 0) || 1, h = d(), f;
  for (i--; ++i <= e.length; )
    if (f === 10 && (p = (l ? l[o] : 0) || 1), f = e.charCodeAt(i), f === 38) {
      let b = e.charCodeAt(i + 1);
      if (b === 9 || b === 10 || b === 12 || b === 32 || b === 38 || b === 60 || Number.isNaN(b) || r && b === r) {
        a += Cs(f), p++;
        continue;
      }
      let y = i + 1, E = y, A = y, k;
      if (b === 35) {
        A = ++E;
        let U = e.charCodeAt(A);
        U === 88 || U === 120 ? (k = "hexadecimal", A = ++E) : k = "decimal";
      } else
        k = "named";
      let O = "", w = "", C = "", T = k === "named" ? bC : k === "decimal" ? fw : Tj;
      for (A--; ++A <= e.length; ) {
        let U = e.charCodeAt(A);
        if (!T(U))
          break;
        C += Cs(U), k === "named" && kj.includes(C) && (O = C, w = Go(C));
      }
      let F = e.charCodeAt(A) === 59;
      if (F) {
        A++;
        let U = k === "named" ? Go(C) : !1;
        U && (O = C, w = U);
      }
      let $ = 1 + A - y, R = "";
      if (!(!F && t.nonTerminated === !1))
        if (!C)
          k !== "named" && m(4, $);
        else if (k === "named") {
          if (F && !w)
            m(5, 1);
          else if (O !== C && (A = E + O.length, $ = 1 + A - E, F = !1), !F) {
            let U = O ? 1 : 3;
            if (t.attribute) {
              let W = e.charCodeAt(A);
              W === 61 ? (m(U, $), w = "") : bC(W) ? w = "" : m(U, $);
            } else
              m(U, $);
          }
          R = w;
        } else {
          F || m(2, $);
          let U = Number.parseInt(
            C,
            k === "hexadecimal" ? 16 : 10
          );
          if (Rj(U))
            m(7, $), R = Cs(
              65533
              /* `�` */
            );
          else if (U in xC)
            m(6, $), R = xC[U];
          else {
            let W = "";
            Nj(U) && m(6, $), U > 65535 && (U -= 65536, W += Cs(U >>> 10 | 55296), U = 56320 | U & 1023), R = W + Cs(U);
          }
        }
      if (R) {
        g(), h = d(), i = A - 1, p += A - y + 1, n.push(R);
        let U = d();
        U.offset++, t.reference && t.reference.call(
          t.referenceContext,
          R,
          { start: h, end: U },
          e.slice(y - 1, A)
        ), h = U;
      } else
        C = e.slice(y - 1, A), a += C, p += C.length, i = A - 1;
    } else
      f === 10 && (c++, o++, p = 0), Number.isNaN(f) ? g() : (a += Cs(f), p++);
  return n.join("");
  function d() {
    return {
      line: c,
      column: p,
      offset: i + ((u ? u.offset : 0) || 0)
    };
  }
  function m(b, y) {
    let E;
    t.warning && (E = d(), E.column += y, E.offset += y, t.warning.call(
      t.warningContext,
      Bj[b],
      E,
      b
    ));
  }
  function g() {
    a && (n.push(a), t.text && t.text.call(t.textContext, a, {
      start: h,
      end: d()
    }), a = "");
  }
}
function Rj(e) {
  return e >= 55296 && e <= 57343 || e > 1114111;
}
function Nj(e) {
  return e >= 1 && e <= 8 || e === 11 || e >= 13 && e <= 31 || e >= 127 && e <= 159 || e >= 64976 && e <= 65007 || (e & 65535) === 65535 || (e &
  65535) === 65534;
}
function Lj(e, t) {
  if (e = e.replace(
    t.subset ? jj(t.subset) : /["&'<>`]/g,
    n
  ), t.subset || t.escapeOnly)
    return e;
  return e.replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g, r).replace(
    // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape
    /[\x01-\t\v\f\x0E-\x1F\x7F\x81\x8D\x8F\x90\x9D\xA0-\uFFFF]/g,
    n
  );
  function r(i, o, a) {
    return t.format(
      (i.charCodeAt(0) - 55296) * 1024 + i.charCodeAt(1) - 56320 + 65536,
      a.charCodeAt(o + 2),
      t
    );
  }
  function n(i, o, a) {
    return t.format(
      i.charCodeAt(0),
      a.charCodeAt(o + 1),
      t
    );
  }
}
function jj(e) {
  let t = [], r = -1;
  for (; ++r < e.length; )
    t.push(e[r].replace(/[|\\{}()[\]^$+*?.]/g, "\\$&"));
  return new RegExp("(?:" + t.join("|") + ")", "g");
}
function Mj(e) {
  return "&#x" + e.toString(16).toUpperCase() + ";";
}
function qj(e, t) {
  return Lj(e, Object.assign({ format: Mj }, t));
}
function $j() {
  return {
    canContainEols: ["mdxJsxTextElement"],
    enter: {
      mdxJsxFlowTag: r,
      mdxJsxFlowTagClosingMarker: n,
      mdxJsxFlowTagAttribute: p,
      mdxJsxFlowTagExpressionAttribute: h,
      mdxJsxFlowTagAttributeValueLiteral: e,
      mdxJsxFlowTagAttributeValueExpression: e,
      mdxJsxFlowTagSelfClosingMarker: o,
      mdxJsxTextTag: r,
      mdxJsxTextTagClosingMarker: n,
      mdxJsxTextTagAttribute: p,
      mdxJsxTextTagExpressionAttribute: h,
      mdxJsxTextTagAttributeValueLiteral: e,
      mdxJsxTextTagAttributeValueExpression: e,
      mdxJsxTextTagSelfClosingMarker: o
    },
    exit: {
      mdxJsxFlowTagClosingMarker: a,
      mdxJsxFlowTagNamePrimary: u,
      mdxJsxFlowTagNameMember: l,
      mdxJsxFlowTagNameLocal: c,
      mdxJsxFlowTagExpressionAttribute: f,
      mdxJsxFlowTagExpressionAttributeValue: t,
      mdxJsxFlowTagAttributeNamePrimary: d,
      mdxJsxFlowTagAttributeNameLocal: m,
      mdxJsxFlowTagAttributeValueLiteral: g,
      mdxJsxFlowTagAttributeValueLiteralValue: t,
      mdxJsxFlowTagAttributeValueExpression: b,
      mdxJsxFlowTagAttributeValueExpressionValue: t,
      mdxJsxFlowTagSelfClosingMarker: y,
      mdxJsxFlowTag: E,
      mdxJsxTextTagClosingMarker: a,
      mdxJsxTextTagNamePrimary: u,
      mdxJsxTextTagNameMember: l,
      mdxJsxTextTagNameLocal: c,
      mdxJsxTextTagExpressionAttribute: f,
      mdxJsxTextTagExpressionAttributeValue: t,
      mdxJsxTextTagAttributeNamePrimary: d,
      mdxJsxTextTagAttributeNameLocal: m,
      mdxJsxTextTagAttributeValueLiteral: g,
      mdxJsxTextTagAttributeValueLiteralValue: t,
      mdxJsxTextTagAttributeValueExpression: b,
      mdxJsxTextTagAttributeValueExpressionValue: t,
      mdxJsxTextTagSelfClosingMarker: y,
      mdxJsxTextTag: E
    }
  };
  function e() {
    this.buffer();
  }
  function t(w) {
    this.config.enter.data.call(this, w), this.config.exit.data.call(this, w);
  }
  function r(w) {
    let C = {
      name: void 0,
      attributes: [],
      close: !1,
      selfClosing: !1,
      start: w.start,
      end: w.end
    };
    this.data.mdxJsxTagStack || (this.data.mdxJsxTagStack = []), this.data.mdxJsxTag = C, this.buffer();
  }
  function n(w) {
    let C = this.data.mdxJsxTagStack;
    if (C.length === 0)
      throw new Le(
        "Unexpected closing slash `/` in tag, expected an open tag first",
        { start: w.start, end: w.end },
        "mdast-util-mdx-jsx:unexpected-closing-slash"
      );
  }
  function i(w) {
    let C = this.data.mdxJsxTag;
    if (C.close)
      throw new Le(
        "Unexpected attribute in closing tag, expected the end of the tag",
        { start: w.start, end: w.end },
        "mdast-util-mdx-jsx:unexpected-attribute"
      );
  }
  function o(w) {
    let C = this.data.mdxJsxTag;
    if (C.close)
      throw new Le(
        "Unexpected self-closing slash `/` in closing tag, expected the end of the tag",
        { start: w.start, end: w.end },
        "mdast-util-mdx-jsx:unexpected-self-closing-slash"
      );
  }
  function a() {
    let w = this.data.mdxJsxTag;
    w.close = !0;
  }
  function u(w) {
    let C = this.data.mdxJsxTag;
    C.name = this.sliceSerialize(w);
  }
  function l(w) {
    let C = this.data.mdxJsxTag;
    C.name += "." + this.sliceSerialize(w);
  }
  function c(w) {
    let C = this.data.mdxJsxTag;
    C.name += ":" + this.sliceSerialize(w);
  }
  function p(w) {
    let C = this.data.mdxJsxTag;
    i.call(this, w), C.attributes.push({ type: "mdxJsxAttribute", name: "", value: null });
  }
  function h(w) {
    let C = this.data.mdxJsxTag;
    i.call(this, w), C.attributes.push({ type: "mdxJsxExpressionAttribute", value: "" }), this.buffer();
  }
  function f(w) {
    let C = this.data.mdxJsxTag;
    let T = C.attributes[C.attributes.length - 1];
    T.type;
    let F = w.estree;
    T.value = this.resume(), F && (T.data = { estree: F });
  }
  function d(w) {
    let C = this.data.mdxJsxTag;
    let T = C.attributes[C.attributes.length - 1];
    T.type, T.name = this.sliceSerialize(w);
  }
  function m(w) {
    let C = this.data.mdxJsxTag;
    let T = C.attributes[C.attributes.length - 1];
    T.type, T.name += ":" + this.sliceSerialize(w);
  }
  function g() {
    let w = this.data.mdxJsxTag;
    w.attributes[w.attributes.length - 1].value = Oj(
      this.resume(),
      { nonTerminated: !1 }
    );
  }
  function b(w) {
    let C = this.data.mdxJsxTag;
    let T = C.attributes[C.attributes.length - 1];
    T.type;
    let F = { type: "mdxJsxAttributeValueExpression", value: this.resume() }, $ = w.estree;
    $ && (F.data = { estree: $ }), T.value = F;
  }
  function y() {
    let w = this.data.mdxJsxTag;
    w.selfClosing = !0;
  }
  function E(w) {
    let C = this.data.mdxJsxTag;
    let T = this.data.mdxJsxTagStack;
    let F = T[T.length - 1];
    if (C.close && F.name !== C.name)
      throw new Le(
        "Unexpected closing tag `" + O(C) + "`, expected corresponding closing tag for `" + O(F) + "` (" + yr(F) + ")",
        { start: w.start, end: w.end },
        "mdast-util-mdx-jsx:end-tag-mismatch"
      );
    this.resume(), C.close ? T.pop() : this.enter(
      {
        type: w.type === "mdxJsxTextTag" ? "mdxJsxTextElement" : "mdxJsxFlowElement",
        name: C.name || null,
        attributes: C.attributes,
        children: []
      },
      w,
      A
    ), C.selfClosing || C.close ? this.exit(w, k) : T.push(C);
  }
  function A(w, C) {
    let T = this.data.mdxJsxTag;
    let F = w ? " before the end of `" + w.type + "`" : "", $ = w ? { start: w.start, end: w.end } : void 0;
    throw new Le(
      "Expected a closing tag for `" + O(T) + "` (" + yr({ start: C.start, end: C.end }) + ")" + F,
      $,
      "mdast-util-mdx-jsx:end-tag-mismatch"
    );
  }
  function k(w, C) {
    let T = this.data.mdxJsxTag;
    throw new Le(
      "Expected the closing tag `" + O(T) + "` either after the end of `" + C.type + "` (" + yr(C.end) + ") or another opening tag after the\
 start of `" + C.type + "` (" + yr(C.start) + ")",
      { start: w.start, end: w.end },
      "mdast-util-mdx-jsx:end-tag-mismatch"
    );
  }
  function O(w) {
    return "<" + (w.close ? "/" : "") + (w.name || "") + ">";
  }
}
function Vj(e) {
  let t = e || {}, r = t.quote || '"', n = t.quoteSmart || !1, i = t.tightSelfClosing || !1, o = t.printWidth || Number.POSITIVE_INFINITY, a = r ===
  '"' ? "'" : '"';
  if (r !== '"' && r !== "'")
    throw new Error(
      "Cannot serialize attribute values with `" + r + "` for `options.quote`, expected `\"`, or `'`"
    );
  return u.peek = Wj, {
    handlers: {
      mdxJsxFlowElement: u,
      mdxJsxTextElement: u
    },
    unsafe: [
      { character: "<", inConstruct: ["phrasing"] },
      { atBreak: !0, character: "<" }
    ],
    // Always generate fenced code (never indented code).
    fences: !0,
    // Always generate links with resources (never autolinks).
    resourceLink: !0
  };
  function u(l, c, p, h) {
    let f = l.type === "mdxJsxFlowElement", d = l.name ? !l.children || l.children.length === 0 : !1, m = mw(p), g = gw(m), b = p.createTracker(
    h), y = p.createTracker(h), E = [], A = (f ? g : "") + "<" + (l.name || ""), k = p.enter(l.type);
    if (b.move(A), y.move(A), l.attributes && l.attributes.length > 0) {
      if (!l.name)
        throw new Error("Cannot serialize fragment w/ attributes");
      let F = -1;
      for (; ++F < l.attributes.length; ) {
        let $ = l.attributes[F], R;
        if ($.type === "mdxJsxExpressionAttribute")
          R = "{" + ($.value || "") + "}";
        else {
          if (!$.name)
            throw new Error("Cannot serialize attribute w/o name");
          let U = $.value, W = $.name, Y = "";
          if (U != null)
            if (typeof U == "object")
              Y = "{" + (U.value || "") + "}";
            else {
              let j = n && DC(U, r) > DC(U, a) ? a : r;
              Y = j + qj(U, { subset: [j] }) + j;
            }
          R = W + (Y ? "=" : "") + Y;
        }
        E.push(R);
      }
    }
    let O = !1, w = E.join(" ");
    // Block:
    f && // Including a line ending (expressions).
    (/\r?\n|\r/.test(w) || // Current position (including `<tag`).
    b.current().now.column + // -1 because columns, +1 for ` ` before attributes.
    // Attributes joined by spaces.
    w.length + // ` />`.
    (d ? i ? 2 : 3 : 1) > o) && (O = !0);
    let C = b, T = A;
    if (O) {
      C = y;
      let F = -1;
      for (; ++F < E.length; )
        E[F] = g + dw + E[F];
      T += C.move(
        `
` + E.join(`
`) + `
` + g
      );
    } else w && (T += C.move(" " + w));
    return d && (T += C.move(
      (i || O ? "" : " ") + "/"
    )), T += C.move(">"), l.children && l.children.length > 0 && (l.type === "mdxJsxTextElement" ? T += C.move(
      // @ts-expect-error: `containerPhrasing` is typed correctly, but TS
      // generates *hardcoded* types, which means that our dynamically added
      // directives are not present.
      // At some point, TS should fix that, and `from-markdown` should be fine.
      p.containerPhrasing(l, {
        ...C.current(),
        before: ">",
        after: "<"
      })
    ) : (C.shift(2), T += C.move(`
`), T += C.move(Uj(l, p, C.current())), T += C.move(`
`))), d || (T += C.move(
      (f ? g : "") + "</" + (l.name || "") + ">"
    )), k(), T;
  }
  s(u, "mdxElement");
}
function Uj(e, t, r) {
  let n = t.indexStack, i = e.children, o = t.createTracker(r), a = gw(mw(t)), u = [], l = -1;
  for (n.push(-1); ++l < i.length; ) {
    let c = i[l];
    n[n.length - 1] = l;
    let p = { before: `
`, after: `
`, ...o.current() }, h = t.handle(c, e, t, p), f = c.type === "mdxJsxFlowElement" ? h : t.indentLines(h, function(d, m, g) {
      return (g ? "" : a) + d;
    });
    u.push(o.move(f)), c.type !== "list" && (t.bulletLastUsed = void 0), l < i.length - 1 && u.push(o.move(`

`));
  }
  return n.pop(), u.join("");
}
function mw(e) {
  let t = 0;
  for (let r of e.stack)
    r === "mdxJsxFlowElement" && t++;
  return t;
}
function gw(e) {
  return dw.repeat(e);
}
function Wj() {
  return "<";
}
function zj() {
  return {
    enter: { mdxjsEsm: Gj },
    exit: { mdxjsEsm: Jj, mdxjsEsmData: Zj }
  };
}
function Hj() {
  return { handlers: { mdxjsEsm: Xj } };
}
function Gj(e) {
  this.enter({ type: "mdxjsEsm", value: "" }, e), this.buffer();
}
function Jj(e) {
  let t = this.resume(), r = this.stack[this.stack.length - 1];
  r.type, this.exit(e);
  let n = e.estree;
  r.value = t, n && (r.data = { estree: n });
}
function Zj(e) {
  this.config.enter.data.call(this, e), this.config.exit.data.call(this, e);
}
function Xj(e) {
  return e.value || "";
}
function Kj() {
  return [
    Sj(),
    $j(),
    zj()
  ];
}
function Yj(e) {
  return {
    extensions: [
      Aj(),
      Vj(e),
      Hj()
    ]
  };
}
function Nd(e) {
  return (
    // Special whitespace codes (which have negative values), C0 and Control
    // character DEL
    e !== null && (e < 32 || e === 127)
  );
}
function le(e) {
  return e !== null && e < -2;
}
function pt(e) {
  return e !== null && (e < 0 || e === 32);
}
function Re(e) {
  return e === -2 || e === -1 || e === 32;
}
function nM(e) {
  return yw(e) || eM(e);
}
function Gn(e) {
  return t;
  function t(r) {
    return r !== null && r > -1 && e.test(String.fromCharCode(r));
  }
}
function iM(e) {
  return "\x1B[33m" + e + "\x1B[39m";
}
function uM(e, t) {
  let r, n;
  typeof t == "function" ? r = t : t && typeof t == "object" && (t.enter && (r = t.enter), t.leave && (n = t.leave)), i(e, void 0, void 0, [])();
  function i(o, a, u, l) {
    return wd(o) && (c.displayName = "node (" + iM(o.type) + ")"), c;
    function c() {
      let p = r ? EC(r(o, a, u, l)) : [];
      if (p[0] === Cd)
        return p;
      if (p[0] !== aM) {
        let h;
        for (h in o)
          if (sM.call(o, h) && o[h] && typeof o[h] == "object" && // @ts-expect-error: custom esast extension.
          h !== "data" && // @ts-expect-error: custom esast extension.
          h !== "position") {
            let f = l.concat(o), d = o[h];
            if (Array.isArray(d)) {
              let m = (
                /** @type {Array<unknown>} */
                d
              ), g = 0;
              for (; g > -1 && g < m.length; ) {
                let b = m[g];
                if (wd(b)) {
                  let y = i(
                    b,
                    h,
                    g,
                    f
                  )();
                  if (y[0] === Cd)
                    return y;
                  g = typeof y[1] == "number" ? y[1] : g + 1;
                } else
                  g++;
              }
            } else if (wd(d)) {
              let m = i(d, h, void 0, f)();
              if (m[0] === Cd)
                return m;
            }
          }
      }
      return n ? EC(n(o, a, u, l)) : p;
    }
    s(c, "visit3");
  }
  s(i, "build");
}
function EC(e) {
  return Array.isArray(e) ? e : typeof e == "number" ? [oM, e] : [e];
}
function wd(e) {
  return !!(e && typeof e == "object" && "type" in e && typeof e.type == "string" && e.type.length > 0);
}
function Dw(e, t) {
  let r = t.prefix || "", n = t.suffix || "", i = Object.assign({}, t.acornOptions), o = [], a = [], u = i.onComment, l = i.onToken, c = !1,
  p, h, f = Object.assign({}, i, {
    onComment: o,
    preserveParens: !0
  });
  l && (f.onToken = a);
  let d = lM(e, t.tokenTypes), m = d.value, g = r + m + n, b = t.expression && CC(m);
  if (b && !t.allowEmpty)
    throw new Le("Unexpected empty expression", {
      place: E(0),
      ruleId: "unexpected-empty-expression",
      source: "micromark-extension-mdx-expression"
    });
  try {
    p = t.expression && !b ? t.acorn.parseExpressionAt(g, 0, f) : t.acorn.parse(g, f);
  } catch (A) {
    let k = (
      /** @type {AcornError} */
      A
    ), O = E(k.pos);
    k.message = String(k.message).replace(/ \(\d+:\d+\)$/, ""), k.pos = O.offset, k.loc = {
      line: O.line,
      column: O.column - 1
    }, h = k, c = k.raisedAt >= r.length + m.length || // Broken comments are raised at their start, not their end.
    k.message === "Unterminated comment";
  }
  if (p && t.expression && !b)
    if (CC(g.slice(p.end, g.length - n.length)))
      p = {
        type: "Program",
        start: 0,
        end: r.length + m.length,
        // @ts-expect-error: It’s good.
        body: [{
          type: "ExpressionStatement",
          expression: p,
          start: 0,
          end: r.length + m.length
        }],
        sourceType: "module",
        comments: []
      };
    else {
      let A = E(p.end), k = (
        /** @type {AcornError} */
        new Error("Unexpected content after expression")
      );
      k.pos = A.offset, k.loc = {
        line: A.line,
        column: A.column - 1
      }, h = k, p = void 0;
    }
  if (p) {
    if (p.comments = o, uM(p, function(A, k, O, w) {
      let C = (
        /** @type {AcornNode | Array<AcornNode>} */
        w[w.length - 1]
      ), T = k;
      A.type === "ParenthesizedExpression" && C && T && (typeof O == "number" && (C = C[T], T = O), C[T] = A.expression), y(A);
    }), Array.isArray(u))
      u.push(...o);
    else if (typeof u == "function")
      for (let A of o)
        u(A.type === "Block", A.value, A.start, A.end, A.loc.start, A.loc.end);
    for (let A of a)
      A.end <= r.length || A.start - r.length >= m.length || (y(A), Array.isArray(l) ? l.push(A) : l(A));
  }
  return {
    estree: p,
    error: h,
    swallow: c
  };
  function y(A) {
    let k = E(A.start), O = E(A.end);
    A.start = k.offset, A.end = O.offset, A.loc = {
      start: {
        line: k.line,
        column: k.column - 1,
        offset: k.offset
      },
      end: {
        line: O.line,
        column: O.column - 1,
        offset: O.offset
      }
    }, A.range = [A.start, A.end];
  }
  function E(A) {
    let k = A - r.length;
    k < 0 ? k = 0 : k > m.length && (k = m.length);
    let O = cM(d.stops, k);
    return O || (O = {
      line: t.start.line,
      column: t.start.column,
      offset: t.start.offset
    }), O;
  }
}
function CC(e) {
  return /^\s*$/.test(e.replace(/\/\*[\s\S]*?\*\//g, "").replace(/\/\/[^\r\n]*(\r\n|\n|\r)/g, ""));
}
function lM(e, t) {
  let r = {
    value: "",
    stops: []
  }, n = -1;
  for (; ++n < e.length; ) {
    let i = e[n];
    if (i[0] === "enter") {
      let o = i[1].type;
      if (o === "lineEnding" || t.includes(o)) {
        let a = i[2].sliceStream(i[1]);
        for (; a.length > 0 && a[0] === -1; )
          a.shift();
        let u = pM(a);
        r.stops.push([r.value.length, i[1].start]), r.value += u, r.stops.push([r.value.length, i[1].end]);
      }
    }
  }
  return r;
}
function cM(e, t) {
  let r = 0;
  for (; r < e.length && e[r][0] <= t; )
    r += 1;
  if (r === 0)
    return;
  let [n, i] = e[r - 1], o = t - n;
  return {
    line: i.line,
    column: i.column + o,
    offset: i.offset + o
  };
}
function pM(e) {
  let t = -1, r = [], n;
  for (; ++t < e.length; ) {
    let i = e[t], o;
    if (typeof i == "string")
      o = i;
    else
      switch (i) {
        case -5: {
          o = "\r";
          break;
        }
        case -4: {
          o = `
`;
          break;
        }
        case -3: {
          o = `\r
`;
          break;
        }
        case -2: {
          o = "	";
          break;
        }
        case -1: {
          if (n)
            continue;
          o = " ";
          break;
        }
        default:
          o = String.fromCharCode(i);
      }
    n = i === -2, r.push(o);
  }
  return r.join("");
}
function bn(e) {
  let t = e || {}, r = t.loc || {}, n = t.range || [void 0, void 0], i = wC(r.start, n[0] || t.start), o = wC(r.end, n[1] || t.end);
  if (i && o)
    return { start: i, end: o };
}
function wC(e, t) {
  if (e && typeof e == "object") {
    let r = "line" in e ? Sd(e.line) : void 0, n = "column" in e ? Sd(e.column) : void 0;
    if (r && n !== void 0)
      return {
        line: r,
        column: n + 1,
        offset: Sd(t)
      };
  }
}
function Sd(e) {
  return typeof e == "number" && e > -1 ? e : void 0;
}
function cl(e, t, r, n, i, o, a, u, l, c, p) {
  let h = this, f = this.events.length + 3, d = 0, m, g;
  return b;
  function b(k) {
    return e.enter(r), e.enter(n), e.consume(k), e.exit(n), m = h.now(), y;
  }
  function y(k) {
    if (k === null) {
      if (g)
        throw g;
      let O = new Le(
        "Unexpected end of file in expression, expected a corresponding closing brace for `{`",
        {
          place: h.now(),
          ruleId: "unexpected-eof",
          source: "micromark-extension-mdx-expression"
        }
      );
      throw O.url = ks + hM, O;
    }
    if (le(k))
      return e.enter("lineEnding"), e.consume(k), e.exit("lineEnding"), A;
    if (k === 125 && d === 0) {
      let O = o ? gM.call(
        h,
        o,
        a,
        i,
        f,
        m,
        c || !1,
        l || !1
      ) : {
        type: "ok",
        estree: void 0
      };
      if (O.type === "ok") {
        e.enter(n), e.consume(k), e.exit(n);
        let w = e.exit(r);
        return u && O.estree && Object.assign(w, {
          estree: O.estree
        }), t;
      }
      return g = O.message, e.enter(i), e.consume(k), E;
    }
    return e.enter(i), E(k);
  }
  function E(k) {
    return k === 125 && d === 0 || k === null || le(k) ? (e.exit(i), y(k)) : (k === 123 && !o ? d += 1 : k === 125 && (d -= 1), e.consume(k),
    E);
  }
  function A(k) {
    let O = h.now();
    if (O.line !== m.line && !p && h.parser.lazy[O.line]) {
      let w = new Le(
        "Unexpected lazy line in expression in container, expected line to be prefixed with `>` when in a block quote, whitespace when in a \
list, etc",
        {
          place: h.now(),
          ruleId: "unexpected-lazy",
          source: "micromark-extension-mdx-expression"
        }
      );
      throw w.url = ks + fM, w;
    }
    return y(k);
  }
}
function gM(e, t, r, n, i, o, a) {
  let u = Dw(this.events.slice(n), {
    acorn: e,
    tokenTypes: [r],
    acornOptions: t,
    start: i,
    expression: !0,
    allowEmpty: o,
    prefix: a ? "({" : "",
    suffix: a ? "})" : ""
  }), l = u.estree;
  if (a && l) {
    let c = l.body[0];
    if (c.type !== "ExpressionStatement" || c.expression.type !== "ObjectExpression") {
      let p = bn(c), h = new Le(
        "Unexpected `" + c.type + "` in code: expected an object spread (`{...spread}`)",
        {
          place: p.start,
          ruleId: "non-spread",
          source: "micromark-extension-mdx-expression"
        }
      );
      throw h.url = ks + SC, h;
    }
    if (c.expression.properties[1]) {
      let p = bn(c.expression.properties[1]), h = new Le(
        "Unexpected extra content in spread: only a single spread is supported",
        {
          place: p.start,
          ruleId: "spread-extra",
          source: "micromark-extension-mdx-expression"
        }
      );
      throw h.url = ks + dM, h;
    }
    if (c.expression.properties[0] && c.expression.properties[0].type !== "SpreadElement") {
      let p = bn(c.expression.properties[0]), h = new Le(
        "Unexpected `" + c.expression.properties[0].type + "` in code: only spread elements are supported",
        {
          place: p.start,
          ruleId: "non-spread",
          source: "micromark-extension-mdx-expression"
        }
      );
      throw h.url = ks + SC, h;
    }
  }
  if (u.error) {
    let c = new Le("Could not parse expression with acorn", {
      cause: u.error,
      place: {
        line: u.error.loc.line,
        column: u.error.loc.column + 1,
        offset: u.error.pos
      },
      ruleId: "acorn",
      source: "micromark-extension-mdx-expression"
    });
    return c.url = ks + mM, {
      type: "nok",
      message: c
    };
  }
  return {
    type: "ok",
    estree: l
  };
}
function $e(e, t, r, n) {
  let i = n ? n - 1 : Number.POSITIVE_INFINITY, o = 0;
  return a;
  function a(l) {
    return Re(l) ? (e.enter(r), u(l)) : t(l);
  }
  function u(l) {
    return Re(l) && o++ < i ? (e.consume(l), u) : (e.exit(r), t(l));
  }
}
function yM(e) {
  let t = e || {}, r = t.addResult, n = t.acorn, i = t.spread, o = t.allowEmpty, a;
  if (o == null && (o = !0), n) {
    if (!n.parseExpressionAt)
      throw new Error("Expected a proper `acorn` instance passed in as `options.acorn`");
    a = Object.assign({
      ecmaVersion: 2024,
      sourceType: "module"
    }, t.acornOptions);
  } else if (t.acornOptions || t.addResult)
    throw new Error("Expected an `acorn` instance passed in as `options.acorn`");
  return {
    flow: {
      123: {
        name: "mdxFlowExpression",
        tokenize: u,
        concrete: !0
      }
    },
    text: {
      123: {
        name: "mdxTextExpression",
        tokenize: l
      }
    }
  };
  function u(c, p, h) {
    let f = this;
    return d;
    function d(y) {
      return m(y);
    }
    function m(y) {
      return cl.call(f, c, g, "mdxFlowExpression", "mdxFlowExpressionMarker", "mdxFlowExpressionChunk", n, a, r, i, o)(y);
    }
    function g(y) {
      return Re(y) ? $e(c, b, "whitespace")(y) : b(y);
    }
    function b(y) {
      let E = f.parser.constructs.flow[60], k = (Array.isArray(E) ? E : (
        /* c8 ignore next 3 -- always a list when normalized. */
        E ? [E] : []
      )).find(function(O) {
        return O.name === "mdxJsxFlowTag";
      });
      return y === 60 && k ? c.attempt(k, b, h)(y) : y === null || le(y) ? p(y) : h(y);
    }
  }
  function l(c, p) {
    let h = this;
    return f;
    function f(d) {
      return cl.call(h, c, p, "mdxTextExpression", "mdxTextExpressionMarker", "mdxTextExpressionChunk", n, a, r, i, o, !0)(d);
    }
  }
}
function xw(e, t, r, n, i, o, a, u, l, c, p, h, f, d, m, g, b, y, E, A, k, O, w, C, T, F, $, R, U, W, Y, j) {
  let N = this, z, Q;
  return ie;
  function ie(v) {
    return e.enter(u), e.enter(l), e.consume(v), e.exit(l), B;
  }
  function B(v) {
    return pt(v) ? r(v) : (z = ce, x(v));
  }
  function ce(v) {
    if (v === 47)
      return e.enter(c), e.consume(v), e.exit(c), z = Je, x;
    if (v === 62)
      return Ye(v);
    if (v !== null && v >= 0 && lr(v))
      return e.enter(h), e.enter(f), e.consume(v), L;
    P(v, "before name", "a character that can start a name, such as a letter, `$`, or `_`" + (v === 33 ? " (note: to create a comment in MDX\
, use `{/* text */}`)" : ""));
  }
  function Je(v) {
    if (v === 62)
      return Ye(v);
    if (v !== null && v >= 0 && lr(v))
      return e.enter(h), e.enter(f), e.consume(v), L;
    P(v, "before name", "a character that can start a name, such as a letter, `$`, or `_`" + (v === 42 || v === 47 ? " (note: JS comments in\
 JSX tags are not supported in MDX)" : ""));
  }
  function L(v) {
    if (v !== null && v >= 0 && ys(v, {
      jsx: !0
    }))
      return e.consume(v), L;
    if (v === 46 || v === 47 || v === 58 || v === 62 || v === 123 || pt(v) || xn(v))
      return e.exit(f), z = Ue, x(v);
    P(v, "in name", "a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag" + (v === 64 ?
    " (note: to create a link in MDX, use `[text](url)`)" : ""));
  }
  function Ue(v) {
    if (v === 46)
      return e.enter(d), e.consume(v), e.exit(d), z = Ve, x;
    if (v === 58)
      return e.enter(g), e.consume(v), e.exit(g), z = qe, x;
    if (v === 47 || v === 62 || v === 123 || v !== null && v >= 0 && lr(v))
      return e.exit(h), K(v);
    P(v, "after name", "a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the en\
d of the tag");
  }
  function Ve(v) {
    if (v !== null && v >= 0 && lr(v))
      return e.enter(m), e.consume(v), ge;
    P(v, "before member name", "a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; o\
r the end of the tag");
  }
  function ge(v) {
    if (v !== null && v >= 0 && ys(v, {
      jsx: !0
    }))
      return e.consume(v), ge;
    if (v === 46 || v === 47 || v === 62 || v === 123 || pt(v) || xn(v))
      return e.exit(m), z = _t, x(v);
    P(v, "in member name", "a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag" + (v ===
    64 ? " (note: to create a link in MDX, use `[text](url)`)" : ""));
  }
  function _t(v) {
    if (v === 46)
      return e.enter(d), e.consume(v), e.exit(d), z = Ve, x;
    if (v === 47 || v === 62 || v === 123 || v !== null && v >= 0 && lr(v))
      return e.exit(h), K(v);
    P(v, "after member name", "a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or\
 the end of the tag");
  }
  function qe(v) {
    if (v !== null && v >= 0 && lr(v))
      return e.enter(b), e.consume(v), re;
    P(v, "before local name", "a character that can start a name, such as a letter, `$`, or `_`" + (v === 43 || v !== null && v > 46 && v < 58 ?
    " (note: to create a link in MDX, use `[text](url)`)" : ""));
  }
  function re(v) {
    if (v !== null && v >= 0 && ys(v, {
      jsx: !0
    }))
      return e.consume(v), re;
    if (v === 47 || v === 62 || v === 123 || pt(v) || xn(v))
      return e.exit(b), z = be, x(v);
    P(v, "in local name", "a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag");
  }
  function be(v) {
    if (v === 47 || v === 62 || v === 123 || v !== null && v >= 0 && lr(v))
      return e.exit(h), K(v);
    P(v, "after local name", "a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or \
the end of the tag");
  }
  function K(v) {
    if (v === 47)
      return e.enter(p), e.consume(v), e.exit(p), z = pe, x;
    if (v === 62)
      return Ye(v);
    if (v === 123)
      return cl.call(N, e, se, y, E, A, n, i, o, !0, !1, a)(v);
    if (v !== null && v >= 0 && lr(v))
      return e.enter(k), e.enter(O), e.enter(w), e.consume(v), ye;
    P(v, "before attribute name", "a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes\
; or the end of the tag");
  }
  function se(v) {
    return z = K, x(v);
  }
  function ye(v) {
    if (v !== null && v >= 0 && ys(v, {
      jsx: !0
    }))
      return e.consume(v), ye;
    if (v === 47 || v === 58 || v === 61 || v === 62 || v === 123 || pt(v) || xn(v))
      return e.exit(w), z = ve, x(v);
    P(v, "in attribute name", "an attribute name character such as letters, digits, `$`, or `_`; `=` to initialize a value; whitespace befor\
e attributes; or the end of the tag");
  }
  function ve(v) {
    if (v === 58)
      return e.enter(C), e.consume(v), e.exit(C), z = Ce, x;
    if (v === 61)
      return e.exit(O), e.enter(F), e.consume(v), e.exit(F), z = We, x;
    if (v === 47 || v === 62 || v === 123 || pt(v) || xn(v) || v !== null && v >= 0 && lr(v))
      return e.exit(O), e.exit(k), z = K, x(v);
    P(v, "after attribute name", "a character that can start an attribute name, such as a letter, `$`, or `_`; `=` to initialize a value; or\
 the end of the tag");
  }
  function Ce(v) {
    if (v !== null && v >= 0 && lr(v))
      return e.enter(T), e.consume(v), rt;
    P(v, "before local attribute name", "a character that can start an attribute name, such as a letter, `$`, or `_`; `=` to initialize a va\
lue; or the end of the tag");
  }
  function rt(v) {
    if (v !== null && v >= 0 && ys(v, {
      jsx: !0
    }))
      return e.consume(v), rt;
    if (v === 47 || v === 61 || v === 62 || v === 123 || pt(v) || xn(v))
      return e.exit(T), e.exit(O), z = vt, x(v);
    P(v, "in local attribute name", "an attribute name character such as letters, digits, `$`, or `_`; `=` to initialize a value; whitespace\
 before attributes; or the end of the tag");
  }
  function vt(v) {
    if (v === 61)
      return e.enter(F), e.consume(v), e.exit(F), z = We, x;
    if (v === 47 || v === 62 || v === 123 || v !== null && v >= 0 && lr(v))
      return e.exit(k), K(v);
    P(v, "after local attribute name", "a character that can start an attribute name, such as a letter, `$`, or `_`; `=` to initialize a val\
ue; or the end of the tag");
  }
  function We(v) {
    if (v === 34 || v === 39)
      return e.enter($), e.enter(R), e.consume(v), e.exit(R), Q = v, nr;
    if (v === 123)
      return cl.call(N, e, rr, W, Y, j, n, i, o, !1, !1, a)(v);
    P(v, "before attribute value", "a character that can start an attribute value, such as `\"`, `'`, or `{`" + (v === 60 ? " (note: to use \
an element or fragment as a prop value in MDX, use `{<element />}`)" : ""));
  }
  function rr(v) {
    return e.exit(k), z = K, x(v);
  }
  function nr(v) {
    return v === null && P(v, "in attribute value", "a corresponding closing quote `" + String.fromCodePoint(Q) + "`"), v === Q ? (e.enter(R),
    e.consume(v), e.exit(R), e.exit($), e.exit(k), Q = void 0, z = K, x) : le(v) ? (z = nr, x(v)) : (e.enter(U), Sr(v));
  }
  function Sr(v) {
    return v === null || v === Q || le(v) ? (e.exit(U), nr(v)) : (e.consume(v), Sr);
  }
  function pe(v) {
    if (v === 62)
      return Ye(v);
    P(v, "after self-closing slash", "`>` to end the tag" + (v === 42 || v === 47 ? " (note: JS comments in JSX tags are not supported in MD\
X)" : ""));
  }
  function Ye(v) {
    return e.enter(l), e.consume(v), e.exit(l), e.exit(u), t;
  }
  function x(v) {
    return le(v) ? (e.enter("lineEnding"), e.consume(v), e.exit("lineEnding"), _) : Re(v) || xn(v) ? (e.enter("esWhitespace"), D(v)) : z(v);
  }
  function D(v) {
    return le(v) ? (e.exit("esWhitespace"), x(v)) : Re(v) || xn(v) ? (e.consume(v), D) : (e.exit("esWhitespace"), z(v));
  }
  function _(v) {
    if (!a && N.parser.lazy[N.now().line]) {
      let M = new Le("Unexpected lazy line in container, expected line to be prefixed with `>` when in a block quote, whitespace when in a l\
ist, etc", N.now(), "micromark-extension-mdx-jsx:unexpected-lazy");
      throw M.url = AC + "#unexpected-lazy-line-in-container-expected-line-to-be", M;
    }
    return x(v);
  }
  function P(v, M, G) {
    let J = new Le("Unexpected " + (v === null ? "end of file" : "character `" + (v === 96 ? "` ` `" : String.fromCodePoint(v)) + "` (" + DM(
    v) + ")") + " " + M + ", expected " + G, N.now(), "micromark-extension-mdx-jsx:unexpected-" + (v === null ? "eof" : "character"));
    throw J.url = AC + (v === null ? "#unexpected-end-of-file-at-expected-expect" : "#unexpected-character-at-expected-expect"), J;
  }
}
function DM(e) {
  return "U+" + e.toString(16).toUpperCase().padStart(4, "0");
}
function xM(e, t) {
  return {
    name: "mdxJsxTextTag",
    tokenize: r
  };
  function r(n, i, o) {
    return xw.call(this, n, i, o, e, t.acornOptions, t.addResult, !0, "mdxJsxTextTag", "mdxJsxTextTagMarker", "mdxJsxTextTagClosingMarker", "\
mdxJsxTextTagSelfClosingMarker", "mdxJsxTextTagName", "mdxJsxTextTagNamePrimary", "mdxJsxTextTagNameMemberMarker", "mdxJsxTextTagNameMember",
    "mdxJsxTextTagNamePrefixMarker", "mdxJsxTextTagNameLocal", "mdxJsxTextTagExpressionAttribute", "mdxJsxTextTagExpressionAttributeMarker",
    "mdxJsxTextTagExpressionAttributeValue", "mdxJsxTextTagAttribute", "mdxJsxTextTagAttributeName", "mdxJsxTextTagAttributeNamePrimary", "m\
dxJsxTextTagAttributeNamePrefixMarker", "mdxJsxTextTagAttributeNameLocal", "mdxJsxTextTagAttributeInitializerMarker", "mdxJsxTextTagAttribut\
eValueLiteral", "mdxJsxTextTagAttributeValueLiteralMarker", "mdxJsxTextTagAttributeValueLiteralValue", "mdxJsxTextTagAttributeValueExpressio\
n", "mdxJsxTextTagAttributeValueExpressionMarker", "mdxJsxTextTagAttributeValueExpressionValue");
  }
}
function bM(e, t) {
  return {
    name: "mdxJsxFlowTag",
    tokenize: r,
    concrete: !0
  };
  function r(n, i, o) {
    let a = this;
    return u;
    function u(h) {
      return l(h);
    }
    function l(h) {
      return xw.call(a, n, c, o, e, t.acornOptions, t.addResult, !1, "mdxJsxFlowTag", "mdxJsxFlowTagMarker", "mdxJsxFlowTagClosingMarker", "\
mdxJsxFlowTagSelfClosingMarker", "mdxJsxFlowTagName", "mdxJsxFlowTagNamePrimary", "mdxJsxFlowTagNameMemberMarker", "mdxJsxFlowTagNameMember",
      "mdxJsxFlowTagNamePrefixMarker", "mdxJsxFlowTagNameLocal", "mdxJsxFlowTagExpressionAttribute", "mdxJsxFlowTagExpressionAttributeMarker",
      "mdxJsxFlowTagExpressionAttributeValue", "mdxJsxFlowTagAttribute", "mdxJsxFlowTagAttributeName", "mdxJsxFlowTagAttributeNamePrimary", "\
mdxJsxFlowTagAttributeNamePrefixMarker", "mdxJsxFlowTagAttributeNameLocal", "mdxJsxFlowTagAttributeInitializerMarker", "mdxJsxFlowTagAttribu\
teValueLiteral", "mdxJsxFlowTagAttributeValueLiteralMarker", "mdxJsxFlowTagAttributeValueLiteralValue", "mdxJsxFlowTagAttributeValueExpressi\
on", "mdxJsxFlowTagAttributeValueExpressionMarker", "mdxJsxFlowTagAttributeValueExpressionValue")(h);
    }
    function c(h) {
      return Re(h) ? $e(n, p, "whitespace")(h) : p(h);
    }
    function p(h) {
      let f = a.parser.constructs.flow[123], m = (Array.isArray(f) ? f : f ? [f] : []).find((g) => g.name === "mdxFlowExpression");
      return h === 60 ? (
        // We can’t just say: fine. Lines of blocks have to be parsed until an eol/eof.
        u(h)
      ) : h === 123 && m ? n.attempt(m, p, o)(h) : h === null || le(h) ? i(h) : o(h);
    }
  }
}
function vM(e) {
  let t = e || {}, r = t.acorn, n;
  if (r) {
    if (!r.parse || !r.parseExpressionAt)
      throw new Error("Expected a proper `acorn` instance passed in as `options.acorn`");
    n = Object.assign({
      ecmaVersion: 2024,
      sourceType: "module"
    }, t.acornOptions, {
      locations: !0
    });
  } else if (t.acornOptions || t.addResult)
    throw new Error("Expected an `acorn` instance passed in as `options.acorn`");
  return {
    flow: {
      60: bM(r || void 0, {
        acornOptions: n,
        addResult: t.addResult || void 0
      })
    },
    text: {
      60: xM(r || void 0, {
        acornOptions: n,
        addResult: t.addResult || void 0
      })
    }
  };
}
function EM() {
  return {
    disable: { null: ["autolink", "codeIndented", "htmlFlow", "htmlText"] }
  };
}
function Xr(e, t, r, n) {
  let i = e.length, o = 0, a;
  if (t < 0 ? t = -t > i ? 0 : i + t : t = t > i ? i : t, r = r > 0 ? r : 0, n.length < 1e4)
    a = Array.from(n), a.unshift(t, r), e.splice(...a);
  else
    for (r && e.splice(t, r); o < n.length; )
      a = n.slice(o, o + 1e4), a.unshift(t, 0), e.splice(...a), o += 1e4, t += 1e4;
}
function gr(e, t) {
  return e.length > 0 ? (Xr(e, e.length, 0, t), e) : t;
}
function FC(e) {
  if (e === null || pt(e) || xn(e))
    return 1;
  if (nM(e))
    return 2;
}
function Vd(e, t, r) {
  let n = [], i = -1;
  for (; ++i < e.length; ) {
    let o = e[i].resolveAll;
    o && !n.includes(o) && (t = o(t, r), n.push(o));
  }
  return t;
}
function CM(e, t) {
  let r = -1, n, i, o, a, u, l, c, p;
  for (; ++r < e.length; )
    if (e[r][0] === "enter" && e[r][1].type === "attentionSequence" && e[r][1]._close) {
      for (n = r; n--; )
        if (e[n][0] === "exit" && e[n][1].type === "attentionSequence" && e[n][1]._open && // If the markers are the same:
        t.sliceSerialize(e[n][1]).charCodeAt(0) === t.sliceSerialize(e[r][1]).charCodeAt(0)) {
          if ((e[n][1]._close || e[r][1]._open) && (e[r][1].end.offset - e[r][1].start.offset) % 3 && !((e[n][1].end.offset - e[n][1].start.
          offset + e[r][1].end.offset - e[r][1].start.offset) % 3))
            continue;
          l = e[n][1].end.offset - e[n][1].start.offset > 1 && e[r][1].end.offset - e[r][1].start.offset > 1 ? 2 : 1;
          let h = Object.assign({}, e[n][1].end), f = Object.assign({}, e[r][1].start);
          _C(h, -l), _C(f, l), a = {
            type: l > 1 ? "strongSequence" : "emphasisSequence",
            start: h,
            end: Object.assign({}, e[n][1].end)
          }, u = {
            type: l > 1 ? "strongSequence" : "emphasisSequence",
            start: Object.assign({}, e[r][1].start),
            end: f
          }, o = {
            type: l > 1 ? "strongText" : "emphasisText",
            start: Object.assign({}, e[n][1].end),
            end: Object.assign({}, e[r][1].start)
          }, i = {
            type: l > 1 ? "strong" : "emphasis",
            start: Object.assign({}, a.start),
            end: Object.assign({}, u.end)
          }, e[n][1].end = Object.assign({}, a.start), e[r][1].start = Object.assign({}, u.end), c = [], e[n][1].end.offset - e[n][1].start.
          offset && (c = gr(c, [
            ["enter", e[n][1], t],
            ["exit", e[n][1], t]
          ])), c = gr(c, [
            ["enter", i, t],
            ["enter", a, t],
            ["exit", a, t],
            ["enter", o, t]
          ]), c = gr(
            c,
            Vd(
              t.parser.constructs.insideSpan.null,
              e.slice(n + 1, r),
              t
            )
          ), c = gr(c, [
            ["exit", o, t],
            ["enter", u, t],
            ["exit", u, t],
            ["exit", i, t]
          ]), e[r][1].end.offset - e[r][1].start.offset ? (p = 2, c = gr(c, [
            ["enter", e[r][1], t],
            ["exit", e[r][1], t]
          ])) : p = 0, Xr(e, n - 1, r - n + 3, c), r = n + c.length - p - 2;
          break;
        }
    }
  for (r = -1; ++r < e.length; )
    e[r][1].type === "attentionSequence" && (e[r][1].type = "data");
  return e;
}
function wM(e, t) {
  let r = this.parser.constructs.attentionMarkers.null, n = this.previous, i = FC(n), o;
  return a;
  function a(l) {
    return o = l, e.enter("attentionSequence"), u(l);
  }
  function u(l) {
    if (l === o)
      return e.consume(l), u;
    let c = e.exit("attentionSequence"), p = FC(l), h = !p || p === 2 && i || r.includes(l), f = !i || i === 2 && p || r.includes(n);
    return c._open = !!(o === 42 ? h : h && (i || !f)), c._close = !!(o === 42 ? f : f && (p || !h)), t(l);
  }
}
function _C(e, t) {
  e.column += t, e.offset += t, e._bufferIndex += t;
}
function AM(e, t, r) {
  let n = 0;
  return i;
  function i(d) {
    return e.enter("autolink"), e.enter("autolinkMarker"), e.consume(d), e.exit("autolinkMarker"), e.enter("autolinkProtocol"), o;
  }
  function o(d) {
    return Or(d) ? (e.consume(d), a) : c(d);
  }
  function a(d) {
    return d === 43 || d === 45 || d === 46 || Yt(d) ? (n = 1, u(d)) : c(d);
  }
  function u(d) {
    return d === 58 ? (e.consume(d), n = 0, l) : (d === 43 || d === 45 || d === 46 || Yt(d)) && n++ < 32 ? (e.consume(d), u) : (n = 0, c(d));
  }
  function l(d) {
    return d === 62 ? (e.exit("autolinkProtocol"), e.enter("autolinkMarker"), e.consume(d), e.exit("autolinkMarker"), e.exit("autolink"), t) :
    d === null || d === 32 || d === 60 || Nd(d) ? r(d) : (e.consume(d), l);
  }
  function c(d) {
    return d === 64 ? (e.consume(d), p) : tM(d) ? (e.consume(d), c) : r(d);
  }
  function p(d) {
    return Yt(d) ? h(d) : r(d);
  }
  function h(d) {
    return d === 46 ? (e.consume(d), n = 0, p) : d === 62 ? (e.exit("autolinkProtocol").type = "autolinkEmail", e.enter("autolinkMarker"), e.
    consume(d), e.exit("autolinkMarker"), e.exit("autolink"), t) : f(d);
  }
  function f(d) {
    if ((d === 45 || Yt(d)) && n++ < 63) {
      let m = d === 45 ? f : h;
      return e.consume(d), m;
    }
    return r(d);
  }
}
function FM(e, t, r) {
  return n;
  function n(o) {
    return Re(o) ? $e(e, i, "linePrefix")(o) : i(o);
  }
  function i(o) {
    return o === null || le(o) ? t(o) : r(o);
  }
}
function _M(e, t, r) {
  let n = this;
  return i;
  function i(a) {
    if (a === 62) {
      let u = n.containerState;
      return u.open || (e.enter("blockQuote", {
        _container: !0
      }), u.open = !0), e.enter("blockQuotePrefix"), e.enter("blockQuoteMarker"), e.consume(a), e.exit("blockQuoteMarker"), o;
    }
    return r(a);
  }
  function o(a) {
    return Re(a) ? (e.enter("blockQuotePrefixWhitespace"), e.consume(a), e.exit("blockQuotePrefixWhitespace"), e.exit("blockQuotePrefix"), t) :
    (e.exit("blockQuotePrefix"), t(a));
  }
}
function kM(e, t, r) {
  let n = this;
  return i;
  function i(a) {
    return Re(a) ? $e(
      e,
      o,
      "linePrefix",
      n.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
    )(a) : o(a);
  }
  function o(a) {
    return e.attempt(bw, t, r)(a);
  }
}
function TM(e) {
  e.exit("blockQuote");
}
function IM(e, t, r) {
  return n;
  function n(o) {
    return e.enter("characterEscape"), e.enter("escapeMarker"), e.consume(o), e.exit("escapeMarker"), i;
  }
  function i(o) {
    return yw(o) ? (e.enter("characterEscapeValue"), e.consume(o), e.exit("characterEscapeValue"), e.exit("characterEscape"), t) : r(o);
  }
}
function PM(e, t, r) {
  let n = this, i = 0, o, a;
  return u;
  function u(h) {
    return e.enter("characterReference"), e.enter("characterReferenceMarker"), e.consume(h), e.exit("characterReferenceMarker"), l;
  }
  function l(h) {
    return h === 35 ? (e.enter("characterReferenceMarkerNumeric"), e.consume(h), e.exit("characterReferenceMarkerNumeric"), c) : (e.enter("c\
haracterReferenceValue"), o = 31, a = Yt, p(h));
  }
  function c(h) {
    return h === 88 || h === 120 ? (e.enter("characterReferenceMarkerHexadecimal"), e.consume(h), e.exit("characterReferenceMarkerHexadecima\
l"), e.enter("characterReferenceValue"), o = 6, a = rM, p) : (e.enter("characterReferenceValue"), o = 7, a = Ld, p(h));
  }
  function p(h) {
    if (h === 59 && i) {
      let f = e.exit("characterReferenceValue");
      return a === Yt && !Go(n.sliceSerialize(f)) ? r(h) : (e.enter("characterReferenceMarker"), e.consume(h), e.exit("characterReferenceMar\
ker"), e.exit("characterReference"), t);
    }
    return a(h) && i++ < o ? (e.consume(h), p) : r(h);
  }
}
function BM(e, t, r) {
  let n = this, i = {
    tokenize: O,
    partial: !0
  }, o = 0, a = 0, u;
  return l;
  function l(w) {
    return c(w);
  }
  function c(w) {
    let C = n.events[n.events.length - 1];
    return o = C && C[1].type === "linePrefix" ? C[2].sliceSerialize(C[1], !0).length : 0, u = w, e.enter("codeFenced"), e.enter("codeFenced\
Fence"), e.enter("codeFencedFenceSequence"), p(w);
  }
  function p(w) {
    return w === u ? (a++, e.consume(w), p) : a < 3 ? r(w) : (e.exit("codeFencedFenceSequence"), Re(w) ? $e(e, h, "whitespace")(w) : h(w));
  }
  function h(w) {
    return w === null || le(w) ? (e.exit("codeFencedFence"), n.interrupt ? t(w) : e.check(kC, g, k)(w)) : (e.enter("codeFencedFenceInfo"), e.
    enter("chunkString", {
      contentType: "string"
    }), f(w));
  }
  function f(w) {
    return w === null || le(w) ? (e.exit("chunkString"), e.exit("codeFencedFenceInfo"), h(w)) : Re(w) ? (e.exit("chunkString"), e.exit("code\
FencedFenceInfo"), $e(e, d, "whitespace")(w)) : w === 96 && w === u ? r(w) : (e.consume(w), f);
  }
  function d(w) {
    return w === null || le(w) ? h(w) : (e.enter("codeFencedFenceMeta"), e.enter("chunkString", {
      contentType: "string"
    }), m(w));
  }
  function m(w) {
    return w === null || le(w) ? (e.exit("chunkString"), e.exit("codeFencedFenceMeta"), h(w)) : w === 96 && w === u ? r(w) : (e.consume(w), m);
  }
  function g(w) {
    return e.attempt(i, k, b)(w);
  }
  function b(w) {
    return e.enter("lineEnding"), e.consume(w), e.exit("lineEnding"), y;
  }
  function y(w) {
    return o > 0 && Re(w) ? $e(
      e,
      E,
      "linePrefix",
      o + 1
    )(w) : E(w);
  }
  function E(w) {
    return w === null || le(w) ? e.check(kC, g, k)(w) : (e.enter("codeFlowValue"), A(w));
  }
  function A(w) {
    return w === null || le(w) ? (e.exit("codeFlowValue"), E(w)) : (e.consume(w), A);
  }
  function k(w) {
    return e.exit("codeFenced"), t(w);
  }
  function O(w, C, T) {
    let F = 0;
    return $;
    function $(j) {
      return w.enter("lineEnding"), w.consume(j), w.exit("lineEnding"), R;
    }
    function R(j) {
      return w.enter("codeFencedFence"), Re(j) ? $e(
        w,
        U,
        "linePrefix",
        n.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
      )(j) : U(j);
    }
    function U(j) {
      return j === u ? (w.enter("codeFencedFenceSequence"), W(j)) : T(j);
    }
    function W(j) {
      return j === u ? (F++, w.consume(j), W) : F >= a ? (w.exit("codeFencedFenceSequence"), Re(j) ? $e(w, Y, "whitespace")(j) : Y(j)) : T(j);
    }
    function Y(j) {
      return j === null || le(j) ? (w.exit("codeFencedFence"), C(j)) : T(j);
    }
  }
}
function OM(e, t, r) {
  let n = this;
  return i;
  function i(a) {
    return a === null ? r(a) : (e.enter("lineEnding"), e.consume(a), e.exit("lineEnding"), o);
  }
  function o(a) {
    return n.parser.lazy[n.now().line] ? r(a) : t(a);
  }
}
function NM(e, t, r) {
  let n = this;
  return i;
  function i(c) {
    return e.enter("codeIndented"), $e(e, o, "linePrefix", 5)(c);
  }
  function o(c) {
    let p = n.events[n.events.length - 1];
    return p && p[1].type === "linePrefix" && p[2].sliceSerialize(p[1], !0).length >= 4 ? a(c) : r(c);
  }
  function a(c) {
    return c === null ? l(c) : le(c) ? e.attempt(RM, a, l)(c) : (e.enter("codeFlowValue"), u(c));
  }
  function u(c) {
    return c === null || le(c) ? (e.exit("codeFlowValue"), a(c)) : (e.consume(c), u);
  }
  function l(c) {
    return e.exit("codeIndented"), t(c);
  }
}
function LM(e, t, r) {
  let n = this;
  return i;
  function i(a) {
    return n.parser.lazy[n.now().line] ? r(a) : le(a) ? (e.enter("lineEnding"), e.consume(a), e.exit("lineEnding"), i) : $e(e, o, "linePrefi\
x", 5)(a);
  }
  function o(a) {
    let u = n.events[n.events.length - 1];
    return u && u[1].type === "linePrefix" && u[2].sliceSerialize(u[1], !0).length >= 4 ? t(a) : le(a) ? i(a) : r(a);
  }
}
function MM(e) {
  let t = e.length - 4, r = 3, n, i;
  if ((e[r][1].type === "lineEnding" || e[r][1].type === "space") && (e[t][1].type === "lineEnding" || e[t][1].type === "space")) {
    for (n = r; ++n < t; )
      if (e[n][1].type === "codeTextData") {
        e[r][1].type = "codeTextPadding", e[t][1].type = "codeTextPadding", r += 2, t -= 2;
        break;
      }
  }
  for (n = r - 1, t++; ++n <= t; )
    i === void 0 ? n !== t && e[n][1].type !== "lineEnding" && (i = n) : (n === t || e[n][1].type === "lineEnding") && (e[i][1].type = "code\
TextData", n !== i + 2 && (e[i][1].end = e[n - 1][1].end, e.splice(i + 2, n - i - 2), t -= n - i - 2, n = i + 2), i = void 0);
  return e;
}
function qM(e) {
  return e !== 96 || this.events[this.events.length - 1][1].type === "characterEscape";
}
function $M(e, t, r) {
  let n = this, i = 0, o, a;
  return u;
  function u(f) {
    return e.enter("codeText"), e.enter("codeTextSequence"), l(f);
  }
  function l(f) {
    return f === 96 ? (e.consume(f), i++, l) : (e.exit("codeTextSequence"), c(f));
  }
  function c(f) {
    return f === null ? r(f) : f === 32 ? (e.enter("space"), e.consume(f), e.exit("space"), c) : f === 96 ? (a = e.enter("codeTextSequence"),
    o = 0, h(f)) : le(f) ? (e.enter("lineEnding"), e.consume(f), e.exit("lineEnding"), c) : (e.enter("codeTextData"), p(f));
  }
  function p(f) {
    return f === null || f === 32 || f === 96 || le(f) ? (e.exit("codeTextData"), c(f)) : (e.consume(f), p);
  }
  function h(f) {
    return f === 96 ? (e.consume(f), o++, h) : o === i ? (e.exit("codeTextSequence"), e.exit("codeText"), t(f)) : (a.type = "codeTextData", p(
    f));
  }
}
function Cw(e) {
  let t = {}, r = -1, n, i, o, a, u, l, c;
  for (; ++r < e.length; ) {
    for (; r in t; )
      r = t[r];
    if (n = e[r], r && n[1].type === "chunkFlow" && e[r - 1][1].type === "listItemPrefix" && (l = n[1]._tokenizer.events, o = 0, o < l.length &&
    l[o][1].type === "lineEndingBlank" && (o += 2), o < l.length && l[o][1].type === "content"))
      for (; ++o < l.length && l[o][1].type !== "content"; )
        l[o][1].type === "chunkText" && (l[o][1]._isInFirstContentOfListItem = !0, o++);
    if (n[0] === "enter")
      n[1].contentType && (Object.assign(t, VM(e, r)), r = t[r], c = !0);
    else if (n[1]._container) {
      for (o = r, i = void 0; o-- && (a = e[o], a[1].type === "lineEnding" || a[1].type === "lineEndingBlank"); )
        a[0] === "enter" && (i && (e[i][1].type = "lineEndingBlank"), a[1].type = "lineEnding", i = o);
      i && (n[1].end = Object.assign({}, e[i][1].start), u = e.slice(i, r), u.unshift(n), Xr(e, i, r - i + 1, u));
    }
  }
  return !c;
}
function VM(e, t) {
  let r = e[t][1], n = e[t][2], i = t - 1, o = [], a = r._tokenizer || n.parser[r.contentType](r.start), u = a.events, l = [], c = {}, p, h,
  f = -1, d = r, m = 0, g = 0, b = [g];
  for (; d; ) {
    for (; e[++i][1] !== d; )
      ;
    o.push(i), d._tokenizer || (p = n.sliceStream(d), d.next || p.push(null), h && a.defineSkip(d.start), d._isInFirstContentOfListItem && (a.
    _gfmTasklistFirstContentOfListItem = !0), a.write(p), d._isInFirstContentOfListItem && (a._gfmTasklistFirstContentOfListItem = void 0)),
    h = d, d = d.next;
  }
  for (d = r; ++f < u.length; )
    // Find a void token that includes a break.
    u[f][0] === "exit" && u[f - 1][0] === "enter" && u[f][1].type === u[f - 1][1].type && u[f][1].start.line !== u[f][1].end.line && (g = f +
    1, b.push(g), d._tokenizer = void 0, d.previous = void 0, d = d.next);
  for (a.events = [], d ? (d._tokenizer = void 0, d.previous = void 0) : b.pop(), f = b.length; f--; ) {
    let y = u.slice(b[f], b[f + 1]), E = o.pop();
    l.unshift([E, E + y.length - 1]), Xr(e, E, 2, y);
  }
  for (f = -1; ++f < l.length; )
    c[m + l[f][0]] = m + l[f][1], m += l[f][1] - l[f][0] - 1;
  return c;
}
function zM(e) {
  return Cw(e), e;
}
function HM(e, t) {
  let r;
  return n;
  function n(u) {
    return e.enter("content"), r = e.enter("chunkContent", {
      contentType: "content"
    }), i(u);
  }
  function i(u) {
    return u === null ? o(u) : le(u) ? e.check(
      WM,
      a,
      o
    )(u) : (e.consume(u), i);
  }
  function o(u) {
    return e.exit("chunkContent"), e.exit("content"), t(u);
  }
  function a(u) {
    return e.consume(u), e.exit("chunkContent"), r.next = e.enter("chunkContent", {
      contentType: "content",
      previous: r
    }), r = r.next, i;
  }
}
function GM(e, t, r) {
  let n = this;
  return i;
  function i(a) {
    return e.exit("chunkContent"), e.enter("lineEnding"), e.consume(a), e.exit("lineEnding"), $e(e, o, "linePrefix");
  }
  function o(a) {
    if (a === null || le(a))
      return r(a);
    let u = n.events[n.events.length - 1];
    return !n.parser.constructs.disable.null.includes("codeIndented") && u && u[1].type === "linePrefix" && u[2].sliceSerialize(u[1], !0).length >=
    4 ? t(a) : e.interrupt(n.parser.constructs.flow, r, t)(a);
  }
}
function ww(e, t, r, n, i, o, a, u, l) {
  let c = l || Number.POSITIVE_INFINITY, p = 0;
  return h;
  function h(y) {
    return y === 60 ? (e.enter(n), e.enter(i), e.enter(o), e.consume(y), e.exit(o), f) : y === null || y === 32 || y === 41 || Nd(y) ? r(y) :
    (e.enter(n), e.enter(a), e.enter(u), e.enter("chunkString", {
      contentType: "string"
    }), g(y));
  }
  function f(y) {
    return y === 62 ? (e.enter(o), e.consume(y), e.exit(o), e.exit(i), e.exit(n), t) : (e.enter(u), e.enter("chunkString", {
      contentType: "string"
    }), d(y));
  }
  function d(y) {
    return y === 62 ? (e.exit("chunkString"), e.exit(u), f(y)) : y === null || y === 60 || le(y) ? r(y) : (e.consume(y), y === 92 ? m : d);
  }
  function m(y) {
    return y === 60 || y === 62 || y === 92 ? (e.consume(y), d) : d(y);
  }
  function g(y) {
    return !p && (y === null || y === 41 || pt(y)) ? (e.exit("chunkString"), e.exit(u), e.exit(a), e.exit(n), t(y)) : p < c && y === 40 ? (e.
    consume(y), p++, g) : y === 41 ? (e.consume(y), p--, g) : y === null || y === 32 || y === 40 || Nd(y) ? r(y) : (e.consume(y), y === 92 ?
    b : g);
  }
  function b(y) {
    return y === 40 || y === 41 || y === 92 ? (e.consume(y), g) : g(y);
  }
}
function Sw(e, t, r, n, i, o) {
  let a = this, u = 0, l;
  return c;
  function c(d) {
    return e.enter(n), e.enter(i), e.consume(d), e.exit(i), e.enter(o), p;
  }
  function p(d) {
    return u > 999 || d === null || d === 91 || d === 93 && !l || // To do: remove in the future once we’ve switched from
    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,
    // which doesn’t need this.
    // Hidden footnotes hook.
    /* c8 ignore next 3 */
    d === 94 && !u && "_hiddenFootnoteSupport" in a.parser.constructs ? r(d) : d === 93 ? (e.exit(o), e.enter(i), e.consume(d), e.exit(i), e.
    exit(n), t) : le(d) ? (e.enter("lineEnding"), e.consume(d), e.exit("lineEnding"), p) : (e.enter("chunkString", {
      contentType: "string"
    }), h(d));
  }
  function h(d) {
    return d === null || d === 91 || d === 93 || le(d) || u++ > 999 ? (e.exit("chunkString"), p(d)) : (e.consume(d), l || (l = !Re(d)), d ===
    92 ? f : h);
  }
  function f(d) {
    return d === 91 || d === 92 || d === 93 ? (e.consume(d), u++, h) : h(d);
  }
}
function Aw(e, t, r, n, i, o) {
  let a;
  return u;
  function u(f) {
    return f === 34 || f === 39 || f === 40 ? (e.enter(n), e.enter(i), e.consume(f), e.exit(i), a = f === 40 ? 41 : f, l) : r(f);
  }
  function l(f) {
    return f === a ? (e.enter(i), e.consume(f), e.exit(i), e.exit(n), t) : (e.enter(o), c(f));
  }
  function c(f) {
    return f === a ? (e.exit(o), l(a)) : f === null ? r(f) : le(f) ? (e.enter("lineEnding"), e.consume(f), e.exit("lineEnding"), $e(e, c, "l\
inePrefix")) : (e.enter("chunkString", {
      contentType: "string"
    }), p(f));
  }
  function p(f) {
    return f === a || f === null || le(f) ? (e.exit("chunkString"), c(f)) : (e.consume(f), f === 92 ? h : p);
  }
  function h(f) {
    return f === a || f === 92 ? (e.consume(f), p) : p(f);
  }
}
function zo(e, t) {
  let r;
  return n;
  function n(i) {
    return le(i) ? (e.enter("lineEnding"), e.consume(i), e.exit("lineEnding"), r = !0, n) : Re(i) ? $e(
      e,
      n,
      r ? "linePrefix" : "lineSuffix"
    )(i) : t(i);
  }
}
function Ts(e) {
  return e.replace(/[\t\n\r ]+/g, " ").replace(/^ | $/g, "").toLowerCase().toUpperCase();
}
function XM(e, t, r) {
  let n = this, i;
  return o;
  function o(d) {
    return e.enter("definition"), a(d);
  }
  function a(d) {
    return Sw.call(
      n,
      e,
      u,
      // Note: we don’t need to reset the way `markdown-rs` does.
      r,
      "definitionLabel",
      "definitionLabelMarker",
      "definitionLabelString"
    )(d);
  }
  function u(d) {
    return i = Ts(
      n.sliceSerialize(n.events[n.events.length - 1][1]).slice(1, -1)
    ), d === 58 ? (e.enter("definitionMarker"), e.consume(d), e.exit("definitionMarker"), l) : r(d);
  }
  function l(d) {
    return pt(d) ? zo(e, c)(d) : c(d);
  }
  function c(d) {
    return ww(
      e,
      p,
      // Note: we don’t need to reset the way `markdown-rs` does.
      r,
      "definitionDestination",
      "definitionDestinationLiteral",
      "definitionDestinationLiteralMarker",
      "definitionDestinationRaw",
      "definitionDestinationString"
    )(d);
  }
  function p(d) {
    return e.attempt(ZM, h, h)(d);
  }
  function h(d) {
    return Re(d) ? $e(e, f, "whitespace")(d) : f(d);
  }
  function f(d) {
    return d === null || le(d) ? (e.exit("definition"), n.parser.defined.push(i), t(d)) : r(d);
  }
}
function KM(e, t, r) {
  return n;
  function n(u) {
    return pt(u) ? zo(e, i)(u) : r(u);
  }
  function i(u) {
    return Aw(
      e,
      o,
      r,
      "definitionTitle",
      "definitionTitleMarker",
      "definitionTitleString"
    )(u);
  }
  function o(u) {
    return Re(u) ? $e(e, a, "whitespace")(u) : a(u);
  }
  function a(u) {
    return u === null || le(u) ? t(u) : r(u);
  }
}
function QM(e, t, r) {
  return n;
  function n(o) {
    return e.enter("hardBreakEscape"), e.consume(o), i;
  }
  function i(o) {
    return le(o) ? (e.exit("hardBreakEscape"), t(o)) : r(o);
  }
}
function tq(e, t) {
  let r = e.length - 2, n = 3, i, o;
  return e[n][1].type === "whitespace" && (n += 2), r - 2 > n && e[r][1].type === "whitespace" && (r -= 2), e[r][1].type === "atxHeadingSequ\
ence" && (n === r - 1 || r - 4 > n && e[r - 2][1].type === "whitespace") && (r -= n + 1 === r ? 2 : 4), r > n && (i = {
    type: "atxHeadingText",
    start: e[n][1].start,
    end: e[r][1].end
  }, o = {
    type: "chunkText",
    start: e[n][1].start,
    end: e[r][1].end,
    contentType: "text"
  }, Xr(e, n, r - n + 1, [
    ["enter", i, t],
    ["enter", o, t],
    ["exit", o, t],
    ["exit", i, t]
  ])), e;
}
function rq(e, t, r) {
  let n = 0;
  return i;
  function i(p) {
    return e.enter("atxHeading"), o(p);
  }
  function o(p) {
    return e.enter("atxHeadingSequence"), a(p);
  }
  function a(p) {
    return p === 35 && n++ < 6 ? (e.consume(p), a) : p === null || pt(p) ? (e.exit("atxHeadingSequence"), u(p)) : r(p);
  }
  function u(p) {
    return p === 35 ? (e.enter("atxHeadingSequence"), l(p)) : p === null || le(p) ? (e.exit("atxHeading"), t(p)) : Re(p) ? $e(e, u, "whitesp\
ace")(p) : (e.enter("atxHeadingText"), c(p));
  }
  function l(p) {
    return p === 35 ? (e.consume(p), l) : (e.exit("atxHeadingSequence"), u(p));
  }
  function c(p) {
    return p === null || p === 35 || pt(p) ? (e.exit("atxHeadingText"), u(p)) : (e.consume(p), c);
  }
}
function aq(e) {
  let t = e.length;
  for (; t-- && !(e[t][0] === "enter" && e[t][1].type === "htmlFlow"); )
    ;
  return t > 1 && e[t - 2][1].type === "linePrefix" && (e[t][1].start = e[t - 2][1].start, e[t + 1][1].start = e[t - 2][1].start, e.splice(t -
  2, 2)), e;
}
function uq(e, t, r) {
  let n = this, i, o, a, u, l;
  return c;
  function c(L) {
    return p(L);
  }
  function p(L) {
    return e.enter("htmlFlow"), e.enter("htmlFlowData"), e.consume(L), h;
  }
  function h(L) {
    return L === 33 ? (e.consume(L), f) : L === 47 ? (e.consume(L), o = !0, g) : L === 63 ? (e.consume(L), i = 3, n.interrupt ? t : B) : Or(
    L) ? (e.consume(L), a = String.fromCharCode(L), b) : r(L);
  }
  function f(L) {
    return L === 45 ? (e.consume(L), i = 2, d) : L === 91 ? (e.consume(L), i = 5, u = 0, m) : Or(L) ? (e.consume(L), i = 4, n.interrupt ? t :
    B) : r(L);
  }
  function d(L) {
    return L === 45 ? (e.consume(L), n.interrupt ? t : B) : r(L);
  }
  function m(L) {
    let Ue = "CDATA[";
    return L === Ue.charCodeAt(u++) ? (e.consume(L), u === Ue.length ? n.interrupt ? t : U : m) : r(L);
  }
  function g(L) {
    return Or(L) ? (e.consume(L), a = String.fromCharCode(L), b) : r(L);
  }
  function b(L) {
    if (L === null || L === 47 || L === 62 || pt(L)) {
      let Ue = L === 47, Ve = a.toLowerCase();
      return !Ue && !o && IC.includes(Ve) ? (i = 1, n.interrupt ? t(L) : U(L)) : nq.includes(a.toLowerCase()) ? (i = 6, Ue ? (e.consume(L), y) :
      n.interrupt ? t(L) : U(L)) : (i = 7, n.interrupt && !n.parser.lazy[n.now().line] ? r(L) : o ? E(L) : A(L));
    }
    return L === 45 || Yt(L) ? (e.consume(L), a += String.fromCharCode(L), b) : r(L);
  }
  function y(L) {
    return L === 62 ? (e.consume(L), n.interrupt ? t : U) : r(L);
  }
  function E(L) {
    return Re(L) ? (e.consume(L), E) : $(L);
  }
  function A(L) {
    return L === 47 ? (e.consume(L), $) : L === 58 || L === 95 || Or(L) ? (e.consume(L), k) : Re(L) ? (e.consume(L), A) : $(L);
  }
  function k(L) {
    return L === 45 || L === 46 || L === 58 || L === 95 || Yt(L) ? (e.consume(L), k) : O(L);
  }
  function O(L) {
    return L === 61 ? (e.consume(L), w) : Re(L) ? (e.consume(L), O) : A(L);
  }
  function w(L) {
    return L === null || L === 60 || L === 61 || L === 62 || L === 96 ? r(L) : L === 34 || L === 39 ? (e.consume(L), l = L, C) : Re(L) ? (e.
    consume(L), w) : T(L);
  }
  function C(L) {
    return L === l ? (e.consume(L), l = null, F) : L === null || le(L) ? r(L) : (e.consume(L), C);
  }
  function T(L) {
    return L === null || L === 34 || L === 39 || L === 47 || L === 60 || L === 61 || L === 62 || L === 96 || pt(L) ? O(L) : (e.consume(L), T);
  }
  function F(L) {
    return L === 47 || L === 62 || Re(L) ? A(L) : r(L);
  }
  function $(L) {
    return L === 62 ? (e.consume(L), R) : r(L);
  }
  function R(L) {
    return L === null || le(L) ? U(L) : Re(L) ? (e.consume(L), R) : r(L);
  }
  function U(L) {
    return L === 45 && i === 2 ? (e.consume(L), N) : L === 60 && i === 1 ? (e.consume(L), z) : L === 62 && i === 4 ? (e.consume(L), ce) : L ===
    63 && i === 3 ? (e.consume(L), B) : L === 93 && i === 5 ? (e.consume(L), ie) : le(L) && (i === 6 || i === 7) ? (e.exit("htmlFlowData"), e.
    check(
      sq,
      Je,
      W
    )(L)) : L === null || le(L) ? (e.exit("htmlFlowData"), W(L)) : (e.consume(L), U);
  }
  function W(L) {
    return e.check(
      oq,
      Y,
      Je
    )(L);
  }
  function Y(L) {
    return e.enter("lineEnding"), e.consume(L), e.exit("lineEnding"), j;
  }
  function j(L) {
    return L === null || le(L) ? W(L) : (e.enter("htmlFlowData"), U(L));
  }
  function N(L) {
    return L === 45 ? (e.consume(L), B) : U(L);
  }
  function z(L) {
    return L === 47 ? (e.consume(L), a = "", Q) : U(L);
  }
  function Q(L) {
    if (L === 62) {
      let Ue = a.toLowerCase();
      return IC.includes(Ue) ? (e.consume(L), ce) : U(L);
    }
    return Or(L) && a.length < 8 ? (e.consume(L), a += String.fromCharCode(L), Q) : U(L);
  }
  function ie(L) {
    return L === 93 ? (e.consume(L), B) : U(L);
  }
  function B(L) {
    return L === 62 ? (e.consume(L), ce) : L === 45 && i === 2 ? (e.consume(L), B) : U(L);
  }
  function ce(L) {
    return L === null || le(L) ? (e.exit("htmlFlowData"), Je(L)) : (e.consume(L), ce);
  }
  function Je(L) {
    return e.exit("htmlFlow"), t(L);
  }
}
function lq(e, t, r) {
  let n = this;
  return i;
  function i(a) {
    return le(a) ? (e.enter("lineEnding"), e.consume(a), e.exit("lineEnding"), o) : r(a);
  }
  function o(a) {
    return n.parser.lazy[n.now().line] ? r(a) : t(a);
  }
}
function cq(e, t, r) {
  return n;
  function n(i) {
    return e.enter("lineEnding"), e.consume(i), e.exit("lineEnding"), e.attempt(Zo, t, r);
  }
}
function hq(e, t, r) {
  let n = this, i, o, a;
  return u;
  function u(B) {
    return e.enter("htmlText"), e.enter("htmlTextData"), e.consume(B), l;
  }
  function l(B) {
    return B === 33 ? (e.consume(B), c) : B === 47 ? (e.consume(B), O) : B === 63 ? (e.consume(B), A) : Or(B) ? (e.consume(B), T) : r(B);
  }
  function c(B) {
    return B === 45 ? (e.consume(B), p) : B === 91 ? (e.consume(B), o = 0, m) : Or(B) ? (e.consume(B), E) : r(B);
  }
  function p(B) {
    return B === 45 ? (e.consume(B), d) : r(B);
  }
  function h(B) {
    return B === null ? r(B) : B === 45 ? (e.consume(B), f) : le(B) ? (a = h, z(B)) : (e.consume(B), h);
  }
  function f(B) {
    return B === 45 ? (e.consume(B), d) : h(B);
  }
  function d(B) {
    return B === 62 ? N(B) : B === 45 ? f(B) : h(B);
  }
  function m(B) {
    let ce = "CDATA[";
    return B === ce.charCodeAt(o++) ? (e.consume(B), o === ce.length ? g : m) : r(B);
  }
  function g(B) {
    return B === null ? r(B) : B === 93 ? (e.consume(B), b) : le(B) ? (a = g, z(B)) : (e.consume(B), g);
  }
  function b(B) {
    return B === 93 ? (e.consume(B), y) : g(B);
  }
  function y(B) {
    return B === 62 ? N(B) : B === 93 ? (e.consume(B), y) : g(B);
  }
  function E(B) {
    return B === null || B === 62 ? N(B) : le(B) ? (a = E, z(B)) : (e.consume(B), E);
  }
  function A(B) {
    return B === null ? r(B) : B === 63 ? (e.consume(B), k) : le(B) ? (a = A, z(B)) : (e.consume(B), A);
  }
  function k(B) {
    return B === 62 ? N(B) : A(B);
  }
  function O(B) {
    return Or(B) ? (e.consume(B), w) : r(B);
  }
  function w(B) {
    return B === 45 || Yt(B) ? (e.consume(B), w) : C(B);
  }
  function C(B) {
    return le(B) ? (a = C, z(B)) : Re(B) ? (e.consume(B), C) : N(B);
  }
  function T(B) {
    return B === 45 || Yt(B) ? (e.consume(B), T) : B === 47 || B === 62 || pt(B) ? F(B) : r(B);
  }
  function F(B) {
    return B === 47 ? (e.consume(B), N) : B === 58 || B === 95 || Or(B) ? (e.consume(B), $) : le(B) ? (a = F, z(B)) : Re(B) ? (e.consume(B),
    F) : N(B);
  }
  function $(B) {
    return B === 45 || B === 46 || B === 58 || B === 95 || Yt(B) ? (e.consume(B), $) : R(B);
  }
  function R(B) {
    return B === 61 ? (e.consume(B), U) : le(B) ? (a = R, z(B)) : Re(B) ? (e.consume(B), R) : F(B);
  }
  function U(B) {
    return B === null || B === 60 || B === 61 || B === 62 || B === 96 ? r(B) : B === 34 || B === 39 ? (e.consume(B), i = B, W) : le(B) ? (a =
    U, z(B)) : Re(B) ? (e.consume(B), U) : (e.consume(B), Y);
  }
  function W(B) {
    return B === i ? (e.consume(B), i = void 0, j) : B === null ? r(B) : le(B) ? (a = W, z(B)) : (e.consume(B), W);
  }
  function Y(B) {
    return B === null || B === 34 || B === 39 || B === 60 || B === 61 || B === 96 ? r(B) : B === 47 || B === 62 || pt(B) ? F(B) : (e.consume(
    B), Y);
  }
  function j(B) {
    return B === 47 || B === 62 || pt(B) ? F(B) : r(B);
  }
  function N(B) {
    return B === 62 ? (e.consume(B), e.exit("htmlTextData"), e.exit("htmlText"), t) : r(B);
  }
  function z(B) {
    return e.exit("htmlTextData"), e.enter("lineEnding"), e.consume(B), e.exit("lineEnding"), Q;
  }
  function Q(B) {
    return Re(B) ? $e(
      e,
      ie,
      "linePrefix",
      n.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
    )(B) : ie(B);
  }
  function ie(B) {
    return e.enter("htmlTextData"), a(B);
  }
}
function gq(e) {
  let t = -1;
  for (; ++t < e.length; ) {
    let r = e[t][1];
    (r.type === "labelImage" || r.type === "labelLink" || r.type === "labelEnd") && (e.splice(t + 1, r.type === "labelImage" ? 4 : 2), r.type =
    "data", t++);
  }
  return e;
}
function yq(e, t) {
  let r = e.length, n = 0, i, o, a, u;
  for (; r--; )
    if (i = e[r][1], o) {
      if (i.type === "link" || i.type === "labelLink" && i._inactive)
        break;
      e[r][0] === "enter" && i.type === "labelLink" && (i._inactive = !0);
    } else if (a) {
      if (e[r][0] === "enter" && (i.type === "labelImage" || i.type === "labelLink") && !i._balanced && (o = r, i.type !== "labelLink")) {
        n = 2;
        break;
      }
    } else i.type === "labelEnd" && (a = r);
  let l = {
    type: e[o][1].type === "labelLink" ? "link" : "image",
    start: Object.assign({}, e[o][1].start),
    end: Object.assign({}, e[e.length - 1][1].end)
  }, c = {
    type: "label",
    start: Object.assign({}, e[o][1].start),
    end: Object.assign({}, e[a][1].end)
  }, p = {
    type: "labelText",
    start: Object.assign({}, e[o + n + 2][1].end),
    end: Object.assign({}, e[a - 2][1].start)
  };
  return u = [
    ["enter", l, t],
    ["enter", c, t]
  ], u = gr(u, e.slice(o + 1, o + n + 3)), u = gr(u, [["enter", p, t]]), u = gr(
    u,
    Vd(
      t.parser.constructs.insideSpan.null,
      e.slice(o + n + 4, a - 3),
      t
    )
  ), u = gr(u, [
    ["exit", p, t],
    e[a - 2],
    e[a - 1],
    ["exit", c, t]
  ]), u = gr(u, e.slice(a + 1)), u = gr(u, [["exit", l, t]]), Xr(e, o, e.length, u), e;
}
function Dq(e, t, r) {
  let n = this, i = n.events.length, o, a;
  for (; i--; )
    if ((n.events[i][1].type === "labelImage" || n.events[i][1].type === "labelLink") && !n.events[i][1]._balanced) {
      o = n.events[i][1];
      break;
    }
  return u;
  function u(f) {
    return o ? o._inactive ? h(f) : (a = n.parser.defined.includes(
      Ts(
        n.sliceSerialize({
          start: o.end,
          end: n.now()
        })
      )
    ), e.enter("labelEnd"), e.enter("labelMarker"), e.consume(f), e.exit("labelMarker"), e.exit("labelEnd"), l) : r(f);
  }
  function l(f) {
    return f === 40 ? e.attempt(
      fq,
      p,
      a ? p : h
    )(f) : f === 91 ? e.attempt(
      dq,
      p,
      a ? c : h
    )(f) : a ? p(f) : h(f);
  }
  function c(f) {
    return e.attempt(
      mq,
      p,
      h
    )(f);
  }
  function p(f) {
    return t(f);
  }
  function h(f) {
    return o._balanced = !0, r(f);
  }
}
function xq(e, t, r) {
  return n;
  function n(h) {
    return e.enter("resource"), e.enter("resourceMarker"), e.consume(h), e.exit("resourceMarker"), i;
  }
  function i(h) {
    return pt(h) ? zo(e, o)(h) : o(h);
  }
  function o(h) {
    return h === 41 ? p(h) : ww(
      e,
      a,
      u,
      "resourceDestination",
      "resourceDestinationLiteral",
      "resourceDestinationLiteralMarker",
      "resourceDestinationRaw",
      "resourceDestinationString",
      32
    )(h);
  }
  function a(h) {
    return pt(h) ? zo(e, l)(h) : p(h);
  }
  function u(h) {
    return r(h);
  }
  function l(h) {
    return h === 34 || h === 39 || h === 40 ? Aw(
      e,
      c,
      r,
      "resourceTitle",
      "resourceTitleMarker",
      "resourceTitleString"
    )(h) : p(h);
  }
  function c(h) {
    return pt(h) ? zo(e, p)(h) : p(h);
  }
  function p(h) {
    return h === 41 ? (e.enter("resourceMarker"), e.consume(h), e.exit("resourceMarker"), e.exit("resource"), t) : r(h);
  }
}
function bq(e, t, r) {
  let n = this;
  return i;
  function i(u) {
    return Sw.call(
      n,
      e,
      o,
      a,
      "reference",
      "referenceMarker",
      "referenceString"
    )(u);
  }
  function o(u) {
    return n.parser.defined.includes(
      Ts(
        n.sliceSerialize(n.events[n.events.length - 1][1]).slice(1, -1)
      )
    ) ? t(u) : r(u);
  }
  function a(u) {
    return r(u);
  }
}
function vq(e, t, r) {
  return n;
  function n(o) {
    return e.enter("reference"), e.enter("referenceMarker"), e.consume(o), e.exit("referenceMarker"), i;
  }
  function i(o) {
    return o === 93 ? (e.enter("referenceMarker"), e.consume(o), e.exit("referenceMarker"), e.exit("reference"), t) : r(o);
  }
}
function Cq(e, t, r) {
  let n = this;
  return i;
  function i(u) {
    return e.enter("labelImage"), e.enter("labelImageMarker"), e.consume(u), e.exit("labelImageMarker"), o;
  }
  function o(u) {
    return u === 91 ? (e.enter("labelMarker"), e.consume(u), e.exit("labelMarker"), e.exit("labelImage"), a) : r(u);
  }
  function a(u) {
    return u === 94 && "_hiddenFootnoteSupport" in n.parser.constructs ? r(u) : t(u);
  }
}
function Sq(e, t, r) {
  let n = this;
  return i;
  function i(a) {
    return e.enter("labelLink"), e.enter("labelMarker"), e.consume(a), e.exit("labelMarker"), e.exit("labelLink"), o;
  }
  function o(a) {
    return a === 94 && "_hiddenFootnoteSupport" in n.parser.constructs ? r(a) : t(a);
  }
}
function Aq(e, t) {
  return r;
  function r(n) {
    return e.enter("lineEnding"), e.consume(n), e.exit("lineEnding"), $e(e, t, "linePrefix");
  }
}
function Fq(e, t, r) {
  let n = 0, i;
  return o;
  function o(c) {
    return e.enter("thematicBreak"), a(c);
  }
  function a(c) {
    return i = c, u(c);
  }
  function u(c) {
    return c === i ? (e.enter("thematicBreakSequence"), l(c)) : n >= 3 && (c === null || le(c)) ? (e.exit("thematicBreak"), t(c)) : r(c);
  }
  function l(c) {
    return c === i ? (e.consume(c), n++, l) : (e.exit("thematicBreakSequence"), Re(c) ? $e(e, u, "whitespace")(c) : u(c));
  }
}
function Tq(e, t, r) {
  let n = this, i = n.events[n.events.length - 1], o = i && i[1].type === "linePrefix" ? i[2].sliceSerialize(i[1], !0).length : 0, a = 0;
  return u;
  function u(d) {
    let m = n.containerState.type || (d === 42 || d === 43 || d === 45 ? "listUnordered" : "listOrdered");
    if (m === "listUnordered" ? !n.containerState.marker || d === n.containerState.marker : Ld(d)) {
      if (n.containerState.type || (n.containerState.type = m, e.enter(m, {
        _container: !0
      })), m === "listUnordered")
        return e.enter("listItemPrefix"), d === 42 || d === 45 ? e.check(ll, r, c)(d) : c(d);
      if (!n.interrupt || d === 49)
        return e.enter("listItemPrefix"), e.enter("listItemValue"), l(d);
    }
    return r(d);
  }
  function l(d) {
    return Ld(d) && ++a < 10 ? (e.consume(d), l) : (!n.interrupt || a < 2) && (n.containerState.marker ? d === n.containerState.marker : d ===
    41 || d === 46) ? (e.exit("listItemValue"), c(d)) : r(d);
  }
  function c(d) {
    return e.enter("listItemMarker"), e.consume(d), e.exit("listItemMarker"), n.containerState.marker = n.containerState.marker || d, e.check(
      Zo,
      // Can’t be empty when interrupting.
      n.interrupt ? r : p,
      e.attempt(
        _q,
        f,
        h
      )
    );
  }
  function p(d) {
    return n.containerState.initialBlankLine = !0, o++, f(d);
  }
  function h(d) {
    return Re(d) ? (e.enter("listItemPrefixWhitespace"), e.consume(d), e.exit("listItemPrefixWhitespace"), f) : r(d);
  }
  function f(d) {
    return n.containerState.size = o + n.sliceSerialize(e.exit("listItemPrefix"), !0).length, t(d);
  }
}
function Iq(e, t, r) {
  let n = this;
  return n.containerState._closeFlow = void 0, e.check(Zo, i, o);
  function i(u) {
    return n.containerState.furtherBlankLines = n.containerState.furtherBlankLines || n.containerState.initialBlankLine, $e(
      e,
      t,
      "listItemIndent",
      n.containerState.size + 1
    )(u);
  }
  s(i, "onBlank");
  function o(u) {
    return n.containerState.furtherBlankLines || !Re(u) ? (n.containerState.furtherBlankLines = void 0, n.containerState.initialBlankLine = void 0,
    a(u)) : (n.containerState.furtherBlankLines = void 0, n.containerState.initialBlankLine = void 0, e.attempt(kq, t, a)(u));
  }
  s(o, "notBlank");
  function a(u) {
    return n.containerState._closeFlow = !0, n.interrupt = void 0, $e(
      e,
      e.attempt(Vt, t, r),
      "linePrefix",
      n.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
    )(u);
  }
  s(a, "notInCurrentItem");
}
function Pq(e, t, r) {
  let n = this;
  return $e(
    e,
    i,
    "listItemIndent",
    n.containerState.size + 1
  );
  function i(o) {
    let a = n.events[n.events.length - 1];
    return a && a[1].type === "listItemIndent" && a[2].sliceSerialize(a[1], !0).length === n.containerState.size ? t(o) : r(o);
  }
}
function Bq(e) {
  e.exit(this.containerState.type);
}
function Oq(e, t, r) {
  let n = this;
  return $e(
    e,
    i,
    "listItemPrefixWhitespace",
    n.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 5
  );
  function i(o) {
    let a = n.events[n.events.length - 1];
    return !Re(o) && a && a[1].type === "listItemPrefixWhitespace" ? t(o) : r(o);
  }
}
function Rq(e, t) {
  let r = e.length, n, i, o;
  for (; r--; )
    if (e[r][0] === "enter") {
      if (e[r][1].type === "content") {
        n = r;
        break;
      }
      e[r][1].type === "paragraph" && (i = r);
    } else
      e[r][1].type === "content" && e.splice(r, 1), !o && e[r][1].type === "definition" && (o = r);
  let a = {
    type: "setextHeading",
    start: Object.assign({}, e[i][1].start),
    end: Object.assign({}, e[e.length - 1][1].end)
  };
  return e[i][1].type = "setextHeadingText", o ? (e.splice(i, 0, ["enter", a, t]), e.splice(o + 1, 0, ["exit", e[n][1], t]), e[n][1].end = Object.
  assign({}, e[o][1].end)) : e[n][1] = a, e.push(["exit", a, t]), e;
}
function Nq(e, t, r) {
  let n = this, i;
  return o;
  function o(c) {
    let p = n.events.length, h;
    for (; p--; )
      if (n.events[p][1].type !== "lineEnding" && n.events[p][1].type !== "linePrefix" && n.events[p][1].type !== "content") {
        h = n.events[p][1].type === "paragraph";
        break;
      }
    return !n.parser.lazy[n.now().line] && (n.interrupt || h) ? (e.enter("setextHeadingLine"), i = c, a(c)) : r(c);
  }
  function a(c) {
    return e.enter("setextHeadingLineSequence"), u(c);
  }
  function u(c) {
    return c === i ? (e.consume(c), u) : (e.exit("setextHeadingLineSequence"), Re(c) ? $e(e, l, "lineSuffix")(c) : l(c));
  }
  function l(c) {
    return c === null || le(c) ? (e.exit("setextHeadingLine"), t(c)) : r(c);
  }
}
function Mq(e) {
  let t = {
    tokenize: i,
    concrete: !0
  };
  if (!e || !e.acorn || !e.acorn.parse)
    throw new Error("Expected an `acorn` instance passed in as `options.acorn`");
  let r = e.acorn, n = Object.assign({
    ecmaVersion: 2024,
    sourceType: "module"
  }, e.acornOptions, {
    locations: !0
  });
  return {
    flow: {
      101: t,
      105: t
    }
  };
  function i(o, a, u) {
    let l = this, c = l.parser.definedModuleSpecifiers || (l.parser.definedModuleSpecifiers = []), p = this.events.length + 1, h = "";
    return l.interrupt ? u : f;
    function f(E) {
      return l.now().column > 1 ? u(E) : (o.enter("mdxjsEsm"), o.enter("mdxjsEsmData"), o.consume(E), h += String.fromCharCode(E), d);
    }
    function d(E) {
      return Or(E) ? (o.consume(E), h += String.fromCharCode(E), d) : (h === "import" || h === "export") && E === 32 ? (o.consume(E), m) : u(
      E);
    }
    function m(E) {
      return E === null || le(E) ? (o.exit("mdxjsEsmData"), g(E)) : (o.consume(E), m);
    }
    function g(E) {
      return E === null ? y(E) : le(E) ? o.check(Lq, y, b)(E) : (o.enter("mdxjsEsmData"), m(E));
    }
    function b(E) {
      return o.enter("lineEnding"), o.consume(E), o.exit("lineEnding"), g;
    }
    function y(E) {
      let A = Dw(l.events.slice(p), {
        acorn: r,
        acornOptions: n,
        tokenTypes: ["mdxjsEsmData"],
        prefix: c.length > 0 ? "var " + c.join(",") + `
` : ""
      });
      if (A.error) {
        if (E !== null && A.swallow)
          return b(E);
        let O = new Le("Could not parse import/exports with acorn", {
          cause: A.error,
          place: {
            line: A.error.loc.line,
            column: A.error.loc.column + 1,
            offset: A.error.pos
          },
          ruleId: "acorn",
          source: "micromark-extension-mdxjs-esm"
        });
        throw O.url = BC + "#could-not-parse-importexports-with-acorn", O;
      }
      if (c.length > 0) {
        let O = A.estree.body.shift();
      }
      let k = -1;
      for (; ++k < A.estree.body.length; ) {
        let O = A.estree.body[k];
        if (!jq.has(O.type)) {
          let w = new Le("Unexpected `" + O.type + "` in code: only import/exports are supported", {
            place: bn(O),
            ruleId: "non-esm",
            source: "micromark-extension-mdxjs-esm"
          });
          throw w.url = BC + "#unexpected-type-in-code-only-importexports-are-supported", w;
        }
        if (O.type === "ImportDeclaration" && !l.interrupt) {
          let w = -1;
          for (; ++w < O.specifiers.length; ) {
            let C = O.specifiers[w];
            c.push(C.local.name);
          }
        }
      }
      return Object.assign(o.exit("mdxjsEsm"), e.addResult ? {
        estree: A.estree
      } : void 0), a(E);
    }
  }
}
function qq(e, t, r) {
  return n;
  function n(i) {
    return e.enter("lineEndingBlank"), e.consume(i), e.exit("lineEndingBlank"), e.attempt(Zo, t, r);
  }
}
function Fw(e) {
  let t = {}, r = -1;
  for (; ++r < e.length; )
    $q(t, e[r]);
  return t;
}
function $q(e, t) {
  let r;
  for (r in t) {
    let i = (OC.call(e, r) ? e[r] : void 0) || (e[r] = {}), o = t[r], a;
    if (o)
      for (a in o) {
        OC.call(i, a) || (i[a] = []);
        let u = o[a];
        Vq(
          // @ts-expect-error Looks like a list.
          i[a],
          Array.isArray(u) ? u : u ? [u] : []
        );
      }
  }
}
function Vq(e, t) {
  let r = -1, n = [];
  for (; ++r < t.length; )
    (t[r].add === "after" ? e : n).push(t[r]);
  Xr(e, 0, 0, n);
}
function Uq(e) {
  let t = Object.assign(
    {
      acorn: dt.extend((0, Qj.default)()),
      acornOptions: { ecmaVersion: 2024, sourceType: "module" },
      addResult: !0
    },
    e
  );
  return Fw([
    Mq(t),
    yM(t),
    vM(t),
    EM()
  ]);
}
function zq(e) {
  let t = (
    /** @type {Processor} */
    this
  ), r = e || Wq, n = t.data(), i = n.micromarkExtensions || (n.micromarkExtensions = []), o = n.fromMarkdownExtensions || (n.fromMarkdownExtensions =
  []), a = n.toMarkdownExtensions || (n.toMarkdownExtensions = []);
  i.push(Uq(r)), o.push(Kj()), a.push(Yj(r));
}
function Gq(e, t) {
  let r = t || Hq, n = typeof r.includeImageAlt == "boolean" ? r.includeImageAlt : !0, i = typeof r.includeHtml == "boolean" ? r.includeHtml :
  !0;
  return _w(e, n, i);
}
function _w(e, t, r) {
  if (Jq(e)) {
    if ("value" in e)
      return e.type === "html" && !r ? "" : e.value;
    if (t && "alt" in e && e.alt)
      return e.alt;
    if ("children" in e)
      return RC(e.children, t, r);
  }
  return Array.isArray(e) ? RC(e, t, r) : "";
}
function RC(e, t, r) {
  let n = [], i = -1;
  for (; ++i < e.length; )
    n[i] = _w(e[i], t, r);
  return n.join("");
}
function Jq(e) {
  return !!(e && typeof e == "object");
}
function kw(e, t) {
  let r = Number.parseInt(e, t);
  return (
    // C0 except for HT, LF, FF, CR, space.
    r < 9 || r === 11 || r > 13 && r < 32 || // Control character (DEL) of C0, and C1 controls.
    r > 126 && r < 160 || // Lone high surrogates and low surrogates.
    r > 55295 && r < 57344 || // Noncharacters.
    r > 64975 && r < 65008 || /* eslint-disable no-bitwise */
    (r & 65535) === 65535 || (r & 65535) === 65534 || /* eslint-enable no-bitwise */
    // Out of range
    r > 1114111 ? "\uFFFD" : String.fromCodePoint(r)
  );
}
function Is(e) {
  let t = [], r = -1, n = 0, i = 0;
  for (; ++r < e.length; ) {
    let o = e.charCodeAt(r), a = "";
    if (o === 37 && Yt(e.charCodeAt(r + 1)) && Yt(e.charCodeAt(r + 2)))
      i = 2;
    else if (o < 128)
      /[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(o)) || (a = String.fromCharCode(o));
    else if (o > 55295 && o < 57344) {
      let u = e.charCodeAt(r + 1);
      o < 56320 && u > 56319 && u < 57344 ? (a = String.fromCharCode(o, u), i = 1) : a = "\uFFFD";
    } else
      a = String.fromCharCode(o);
    a && (t.push(e.slice(n, r), encodeURIComponent(a)), n = r + i + 1, a = ""), i && (r += i, i = 0);
  }
  return t.join("") + e.slice(n);
}
function Xq(e) {
  let t = e.attempt(
    this.parser.constructs.contentInitial,
    n,
    i
  ), r;
  return t;
  function n(u) {
    if (u === null) {
      e.consume(u);
      return;
    }
    return e.enter("lineEnding"), e.consume(u), e.exit("lineEnding"), $e(e, t, "linePrefix");
  }
  function i(u) {
    return e.enter("paragraph"), o(u);
  }
  function o(u) {
    let l = e.enter("chunkText", {
      contentType: "text",
      previous: r
    });
    return r && (r.next = l), r = l, a(u);
  }
  function a(u) {
    if (u === null) {
      e.exit("chunkText"), e.exit("paragraph"), e.consume(u);
      return;
    }
    return le(u) ? (e.consume(u), e.exit("chunkText"), o) : (e.consume(u), a);
  }
}
function Yq(e) {
  let t = this, r = [], n = 0, i, o, a;
  return u;
  function u(A) {
    if (n < r.length) {
      let k = r[n];
      return t.containerState = k[1], e.attempt(
        k[0].continuation,
        l,
        c
      )(A);
    }
    return c(A);
  }
  function l(A) {
    if (n++, t.containerState._closeFlow) {
      t.containerState._closeFlow = void 0, i && E();
      let k = t.events.length, O = k, w;
      for (; O--; )
        if (t.events[O][0] === "exit" && t.events[O][1].type === "chunkFlow") {
          w = t.events[O][1].end;
          break;
        }
      y(n);
      let C = k;
      for (; C < t.events.length; )
        t.events[C][1].end = Object.assign({}, w), C++;
      return Xr(
        t.events,
        O + 1,
        0,
        t.events.slice(k)
      ), t.events.length = C, c(A);
    }
    return u(A);
  }
  function c(A) {
    if (n === r.length) {
      if (!i)
        return f(A);
      if (i.currentConstruct && i.currentConstruct.concrete)
        return m(A);
      t.interrupt = !!(i.currentConstruct && !i._gfmTableDynamicInterruptHack);
    }
    return t.containerState = {}, e.check(
      NC,
      p,
      h
    )(A);
  }
  function p(A) {
    return i && E(), y(n), f(A);
  }
  function h(A) {
    return t.parser.lazy[t.now().line] = n !== r.length, a = t.now().offset, m(A);
  }
  function f(A) {
    return t.containerState = {}, e.attempt(
      NC,
      d,
      m
    )(A);
  }
  function d(A) {
    return n++, r.push([t.currentConstruct, t.containerState]), f(A);
  }
  function m(A) {
    if (A === null) {
      i && E(), y(0), e.consume(A);
      return;
    }
    return i = i || t.parser.flow(t.now()), e.enter("chunkFlow", {
      contentType: "flow",
      previous: o,
      _tokenizer: i
    }), g(A);
  }
  function g(A) {
    if (A === null) {
      b(e.exit("chunkFlow"), !0), y(0), e.consume(A);
      return;
    }
    return le(A) ? (e.consume(A), b(e.exit("chunkFlow")), n = 0, t.interrupt = void 0, u) : (e.consume(A), g);
  }
  function b(A, k) {
    let O = t.sliceStream(A);
    if (k && O.push(null), A.previous = o, o && (o.next = A), o = A, i.defineSkip(A.start), i.write(O), t.parser.lazy[A.start.line]) {
      let w = i.events.length;
      for (; w--; )
        if (
          // The token starts before the line ending…
          i.events[w][1].start.offset < a && // …and either is not ended yet…
          (!i.events[w][1].end || // …or ends after it.
          i.events[w][1].end.offset > a)
        )
          return;
      let C = t.events.length, T = C, F, $;
      for (; T--; )
        if (t.events[T][0] === "exit" && t.events[T][1].type === "chunkFlow") {
          if (F) {
            $ = t.events[T][1].end;
            break;
          }
          F = !0;
        }
      for (y(n), w = C; w < t.events.length; )
        t.events[w][1].end = Object.assign({}, $), w++;
      Xr(
        t.events,
        T + 1,
        0,
        t.events.slice(C)
      ), t.events.length = w;
    }
  }
  function y(A) {
    let k = r.length;
    for (; k-- > A; ) {
      let O = r[k];
      t.containerState = O[1], O[0].exit.call(t, e);
    }
    r.length = A;
  }
  function E() {
    i.write([null]), o = void 0, i = void 0, t.containerState._closeFlow = void 0;
  }
}
function Qq(e, t, r) {
  return $e(
    e,
    e.attempt(this.parser.constructs.document, t, r),
    "linePrefix",
    this.parser.constructs.disable.null.includes("codeIndented") ? void 0 : 4
  );
}
function t$(e) {
  let t = this, r = e.attempt(
    // Try to parse a blank line.
    Zo,
    n,
    // Try to parse initial flow (essentially, only code).
    e.attempt(
      this.parser.constructs.flowInitial,
      i,
      $e(
        e,
        e.attempt(
          this.parser.constructs.flow,
          i,
          e.attempt(UM, i)
        ),
        "linePrefix"
      )
    )
  );
  return r;
  function n(o) {
    if (o === null) {
      e.consume(o);
      return;
    }
    return e.enter("lineEndingBlank"), e.consume(o), e.exit("lineEndingBlank"), t.currentConstruct = void 0, r;
  }
  function i(o) {
    if (o === null) {
      e.consume(o);
      return;
    }
    return e.enter("lineEnding"), e.consume(o), e.exit("lineEnding"), t.currentConstruct = void 0, r;
  }
}
function Tw(e) {
  return {
    tokenize: t,
    resolveAll: Iw(
      e === "text" ? s$ : void 0
    )
  };
  function t(r) {
    let n = this, i = this.parser.constructs[e], o = r.attempt(i, a, u);
    return a;
    function a(p) {
      return c(p) ? o(p) : u(p);
    }
    function u(p) {
      if (p === null) {
        r.consume(p);
        return;
      }
      return r.enter("data"), r.consume(p), l;
    }
    function l(p) {
      return c(p) ? (r.exit("data"), o(p)) : (r.consume(p), l);
    }
    function c(p) {
      if (p === null)
        return !0;
      let h = i[p], f = -1;
      if (h)
        for (; ++f < h.length; ) {
          let d = h[f];
          if (!d.previous || d.previous.call(n, n.previous))
            return !0;
        }
      return !1;
    }
  }
}
function Iw(e) {
  return t;
  function t(r, n) {
    let i = -1, o;
    for (; ++i <= r.length; )
      o === void 0 ? r[i] && r[i][1].type === "data" && (o = i, i++) : (!r[i] || r[i][1].type !== "data") && (i !== o + 2 && (r[o][1].end = r[i -
      1][1].end, r.splice(o + 2, i - o - 2), i = o + 2), o = void 0);
    return e ? e(r, n) : r;
  }
}
function s$(e, t) {
  let r = 0;
  for (; ++r <= e.length; )
    if ((r === e.length || e[r][1].type === "lineEnding") && e[r - 1][1].type === "data") {
      let n = e[r - 1][1], i = t.sliceStream(n), o = i.length, a = -1, u = 0, l;
      for (; o--; ) {
        let c = i[o];
        if (typeof c == "string") {
          for (a = c.length; c.charCodeAt(a - 1) === 32; )
            u++, a--;
          if (a)
            break;
          a = -1;
        } else if (c === -2)
          l = !0, u++;
        else if (c !== -1) {
          o++;
          break;
        }
      }
      if (u) {
        let c = {
          type: r === e.length || l || u < 2 ? "lineSuffix" : "hardBreakTrailing",
          start: {
            line: n.end.line,
            column: n.end.column - u,
            offset: n.end.offset - u,
            _index: n.start._index + o,
            _bufferIndex: o ? a : n.start._bufferIndex + a
          },
          end: Object.assign({}, n.end)
        };
        n.end = Object.assign({}, c.start), n.start.offset === n.end.offset ? Object.assign(n, c) : (e.splice(
          r,
          0,
          ["enter", c, t],
          ["exit", c, t]
        ), r += 2);
      }
      r++;
    }
  return e;
}
function o$(e, t, r) {
  let n = Object.assign(
    r ? Object.assign({}, r) : {
      line: 1,
      column: 1,
      offset: 0
    },
    {
      _index: 0,
      _bufferIndex: -1
    }
  ), i = {}, o = [], a = [], u = [], l = !0, c = {
    consume: k,
    enter: O,
    exit: w,
    attempt: F(C),
    check: F(T),
    interrupt: F(T, {
      interrupt: !0
    })
  }, p = {
    previous: null,
    code: null,
    containerState: {},
    events: [],
    parser: e,
    sliceStream: g,
    sliceSerialize: m,
    now: b,
    defineSkip: y,
    write: d
  }, h = t.tokenize.call(p, c), f;
  return t.resolveAll && o.push(t), p;
  function d(W) {
    return a = gr(a, W), E(), a[a.length - 1] !== null ? [] : ($(t, 0), p.events = Vd(o, p.events, p), p.events);
  }
  s(d, "write");
  function m(W, Y) {
    return u$(g(W), Y);
  }
  s(m, "sliceSerialize");
  function g(W) {
    return a$(a, W);
  }
  s(g, "sliceStream");
  function b() {
    let { line: W, column: Y, offset: j, _index: N, _bufferIndex: z } = n;
    return {
      line: W,
      column: Y,
      offset: j,
      _index: N,
      _bufferIndex: z
    };
  }
  s(b, "now");
  function y(W) {
    i[W.line] = W.column, U();
  }
  s(y, "defineSkip");
  function E() {
    let W;
    for (; n._index < a.length; ) {
      let Y = a[n._index];
      if (typeof Y == "string")
        for (W = n._index, n._bufferIndex < 0 && (n._bufferIndex = 0); n._index === W && n._bufferIndex < Y.length; )
          A(Y.charCodeAt(n._bufferIndex));
      else
        A(Y);
    }
  }
  s(E, "main");
  function A(W) {
    l = void 0, f = W, h = h(W);
  }
  s(A, "go");
  function k(W) {
    le(W) ? (n.line++, n.column = 1, n.offset += W === -3 ? 2 : 1, U()) : W !== -1 && (n.column++, n.offset++), n._bufferIndex < 0 ? n._index++ :
    (n._bufferIndex++, n._bufferIndex === a[n._index].length && (n._bufferIndex = -1, n._index++)), p.previous = W, l = !0;
  }
  s(k, "consume");
  function O(W, Y) {
    let j = Y || {};
    return j.type = W, j.start = b(), p.events.push(["enter", j, p]), u.push(j), j;
  }
  s(O, "enter");
  function w(W) {
    let Y = u.pop();
    return Y.end = b(), p.events.push(["exit", Y, p]), Y;
  }
  s(w, "exit2");
  function C(W, Y) {
    $(W, Y.from);
  }
  s(C, "onsuccessfulconstruct");
  function T(W, Y) {
    Y.restore();
  }
  s(T, "onsuccessfulcheck");
  function F(W, Y) {
    return j;
    function j(N, z, Q) {
      let ie, B, ce, Je;
      return Array.isArray(N) ? Ue(N) : "tokenize" in N ? (
        // @ts-expect-error Looks like a construct.
        Ue([N])
      ) : L(N);
      function L(qe) {
        return re;
        function re(be) {
          let K = be !== null && qe[be], se = be !== null && qe.null, ye = [
            // To do: add more extension tests.
            /* c8 ignore next 2 */
            ...Array.isArray(K) ? K : K ? [K] : [],
            ...Array.isArray(se) ? se : se ? [se] : []
          ];
          return Ue(ye)(be);
        }
      }
      function Ue(qe) {
        return ie = qe, B = 0, qe.length === 0 ? Q : Ve(qe[B]);
      }
      function Ve(qe) {
        return re;
        function re(be) {
          return Je = R(), ce = qe, qe.partial || (p.currentConstruct = qe), qe.name && p.parser.constructs.disable.null.includes(qe.name) ?
          _t(be) : qe.tokenize.call(
            // If we do have fields, create an object w/ `context` as its
            // prototype.
            // This allows a “live binding”, which is needed for `interrupt`.
            Y ? Object.assign(Object.create(p), Y) : p,
            c,
            ge,
            _t
          )(be);
        }
      }
      function ge(qe) {
        return l = !0, W(ce, Je), z;
      }
      function _t(qe) {
        return l = !0, Je.restore(), ++B < ie.length ? Ve(ie[B]) : Q;
      }
    }
  }
  s(F, "constructFactory");
  function $(W, Y) {
    W.resolveAll && !o.includes(W) && o.push(W), W.resolve && Xr(
      p.events,
      Y,
      p.events.length - Y,
      W.resolve(p.events.slice(Y), p)
    ), W.resolveTo && (p.events = W.resolveTo(p.events, p));
  }
  s($, "addResult");
  function R() {
    let W = b(), Y = p.previous, j = p.currentConstruct, N = p.events.length, z = Array.from(u);
    return {
      restore: Q,
      from: N
    };
    function Q() {
      n = W, p.previous = Y, p.currentConstruct = j, p.events.length = N, u = z, U();
    }
  }
  s(R, "store");
  function U() {
    n.line in i && n.column < 2 && (n.column = i[n.line], n.offset += i[n.line] - 1);
  }
  s(U, "accountForPotentialSkip");
}
function a$(e, t) {
  let r = t.start._index, n = t.start._bufferIndex, i = t.end._index, o = t.end._bufferIndex, a;
  if (r === i)
    a = [e[r].slice(n, o)];
  else {
    if (a = e.slice(r, i), n > -1) {
      let u = a[0];
      typeof u == "string" ? a[0] = u.slice(n) : a.shift();
    }
    o > 0 && a.push(e[i].slice(0, o));
  }
  return a;
}
function u$(e, t) {
  let r = -1, n = [], i;
  for (; ++r < e.length; ) {
    let o = e[r], a;
    if (typeof o == "string")
      a = o;
    else
      switch (o) {
        case -5: {
          a = "\r";
          break;
        }
        case -4: {
          a = `
`;
          break;
        }
        case -3: {
          a = `\r
`;
          break;
        }
        case -2: {
          a = t ? " " : "	";
          break;
        }
        case -1: {
          if (!t && i)
            continue;
          a = " ";
          break;
        }
        default:
          a = String.fromCharCode(o);
      }
    i = o === -2, n.push(a);
  }
  return n.join("");
}
function D$(e) {
  let r = (
    /** @type {FullNormalizedExtension} */
    Fw([Pw, ...(e || {}).extensions || []])
  ), n = {
    defined: [],
    lazy: {},
    constructs: r,
    content: i(Zq),
    document: i(Kq),
    flow: i(e$),
    string: i(n$),
    text: i(i$)
  };
  return n;
  function i(o) {
    return a;
    function a(u) {
      return o$(n, o, u);
    }
  }
}
function x$(e) {
  for (; !Cw(e); )
    ;
  return e;
}
function b$() {
  let e = 1, t = "", r = !0, n;
  return i;
  function i(o, a, u) {
    let l = [], c, p, h, f, d;
    for (o = t + (typeof o == "string" ? o.toString() : new TextDecoder(a || void 0).decode(o)), h = 0, t = "", r && (o.charCodeAt(0) === 65279 &&
    h++, r = void 0); h < o.length; ) {
      if (LC.lastIndex = h, c = LC.exec(o), f = c && c.index !== void 0 ? c.index : o.length, d = o.charCodeAt(f), !c) {
        t = o.slice(h);
        break;
      }
      if (d === 10 && h === f && n)
        l.push(-3), n = void 0;
      else
        switch (n && (l.push(-5), n = void 0), h < f && (l.push(o.slice(h, f)), e += f - h), d) {
          case 0: {
            l.push(65533), e++;
            break;
          }
          case 9: {
            for (p = Math.ceil(e / 4) * 4, l.push(-2); e++ < p; )
              l.push(-1);
            break;
          }
          case 10: {
            l.push(-4), e = 1;
            break;
          }
          default:
            n = !0, e = 1;
        }
      h = f + 1;
    }
    return u && (n && l.push(-5), t && l.push(t), l.push(null)), l;
  }
}
function E$(e) {
  return e.replace(v$, C$);
}
function C$(e, t, r) {
  if (t)
    return t;
  if (r.charCodeAt(0) === 35) {
    let i = r.charCodeAt(1), o = i === 120 || i === 88;
    return kw(r.slice(o ? 2 : 1), o ? 16 : 10);
  }
  return Go(r) || e;
}
function w$(e, t, r) {
  return typeof t != "string" && (r = t, t = void 0), S$(r)(
    x$(
      D$(r).document().write(b$()(e, t, !0))
    )
  );
}
function S$(e) {
  let t = {
    transforms: [],
    canContainEols: ["emphasis", "fragment", "heading", "paragraph", "strong"],
    enter: {
      autolink: o(We),
      autolinkProtocol: F,
      autolinkEmail: F,
      atxHeading: o(ve),
      blockQuote: o(re),
      characterEscape: F,
      characterReference: F,
      codeFenced: o(be),
      codeFencedFenceInfo: a,
      codeFencedFenceMeta: a,
      codeIndented: o(be, a),
      codeText: o(K, a),
      codeTextData: F,
      data: F,
      codeFlowValue: F,
      definition: o(se),
      definitionDestinationString: a,
      definitionLabelString: a,
      definitionTitleString: a,
      emphasis: o(ye),
      hardBreakEscape: o(Ce),
      hardBreakTrailing: o(Ce),
      htmlFlow: o(rt, a),
      htmlFlowData: F,
      htmlText: o(rt, a),
      htmlTextData: F,
      image: o(vt),
      label: a,
      link: o(We),
      listItem: o(nr),
      listItemValue: f,
      listOrdered: o(rr, h),
      listUnordered: o(rr),
      paragraph: o(Sr),
      reference: L,
      referenceString: a,
      resourceDestinationString: a,
      resourceTitleString: a,
      setextHeading: o(ve),
      strong: o(pe),
      thematicBreak: o(x)
    },
    exit: {
      atxHeading: l(),
      atxHeadingSequence: O,
      autolink: l(),
      autolinkEmail: qe,
      autolinkProtocol: _t,
      blockQuote: l(),
      characterEscapeValue: $,
      characterReferenceMarkerHexadecimal: Ve,
      characterReferenceMarkerNumeric: Ve,
      characterReferenceValue: ge,
      codeFenced: l(b),
      codeFencedFence: g,
      codeFencedFenceInfo: d,
      codeFencedFenceMeta: m,
      codeFlowValue: $,
      codeIndented: l(y),
      codeText: l(j),
      codeTextData: $,
      data: $,
      definition: l(),
      definitionDestinationString: k,
      definitionLabelString: E,
      definitionTitleString: A,
      emphasis: l(),
      hardBreakEscape: l(U),
      hardBreakTrailing: l(U),
      htmlFlow: l(W),
      htmlFlowData: $,
      htmlText: l(Y),
      htmlTextData: $,
      image: l(z),
      label: ie,
      labelText: Q,
      lineEnding: R,
      link: l(N),
      listItem: l(),
      listOrdered: l(),
      listUnordered: l(),
      paragraph: l(),
      referenceString: Ue,
      resourceDestinationString: B,
      resourceTitleString: ce,
      resource: Je,
      setextHeading: l(T),
      setextHeadingLineSequence: C,
      setextHeadingText: w,
      strong: l(),
      thematicBreak: l()
    }
  };
  Ow(t, (e || {}).mdastExtensions || []);
  let r = {};
  return n;
  function n(D) {
    let _ = {
      type: "root",
      children: []
    }, P = {
      stack: [_],
      tokenStack: [],
      config: t,
      enter: u,
      exit: c,
      buffer: a,
      resume: p,
      data: r
    }, v = [], M = -1;
    for (; ++M < D.length; )
      if (D[M][1].type === "listOrdered" || D[M][1].type === "listUnordered")
        if (D[M][0] === "enter")
          v.push(M);
        else {
          let G = v.pop();
          M = i(D, G, M);
        }
    for (M = -1; ++M < D.length; ) {
      let G = t[D[M][0]];
      Bw.call(G, D[M][1].type) && G[D[M][1].type].call(
        Object.assign(
          {
            sliceSerialize: D[M][2].sliceSerialize
          },
          P
        ),
        D[M][1]
      );
    }
    if (P.tokenStack.length > 0) {
      let G = P.tokenStack[P.tokenStack.length - 1];
      (G[1] || jC).call(P, void 0, G[0]);
    }
    for (_.position = {
      start: Wn(
        D.length > 0 ? D[0][1].start : {
          line: 1,
          column: 1,
          offset: 0
        }
      ),
      end: Wn(
        D.length > 0 ? D[D.length - 2][1].end : {
          line: 1,
          column: 1,
          offset: 0
        }
      )
    }, M = -1; ++M < t.transforms.length; )
      _ = t.transforms[M](_) || _;
    return _;
  }
  function i(D, _, P) {
    let v = _ - 1, M = -1, G = !1, J, Z, de, Fe;
    for (; ++v <= P; ) {
      let he = D[v];
      switch (he[1].type) {
        case "listUnordered":
        case "listOrdered":
        case "blockQuote": {
          he[0] === "enter" ? M++ : M--, Fe = void 0;
          break;
        }
        case "lineEndingBlank": {
          he[0] === "enter" && (J && !Fe && !M && !de && (de = v), Fe = void 0);
          break;
        }
        case "linePrefix":
        case "listItemValue":
        case "listItemMarker":
        case "listItemPrefix":
        case "listItemPrefixWhitespace":
          break;
        default:
          Fe = void 0;
      }
      if (!M && he[0] === "enter" && he[1].type === "listItemPrefix" || M === -1 && he[0] === "exit" && (he[1].type === "listUnordered" || he[1].
      type === "listOrdered")) {
        if (J) {
          let Te = v;
          for (Z = void 0; Te--; ) {
            let nt = D[Te];
            if (nt[1].type === "lineEnding" || nt[1].type === "lineEndingBlank") {
              if (nt[0] === "exit")
                continue;
              Z && (D[Z][1].type = "lineEndingBlank", G = !0), nt[1].type = "lineEnding", Z = Te;
            } else if (!(nt[1].type === "linePrefix" || nt[1].type === "blockQuotePrefix" || nt[1].type === "blockQuotePrefixWhitespace" || nt[1].
            type === "blockQuoteMarker" || nt[1].type === "listItemIndent"))
              break;
          }
          de && (!Z || de < Z) && (J._spread = !0), J.end = Object.assign(
            {},
            Z ? D[Z][1].start : he[1].end
          ), D.splice(Z || v, 0, ["exit", J, he[2]]), v++, P++;
        }
        if (he[1].type === "listItemPrefix") {
          let Te = {
            type: "listItem",
            _spread: !1,
            start: Object.assign({}, he[1].start),
            // @ts-expect-error: we’ll add `end` in a second.
            end: void 0
          };
          J = Te, D.splice(v, 0, ["enter", Te, he[2]]), v++, P++, de = void 0, Fe = !0;
        }
      }
    }
    return D[_][1]._spread = G, P;
  }
  function o(D, _) {
    return P;
    function P(v) {
      u.call(this, D(v), v), _ && _.call(this, v);
    }
  }
  function a() {
    this.stack.push({
      type: "fragment",
      children: []
    });
  }
  function u(D, _, P) {
    this.stack[this.stack.length - 1].children.push(D), this.stack.push(D), this.tokenStack.push([_, P]), D.position = {
      start: Wn(_.start),
      // @ts-expect-error: `end` will be patched later.
      end: void 0
    };
  }
  function l(D) {
    return _;
    function _(P) {
      D && D.call(this, P), c.call(this, P);
    }
  }
  function c(D, _) {
    let P = this.stack.pop(), v = this.tokenStack.pop();
    if (v)
      v[0].type !== D.type && (_ ? _.call(this, D, v[0]) : (v[1] || jC).call(this, D, v[0]));
    else throw new Error(
      "Cannot close `" + D.type + "` (" + yr({
        start: D.start,
        end: D.end
      }) + "): it\u2019s not open"
    );
    P.position.end = Wn(D.end);
  }
  function p() {
    return Gq(this.stack.pop());
  }
  function h() {
    this.data.expectingFirstListItemValue = !0;
  }
  function f(D) {
    if (this.data.expectingFirstListItemValue) {
      let _ = this.stack[this.stack.length - 2];
      _.start = Number.parseInt(this.sliceSerialize(D), 10), this.data.expectingFirstListItemValue = void 0;
    }
  }
  function d() {
    let D = this.resume(), _ = this.stack[this.stack.length - 1];
    _.lang = D;
  }
  function m() {
    let D = this.resume(), _ = this.stack[this.stack.length - 1];
    _.meta = D;
  }
  function g() {
    this.data.flowCodeInside || (this.buffer(), this.data.flowCodeInside = !0);
  }
  function b() {
    let D = this.resume(), _ = this.stack[this.stack.length - 1];
    _.value = D.replace(/^(\r?\n|\r)|(\r?\n|\r)$/g, ""), this.data.flowCodeInside = void 0;
  }
  function y() {
    let D = this.resume(), _ = this.stack[this.stack.length - 1];
    _.value = D.replace(/(\r?\n|\r)$/g, "");
  }
  function E(D) {
    let _ = this.resume(), P = this.stack[this.stack.length - 1];
    P.label = _, P.identifier = Ts(
      this.sliceSerialize(D)
    ).toLowerCase();
  }
  function A() {
    let D = this.resume(), _ = this.stack[this.stack.length - 1];
    _.title = D;
  }
  function k() {
    let D = this.resume(), _ = this.stack[this.stack.length - 1];
    _.url = D;
  }
  function O(D) {
    let _ = this.stack[this.stack.length - 1];
    if (!_.depth) {
      let P = this.sliceSerialize(D).length;
      _.depth = P;
    }
  }
  function w() {
    this.data.setextHeadingSlurpLineEnding = !0;
  }
  function C(D) {
    let _ = this.stack[this.stack.length - 1];
    _.depth = this.sliceSerialize(D).codePointAt(0) === 61 ? 1 : 2;
  }
  function T() {
    this.data.setextHeadingSlurpLineEnding = void 0;
  }
  function F(D) {
    let P = this.stack[this.stack.length - 1].children, v = P[P.length - 1];
    (!v || v.type !== "text") && (v = Ye(), v.position = {
      start: Wn(D.start),
      // @ts-expect-error: we’ll add `end` later.
      end: void 0
    }, P.push(v)), this.stack.push(v);
  }
  function $(D) {
    let _ = this.stack.pop();
    _.value += this.sliceSerialize(D), _.position.end = Wn(D.end);
  }
  function R(D) {
    let _ = this.stack[this.stack.length - 1];
    if (this.data.atHardBreak) {
      let P = _.children[_.children.length - 1];
      P.position.end = Wn(D.end), this.data.atHardBreak = void 0;
      return;
    }
    !this.data.setextHeadingSlurpLineEnding && t.canContainEols.includes(_.type) && (F.call(this, D), $.call(this, D));
  }
  function U() {
    this.data.atHardBreak = !0;
  }
  function W() {
    let D = this.resume(), _ = this.stack[this.stack.length - 1];
    _.value = D;
  }
  function Y() {
    let D = this.resume(), _ = this.stack[this.stack.length - 1];
    _.value = D;
  }
  function j() {
    let D = this.resume(), _ = this.stack[this.stack.length - 1];
    _.value = D;
  }
  function N() {
    let D = this.stack[this.stack.length - 1];
    if (this.data.inReference) {
      let _ = this.data.referenceType || "shortcut";
      D.type += "Reference", D.referenceType = _, delete D.url, delete D.title;
    } else
      delete D.identifier, delete D.label;
    this.data.referenceType = void 0;
  }
  function z() {
    let D = this.stack[this.stack.length - 1];
    if (this.data.inReference) {
      let _ = this.data.referenceType || "shortcut";
      D.type += "Reference", D.referenceType = _, delete D.url, delete D.title;
    } else
      delete D.identifier, delete D.label;
    this.data.referenceType = void 0;
  }
  function Q(D) {
    let _ = this.sliceSerialize(D), P = this.stack[this.stack.length - 2];
    P.label = E$(_), P.identifier = Ts(_).toLowerCase();
  }
  function ie() {
    let D = this.stack[this.stack.length - 1], _ = this.resume(), P = this.stack[this.stack.length - 1];
    if (this.data.inReference = !0, P.type === "link") {
      let v = D.children;
      P.children = v;
    } else
      P.alt = _;
  }
  function B() {
    let D = this.resume(), _ = this.stack[this.stack.length - 1];
    _.url = D;
  }
  function ce() {
    let D = this.resume(), _ = this.stack[this.stack.length - 1];
    _.title = D;
  }
  function Je() {
    this.data.inReference = void 0;
  }
  function L() {
    this.data.referenceType = "collapsed";
  }
  function Ue(D) {
    let _ = this.resume(), P = this.stack[this.stack.length - 1];
    P.label = _, P.identifier = Ts(
      this.sliceSerialize(D)
    ).toLowerCase(), this.data.referenceType = "full";
  }
  function Ve(D) {
    this.data.characterReferenceType = D.type;
  }
  function ge(D) {
    let _ = this.sliceSerialize(D), P = this.data.characterReferenceType, v;
    P ? (v = kw(
      _,
      P === "characterReferenceMarkerNumeric" ? 10 : 16
    ), this.data.characterReferenceType = void 0) : v = Go(_);
    let M = this.stack.pop();
    M.value += v, M.position.end = Wn(D.end);
  }
  function _t(D) {
    $.call(this, D);
    let _ = this.stack[this.stack.length - 1];
    _.url = this.sliceSerialize(D);
  }
  function qe(D) {
    $.call(this, D);
    let _ = this.stack[this.stack.length - 1];
    _.url = "mailto:" + this.sliceSerialize(D);
  }
  function re() {
    return {
      type: "blockquote",
      children: []
    };
  }
  function be() {
    return {
      type: "code",
      lang: null,
      meta: null,
      value: ""
    };
  }
  function K() {
    return {
      type: "inlineCode",
      value: ""
    };
  }
  function se() {
    return {
      type: "definition",
      identifier: "",
      label: null,
      title: null,
      url: ""
    };
  }
  function ye() {
    return {
      type: "emphasis",
      children: []
    };
  }
  function ve() {
    return {
      type: "heading",
      // @ts-expect-error `depth` will be set later.
      depth: 0,
      children: []
    };
  }
  function Ce() {
    return {
      type: "break"
    };
  }
  function rt() {
    return {
      type: "html",
      value: ""
    };
  }
  function vt() {
    return {
      type: "image",
      title: null,
      url: "",
      alt: null
    };
  }
  function We() {
    return {
      type: "link",
      title: null,
      url: "",
      children: []
    };
  }
  function rr(D) {
    return {
      type: "list",
      ordered: D.type === "listOrdered",
      start: null,
      spread: D._spread,
      children: []
    };
  }
  function nr(D) {
    return {
      type: "listItem",
      spread: D._spread,
      checked: null,
      children: []
    };
  }
  function Sr() {
    return {
      type: "paragraph",
      children: []
    };
  }
  function pe() {
    return {
      type: "strong",
      children: []
    };
  }
  function Ye() {
    return {
      type: "text",
      value: ""
    };
  }
  function x() {
    return {
      type: "thematicBreak"
    };
  }
}
function Wn(e) {
  return {
    line: e.line,
    column: e.column,
    offset: e.offset
  };
}
function Ow(e, t) {
  let r = -1;
  for (; ++r < t.length; ) {
    let n = t[r];
    Array.isArray(n) ? Ow(e, n) : A$(e, n);
  }
}
function A$(e, t) {
  let r;
  for (r in t)
    if (Bw.call(t, r))
      switch (r) {
        case "canContainEols": {
          let n = t[r];
          n && e[r].push(...n);
          break;
        }
        case "transforms": {
          let n = t[r];
          n && e[r].push(...n);
          break;
        }
        case "enter":
        case "exit": {
          let n = t[r];
          n && Object.assign(e[r], n);
          break;
        }
      }
}
function jC(e, t) {
  throw e ? new Error(
    "Cannot close `" + e.type + "` (" + yr({
      start: e.start,
      end: e.end
    }) + "): a different token (`" + t.type + "`, " + yr({
      start: t.start,
      end: t.end
    }) + ") is open"
  ) : new Error(
    "Cannot close document, a token (`" + t.type + "`, " + yr({
      start: t.start,
      end: t.end
    }) + ") is still open"
  );
}
function F$(e) {
  let t = this;
  t.parser = r;
  function r(n) {
    return w$(n, {
      ...t.data("settings"),
      ...e,
      // Note: these options are not in the readme.
      // The goal is for them to be set by plugins on `data` instead of being
      // passed by users.
      extensions: t.data("micromarkExtensions") || [],
      mdastExtensions: t.data("fromMarkdownExtensions") || []
    });
  }
  s(r, "parser");
}
function _$(e, t) {
  let r = {
    type: "element",
    tagName: "blockquote",
    properties: {},
    children: e.wrap(e.all(t), !0)
  };
  return e.patch(t, r), e.applyData(t, r);
}
function k$(e, t) {
  let r = { type: "element", tagName: "br", properties: {}, children: [] };
  return e.patch(t, r), [e.applyData(t, r), { type: "text", value: `
` }];
}
function T$(e, t) {
  let r = t.value ? t.value + `
` : "", n = {};
  t.lang && (n.className = ["language-" + t.lang]);
  let i = {
    type: "element",
    tagName: "code",
    properties: n,
    children: [{ type: "text", value: r }]
  };
  return t.meta && (i.data = { meta: t.meta }), e.patch(t, i), i = e.applyData(t, i), i = { type: "element", tagName: "pre", properties: {},
  children: [i] }, e.patch(t, i), i;
}
function I$(e, t) {
  let r = {
    type: "element",
    tagName: "del",
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, r), e.applyData(t, r);
}
function P$(e, t) {
  let r = {
    type: "element",
    tagName: "em",
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, r), e.applyData(t, r);
}
function B$(e, t) {
  let r = typeof e.options.clobberPrefix == "string" ? e.options.clobberPrefix : "user-content-", n = String(t.identifier).toUpperCase(), i = Is(
  n.toLowerCase()), o = e.footnoteOrder.indexOf(n), a, u = e.footnoteCounts.get(n);
  u === void 0 ? (u = 0, e.footnoteOrder.push(n), a = e.footnoteOrder.length) : a = o + 1, u += 1, e.footnoteCounts.set(n, u);
  let l = {
    type: "element",
    tagName: "a",
    properties: {
      href: "#" + r + "fn-" + i,
      id: r + "fnref-" + i + (u > 1 ? "-" + u : ""),
      dataFootnoteRef: !0,
      ariaDescribedBy: ["footnote-label"]
    },
    children: [{ type: "text", value: String(a) }]
  };
  e.patch(t, l);
  let c = {
    type: "element",
    tagName: "sup",
    properties: {},
    children: [l]
  };
  return e.patch(t, c), e.applyData(t, c);
}
function O$(e, t) {
  let r = {
    type: "element",
    tagName: "h" + t.depth,
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, r), e.applyData(t, r);
}
function R$(e, t) {
  if (e.options.allowDangerousHtml) {
    let r = { type: "raw", value: t.value };
    return e.patch(t, r), e.applyData(t, r);
  }
}
function Rw(e, t) {
  let r = t.referenceType, n = "]";
  if (r === "collapsed" ? n += "[]" : r === "full" && (n += "[" + (t.label || t.identifier) + "]"), t.type === "imageReference")
    return [{ type: "text", value: "![" + t.alt + n }];
  let i = e.all(t), o = i[0];
  o && o.type === "text" ? o.value = "[" + o.value : i.unshift({ type: "text", value: "[" });
  let a = i[i.length - 1];
  return a && a.type === "text" ? a.value += n : i.push({ type: "text", value: n }), i;
}
function N$(e, t) {
  let r = String(t.identifier).toUpperCase(), n = e.definitionById.get(r);
  if (!n)
    return Rw(e, t);
  let i = { src: Is(n.url || ""), alt: t.alt };
  n.title !== null && n.title !== void 0 && (i.title = n.title);
  let o = { type: "element", tagName: "img", properties: i, children: [] };
  return e.patch(t, o), e.applyData(t, o);
}
function L$(e, t) {
  let r = { src: Is(t.url) };
  t.alt !== null && t.alt !== void 0 && (r.alt = t.alt), t.title !== null && t.title !== void 0 && (r.title = t.title);
  let n = { type: "element", tagName: "img", properties: r, children: [] };
  return e.patch(t, n), e.applyData(t, n);
}
function j$(e, t) {
  let r = { type: "text", value: t.value.replace(/\r?\n|\r/g, " ") };
  e.patch(t, r);
  let n = {
    type: "element",
    tagName: "code",
    properties: {},
    children: [r]
  };
  return e.patch(t, n), e.applyData(t, n);
}
function M$(e, t) {
  let r = String(t.identifier).toUpperCase(), n = e.definitionById.get(r);
  if (!n)
    return Rw(e, t);
  let i = { href: Is(n.url || "") };
  n.title !== null && n.title !== void 0 && (i.title = n.title);
  let o = {
    type: "element",
    tagName: "a",
    properties: i,
    children: e.all(t)
  };
  return e.patch(t, o), e.applyData(t, o);
}
function q$(e, t) {
  let r = { href: Is(t.url) };
  t.title !== null && t.title !== void 0 && (r.title = t.title);
  let n = {
    type: "element",
    tagName: "a",
    properties: r,
    children: e.all(t)
  };
  return e.patch(t, n), e.applyData(t, n);
}
function $$(e, t, r) {
  let n = e.all(t), i = r ? V$(r) : Nw(t), o = {}, a = [];
  if (typeof t.checked == "boolean") {
    let p = n[0], h;
    p && p.type === "element" && p.tagName === "p" ? h = p : (h = { type: "element", tagName: "p", properties: {}, children: [] }, n.unshift(
    h)), h.children.length > 0 && h.children.unshift({ type: "text", value: " " }), h.children.unshift({
      type: "element",
      tagName: "input",
      properties: { type: "checkbox", checked: t.checked, disabled: !0 },
      children: []
    }), o.className = ["task-list-item"];
  }
  let u = -1;
  for (; ++u < n.length; ) {
    let p = n[u];
    (i || u !== 0 || p.type !== "element" || p.tagName !== "p") && a.push({ type: "text", value: `
` }), p.type === "element" && p.tagName === "p" && !i ? a.push(...p.children) : a.push(p);
  }
  let l = n[n.length - 1];
  l && (i || l.type !== "element" || l.tagName !== "p") && a.push({ type: "text", value: `
` });
  let c = { type: "element", tagName: "li", properties: o, children: a };
  return e.patch(t, c), e.applyData(t, c);
}
function V$(e) {
  let t = !1;
  if (e.type === "list") {
    t = e.spread || !1;
    let r = e.children, n = -1;
    for (; !t && ++n < r.length; )
      t = Nw(r[n]);
  }
  return t;
}
function Nw(e) {
  let t = e.spread;
  return t ?? e.children.length > 1;
}
function U$(e, t) {
  let r = {}, n = e.all(t), i = -1;
  for (typeof t.start == "number" && t.start !== 1 && (r.start = t.start); ++i < n.length; ) {
    let a = n[i];
    if (a.type === "element" && a.tagName === "li" && a.properties && Array.isArray(a.properties.className) && a.properties.className.includes(
    "task-list-item")) {
      r.className = ["contains-task-list"];
      break;
    }
  }
  let o = {
    type: "element",
    tagName: t.ordered ? "ol" : "ul",
    properties: r,
    children: e.wrap(n, !0)
  };
  return e.patch(t, o), e.applyData(t, o);
}
function W$(e, t) {
  let r = {
    type: "element",
    tagName: "p",
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, r), e.applyData(t, r);
}
function z$(e, t) {
  let r = { type: "root", children: e.wrap(e.all(t)) };
  return e.patch(t, r), e.applyData(t, r);
}
function H$(e, t) {
  let r = {
    type: "element",
    tagName: "strong",
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, r), e.applyData(t, r);
}
function G$(e, t) {
  let r = e.all(t), n = r.shift(), i = [];
  if (n) {
    let a = {
      type: "element",
      tagName: "thead",
      properties: {},
      children: e.wrap([n], !0)
    };
    e.patch(t.children[0], a), i.push(a);
  }
  if (r.length > 0) {
    let a = {
      type: "element",
      tagName: "tbody",
      properties: {},
      children: e.wrap(r, !0)
    }, u = rd(t.children[1]), l = td(t.children[t.children.length - 1]);
    u && l && (a.position = { start: u, end: l }), i.push(a);
  }
  let o = {
    type: "element",
    tagName: "table",
    properties: {},
    children: e.wrap(i, !0)
  };
  return e.patch(t, o), e.applyData(t, o);
}
function J$(e, t, r) {
  let n = r ? r.children : void 0, o = (n ? n.indexOf(t) : 1) === 0 ? "th" : "td", a = r && r.type === "table" ? r.align : void 0, u = a ? a.
  length : t.children.length, l = -1, c = [];
  for (; ++l < u; ) {
    let h = t.children[l], f = {}, d = a ? a[l] : void 0;
    d && (f.align = d);
    let m = { type: "element", tagName: o, properties: f, children: [] };
    h && (m.children = e.all(h), e.patch(h, m), m = e.applyData(h, m)), c.push(m);
  }
  let p = {
    type: "element",
    tagName: "tr",
    properties: {},
    children: e.wrap(c, !0)
  };
  return e.patch(t, p), e.applyData(t, p);
}
function Z$(e, t) {
  let r = {
    type: "element",
    tagName: "td",
    // Assume body cell.
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, r), e.applyData(t, r);
}
function X$(e) {
  let t = String(e), r = /\r?\n|\r/g, n = r.exec(t), i = 0, o = [];
  for (; n; )
    o.push(
      $C(t.slice(i, n.index), i > 0, !0),
      n[0]
    ), i = n.index + n[0].length, n = r.exec(t);
  return o.push($C(t.slice(i), i > 0, !1)), o.join("");
}
function $C(e, t, r) {
  let n = 0, i = e.length;
  if (t) {
    let o = e.codePointAt(n);
    for (; o === MC || o === qC; )
      n++, o = e.codePointAt(n);
  }
  if (r) {
    let o = e.codePointAt(i - 1);
    for (; o === MC || o === qC; )
      i--, o = e.codePointAt(i - 1);
  }
  return i > n ? e.slice(n, i) : "";
}
function K$(e, t) {
  let r = { type: "text", value: X$(String(t.value)) };
  return e.patch(t, r), e.applyData(t, r);
}
function Y$(e, t) {
  let r = {
    type: "element",
    tagName: "hr",
    properties: {},
    children: []
  };
  return e.patch(t, r), e.applyData(t, r);
}
function il() {
}
function iV(e, t) {
  let r = [{ type: "text", value: "\u21A9" }];
  return t > 1 && r.push({
    type: "element",
    tagName: "sup",
    properties: {},
    children: [{ type: "text", value: String(t) }]
  }), r;
}
function sV(e, t) {
  return "Back to reference " + (e + 1) + (t > 1 ? "-" + t : "");
}
function oV(e) {
  let t = typeof e.options.clobberPrefix == "string" ? e.options.clobberPrefix : "user-content-", r = e.options.footnoteBackContent || iV, n = e.
  options.footnoteBackLabel || sV, i = e.options.footnoteLabel || "Footnotes", o = e.options.footnoteLabelTagName || "h2", a = e.options.footnoteLabelProperties ||
  {
    className: ["sr-only"]
  }, u = [], l = -1;
  for (; ++l < e.footnoteOrder.length; ) {
    let c = e.footnoteById.get(e.footnoteOrder[l]);
    if (!c)
      continue;
    let p = e.all(c), h = String(c.identifier).toUpperCase(), f = Is(h.toLowerCase()), d = 0, m = [], g = e.footnoteCounts.get(h);
    for (; g !== void 0 && ++d <= g; ) {
      m.length > 0 && m.push({ type: "text", value: " " });
      let E = typeof r == "string" ? r : r(l, d);
      typeof E == "string" && (E = { type: "text", value: E }), m.push({
        type: "element",
        tagName: "a",
        properties: {
          href: "#" + t + "fnref-" + f + (d > 1 ? "-" + d : ""),
          dataFootnoteBackref: "",
          ariaLabel: typeof n == "string" ? n : n(l, d),
          className: ["data-footnote-backref"]
        },
        children: Array.isArray(E) ? E : [E]
      });
    }
    let b = p[p.length - 1];
    if (b && b.type === "element" && b.tagName === "p") {
      let E = b.children[b.children.length - 1];
      E && E.type === "text" ? E.value += " " : b.children.push({ type: "text", value: " " }), b.children.push(...m);
    } else
      p.push(...m);
    let y = {
      type: "element",
      tagName: "li",
      properties: { id: t + "fn-" + f },
      children: e.wrap(p, !0)
    };
    e.patch(c, y), u.push(y);
  }
  if (u.length !== 0)
    return {
      type: "element",
      tagName: "section",
      properties: { dataFootnotes: !0, className: ["footnotes"] },
      children: [
        {
          type: "element",
          tagName: o,
          properties: {
            ...fl(a),
            id: "footnote-label"
          },
          children: [{ type: "text", value: i }]
        },
        { type: "text", value: `
` },
        {
          type: "element",
          tagName: "ol",
          properties: {},
          children: e.wrap(u, !0)
        },
        { type: "text", value: `
` }
      ]
    };
}
function aV(e) {
  let t = [], r = -1;
  for (; ++r < e.length; )
    t[r] = qw(e[r]);
  return gl(n);
  function n(...i) {
    let o = -1;
    for (; ++o < t.length; )
      if (t[o].apply(this, i))
        return !0;
    return !1;
  }
}
function uV(e) {
  let t = (
    /** @type {Record<string, unknown>} */
    e
  );
  return gl(r);
  function r(n) {
    let i = (
      /** @type {Record<string, unknown>} */
      /** @type {unknown} */
      n
    ), o;
    for (o in e)
      if (i[o] !== t[o])
        return !1;
    return !0;
  }
}
function lV(e) {
  return gl(t);
  function t(r) {
    return r && r.type === e;
  }
}
function gl(e) {
  return t;
  function t(r, n, i) {
    return !!(pV(r) && e.call(
      this,
      r,
      typeof n == "number" ? n : void 0,
      i || void 0
    ));
  }
}
function cV() {
  return !0;
}
function pV(e) {
  return e !== null && typeof e == "object" && "type" in e;
}
function hV(e) {
  return "\x1B[33m" + e + "\x1B[39m";
}
function mV(e, t, r, n) {
  let i;
  typeof t == "function" && typeof r != "function" ? (n = r, r = t) : i = t;
  let o = qw(i), a = n ? -1 : 1;
  u(e, void 0, [])();
  function u(l, c, p) {
    let h = (
      /** @type {Record<string, unknown>} */
      l && typeof l == "object" ? l : {}
    );
    if (typeof h.type == "string") {
      let d = (
        // `hast`
        typeof h.tagName == "string" ? h.tagName : (
          // `xast`
          typeof h.name == "string" ? h.name : void 0
        )
      );
      Object.defineProperty(f, "name", {
        value: "node (" + hV(l.type + (d ? "<" + d + ">" : "")) + ")"
      });
    }
    return f;
    function f() {
      let d = $w, m, g, b;
      if ((!t || o(l, c, p[p.length - 1] || void 0)) && (d = gV(r(l, p)), d[0] === zC))
        return d;
      if ("children" in l && l.children) {
        let y = (
          /** @type {UnistParent} */
          l
        );
        if (y.children && d[0] !== dV)
          for (g = (n ? y.children.length : -1) + a, b = p.concat(y); g > -1 && g < y.children.length; ) {
            let E = y.children[g];
            if (m = u(E, g, b)(), m[0] === zC)
              return m;
            g = typeof m[1] == "number" ? m[1] : g + a;
          }
      }
      return d;
    }
  }
  s(u, "factory");
}
function gV(e) {
  return Array.isArray(e) ? e : typeof e == "number" ? [fV, e] : e == null ? $w : [e];
}
function Jd(e, t, r, n) {
  let i, o, a;
  typeof t == "function" && typeof r != "function" ? (o = void 0, a = t, i = r) : (o = t, a = r, i = n), mV(e, o, u, i);
  function u(l, c) {
    let p = c[c.length - 1], h = p ? p.children.indexOf(l) : void 0;
    return a(l, h, p);
  }
  s(u, "overload");
}
function DV(e, t) {
  let r = t || yV, n = /* @__PURE__ */ new Map(), i = /* @__PURE__ */ new Map(), o = /* @__PURE__ */ new Map(), a = { ...Q$, ...r.handlers },
  u = {
    all: c,
    applyData: bV,
    definitionById: n,
    footnoteById: i,
    footnoteCounts: o,
    footnoteOrder: [],
    handlers: a,
    one: l,
    options: r,
    patch: xV,
    wrap: EV
  };
  return Jd(e, function(p) {
    if (p.type === "definition" || p.type === "footnoteDefinition") {
      let h = p.type === "definition" ? n : i, f = String(p.identifier).toUpperCase();
      h.has(f) || h.set(f, p);
    }
  }), u;
  function l(p, h) {
    let f = p.type, d = u.handlers[f];
    if (Md.call(u.handlers, f) && d)
      return d(u, p, h);
    if (u.options.passThrough && u.options.passThrough.includes(f)) {
      if ("children" in p) {
        let { children: g, ...b } = p, y = fl(b);
        return y.children = u.all(p), y;
      }
      return fl(p);
    }
    return (u.options.unknownHandler || vV)(u, p, h);
  }
  s(l, "one2");
  function c(p) {
    let h = [];
    if ("children" in p) {
      let f = p.children, d = -1;
      for (; ++d < f.length; ) {
        let m = u.one(f[d], p);
        if (m) {
          if (d && f[d - 1].type === "break" && (!Array.isArray(m) && m.type === "text" && (m.value = HC(m.value)), !Array.isArray(m) && m.type ===
          "element")) {
            let g = m.children[0];
            g && g.type === "text" && (g.value = HC(g.value));
          }
          Array.isArray(m) ? h.push(...m) : h.push(m);
        }
      }
    }
    return h;
  }
  s(c, "all2");
}
function xV(e, t) {
  e.position && (t.position = nd(e));
}
function bV(e, t) {
  let r = t;
  if (e && e.data) {
    let n = e.data.hName, i = e.data.hChildren, o = e.data.hProperties;
    if (typeof n == "string")
      if (r.type === "element")
        r.tagName = n;
      else {
        let a = "children" in r ? r.children : [r];
        r = { type: "element", tagName: n, properties: {}, children: a };
      }
    r.type === "element" && o && Object.assign(r.properties, fl(o)), "children" in r && r.children && i !== null && i !== void 0 && (r.children =
    i);
  }
  return r;
}
function vV(e, t) {
  let r = t.data || {}, n = "value" in t && !(Md.call(r, "hProperties") || Md.call(r, "hChildren")) ? { type: "text", value: t.value } : {
    type: "element",
    tagName: "div",
    properties: {},
    children: e.all(t)
  };
  return e.patch(t, n), e.applyData(t, n);
}
function EV(e, t) {
  let r = [], n = -1;
  for (t && r.push({ type: "text", value: `
` }); ++n < e.length; )
    n && r.push({ type: "text", value: `
` }), r.push(e[n]);
  return t && e.length > 0 && r.push({ type: "text", value: `
` }), r;
}
function HC(e) {
  let t = 0, r = e.charCodeAt(t);
  for (; r === 9 || r === 32; )
    t++, r = e.charCodeAt(t);
  return e.slice(t);
}
function GC(e, t) {
  let r = DV(e, t), n = r.one(e, void 0), i = oV(r), o = Array.isArray(n) ? { type: "root", children: n } : n || { type: "root", children: [] };
  return i && ("children" in o, o.children.push({ type: "text", value: `
` }, i)), o;
}
function CV(e, t) {
  return e && "run" in e ? async function(r, n) {
    let i = (
      /** @type {HastRoot} */
      GC(r, t)
    );
    await e.run(i, n);
  } : function(r) {
    return (
      /** @type {HastRoot} */
      GC(r, t || e)
    );
  };
}
function JC(e) {
  if (e)
    throw e;
}
function qd(e) {
  if (typeof e != "object" || e === null)
    return !1;
  let t = Object.getPrototypeOf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}
function wV() {
  let e = [], t = { run: r, use: n };
  return t;
  function r(...i) {
    let o = -1, a = i.pop();
    if (typeof a != "function")
      throw new TypeError("Expected function as last argument, not " + a);
    u(null, ...i);
    function u(l, ...c) {
      let p = e[++o], h = -1;
      if (l) {
        a(l);
        return;
      }
      for (; ++h < i.length; )
        (c[h] === null || c[h] === void 0) && (c[h] = i[h]);
      i = c, p ? SV(p, u)(...c) : a(null, ...c);
    }
    s(u, "next");
  }
  function n(i) {
    if (typeof i != "function")
      throw new TypeError(
        "Expected `middelware` to be a function, not " + i
      );
    return e.push(i), t;
  }
}
function SV(e, t) {
  let r;
  return n;
  function n(...a) {
    let u = e.length > a.length, l;
    u && a.push(i);
    try {
      l = e.apply(this, a);
    } catch (c) {
      let p = (
        /** @type {Error} */
        c
      );
      if (u && r)
        throw p;
      return i(p);
    }
    u || (l instanceof Promise ? l.then(o, i) : l instanceof Error ? i(l) : o(l));
  }
  function i(a, ...u) {
    r || (r = !0, t(a, ...u));
  }
  function o(a) {
    i(null, a);
  }
}
function kd(e, t) {
  if (typeof t != "function")
    throw new TypeError("Cannot `" + e + "` without `parser`");
}
function Td(e, t) {
  if (typeof t != "function")
    throw new TypeError("Cannot `" + e + "` without `compiler`");
}
function Id(e, t) {
  if (t)
    throw new Error(
      "Cannot call `" + e + "` on a frozen processor.\nCreate a new processor first, by calling it: use `processor()` instead of `processor`."
    );
}
function ZC(e) {
  if (!qd(e) || typeof e.type != "string")
    throw new TypeError("Expected node, got `" + e + "`");
}
function XC(e, t, r) {
  if (!r)
    throw new Error(
      "`" + e + "` finished async. Use `" + t + "` instead"
    );
}
function ol(e) {
  return kV(e) ? e : new pw(e);
}
function kV(e) {
  return !!(e && typeof e == "object" && "message" in e && "messages" in e);
}
function TV(e) {
  return typeof e == "string" || IV(e);
}
function IV(e) {
  return !!(e && typeof e == "object" && "byteLength" in e && "byteOffset" in e);
}
function KC(e) {
  return e !== null && typeof e == "object" && "type" in e && typeof e.type == "string";
}
function Jo(e, { enter: t, leave: r }) {
  return new BV(t, r).visit(e, null);
}
function Uw(e, t) {
  if (e.type === "MemberExpression")
    return !e.computed && Uw(e.object, e);
  if (e.type === "Identifier") {
    if (!t)
      return !0;
    switch (t.type) {
      case "MemberExpression":
        return t.computed || e === t.object;
      case "MethodDefinition":
        return t.computed;
      case "PropertyDefinition":
        return t.computed || e === t.value;
      case "Property":
        return t.computed || e === t.value;
      case "ExportSpecifier":
      case "ImportSpecifier":
        return e === t.local;
      case "LabeledStatement":
      case "BreakStatement":
      case "ContinueStatement":
        return !1;
      default:
        return !0;
    }
  }
  return !1;
}
function Ww(e) {
  let t = /* @__PURE__ */ new WeakMap(), r = /* @__PURE__ */ new Map(), n = new Ss(null, !1), i = [], o = n;
  Jo(e, {
    enter(a, u) {
      switch (a.type) {
        case "Identifier":
          u && Uw(a, u) && i.push([o, a]);
          break;
        case "ImportDeclaration":
          a.specifiers.forEach((l) => {
            o.declarations.set(l.local.name, l);
          });
          break;
        case "FunctionExpression":
        case "FunctionDeclaration":
        case "ArrowFunctionExpression":
          a.type === "FunctionDeclaration" ? (a.id && o.declarations.set(a.id.name, a), t.set(a, o = new Ss(o, !1))) : (t.set(a, o = new Ss(
          o, !1)), a.type === "FunctionExpression" && a.id && o.declarations.set(a.id.name, a)), a.params.forEach((l) => {
            $d(l).forEach((c) => {
              o.declarations.set(c, a);
            });
          });
          break;
        case "ForStatement":
        case "ForInStatement":
        case "ForOfStatement":
          t.set(a, o = new Ss(o, !0));
          break;
        case "BlockStatement":
          t.set(a, o = new Ss(o, !0));
          break;
        case "ClassDeclaration":
        case "VariableDeclaration":
          o.add_declaration(a);
          break;
        case "CatchClause":
          t.set(a, o = new Ss(o, !0)), a.param && $d(a.param).forEach((l) => {
            a.param && o.declarations.set(l, a.param);
          });
          break;
      }
    },
    leave(a) {
      t.has(a) && o !== null && o.parent && (o = o.parent);
    }
  });
  for (let a = i.length - 1; a >= 0; --a) {
    let [u, l] = i[a];
    u.references.has(l.name) || zw(u, l.name), u.find_owner(l.name) || r.set(l.name, l);
  }
  return { map: t, scope: n, globals: r };
}
function zw(e, t) {
  e.references.add(t), e.parent && zw(e.parent, t);
}
function $d(e) {
  return _s(e).map((t) => t.name);
}
function _s(e, t = []) {
  switch (e.type) {
    case "Identifier":
      t.push(e);
      break;
    case "MemberExpression":
      let r = e;
      for (; r.type === "MemberExpression"; )
        r = /** @type {any} */
        r.object;
      t.push(
        /** @type {any} */
        r
      );
      break;
    case "ObjectPattern":
      let n = /* @__PURE__ */ s((o) => {
        o.type === "RestElement" ? _s(o.argument, t) : _s(o.value, t);
      }, "handle_prop");
      e.properties.forEach(n);
      break;
    case "ArrayPattern":
      let i = /* @__PURE__ */ s((o) => {
        o && _s(o, t);
      }, "handle_element");
      e.elements.forEach((o) => {
        o && i(o);
      });
      break;
    case "RestElement":
      _s(e.argument, t);
      break;
    case "AssignmentPattern":
      _s(e.left, t);
      break;
  }
  return t;
}
function zn(e, t) {
  let r = ["start", "end", "loc", "range", "comments"], n = -1;
  for (; ++n < r.length; ) {
    let i = r[n];
    i in e && (t[i] = e[i]);
  }
}
function OV(e) {
  return e.type === "FunctionDeclaration" ? { ...e, type: "FunctionExpression" } : (e.type, { ...e, type: "ClassExpression" });
}
function RV(e) {
  return e.type === "FunctionDeclaration" || e.type === "ClassDeclaration" || e.type === "VariableDeclaration";
}
function Zd(e, t) {
  let r = -1, n = [], i = [], o;
  for (; ++r < e.length; ) {
    let a = e[r];
    a.type === "ImportNamespaceSpecifier" ? o = a : i.push(a);
  }
  if (o) {
    let a = {
      type: "VariableDeclarator",
      id: o.local,
      init: t
    };
    zn(o, a), n.push(a);
  }
  return n.push({
    type: "VariableDeclarator",
    id: {
      type: "ObjectPattern",
      properties: i.map(function(a) {
        let u = a.type === "ImportSpecifier" ? a.imported : a.type === "ExportSpecifier" ? a.exported : { type: "Identifier", name: "default" },
        l = a.local;
        a.type === "ExportSpecifier" && (l = u, u = a.local);
        let c = {
          type: "Property",
          kind: "init",
          shorthand: u.name === l.name,
          method: !1,
          computed: !1,
          key: u,
          value: l
        };
        return zn(a, c), c;
      })
    },
    init: o ? { type: "Identifier", name: o.local.name } : t
  }), n;
}
function Hn(e) {
  let t = -1, r;
  for (; ++t < e.length; ) {
    let n = e[t], i = typeof n == "string" && Ir(n) ? { type: "Identifier", name: n } : { type: "Literal", value: n };
    r = r ? {
      type: "MemberExpression",
      object: r,
      property: i,
      computed: i.type === "Literal",
      optional: !1
    } : i;
  }
  return r.type, r;
}
function YC(e) {
  let t = -1, r;
  for (; ++t < e.length; ) {
    let n = e[t];
    typeof n == "string" && Ir(n, { jsx: !0 }), "" + n;
    let i = { type: "JSXIdentifier", name: n };
    r = r ? { type: "JSXMemberExpression", object: r, property: i } : i;
  }
  return r;
}
function NV(e) {
  let t = e.baseUrl || void 0, r = typeof t == "object" ? t.href : t, n = e.outputFormat || "program", i = e.pragma === void 0 ? "React.crea\
teElement" : e.pragma, o = e.pragmaFrag === void 0 ? "React.Fragment" : e.pragmaFrag, a = e.pragmaImportSource || "react", u = e.jsxImportSource ||
  "react", l = e.jsxRuntime || "automatic";
  return function(p, h) {
    let f = [], d = [], m = [], g = 0, b, y, E;
    if (l && m.push("@jsxRuntime " + l), l === "automatic" && u && m.push("@jsxImportSource " + u), l === "classic" && i && m.push("@jsx " +
    i), l === "classic" && o && m.push("@jsxFrag " + o), p.comments || (p.comments = []), m.length > 0 && p.comments.unshift({
      type: "Block",
      value: m.join(" "),
      data: { _mdxIsPragmaComment: !0 }
    }), l === "classic" && a) {
      if (!i)
        throw new Error(
          "Missing `pragma` in classic runtime with `pragmaImportSource`"
        );
      w({
        type: "ImportDeclaration",
        specifiers: [
          {
            type: "ImportDefaultSpecifier",
            local: { type: "Identifier", name: i.split(".")[0] }
          }
        ],
        source: { type: "Literal", value: a }
      });
    }
    for (E of p.body)
      if (E.type === "ExportDefaultDeclaration")
        b && h.fail(
          "Unexpected duplicate layout, expected a single layout (previous: " + yr(bn(b)) + ")",
          {
            ancestors: [p, E],
            place: bn(E),
            ruleId: "duplicate-layout",
            source: "recma-document"
          }
        ), b = E, d.push({
          type: "VariableDeclaration",
          kind: "const",
          declarations: [
            {
              type: "VariableDeclarator",
              id: { type: "Identifier", name: "MDXLayout" },
              init: RV(E.declaration) ? OV(E.declaration) : E.declaration
            }
          ]
        });
      else if (E.type === "ExportNamedDeclaration" && E.source) {
        let C = (
          /** @type {SimpleLiteral} */
          E.source
        );
        E.specifiers = E.specifiers.filter(function(T) {
          if (T.exported.name === "default") {
            b && h.fail(
              "Unexpected duplicate layout, expected a single layout (previous: " + yr(bn(b)) + ")",
              {
                ancestors: [p, E, T],
                place: bn(E),
                ruleId: "duplicate-layout",
                source: "recma-document"
              }
            ), b = T;
            let F = [];
            if (T.local.name === "default")
              F.push({
                type: "ImportDefaultSpecifier",
                local: { type: "Identifier", name: "MDXLayout" }
              });
            else {
              let U = {
                type: "ImportSpecifier",
                imported: T.local,
                local: { type: "Identifier", name: "MDXLayout" }
              };
              zn(T.local, U), F.push(U);
            }
            let $ = { type: "Literal", value: C.value };
            zn(C, $);
            let R = {
              type: "ImportDeclaration",
              specifiers: F,
              source: $
            };
            return zn(T, R), w(R), !1;
          }
          return !0;
        }), E.specifiers.length > 0 && O(E);
      } else E.type === "ExportNamedDeclaration" || E.type === "ExportAllDeclaration" ? O(E) : E.type === "ImportDeclaration" ? w(E) : E.type ===
      "ExpressionStatement" && (E.expression.type === "JSXElement" || // @ts-expect-error: `estree-jsx` does not register `JSXFragment` as an expression.
      E.expression.type === "JSXFragment") ? (y = !0, d.push(
        ...c(E.expression, n, !!b)
      )) : d.push(E);
    y || d.push(
      ...c(void 0, n, !!b)
    ), f.push(["MDXContent", "default"]), n === "function-body" && d.push({
      type: "ReturnStatement",
      argument: {
        type: "ObjectExpression",
        properties: [
          ...Array.from({ length: g }).map(
            /**
             * @param {undefined} _
             *   Nothing.
             * @param {number} index
             *   Index.
             * @returns {SpreadElement}
             *   Node.
             */
            function(C, T) {
              return {
                type: "SpreadElement",
                argument: {
                  type: "Identifier",
                  name: "_exportAll" + (T + 1)
                }
              };
            }
          ),
          ...f.map(function(C) {
            return {
              type: "Property",
              kind: "init",
              method: !1,
              computed: !1,
              shorthand: typeof C == "string",
              key: {
                type: "Identifier",
                name: typeof C == "string" ? C : C[1]
              },
              value: {
                type: "Identifier",
                name: typeof C == "string" ? C : C[0]
              }
            };
          })
        ]
      }
    }), p.body = d;
    let A = !1, k = !1;
    (r || n === "function-body") && Jo(p, {
      enter(C) {
        if ((C.type === "ExportAllDeclaration" || C.type === "ExportNamedDeclaration" || C.type === "ImportDeclaration") && C.source) {
          let T = C.source.value;
          try {
            new URL(T);
          } catch {
            (T.startsWith("/") || T.startsWith("./") || T.startsWith("../")) && (T = new URL(T, r).href);
          }
          let F = { type: "Literal", value: T };
          zn(C.source, F), C.source = F;
          return;
        }
        if (C.type === "ImportExpression") {
          k = !0;
          let T = {
            type: "CallExpression",
            callee: { type: "Identifier", name: "_resolveDynamicMdxSpecifier" },
            arguments: [C.source],
            optional: !1
          };
          C.source = T;
          return;
        }
        if (C.type === "MemberExpression" && "object" in C && C.object.type === "MetaProperty" && C.property.type === "Identifier" && C.object.
        meta.name === "import" && C.object.property.name === "meta" && C.property.name === "url") {
          A = !0;
          let T = { type: "Identifier", name: "_importMetaUrl" };
          zn(C, T), this.replace(T);
        }
      }
    }), k && (r || (A = !0), p.body.push(
      LV(
        r ? { type: "Literal", value: r } : { type: "Identifier", name: "_importMetaUrl" }
      )
    )), A && p.body.unshift(...jV());
    function O(C) {
      if (C.type === "ExportNamedDeclaration") {
        C.declaration && f.push(
          ...Ww(C.declaration).scope.declarations.keys()
        );
        for (E of C.specifiers)
          f.push(E.exported.name);
      }
      w(C);
    }
    s(O, "handleExport");
    function w(C) {
      let T, F;
      if (n === "function-body")
        if (
          // Always have a source:
          C.type === "ImportDeclaration" || C.type === "ExportAllDeclaration" || // Source optional:
          C.type === "ExportNamedDeclaration" && C.source
        ) {
          C.source;
          let $ = { type: "ImportExpression", source: C.source };
          zn(C, $), F = { type: "AwaitExpression", argument: $ }, (C.type === "ImportDeclaration" || C.type === "ExportNamedDeclaration") &&
          C.specifiers.length === 0 ? T = { type: "ExpressionStatement", expression: F } : T = {
            type: "VariableDeclaration",
            kind: "const",
            declarations: C.type === "ExportAllDeclaration" ? [
              {
                type: "VariableDeclarator",
                id: {
                  type: "Identifier",
                  name: "_exportAll" + ++g
                },
                init: F
              }
            ] : Zd(C.specifiers, F)
          };
        } else if (C.declaration)
          T = C.declaration;
        else {
          let $ = C.specifiers.filter(function(R) {
            return R.local.name !== R.exported.name;
          }).map(function(R) {
            return {
              type: "VariableDeclarator",
              id: R.exported,
              init: R.local
            };
          });
          $.length > 0 && (T = {
            type: "VariableDeclaration",
            kind: "const",
            declarations: $
          });
        }
      else
        T = C;
      T && d.push(T);
    }
    s(w, "handleEsm");
  };
  function c(p, h, f) {
    let m = {
      type: "JSXElement",
      openingElement: {
        type: "JSXOpeningElement",
        name: { type: "JSXIdentifier", name: "MDXLayout" },
        attributes: [
          {
            type: "JSXSpreadAttribute",
            argument: { type: "Identifier", name: "props" }
          }
        ],
        selfClosing: !1
      },
      closingElement: {
        type: "JSXClosingElement",
        name: { type: "JSXIdentifier", name: "MDXLayout" }
      },
      children: [
        {
          type: "JSXElement",
          openingElement: {
            type: "JSXOpeningElement",
            name: { type: "JSXIdentifier", name: "_createMdxContent" },
            attributes: [
              {
                type: "JSXSpreadAttribute",
                argument: { type: "Identifier", name: "props" }
              }
            ],
            selfClosing: !0
          },
          closingElement: null,
          children: []
        }
      ]
    };
    f || (m = {
      type: "ConditionalExpression",
      test: { type: "Identifier", name: "MDXLayout" },
      consequent: m,
      alternate: {
        type: "CallExpression",
        callee: { type: "Identifier", name: "_createMdxContent" },
        arguments: [{ type: "Identifier", name: "props" }],
        optional: !1
      }
    });
    let g = (
      // Cast because TS otherwise does not think `JSXFragment`s are expressions.
      /** @type {Readonly<Expression> | Readonly<JSXFragment>} */
      p || { type: "Identifier", name: "undefined" }
    );
    g.type === "JSXFragment" && g.children.length === 1 && g.children[0].type === "JSXElement" && (g = g.children[0]);
    let b = !1;
    Jo(g, {
      enter(E) {
        if (E.type === "ArrowFunctionExpression" || E.type === "FunctionDeclaration" || E.type === "FunctionExpression")
          return this.skip();
        (E.type === "AwaitExpression" || /* c8 ignore next 2 -- can only occur in a function (which then can
        * only be async, so skipped it) */
        E.type === "ForOfStatement" && E.await) && (b = !0);
      }
    });
    let y = {
      type: "FunctionDeclaration",
      id: { type: "Identifier", name: "MDXContent" },
      params: [
        {
          type: "AssignmentPattern",
          left: { type: "Identifier", name: "props" },
          right: { type: "ObjectExpression", properties: [] }
        }
      ],
      body: {
        type: "BlockStatement",
        body: [{ type: "ReturnStatement", argument: m }]
      }
    };
    return [
      {
        type: "FunctionDeclaration",
        async: b,
        id: { type: "Identifier", name: "_createMdxContent" },
        params: [{ type: "Identifier", name: "props" }],
        body: {
          type: "BlockStatement",
          body: [
            {
              type: "ReturnStatement",
              // Cast because TS doesn’t think `JSXFragment` is an expression.
              // eslint-disable-next-line object-shorthand
              argument: (
                /** @type {Expression} */
                g
              )
            }
          ]
        }
      },
      h === "program" ? { type: "ExportDefaultDeclaration", declaration: y } : y
    ];
  }
}
function LV(e) {
  return {
    type: "FunctionDeclaration",
    id: { type: "Identifier", name: "_resolveDynamicMdxSpecifier" },
    generator: !1,
    async: !1,
    params: [{ type: "Identifier", name: "d" }],
    body: {
      type: "BlockStatement",
      body: [
        {
          type: "IfStatement",
          test: {
            type: "BinaryExpression",
            left: {
              type: "UnaryExpression",
              operator: "typeof",
              prefix: !0,
              argument: { type: "Identifier", name: "d" }
            },
            operator: "!==",
            right: { type: "Literal", value: "string" }
          },
          consequent: {
            type: "ReturnStatement",
            argument: { type: "Identifier", name: "d" }
          },
          alternate: null
        },
        // To do: use `URL.canParse` when widely supported (see commented
        // out code below).
        {
          type: "TryStatement",
          block: {
            type: "BlockStatement",
            body: [
              {
                type: "ExpressionStatement",
                expression: {
                  type: "NewExpression",
                  callee: { type: "Identifier", name: "URL" },
                  arguments: [{ type: "Identifier", name: "d" }]
                }
              },
              {
                type: "ReturnStatement",
                argument: { type: "Identifier", name: "d" }
              }
            ]
          },
          handler: {
            type: "CatchClause",
            param: null,
            body: { type: "BlockStatement", body: [] }
          },
          finalizer: null
        },
        // To do: use `URL.canParse` when widely supported.
        // {
        //   type: 'IfStatement',
        //   test: {
        //     type: 'CallExpression',
        //     callee: toIdOrMemberExpression(['URL', 'canParse']),
        //     arguments: [{type: 'Identifier', name: 'd'}],
        //     optional: false
        //   },
        //   consequent: {
        //     type: 'ReturnStatement',
        //     argument: {type: 'Identifier', name: 'd'}
        //   },
        //   alternate: null
        // },
        {
          type: "IfStatement",
          test: {
            type: "LogicalExpression",
            left: {
              type: "LogicalExpression",
              left: {
                type: "CallExpression",
                callee: Hn(["d", "startsWith"]),
                arguments: [{ type: "Literal", value: "/" }],
                optional: !1
              },
              operator: "||",
              right: {
                type: "CallExpression",
                callee: Hn(["d", "startsWith"]),
                arguments: [{ type: "Literal", value: "./" }],
                optional: !1
              }
            },
            operator: "||",
            right: {
              type: "CallExpression",
              callee: Hn(["d", "startsWith"]),
              arguments: [{ type: "Literal", value: "../" }],
              optional: !1
            }
          },
          consequent: {
            type: "ReturnStatement",
            argument: {
              type: "MemberExpression",
              object: {
                type: "NewExpression",
                callee: { type: "Identifier", name: "URL" },
                arguments: [{ type: "Identifier", name: "d" }, e]
              },
              property: { type: "Identifier", name: "href" },
              computed: !1,
              optional: !1
            }
          },
          alternate: null
        },
        {
          type: "ReturnStatement",
          argument: { type: "Identifier", name: "d" }
        }
      ]
    }
  };
}
function jV() {
  return [
    {
      type: "VariableDeclaration",
      declarations: [
        {
          type: "VariableDeclarator",
          id: { type: "Identifier", name: "_importMetaUrl" },
          init: Hn(["arguments", 0, "baseUrl"])
        }
      ],
      kind: "const"
    },
    {
      type: "IfStatement",
      test: {
        type: "UnaryExpression",
        operator: "!",
        prefix: !0,
        argument: { type: "Identifier", name: "_importMetaUrl" }
      },
      consequent: {
        type: "ThrowStatement",
        argument: {
          type: "NewExpression",
          callee: { type: "Identifier", name: "Error" },
          arguments: [
            {
              type: "Literal",
              value: "Unexpected missing `options.baseUrl` needed to support `export \u2026 from`, `import`, or `import.meta.url` when generating\
 `function-body`"
            }
          ]
        }
      },
      alternate: null
    }
  ];
}
function MV(e, t) {
  let r = t || {}, n = r.runtime === "automatic", i = {}, o = {};
  Jo(e, {
    enter(a) {
      if (a.type === "Program") {
        let u = a.comments || [], l = -1;
        for (; ++l < u.length; ) {
          Pd.lastIndex = 0;
          let c = Pd.exec(u[l].value);
          for (; c; )
            i[c[1]] = c[2], c = Pd.exec(u[l].value);
        }
        if (i.jsxRuntime)
          if (i.jsxRuntime === "automatic") {
            if (n = !0, i.jsx)
              throw new Error("Unexpected `@jsx` pragma w/ automatic runtime");
            if (i.jsxFrag)
              throw new Error(
                "Unexpected `@jsxFrag` pragma w/ automatic runtime"
              );
          } else if (i.jsxRuntime === "classic") {
            if (n = !1, i.jsxImportSource)
              throw new Error(
                "Unexpected `@jsxImportSource` w/ classic runtime"
              );
          } else
            throw new Error(
              "Unexpected `jsxRuntime` `" + i.jsxRuntime + "`, expected `automatic` or `classic`"
            );
      }
    },
    // eslint-disable-next-line complexity
    leave(a) {
      if (a.type === "Program") {
        let g = [];
        if (o.fragment && g.push({
          type: "ImportSpecifier",
          imported: { type: "Identifier", name: "Fragment" },
          local: { type: "Identifier", name: "_Fragment" }
        }), o.jsx && g.push({
          type: "ImportSpecifier",
          imported: { type: "Identifier", name: "jsx" },
          local: { type: "Identifier", name: "_jsx" }
        }), o.jsxs && g.push({
          type: "ImportSpecifier",
          imported: { type: "Identifier", name: "jsxs" },
          local: { type: "Identifier", name: "_jsxs" }
        }), o.jsxDEV && g.push({
          type: "ImportSpecifier",
          imported: { type: "Identifier", name: "jsxDEV" },
          local: { type: "Identifier", name: "_jsxDEV" }
        }), g.length > 0) {
          let b = 0;
          for (; b < a.body.length; ) {
            let y = a.body[b];
            if ("directive" in y && y.directive)
              b++;
            else
              break;
          }
          a.body.splice(b, 0, {
            type: "ImportDeclaration",
            specifiers: g,
            source: {
              type: "Literal",
              value: (i.jsxImportSource || r.importSource || "react") + (r.development ? "/jsx-dev-runtime" : "/jsx-runtime")
            }
          });
        }
      }
      if (a.type !== "JSXElement" && a.type !== "JSXFragment")
        return;
      let u = [], l = -1;
      for (; ++l < a.children.length; ) {
        let g = a.children[l];
        if (g.type === "JSXExpressionContainer")
          g.expression.type !== "JSXEmptyExpression" && u.push(g.expression);
        else if (g.type === "JSXText") {
          let b = g.value.replace(/\t/g, " ").replace(/ *(\r?\n|\r) */g, `
`).replace(/\n+/g, `
`).replace(/\n+$/, "").replace(/^\n+/, "").replace(/\n/g, " ");
          if (b) {
            let y = { type: "Literal", value: b };
            Ho(g, y), u.push(y);
          }
        } else
          g.type !== "JSXElement" && g.type !== "JSXFragment" && g.type, u.push(g);
      }
      let c, p = [], h = [], f;
      if (a.type === "JSXElement") {
        if (c = dl(a.openingElement.name), c.type === "Identifier" && /^[a-z]/.test(c.name)) {
          let E = { type: "Literal", value: c.name };
          Ho(c, E), c = E;
        }
        let g, b = a.openingElement.attributes, y = -1;
        for (; ++y < b.length; ) {
          let E = b[y];
          if (E.type === "JSXSpreadAttribute")
            E.argument.type === "ObjectExpression" ? p.push(...E.argument.properties) : p.push({ type: "SpreadElement", argument: E.argument }),
            g = !0;
          else {
            let A = qV(E);
            if (n && A.key.type === "Identifier" && A.key.name === "key") {
              if (g)
                throw new Error(
                  "Expected `key` to come before any spread expressions"
                );
              let k = A.value;
              k.type !== "AssignmentPattern" && k.type !== "ArrayPattern" && k.type !== "ObjectPattern" && k.type, f = k;
            } else
              p.push(A);
          }
        }
      } else n ? (o.fragment = !0, c = { type: "Identifier", name: "_Fragment" }) : c = QC(
        i.jsxFrag || r.pragmaFrag || "React.Fragment"
      );
      n ? u.length > 0 && p.push({
        type: "Property",
        key: { type: "Identifier", name: "children" },
        value: u.length > 1 ? { type: "ArrayExpression", elements: u } : u[0],
        kind: "init",
        method: !1,
        shorthand: !1,
        computed: !1
      }) : h = u;
      let d;
      if (n) {
        h.push({ type: "ObjectExpression", properties: p }), f ? h.push(f) : r.development && h.push({ type: "Identifier", name: "undefined" });
        let g = u.length > 1;
        if (r.development) {
          o.jsxDEV = !0, d = {
            type: "Identifier",
            name: "_jsxDEV"
          }, h.push({ type: "Literal", value: g });
          let b = {
            type: "ObjectExpression",
            properties: [
              {
                type: "Property",
                method: !1,
                shorthand: !1,
                computed: !1,
                kind: "init",
                key: { type: "Identifier", name: "fileName" },
                value: {
                  type: "Literal",
                  value: r.filePath || "<source.js>"
                }
              }
            ]
          };
          a.loc && b.properties.push(
            {
              type: "Property",
              method: !1,
              shorthand: !1,
              computed: !1,
              kind: "init",
              key: { type: "Identifier", name: "lineNumber" },
              value: { type: "Literal", value: a.loc.start.line }
            },
            {
              type: "Property",
              method: !1,
              shorthand: !1,
              computed: !1,
              kind: "init",
              key: { type: "Identifier", name: "columnNumber" },
              value: { type: "Literal", value: a.loc.start.column + 1 }
            }
          ), h.push(b, { type: "ThisExpression" });
        } else g ? (o.jsxs = !0, d = { type: "Identifier", name: "_jsxs" }) : (o.jsx = !0, d = { type: "Identifier", name: "_jsx" });
      } else
        p.length > 0 ? h.unshift({ type: "ObjectExpression", properties: p }) : h.length > 0 && h.unshift({ type: "Literal", value: null }),
        d = QC(
          i.jsx || r.pragma || "React.createElement"
        );
      h.unshift(c);
      let m = {
        type: "CallExpression",
        callee: d,
        arguments: h,
        optional: !1
      };
      Ho(a, m), this.replace(m);
    }
  });
}
function qV(e) {
  let t;
  if (e.value)
    if (e.value.type === "JSXExpressionContainer") {
      let n = e.value.expression;
      n.type, t = n;
    } else {
      let n = e.value;
      n.type !== "JSXElement" && n.type, t = n, delete t.raw;
    }
  else
    t = { type: "Literal", value: !0 };
  let r = {
    type: "Property",
    key: dl(e.name),
    value: t,
    kind: "init",
    method: !1,
    shorthand: !1,
    computed: !1
  };
  return Ho(e, r), r;
}
function dl(e) {
  let t;
  if (e.type === "JSXMemberExpression") {
    let r = dl(e.property);
    t = {
      type: "MemberExpression",
      object: dl(e.object),
      property: r,
      computed: r.type === "Literal",
      optional: !1
    };
  } else e.type === "JSXNamespacedName" ? t = {
    type: "Literal",
    value: e.namespace.name + ":" + e.name.name
  } : t = Ir(e.name) ? { type: "Identifier", name: e.name } : { type: "Literal", value: e.name };
  return Ho(e, t), t;
}
function QC(e) {
  let t = e.split("."), r = -1, n;
  for (; ++r < t.length; ) {
    let i = Ir(t[r]) ? { type: "Identifier", name: t[r] } : { type: "Literal", value: t[r] };
    n = n ? {
      type: "MemberExpression",
      object: n,
      property: i,
      computed: !!(r && i.type === "Literal"),
      optional: !1
    } : i;
  }
  return n;
}
function Ho(e, t) {
  let r = ["start", "end", "loc", "range", "comments"], n = -1;
  for (; ++n < r.length; ) {
    let i = r[n];
    i in e && (t[i] = e[i]);
  }
}
function $V(e) {
  let { development: t, outputFormat: r } = e || {};
  return function(n, i) {
    if (MV(n, { development: t, filePath: i.history[0] }), n.comments && n.comments[0].type === "Block" && n.comments[0].data && n.comments[0].
    data._mdxIsPragmaComment && n.comments.shift(), r === "function-body") {
      let o = 0;
      for (; o < n.body.length; ) {
        let u = n.body[o];
        if ("directive" in u && u.directive)
          o++;
        else
          break;
      }
      let a = n.body[o];
      a && a.type === "ImportDeclaration" && typeof a.source.value == "string" && /\/jsx-(dev-)?runtime$/.test(a.source.value) && (n.body[o] =
      {
        type: "VariableDeclaration",
        kind: "const",
        declarations: Zd(
          a.specifiers,
          Hn(["arguments", 0])
        )
      });
    }
  };
}
function ew(e) {
  let t = -1, r;
  for (; ++t < e.length; ) {
    let n = e[t];
    r = r ? { type: "BinaryExpression", left: r, operator: "+", right: n } : n;
  }
  return r;
}
function VV(e) {
  let { development: t, outputFormat: r, providerImportSource: n } = e;
  return function(i, o) {
    let a = Ww(i), u = [], l = !1, c = !1, p;
    if (Jo(i, {
      enter(h) {
        let f = (
          /** @type {Scope | undefined} */
          a.map.get(h)
        );
        (h.type === "FunctionDeclaration" || h.type === "FunctionExpression" || h.type === "ArrowFunctionExpression") && (u.push({
          components: [],
          idToInvalidComponentName: /* @__PURE__ */ new Map(),
          node: h,
          objects: [],
          references: {},
          tags: []
        }), As(h, "MDXContent") && f && !Bd(f, "MDXLayout") && u[0].components.push("MDXLayout"));
        let d = u[0];
        if (!(!d || !As(d.node, "_createMdxContent") && !n) && (f && (f.node = h, p = f), p && h.type === "JSXElement")) {
          let m = h.openingElement.name;
          if (m.type === "JSXMemberExpression") {
            let g = [];
            for (; m.type === "JSXMemberExpression"; )
              g.unshift(m.property.name), m = m.object;
            g.unshift(m.name);
            let b = g.join("."), y = m.name, E = Bd(p, y);
            if (!Object.hasOwn(d.references, b)) {
              let A = (
                /** @type {Scope | undefined} */
                p.parent
              );
              (!E || // If the parent scope is `_createMdxContent`, then this
              // references a component we can add a check statement for.
              A && A.node.type === "FunctionDeclaration" && As(A.node, "_createMdxContent")) && (d.references[b] = { component: !0, node: h });
            }
            !d.objects.includes(y) && !E && d.objects.push(y);
          } else if (m.type !== "JSXNamespacedName") {
            if (Ir(m.name) && !/^[a-z]/.test(m.name)) {
              let g = m.name;
              Bd(p, g) || (g !== "MDXLayout" && !Object.hasOwn(d.references, g) && (d.references[g] = { component: !0, node: h }), d.components.
              includes(g) || d.components.push(g));
            } else if (!(h.data && h.data._mdxExplicitJsx)) {
              let g = m.name;
              d.tags.includes(g) || d.tags.push(g);
              let b = ["_components", g];
              if (Ir(g) === !1) {
                let y = d.idToInvalidComponentName.get(g);
                y === void 0 && (y = `_component${d.idToInvalidComponentName.size}`, d.idToInvalidComponentName.set(g, y)), b = [y];
              }
              h.openingElement.name = YC(b), h.closingElement && (h.closingElement.name = YC(b));
            }
          }
        }
      },
      leave(h) {
        let f = [], d = [], m = [], g = [];
        if (p && p.node === h && (p = /** @type {Scope} */
        p.parent), h.type === "FunctionDeclaration" || h.type === "FunctionExpression" || h.type === "ArrowFunctionExpression") {
          let b = h, y = u[u.length - 1], E;
          for (E of y.tags.sort())
            f.push({
              type: "Property",
              kind: "init",
              key: Ir(E) ? { type: "Identifier", name: E } : { type: "Literal", value: E },
              value: { type: "Literal", value: E },
              method: !1,
              shorthand: !1,
              computed: !1
            });
          d.push(...y.components);
          for (E of y.objects)
            d.includes(E) || d.push(E);
          d.sort();
          let A = [];
          if (f.length > 0 || d.length > 0 || y.idToInvalidComponentName.size > 0) {
            if (n && (l = !0, m.push({
              type: "CallExpression",
              callee: { type: "Identifier", name: "_provideComponents" },
              arguments: [],
              optional: !1
            })), (As(y.node, "MDXContent") || As(y.node, "_createMdxContent")) && m.push(Hn(["props", "components"])), f.length > 0 || m.length >
            1)
              for (let F of m)
                f.push({ type: "SpreadElement", argument: F });
            let C = f.length > 0 ? { type: "ObjectExpression", properties: f } : (
              // If we’re only getting components from `props.components`,
              // make sure it’s defined.
              {
                type: "LogicalExpression",
                operator: "||",
                left: m[0],
                right: { type: "ObjectExpression", properties: [] }
              }
            ), T;
            if (d.length > 0 && (T = {
              type: "ObjectPattern",
              properties: d.map(function(F) {
                return {
                  type: "Property",
                  kind: "init",
                  key: {
                    type: "Identifier",
                    name: F === "MDXLayout" ? "wrapper" : F
                  },
                  value: { type: "Identifier", name: F },
                  method: !1,
                  shorthand: F !== "MDXLayout",
                  computed: !1
                };
              })
            }), y.tags.length > 0 && (g.push({
              type: "VariableDeclarator",
              id: { type: "Identifier", name: "_components" },
              init: C
            }), C = { type: "Identifier", name: "_components" }), As(y.node, "_createMdxContent"))
              for (let [F, $] of [
                ...y.idToInvalidComponentName
              ].sort(function([R], [U]) {
                return R.localeCompare(U);
              }))
                g.push({
                  type: "VariableDeclarator",
                  id: {
                    type: "Identifier",
                    name: $
                  },
                  init: {
                    type: "MemberExpression",
                    object: { type: "Identifier", name: "_components" },
                    property: { type: "Literal", value: F },
                    computed: !0,
                    optional: !1
                  }
                });
            T && g.push({
              type: "VariableDeclarator",
              id: T,
              init: C
            }), g.length > 0 && A.push({
              type: "VariableDeclaration",
              kind: "const",
              declarations: g
            });
          }
          let k;
          for (k in y.references)
            if (Object.hasOwn(y.references, k)) {
              let C = k.split("."), T = 0;
              for (; ++T < C.length; ) {
                let F = C.slice(0, T).join(".");
                Object.hasOwn(y.references, F) || (y.references[F] = {
                  component: !1,
                  node: y.references[k].node
                });
              }
            }
          let O = Object.keys(y.references).sort(), w = -1;
          for (; ++w < O.length; ) {
            let C = O[w], T = y.references[C], F = yr(bn(T.node)), $ = [
              { type: "Literal", value: C },
              { type: "Literal", value: T.component }
            ];
            c = !0, t && F && $.push({ type: "Literal", value: F }), A.push({
              type: "IfStatement",
              test: {
                type: "UnaryExpression",
                operator: "!",
                prefix: !0,
                argument: Hn(C.split("."))
              },
              consequent: {
                type: "ExpressionStatement",
                expression: {
                  type: "CallExpression",
                  callee: { type: "Identifier", name: "_missingMdxReference" },
                  arguments: $,
                  optional: !1
                }
              },
              alternate: void 0
            });
          }
          A.length > 0 && (b.body.type !== "BlockStatement" && (b.body = {
            type: "BlockStatement",
            body: [{ type: "ReturnStatement", argument: b.body }]
          }), b.body.body.unshift(...A)), u.pop();
        }
      }
    }), l && n && i.body.unshift(
      UV(n, r)
    ), c) {
      let h = [
        { type: "Literal", value: "Expected " },
        {
          type: "ConditionalExpression",
          test: { type: "Identifier", name: "component" },
          consequent: { type: "Literal", value: "component" },
          alternate: { type: "Literal", value: "object" }
        },
        { type: "Literal", value: " `" },
        { type: "Identifier", name: "id" },
        {
          type: "Literal",
          value: "` to be defined: you likely forgot to import, pass, or provide it."
        }
      ], f = [
        { type: "Identifier", name: "id" },
        { type: "Identifier", name: "component" }
      ];
      t && (h.push({
        type: "ConditionalExpression",
        test: { type: "Identifier", name: "place" },
        consequent: ew([
          { type: "Literal", value: "\nIt\u2019s referenced in your code at `" },
          { type: "Identifier", name: "place" },
          {
            type: "Literal",
            value: (o.path ? "` in `" + o.path : "") + "`"
          }
        ]),
        alternate: { type: "Literal", value: "" }
      }), f.push({ type: "Identifier", name: "place" })), i.body.push({
        type: "FunctionDeclaration",
        id: { type: "Identifier", name: "_missingMdxReference" },
        generator: !1,
        async: !1,
        params: f,
        body: {
          type: "BlockStatement",
          body: [
            {
              type: "ThrowStatement",
              argument: {
                type: "NewExpression",
                callee: { type: "Identifier", name: "Error" },
                arguments: [ew(h)]
              }
            }
          ]
        }
      });
    }
    r === "function-body" && i.body.unshift({
      type: "ExpressionStatement",
      expression: { type: "Literal", value: "use strict" },
      directive: "use strict"
    });
  };
}
function UV(e, t) {
  let r = [
    {
      type: "ImportSpecifier",
      imported: { type: "Identifier", name: "useMDXComponents" },
      local: { type: "Identifier", name: "_provideComponents" }
    }
  ];
  return t === "function-body" ? {
    type: "VariableDeclaration",
    kind: "const",
    declarations: Zd(
      r,
      Hn(["arguments", 0])
    )
  } : {
    type: "ImportDeclaration",
    specifiers: r,
    source: { type: "Literal", value: e }
  };
}
function As(e, t) {
  return !!(e && "id" in e && e.id && e.id.name === t);
}
function Bd(e, t) {
  let r = e;
  for (; r; ) {
    if (r.declarations.has(t))
      return !0;
    r = /** @type {Scope | undefined} */
    r.parent || void 0;
  }
  return !1;
}
function Fs(e, t) {
  let { generator: r } = e;
  if (e.write("("), t != null && t.length > 0) {
    r[t[0].type](t[0], e);
    let { length: n } = t;
    for (let i = 1; i < n; i++) {
      let o = t[i];
      e.write(", "), r[o.type](o, e);
    }
  }
  e.write(")");
}
function Hw(e, t, r, n) {
  let i = e.expressionsPrecedence[t.type];
  if (i === Br)
    return !0;
  let o = e.expressionsPrecedence[r.type];
  return i !== o ? !n && i === 15 && o === 14 && r.operator === "**" || i < o : i !== 13 && i !== 14 ? !1 : t.operator === "**" && r.operator ===
  "**" ? !n : i === 13 && o === 13 && (t.operator === "??" || r.operator === "??") ? !0 : n ? al[t.operator] <= al[r.operator] : al[t.operator] <
  al[r.operator];
}
function ul(e, t, r, n) {
  let { generator: i } = e;
  Hw(e, t, r, n) ? (e.write("("), i[t.type](t, e), e.write(")")) : i[t.type](t, e);
}
function HV(e, t, r, n) {
  let i = t.split(`
`), o = i.length - 1;
  if (e.write(i[0].trim()), o > 0) {
    e.write(n);
    for (let a = 1; a < o; a++)
      e.write(r + i[a].trim() + n);
    e.write(r + i[o].trim());
  }
}
function Bt(e, t, r, n) {
  let { length: i } = t;
  for (let o = 0; o < i; o++) {
    let a = t[o];
    e.write(r), a.type[0] === "L" ? e.write("// " + a.value.trim() + `
`, a) : (e.write("/*"), HV(e, a.value, r, n), e.write("*/" + n));
  }
}
function GV(e) {
  let t = e;
  for (; t != null; ) {
    let { type: r } = t;
    if (r[0] === "C" && r[1] === "a")
      return !0;
    if (r[0] === "M" && r[1] === "e" && r[2] === "m")
      t = t.object;
    else
      return !1;
  }
}
function Od(e, t) {
  let { generator: r } = e, { declarations: n } = t;
  e.write(t.kind + " ");
  let { length: i } = n;
  if (i > 0) {
    r.VariableDeclarator(n[0], e);
    for (let o = 1; o < i; o++)
      e.write(", "), r.VariableDeclarator(n[o], e);
  }
}
function XV(e, t) {
  let r = new ZV(t);
  return r.generator[e.type](e, r), r.output;
}
function aw(e, t) {
  let { SourceMapGenerator: r, filePath: n, handlers: i } = t || KV, o = r ? new r({ file: n || "<unknown>.js" }) : void 0, a = XV(
    e,
    // @ts-expect-error: `sourceMap` can be undefined, `astring` types are buggy.
    {
      comments: !0,
      generator: { ...Gw, ...i },
      sourceMap: o || void 0
    }
  ), u = o ? o.toJSON() : void 0;
  return { value: a, map: u };
}
function YV(e, t) {
  this[e.name.type](e.name, t), e.value !== null && e.value !== void 0 && (t.write("="), e.value.type === "Literal" ? t.write(
    '"' + Jw(String(e.value.value)).replace(/"/g, "&quot;") + '"',
    e
  ) : this[e.value.type](e.value, t));
}
function QV(e, t) {
  t.write("</"), this[e.name.type](e.name, t), t.write(">");
}
function eU(e, t) {
  t.write("</>", e);
}
function tU(e, t) {
  let r = -1;
  if (this[e.openingElement.type](e.openingElement, t), e.children)
    for (; ++r < e.children.length; ) {
      let n = e.children[r];
      if (n.type === "JSXSpreadChild")
        throw new Error("JSX spread children are not supported");
      this[n.type](n, t);
    }
  e.closingElement && this[e.closingElement.type](e.closingElement, t);
}
function rU() {
}
function nU(e, t) {
  t.write("{"), this[e.expression.type](e.expression, t), t.write("}");
}
function iU(e, t) {
  let r = -1;
  if (this[e.openingFragment.type](e.openingFragment, t), e.children)
    for (; ++r < e.children.length; ) {
      let n = e.children[r];
      if (n.type === "JSXSpreadChild")
        throw new Error("JSX spread children are not supported");
      this[n.type](n, t);
    }
  this[e.closingFragment.type](e.closingFragment, t);
}
function sU(e, t) {
  t.write(e.name, e);
}
function oU(e, t) {
  this[e.object.type](e.object, t), t.write("."), this[e.property.type](e.property, t);
}
function aU(e, t) {
  this[e.namespace.type](e.namespace, t), t.write(":"), this[e.name.type](e.name, t);
}
function uU(e, t) {
  let r = -1;
  if (t.write("<"), this[e.name.type](e.name, t), e.attributes)
    for (; ++r < e.attributes.length; )
      t.write(" "), this[e.attributes[r].type](e.attributes[r], t);
  t.write(e.selfClosing ? " />" : ">");
}
function lU(e, t) {
  t.write("<>", e);
}
function cU(e, t) {
  t.write("{"), this.SpreadElement(e, t), t.write("}");
}
function pU(e, t) {
  t.write(Jw(e.value).replace(/[<>{}]/g, hU), e);
}
function Jw(e) {
  return e.replace(/&(?=[#a-z])/gi, "&amp;");
}
function hU(e) {
  return e === "<" ? "&lt;" : e === ">" ? "&gt;" : e === "{" ? "&#123;" : "&#125;";
}
function fU(e) {
  let t = (
    /** @type {Processor} */
    this
  ), { SourceMapGenerator: r } = e;
  t.compiler = n;
  function n(i, o) {
    let a = r ? aw(i, {
      SourceMapGenerator: r,
      filePath: o.path || "unknown.mdx",
      handlers: uw
    }) : aw(i, { handlers: uw });
    return o.map = a.map, a.value;
  }
  s(n, "compiler2");
}
function dU(e) {
  return function(t) {
    return Hu(t, e);
  };
}
function mU() {
  return function(e) {
    Jd(e, "raw", function(t, r, n) {
      if (n && typeof r == "number")
        return n.children.splice(r, 1), r;
    });
  };
}
function DU(e, t) {
  t ? typeof t == "string" && (t = { style: t }) : t = {};
  let r = t.preserveLineEndings ? xU : bU;
  return String(e).replace(
    t.style === "html" ? yU : gU,
    t.trim ? vU(r) : r
  );
}
function xU(e) {
  let t = /\r?\n|\r/.exec(e);
  return t ? t[0] : " ";
}
function bU() {
  return " ";
}
function vU(e) {
  return t;
  function t(r, n, i) {
    return n === 0 || n + r.length === i.length ? "" : e(r);
  }
}
function EU() {
  return function(e) {
    Jd(e, function(t, r, n) {
      let i = -1, o = !0, a = !1;
      if (n && typeof r == "number" && t.type === "paragraph") {
        let u = t.children;
        for (; ++i < u.length; ) {
          let l = u[i];
          if (l.type === "mdxJsxTextElement" || l.type === "mdxTextExpression")
            a = !0;
          else if (!(l.type === "text" && DU(l.value, { style: "html", trim: !0 }) === "")) {
            o = !1;
            break;
          }
        }
        if (o && a) {
          i = -1;
          let l = [];
          for (; ++i < u.length; ) {
            let c = u[i];
            c.type === "mdxJsxTextElement" && (c.type = "mdxJsxFlowElement"), c.type === "mdxTextExpression" && (c.type = "mdxFlowExpression"),
            c.type === "text" && /^[\t\r\n ]+$/.test(String(c.value)) || l.push(c);
          }
          return n.children.splice(r, 1, ...l), r;
        }
      }
      if (t.type === "mdxJsxFlowElement" || t.type === "mdxJsxTextElement") {
        let u = t.data || (t.data = {});
        u._mdxExplicitJsx = !0;
      }
    });
  };
}
function Xd(e) {
  let t = e || {}, r = -1;
  for (; ++r < lw.length; ) {
    let o = lw[r];
    o in t && ("" + o, void 0);
  }
  t.format === "detect" && void 0, (t.jsxRuntime === "classic" || t.pragma || t.pragmaFrag || t.pragmaImportSource) && !cw && (cw = !0, console.
  warn(
    "Unexpected deprecated option `jsxRuntime: 'classic'`, `pragma`, `pragmaFrag`, or `pragmaImportSource`; see <https://mdxjs.com/migrating\
/v3/> on how to migrate"
  ));
  let n = _V().use(F$);
  t.format !== "md" && n.use(zq);
  let i = t.remarkRehypeOptions || {};
  return n.use(EU).use(t.remarkPlugins || []).use(CV, {
    ...i,
    allowDangerousHtml: !0,
    passThrough: [...i.passThrough || [], ...Zw]
  }).use(t.rehypePlugins || []), t.format === "md" && n.use(mU), n.use(dU, t).use(NV, t).use(VV, t), t.jsx || n.use($V, t), n.use(fU, t).use(
  t.recmaPlugins || []), n;
}
function Xw(e, t) {
  let { file: r, options: n } = hw(e, t);
  return Xd(n).process(r);
}
function Kw(e, t) {
  let { file: r, options: n } = hw(e, t);
  return Xd(n).processSync(r);
}
function Yw(e) {
  let {
    Fragment: t,
    baseUrl: r,
    development: n,
    jsx: i,
    jsxDEV: o,
    jsxs: a,
    useMDXComponents: u,
    ...l
  } = e || {};
  if (!t)
    throw new Error("Expected `Fragment` given to `evaluate`");
  if (n) {
    if (!o)
      throw new Error("Expected `jsxDEV` given to `evaluate`");
  } else {
    if (!i)
      throw new Error("Expected `jsx` given to `evaluate`");
    if (!a)
      throw new Error("Expected `jsxs` given to `evaluate`");
  }
  return {
    compiletime: {
      ...l,
      development: n,
      outputFormat: "function-body",
      providerImportSource: u ? "#" : void 0
    },
    runtime: { Fragment: t, baseUrl: r, jsx: i, jsxDEV: o, jsxs: a, useMDXComponents: u }
  };
}
async function Kd(e, t) {
  return new CU(String(e))(t);
}
function Qw(e, t) {
  return new Function(String(e))(t);
}
async function wU(e, t) {
  let { compiletime: r, runtime: n } = Yw(t);
  return Kd(await Xw(e, r), n);
}
function SU(e, t) {
  let { compiletime: r, runtime: n } = Yw(t);
  return Qw(Kw(e, r), n);
}
var mj, gj, yj, Le, bd, pw, vj, Ej, Cj, kj, xC, vC, Pj, Cs, Bj, dw, Qj, eM, Or, Yt, tM, Ld, rM, yw, xn, sM, oM, Cd, aM, ks, hM, fM, SC, dM, mM,
AC, jd, SM, Zo, bw, vw, Ew, kC, TC, Ad, RM, jM, UM, WM, JM, ZM, YM, eq, nq, IC, iq, sq, oq, pq, Ud, fq, dq, mq, Eq, wq, Fd, ll, Vt, _q, kq, PC,
Lq, BC, jq, OC, Wq, Hq, Zq, Kq, NC, e$, r$, n$, i$, Pw, l$, c$, p$, h$, f$, d$, m$, g$, y$, LC, v$, Bw, MC, qC, Q$, Lw, ml, pl, hl, Wd, zd, Hd,
Gd, jw, Mw, VC, eV, UC, ws, tV, rV, Wo, sl, nV, WC, fl, qw, $w, fV, zC, dV, Md, yV, _d, AV, FV, Vw, _V, PV, BV, Ss, Pd, WV, al, Br, zV, tw, rw,
nw, iw, sw, ow, Gw, JV, ZV, KV, uw, gU, yU, Zw, lw, cw, CU, t2 = Et(() => {
  sd();
  cC();
  mj = ms({
    "node_modules/micromark-extension-mdxjs/node_modules/acorn-jsx/xhtml.js"(e, t) {
      t.exports = {
        quot: '"',
        amp: "&",
        apos: "'",
        lt: "<",
        gt: ">",
        nbsp: "\xA0",
        iexcl: "\xA1",
        cent: "\xA2",
        pound: "\xA3",
        curren: "\xA4",
        yen: "\xA5",
        brvbar: "\xA6",
        sect: "\xA7",
        uml: "\xA8",
        copy: "\xA9",
        ordf: "\xAA",
        laquo: "\xAB",
        not: "\xAC",
        shy: "\xAD",
        reg: "\xAE",
        macr: "\xAF",
        deg: "\xB0",
        plusmn: "\xB1",
        sup2: "\xB2",
        sup3: "\xB3",
        acute: "\xB4",
        micro: "\xB5",
        para: "\xB6",
        middot: "\xB7",
        cedil: "\xB8",
        sup1: "\xB9",
        ordm: "\xBA",
        raquo: "\xBB",
        frac14: "\xBC",
        frac12: "\xBD",
        frac34: "\xBE",
        iquest: "\xBF",
        Agrave: "\xC0",
        Aacute: "\xC1",
        Acirc: "\xC2",
        Atilde: "\xC3",
        Auml: "\xC4",
        Aring: "\xC5",
        AElig: "\xC6",
        Ccedil: "\xC7",
        Egrave: "\xC8",
        Eacute: "\xC9",
        Ecirc: "\xCA",
        Euml: "\xCB",
        Igrave: "\xCC",
        Iacute: "\xCD",
        Icirc: "\xCE",
        Iuml: "\xCF",
        ETH: "\xD0",
        Ntilde: "\xD1",
        Ograve: "\xD2",
        Oacute: "\xD3",
        Ocirc: "\xD4",
        Otilde: "\xD5",
        Ouml: "\xD6",
        times: "\xD7",
        Oslash: "\xD8",
        Ugrave: "\xD9",
        Uacute: "\xDA",
        Ucirc: "\xDB",
        Uuml: "\xDC",
        Yacute: "\xDD",
        THORN: "\xDE",
        szlig: "\xDF",
        agrave: "\xE0",
        aacute: "\xE1",
        acirc: "\xE2",
        atilde: "\xE3",
        auml: "\xE4",
        aring: "\xE5",
        aelig: "\xE6",
        ccedil: "\xE7",
        egrave: "\xE8",
        eacute: "\xE9",
        ecirc: "\xEA",
        euml: "\xEB",
        igrave: "\xEC",
        iacute: "\xED",
        icirc: "\xEE",
        iuml: "\xEF",
        eth: "\xF0",
        ntilde: "\xF1",
        ograve: "\xF2",
        oacute: "\xF3",
        ocirc: "\xF4",
        otilde: "\xF5",
        ouml: "\xF6",
        divide: "\xF7",
        oslash: "\xF8",
        ugrave: "\xF9",
        uacute: "\xFA",
        ucirc: "\xFB",
        uuml: "\xFC",
        yacute: "\xFD",
        thorn: "\xFE",
        yuml: "\xFF",
        OElig: "\u0152",
        oelig: "\u0153",
        Scaron: "\u0160",
        scaron: "\u0161",
        Yuml: "\u0178",
        fnof: "\u0192",
        circ: "\u02C6",
        tilde: "\u02DC",
        Alpha: "\u0391",
        Beta: "\u0392",
        Gamma: "\u0393",
        Delta: "\u0394",
        Epsilon: "\u0395",
        Zeta: "\u0396",
        Eta: "\u0397",
        Theta: "\u0398",
        Iota: "\u0399",
        Kappa: "\u039A",
        Lambda: "\u039B",
        Mu: "\u039C",
        Nu: "\u039D",
        Xi: "\u039E",
        Omicron: "\u039F",
        Pi: "\u03A0",
        Rho: "\u03A1",
        Sigma: "\u03A3",
        Tau: "\u03A4",
        Upsilon: "\u03A5",
        Phi: "\u03A6",
        Chi: "\u03A7",
        Psi: "\u03A8",
        Omega: "\u03A9",
        alpha: "\u03B1",
        beta: "\u03B2",
        gamma: "\u03B3",
        delta: "\u03B4",
        epsilon: "\u03B5",
        zeta: "\u03B6",
        eta: "\u03B7",
        theta: "\u03B8",
        iota: "\u03B9",
        kappa: "\u03BA",
        lambda: "\u03BB",
        mu: "\u03BC",
        nu: "\u03BD",
        xi: "\u03BE",
        omicron: "\u03BF",
        pi: "\u03C0",
        rho: "\u03C1",
        sigmaf: "\u03C2",
        sigma: "\u03C3",
        tau: "\u03C4",
        upsilon: "\u03C5",
        phi: "\u03C6",
        chi: "\u03C7",
        psi: "\u03C8",
        omega: "\u03C9",
        thetasym: "\u03D1",
        upsih: "\u03D2",
        piv: "\u03D6",
        ensp: "\u2002",
        emsp: "\u2003",
        thinsp: "\u2009",
        zwnj: "\u200C",
        zwj: "\u200D",
        lrm: "\u200E",
        rlm: "\u200F",
        ndash: "\u2013",
        mdash: "\u2014",
        lsquo: "\u2018",
        rsquo: "\u2019",
        sbquo: "\u201A",
        ldquo: "\u201C",
        rdquo: "\u201D",
        bdquo: "\u201E",
        dagger: "\u2020",
        Dagger: "\u2021",
        bull: "\u2022",
        hellip: "\u2026",
        permil: "\u2030",
        prime: "\u2032",
        Prime: "\u2033",
        lsaquo: "\u2039",
        rsaquo: "\u203A",
        oline: "\u203E",
        frasl: "\u2044",
        euro: "\u20AC",
        image: "\u2111",
        weierp: "\u2118",
        real: "\u211C",
        trade: "\u2122",
        alefsym: "\u2135",
        larr: "\u2190",
        uarr: "\u2191",
        rarr: "\u2192",
        darr: "\u2193",
        harr: "\u2194",
        crarr: "\u21B5",
        lArr: "\u21D0",
        uArr: "\u21D1",
        rArr: "\u21D2",
        dArr: "\u21D3",
        hArr: "\u21D4",
        forall: "\u2200",
        part: "\u2202",
        exist: "\u2203",
        empty: "\u2205",
        nabla: "\u2207",
        isin: "\u2208",
        notin: "\u2209",
        ni: "\u220B",
        prod: "\u220F",
        sum: "\u2211",
        minus: "\u2212",
        lowast: "\u2217",
        radic: "\u221A",
        prop: "\u221D",
        infin: "\u221E",
        ang: "\u2220",
        and: "\u2227",
        or: "\u2228",
        cap: "\u2229",
        cup: "\u222A",
        int: "\u222B",
        there4: "\u2234",
        sim: "\u223C",
        cong: "\u2245",
        asymp: "\u2248",
        ne: "\u2260",
        equiv: "\u2261",
        le: "\u2264",
        ge: "\u2265",
        sub: "\u2282",
        sup: "\u2283",
        nsub: "\u2284",
        sube: "\u2286",
        supe: "\u2287",
        oplus: "\u2295",
        otimes: "\u2297",
        perp: "\u22A5",
        sdot: "\u22C5",
        lceil: "\u2308",
        rceil: "\u2309",
        lfloor: "\u230A",
        rfloor: "\u230B",
        lang: "\u2329",
        rang: "\u232A",
        loz: "\u25CA",
        spades: "\u2660",
        clubs: "\u2663",
        hearts: "\u2665",
        diams: "\u2666"
      };
    }
  }), gj = ms({
    "node_modules/micromark-extension-mdxjs/node_modules/acorn-jsx/index.js"(e, t) {
      "use strict";
      var r = mj(), n = /^[\da-fA-F]+$/, i = /^\d+$/, o = /* @__PURE__ */ new WeakMap();
      function a(c) {
        c = c.Parser.acorn || c;
        let p = o.get(c);
        if (!p) {
          let h = c.tokTypes, f = c.TokContext, d = c.TokenType, m = new f("<tag", !1), g = new f("</tag", !1), b = new f("<tag>...</tag>", !0,
          !0), y = {
            tc_oTag: m,
            tc_cTag: g,
            tc_expr: b
          }, E = {
            jsxName: new d("jsxName"),
            jsxText: new d("jsxText", { beforeExpr: !0 }),
            jsxTagStart: new d("jsxTagStart", { startsExpr: !0 }),
            jsxTagEnd: new d("jsxTagEnd")
          };
          E.jsxTagStart.updateContext = function() {
            this.context.push(b), this.context.push(m), this.exprAllowed = !1;
          }, E.jsxTagEnd.updateContext = function(A) {
            let k = this.context.pop();
            k === m && A === h.slash || k === g ? (this.context.pop(), this.exprAllowed = this.curContext() === b) : this.exprAllowed = !0;
          }, p = { tokContexts: y, tokTypes: E }, o.set(c, p);
        }
        return p;
      }
      s(a, "getJsxTokens");
      function u(c) {
        if (!c)
          return c;
        if (c.type === "JSXIdentifier")
          return c.name;
        if (c.type === "JSXNamespacedName")
          return c.namespace.name + ":" + c.name.name;
        if (c.type === "JSXMemberExpression")
          return u(c.object) + "." + u(c.property);
      }
      s(u, "getQualifiedJSXName"), t.exports = function(c) {
        return c = c || {}, function(p) {
          return l({
            allowNamespaces: c.allowNamespaces !== !1,
            allowNamespacedObjects: !!c.allowNamespacedObjects
          }, p);
        };
      }, Object.defineProperty(t.exports, "tokTypes", {
        get: /* @__PURE__ */ s(function() {
          return a(Kf("acorn")).tokTypes;
        }, "get_tokTypes"),
        configurable: !0,
        enumerable: !0
      });
      function l(c, p) {
        let h = p.acorn || Kf("acorn"), f = a(h), d = h.tokTypes, m = f.tokTypes, g = h.tokContexts, b = f.tokContexts.tc_oTag, y = f.tokContexts.
        tc_cTag, E = f.tokContexts.tc_expr, A = h.isNewLine, k = h.isIdentifierStart, O = h.isIdentifierChar;
        return class extends p {
          // Expose actual `tokTypes` and `tokContexts` to other plugins.
          static get acornJsx() {
            return f;
          }
          // Reads inline JSX contents token.
          jsx_readToken() {
            let w = "", C = this.pos;
            for (; ; ) {
              this.pos >= this.input.length && this.raise(this.start, "Unterminated JSX contents");
              let T = this.input.charCodeAt(this.pos);
              switch (T) {
                case 60:
                case 123:
                  return this.pos === this.start ? T === 60 && this.exprAllowed ? (++this.pos, this.finishToken(m.jsxTagStart)) : this.getTokenFromCode(
                  T) : (w += this.input.slice(C, this.pos), this.finishToken(m.jsxText, w));
                case 38:
                  w += this.input.slice(C, this.pos), w += this.jsx_readEntity(), C = this.pos;
                  break;
                case 62:
                case 125:
                  this.raise(
                    this.pos,
                    "Unexpected token `" + this.input[this.pos] + "`. Did you mean `" + (T === 62 ? "&gt;" : "&rbrace;") + '` or `{"' + this.
                    input[this.pos] + '"}`?'
                  );
                default:
                  A(T) ? (w += this.input.slice(C, this.pos), w += this.jsx_readNewLine(!0), C = this.pos) : ++this.pos;
              }
            }
          }
          jsx_readNewLine(w) {
            let C = this.input.charCodeAt(this.pos), T;
            return ++this.pos, C === 13 && this.input.charCodeAt(this.pos) === 10 ? (++this.pos, T = w ? `
` : `\r
`) : T = String.fromCharCode(C), this.options.locations && (++this.curLine, this.lineStart = this.pos), T;
          }
          jsx_readString(w) {
            let C = "", T = ++this.pos;
            for (; ; ) {
              this.pos >= this.input.length && this.raise(this.start, "Unterminated string constant");
              let F = this.input.charCodeAt(this.pos);
              if (F === w)
                break;
              F === 38 ? (C += this.input.slice(T, this.pos), C += this.jsx_readEntity(), T = this.pos) : A(F) ? (C += this.input.slice(T, this.
              pos), C += this.jsx_readNewLine(!1), T = this.pos) : ++this.pos;
            }
            return C += this.input.slice(T, this.pos++), this.finishToken(d.string, C);
          }
          jsx_readEntity() {
            let w = "", C = 0, T, F = this.input[this.pos];
            F !== "&" && this.raise(this.pos, "Entity must start with an ampersand");
            let $ = ++this.pos;
            for (; this.pos < this.input.length && C++ < 10; ) {
              if (F = this.input[this.pos++], F === ";") {
                w[0] === "#" ? w[1] === "x" ? (w = w.substr(2), n.test(w) && (T = String.fromCharCode(parseInt(w, 16)))) : (w = w.substr(1),
                i.test(w) && (T = String.fromCharCode(parseInt(w, 10)))) : T = r[w];
                break;
              }
              w += F;
            }
            return T || (this.pos = $, "&");
          }
          // Read a JSX identifier (valid tag or attribute name).
          //
          // Optimized version since JSX identifiers can't contain
          // escape characters and so can be read as single slice.
          // Also assumes that first character was already checked
          // by isIdentifierStart in readToken.
          jsx_readWord() {
            let w, C = this.pos;
            do
              w = this.input.charCodeAt(++this.pos);
            while (O(w) || w === 45);
            return this.finishToken(m.jsxName, this.input.slice(C, this.pos));
          }
          // Parse next token as JSX identifier
          jsx_parseIdentifier() {
            let w = this.startNode();
            return this.type === m.jsxName ? w.name = this.value : this.type.keyword ? w.name = this.type.keyword : this.unexpected(), this.
            next(), this.finishNode(w, "JSXIdentifier");
          }
          // Parse namespaced identifier.
          jsx_parseNamespacedName() {
            let w = this.start, C = this.startLoc, T = this.jsx_parseIdentifier();
            if (!c.allowNamespaces || !this.eat(d.colon))
              return T;
            var F = this.startNodeAt(w, C);
            return F.namespace = T, F.name = this.jsx_parseIdentifier(), this.finishNode(F, "JSXNamespacedName");
          }
          // Parses element name in any form - namespaced, member
          // or single identifier.
          jsx_parseElementName() {
            if (this.type === m.jsxTagEnd)
              return "";
            let w = this.start, C = this.startLoc, T = this.jsx_parseNamespacedName();
            for (this.type === d.dot && T.type === "JSXNamespacedName" && !c.allowNamespacedObjects && this.unexpected(); this.eat(d.dot); ) {
              let F = this.startNodeAt(w, C);
              F.object = T, F.property = this.jsx_parseIdentifier(), T = this.finishNode(F, "JSXMemberExpression");
            }
            return T;
          }
          // Parses any type of JSX attribute value.
          jsx_parseAttributeValue() {
            switch (this.type) {
              case d.braceL:
                let w = this.jsx_parseExpressionContainer();
                return w.expression.type === "JSXEmptyExpression" && this.raise(w.start, "JSX attributes must only be assigned a non-empty e\
xpression"), w;
              case m.jsxTagStart:
              case d.string:
                return this.parseExprAtom();
              default:
                this.raise(this.start, "JSX value should be either an expression or a quoted JSX text");
            }
          }
          // JSXEmptyExpression is unique type since it doesn't actually parse anything,
          // and so it should start at the end of last read token (left brace) and finish
          // at the beginning of the next one (right brace).
          jsx_parseEmptyExpression() {
            let w = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);
            return this.finishNodeAt(w, "JSXEmptyExpression", this.start, this.startLoc);
          }
          // Parses JSX expression enclosed into curly brackets.
          jsx_parseExpressionContainer() {
            let w = this.startNode();
            return this.next(), w.expression = this.type === d.braceR ? this.jsx_parseEmptyExpression() : this.parseExpression(), this.expect(
            d.braceR), this.finishNode(w, "JSXExpressionContainer");
          }
          // Parses following JSX attribute name-value pair.
          jsx_parseAttribute() {
            let w = this.startNode();
            return this.eat(d.braceL) ? (this.expect(d.ellipsis), w.argument = this.parseMaybeAssign(), this.expect(d.braceR), this.finishNode(
            w, "JSXSpreadAttribute")) : (w.name = this.jsx_parseNamespacedName(), w.value = this.eat(d.eq) ? this.jsx_parseAttributeValue() :
            null, this.finishNode(w, "JSXAttribute"));
          }
          // Parses JSX opening tag starting after '<'.
          jsx_parseOpeningElementAt(w, C) {
            let T = this.startNodeAt(w, C);
            T.attributes = [];
            let F = this.jsx_parseElementName();
            for (F && (T.name = F); this.type !== d.slash && this.type !== m.jsxTagEnd; )
              T.attributes.push(this.jsx_parseAttribute());
            return T.selfClosing = this.eat(d.slash), this.expect(m.jsxTagEnd), this.finishNode(T, F ? "JSXOpeningElement" : "JSXOpeningFrag\
ment");
          }
          // Parses JSX closing tag starting after '</'.
          jsx_parseClosingElementAt(w, C) {
            let T = this.startNodeAt(w, C), F = this.jsx_parseElementName();
            return F && (T.name = F), this.expect(m.jsxTagEnd), this.finishNode(T, F ? "JSXClosingElement" : "JSXClosingFragment");
          }
          // Parses entire JSX element, including it's opening tag
          // (starting after '<'), attributes, contents and closing tag.
          jsx_parseElementAt(w, C) {
            let T = this.startNodeAt(w, C), F = [], $ = this.jsx_parseOpeningElementAt(w, C), R = null;
            if (!$.selfClosing) {
              e:
                for (; ; )
                  switch (this.type) {
                    case m.jsxTagStart:
                      if (w = this.start, C = this.startLoc, this.next(), this.eat(d.slash)) {
                        R = this.jsx_parseClosingElementAt(w, C);
                        break e;
                      }
                      F.push(this.jsx_parseElementAt(w, C));
                      break;
                    case m.jsxText:
                      F.push(this.parseExprAtom());
                      break;
                    case d.braceL:
                      F.push(this.jsx_parseExpressionContainer());
                      break;
                    default:
                      this.unexpected();
                  }
              u(R.name) !== u($.name) && this.raise(
                R.start,
                "Expected corresponding JSX closing tag for <" + u($.name) + ">"
              );
            }
            let U = $.name ? "Element" : "Fragment";
            return T["opening" + U] = $, T["closing" + U] = R, T.children = F, this.type === d.relational && this.value === "<" && this.raise(
            this.start, "Adjacent JSX elements must be wrapped in an enclosing tag"), this.finishNode(T, "JSX" + U);
          }
          // Parse JSX text
          jsx_parseText() {
            let w = this.parseLiteral(this.value);
            return w.type = "JSXText", w;
          }
          // Parses entire JSX element from current position.
          jsx_parseElement() {
            let w = this.start, C = this.startLoc;
            return this.next(), this.jsx_parseElementAt(w, C);
          }
          parseExprAtom(w) {
            return this.type === m.jsxText ? this.jsx_parseText() : this.type === m.jsxTagStart ? this.jsx_parseElement() : super.parseExprAtom(
            w);
          }
          readToken(w) {
            let C = this.curContext();
            if (C === E)
              return this.jsx_readToken();
            if (C === b || C === y) {
              if (k(w))
                return this.jsx_readWord();
              if (w == 62)
                return ++this.pos, this.finishToken(m.jsxTagEnd);
              if ((w === 34 || w === 39) && C == b)
                return this.jsx_readString(w);
            }
            return w === 60 && this.exprAllowed && this.input.charCodeAt(this.pos + 1) !== 33 ? (++this.pos, this.finishToken(m.jsxTagStart)) :
            super.readToken(w);
          }
          updateContext(w) {
            if (this.type == d.braceL) {
              var C = this.curContext();
              C == b ? this.context.push(g.b_expr) : C == E ? this.context.push(g.b_tmpl) : super.updateContext(w), this.exprAllowed = !0;
            } else if (this.type === d.slash && w === m.jsxTagStart)
              this.context.length -= 2, this.context.push(y), this.exprAllowed = !1;
            else
              return super.updateContext(w);
          }
        };
      }
      s(l, "plugin");
    }
  }), yj = ms({
    "node_modules/extend/index.js"(e, t) {
      "use strict";
      var r = Object.prototype.hasOwnProperty, n = Object.prototype.toString, i = Object.defineProperty, o = Object.getOwnPropertyDescriptor,
      a = /* @__PURE__ */ s(function(h) {
        return typeof Array.isArray == "function" ? Array.isArray(h) : n.call(h) === "[object Array]";
      }, "isArray2"), u = /* @__PURE__ */ s(function(h) {
        if (!h || n.call(h) !== "[object Object]")
          return !1;
        var f = r.call(h, "constructor"), d = h.constructor && h.constructor.prototype && r.call(h.constructor.prototype, "isPrototypeOf");
        if (h.constructor && !f && !d)
          return !1;
        var m;
        for (m in h)
          ;
        return typeof m > "u" || r.call(h, m);
      }, "isPlainObject3"), l = /* @__PURE__ */ s(function(h, f) {
        i && f.name === "__proto__" ? i(h, f.name, {
          enumerable: !0,
          configurable: !0,
          value: f.newValue,
          writable: !0
        }) : h[f.name] = f.newValue;
      }, "setProperty2"), c = /* @__PURE__ */ s(function(h, f) {
        if (f === "__proto__")
          if (r.call(h, f)) {
            if (o)
              return o(h, f).value;
          } else return;
        return h[f];
      }, "getProperty2");
      t.exports = /* @__PURE__ */ s(function p() {
        var h, f, d, m, g, b, y = arguments[0], E = 1, A = arguments.length, k = !1;
        for (typeof y == "boolean" && (k = y, y = arguments[1] || {}, E = 2), (y == null || typeof y != "object" && typeof y != "function") &&
        (y = {}); E < A; ++E)
          if (h = arguments[E], h != null)
            for (f in h)
              d = c(y, f), m = c(h, f), y !== m && (k && m && (u(m) || (g = a(m))) ? (g ? (g = !1, b = d && a(d) ? d : []) : b = d && u(d) ?
              d : {}, l(y, { name: f, newValue: p(k, b, m) })) : typeof m < "u" && l(y, { name: f, newValue: m }));
        return y;
      }, "extend2");
    }
  });
  s(yr, "stringifyPosition");
  s(Rd, "point");
  s(pC, "position2");
  s(hC, "index");
  Le = class extends Error {
    static {
      s(this, "VFileMessage");
    }
    /**
     * Create a message for `reason`.
     *
     * > 🪦 **Note**: also has obsolete signatures.
     *
     * @overload
     * @param {string} reason
     * @param {Options | null | undefined} [options]
     * @returns
     *
     * @overload
     * @param {string} reason
     * @param {Node | NodeLike | null | undefined} parent
     * @param {string | null | undefined} [origin]
     * @returns
     *
     * @overload
     * @param {string} reason
     * @param {Point | Position | null | undefined} place
     * @param {string | null | undefined} [origin]
     * @returns
     *
     * @overload
     * @param {string} reason
     * @param {string | null | undefined} [origin]
     * @returns
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {Node | NodeLike | null | undefined} parent
     * @param {string | null | undefined} [origin]
     * @returns
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {Point | Position | null | undefined} place
     * @param {string | null | undefined} [origin]
     * @returns
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {string | null | undefined} [origin]
     * @returns
     *
     * @param {Error | VFileMessage | string} causeOrReason
     *   Reason for message, should use markdown.
     * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]
     *   Configuration (optional).
     * @param {string | null | undefined} [origin]
     *   Place in code where the message originates (example:
     *   `'my-package:my-rule'` or `'my-rule'`).
     * @returns
     *   Instance of `VFileMessage`.
     */
    // eslint-disable-next-line complexity
    constructor(e, t, r) {
      super(), typeof t == "string" && (r = t, t = void 0);
      let n = "", i = {}, o = !1;
      if (t && ("line" in t && "column" in t ? i = { place: t } : "start" in t && "end" in t ? i = { place: t } : "type" in t ? i = {
        ancestors: [t],
        place: t.position
      } : i = { ...t }), typeof e == "string" ? n = e : !i.cause && e && (o = !0, n = e.message, i.cause = e), !i.ruleId && !i.source && typeof r ==
      "string") {
        let u = r.indexOf(":");
        u === -1 ? i.ruleId = r : (i.source = r.slice(0, u), i.ruleId = r.slice(u + 1));
      }
      if (!i.place && i.ancestors && i.ancestors) {
        let u = i.ancestors[i.ancestors.length - 1];
        u && (i.place = u.position);
      }
      let a = i.place && "start" in i.place ? i.place.start : i.place;
      this.ancestors = i.ancestors || void 0, this.cause = i.cause || void 0, this.column = a ? a.column : void 0, this.fatal = void 0, this.
      file, this.message = n, this.line = a ? a.line : void 0, this.name = yr(i.place) || "1:1", this.place = i.place || void 0, this.reason =
      this.message, this.ruleId = i.ruleId || void 0, this.source = i.source || void 0, this.stack = o && i.cause && typeof i.cause.stack ==
      "string" ? i.cause.stack : "", this.actual, this.expected, this.note, this.url;
    }
  };
  Le.prototype.file = "";
  Le.prototype.name = "";
  Le.prototype.reason = "";
  Le.prototype.message = "";
  Le.prototype.stack = "";
  Le.prototype.column = void 0;
  Le.prototype.line = void 0;
  Le.prototype.ancestors = void 0;
  Le.prototype.cause = void 0;
  Le.prototype.fatal = void 0;
  Le.prototype.place = void 0;
  Le.prototype.ruleId = void 0;
  Le.prototype.source = void 0;
  s(fC, "isUrl");
  bd = /** @type {const} */
  [
    "history",
    "path",
    "basename",
    "stem",
    "extname",
    "dirname"
  ], pw = class {
    static {
      s(this, "VFile");
    }
    /**
     * Create a new virtual file.
     *
     * `options` is treated as:
     *
     * *   `string` or `Uint8Array` — `{value: options}`
     * *   `URL` — `{path: options}`
     * *   `VFile` — shallow copies its data over to the new file
     * *   `object` — all fields are shallow copied over to the new file
     *
     * Path related fields are set in the following order (least specific to
     * most specific): `history`, `path`, `basename`, `stem`, `extname`,
     * `dirname`.
     *
     * You cannot set `dirname` or `extname` without setting either `history`,
     * `path`, `basename`, or `stem` too.
     *
     * @param {Compatible | null | undefined} [value]
     *   File value.
     * @returns
     *   New instance.
     */
    constructor(e) {
      let t;
      e ? fC(e) ? t = { path: e } : typeof e == "string" || bj(e) ? t = { value: e } : t = e : t = {}, this.cwd = Dj.cwd(), this.data = {}, this.
      history = [], this.messages = [], this.value, this.map, this.result, this.stored;
      let r = -1;
      for (; ++r < bd.length; ) {
        let i = bd[r];
        i in t && t[i] !== void 0 && t[i] !== null && (this[i] = i === "history" ? [...t[i]] : t[i]);
      }
      let n;
      for (n in t)
        bd.includes(n) || (this[n] = t[n]);
    }
    /**
     * Get the basename (including extname) (example: `'index.min.js'`).
     *
     * @returns {string | undefined}
     *   Basename.
     */
    get basename() {
      return typeof this.path == "string" ? Zr.basename(this.path) : void 0;
    }
    /**
     * Set basename (including extname) (`'index.min.js'`).
     *
     * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
     * on windows).
     * Cannot be nullified (use `file.path = file.dirname` instead).
     *
     * @param {string} basename
     *   Basename.
     * @returns {undefined}
     *   Nothing.
     */
    set basename(e) {
      Ed(e, "basename"), vd(e, "basename"), this.path = Zr.join(this.dirname || "", e);
    }
    /**
     * Get the parent path (example: `'~'`).
     *
     * @returns {string | undefined}
     *   Dirname.
     */
    get dirname() {
      return typeof this.path == "string" ? Zr.dirname(this.path) : void 0;
    }
    /**
     * Set the parent path (example: `'~'`).
     *
     * Cannot be set if there’s no `path` yet.
     *
     * @param {string | undefined} dirname
     *   Dirname.
     * @returns {undefined}
     *   Nothing.
     */
    set dirname(e) {
      dC(this.basename, "dirname"), this.path = Zr.join(e || "", this.basename);
    }
    /**
     * Get the extname (including dot) (example: `'.js'`).
     *
     * @returns {string | undefined}
     *   Extname.
     */
    get extname() {
      return typeof this.path == "string" ? Zr.extname(this.path) : void 0;
    }
    /**
     * Set the extname (including dot) (example: `'.js'`).
     *
     * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
     * on windows).
     * Cannot be set if there’s no `path` yet.
     *
     * @param {string | undefined} extname
     *   Extname.
     * @returns {undefined}
     *   Nothing.
     */
    set extname(e) {
      if (vd(e, "extname"), dC(this.dirname, "extname"), e) {
        if (e.codePointAt(0) !== 46)
          throw new Error("`extname` must start with `.`");
        if (e.includes(".", 1))
          throw new Error("`extname` cannot contain multiple dots");
      }
      this.path = Zr.join(this.dirname, this.stem + (e || ""));
    }
    /**
     * Get the full path (example: `'~/index.min.js'`).
     *
     * @returns {string}
     *   Path.
     */
    get path() {
      return this.history[this.history.length - 1];
    }
    /**
     * Set the full path (example: `'~/index.min.js'`).
     *
     * Cannot be nullified.
     * You can set a file URL (a `URL` object with a `file:` protocol) which will
     * be turned into a path with `url.fileURLToPath`.
     *
     * @param {URL | string} path
     *   Path.
     * @returns {undefined}
     *   Nothing.
     */
    set path(e) {
      fC(e) && (e = xj(e)), Ed(e, "path"), this.path !== e && this.history.push(e);
    }
    /**
     * Get the stem (basename w/o extname) (example: `'index.min'`).
     *
     * @returns {string | undefined}
     *   Stem.
     */
    get stem() {
      return typeof this.path == "string" ? Zr.basename(this.path, this.extname) : void 0;
    }
    /**
     * Set the stem (basename w/o extname) (example: `'index.min'`).
     *
     * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\'`
     * on windows).
     * Cannot be nullified (use `file.path = file.dirname` instead).
     *
     * @param {string} stem
     *   Stem.
     * @returns {undefined}
     *   Nothing.
     */
    set stem(e) {
      Ed(e, "stem"), vd(e, "stem"), this.path = Zr.join(this.dirname || "", e + (this.extname || ""));
    }
    // Normal prototypal methods.
    /**
     * Create a fatal message for `reason` associated with the file.
     *
     * The `fatal` field of the message is set to `true` (error; file not usable)
     * and the `file` field is set to the current file path.
     * The message is added to the `messages` field on `file`.
     *
     * > 🪦 **Note**: also has obsolete signatures.
     *
     * @overload
     * @param {string} reason
     * @param {MessageOptions | null | undefined} [options]
     * @returns {never}
     *
     * @overload
     * @param {string} reason
     * @param {Node | NodeLike | null | undefined} parent
     * @param {string | null | undefined} [origin]
     * @returns {never}
     *
     * @overload
     * @param {string} reason
     * @param {Point | Position | null | undefined} place
     * @param {string | null | undefined} [origin]
     * @returns {never}
     *
     * @overload
     * @param {string} reason
     * @param {string | null | undefined} [origin]
     * @returns {never}
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {Node | NodeLike | null | undefined} parent
     * @param {string | null | undefined} [origin]
     * @returns {never}
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {Point | Position | null | undefined} place
     * @param {string | null | undefined} [origin]
     * @returns {never}
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {string | null | undefined} [origin]
     * @returns {never}
     *
     * @param {Error | VFileMessage | string} causeOrReason
     *   Reason for message, should use markdown.
     * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]
     *   Configuration (optional).
     * @param {string | null | undefined} [origin]
     *   Place in code where the message originates (example:
     *   `'my-package:my-rule'` or `'my-rule'`).
     * @returns {never}
     *   Never.
     * @throws {VFileMessage}
     *   Message.
     */
    fail(e, t, r) {
      let n = this.message(e, t, r);
      throw n.fatal = !0, n;
    }
    /**
     * Create an info message for `reason` associated with the file.
     *
     * The `fatal` field of the message is set to `undefined` (info; change
     * likely not needed) and the `file` field is set to the current file path.
     * The message is added to the `messages` field on `file`.
     *
     * > 🪦 **Note**: also has obsolete signatures.
     *
     * @overload
     * @param {string} reason
     * @param {MessageOptions | null | undefined} [options]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {string} reason
     * @param {Node | NodeLike | null | undefined} parent
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {string} reason
     * @param {Point | Position | null | undefined} place
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {string} reason
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {Node | NodeLike | null | undefined} parent
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {Point | Position | null | undefined} place
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @param {Error | VFileMessage | string} causeOrReason
     *   Reason for message, should use markdown.
     * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]
     *   Configuration (optional).
     * @param {string | null | undefined} [origin]
     *   Place in code where the message originates (example:
     *   `'my-package:my-rule'` or `'my-rule'`).
     * @returns {VFileMessage}
     *   Message.
     */
    info(e, t, r) {
      let n = this.message(e, t, r);
      return n.fatal = void 0, n;
    }
    /**
     * Create a message for `reason` associated with the file.
     *
     * The `fatal` field of the message is set to `false` (warning; change may be
     * needed) and the `file` field is set to the current file path.
     * The message is added to the `messages` field on `file`.
     *
     * > 🪦 **Note**: also has obsolete signatures.
     *
     * @overload
     * @param {string} reason
     * @param {MessageOptions | null | undefined} [options]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {string} reason
     * @param {Node | NodeLike | null | undefined} parent
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {string} reason
     * @param {Point | Position | null | undefined} place
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {string} reason
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {Node | NodeLike | null | undefined} parent
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {Point | Position | null | undefined} place
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @overload
     * @param {Error | VFileMessage} cause
     * @param {string | null | undefined} [origin]
     * @returns {VFileMessage}
     *
     * @param {Error | VFileMessage | string} causeOrReason
     *   Reason for message, should use markdown.
     * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]
     *   Configuration (optional).
     * @param {string | null | undefined} [origin]
     *   Place in code where the message originates (example:
     *   `'my-package:my-rule'` or `'my-rule'`).
     * @returns {VFileMessage}
     *   Message.
     */
    message(e, t, r) {
      let n = new Le(
        // @ts-expect-error: the overloads are fine.
        e,
        t,
        r
      );
      return this.path && (n.name = this.path + ":" + n.name, n.file = this.path), n.fatal = !1, this.messages.push(n), n;
    }
    /**
     * Serialize the file.
     *
     * > **Note**: which encodings are supported depends on the engine.
     * > For info on Node.js, see:
     * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.
     *
     * @param {string | null | undefined} [encoding='utf8']
     *   Character encoding to understand `value` as when it’s a `Uint8Array`
     *   (default: `'utf-8'`).
     * @returns {string}
     *   Serialized file.
     */
    toString(e) {
      return this.value === void 0 ? "" : typeof this.value == "string" ? this.value : new TextDecoder(e || void 0).decode(this.value);
    }
  };
  s(vd, "assertPart");
  s(Ed, "assertNonEmpty");
  s(dC, "assertPath");
  s(bj, "isUint8Array");
  vj = [
    "md",
    "markdown",
    "mdown",
    "mkdn",
    "mkd",
    "mdwn",
    "mkdown",
    "ron"
  ], Ej = vj, Cj = Ej.map(function(e) {
    return "." + e;
  });
  s(hw, "resolveFileAndOptions");
  s(wj, "looksLikeAVFile");
  s(Sj, "mdxExpressionFromMarkdown");
  s(Aj, "mdxExpressionToMarkdown");
  s(Fj, "enterMdxFlowExpression");
  s(_j, "enterMdxTextExpression");
  s(mC, "exitMdxExpression");
  s(gC, "exitMdxExpressionData");
  s(yC, "handleMdxExpression");
  s(DC, "ccount");
  kj = [
    "AElig",
    "AMP",
    "Aacute",
    "Acirc",
    "Agrave",
    "Aring",
    "Atilde",
    "Auml",
    "COPY",
    "Ccedil",
    "ETH",
    "Eacute",
    "Ecirc",
    "Egrave",
    "Euml",
    "GT",
    "Iacute",
    "Icirc",
    "Igrave",
    "Iuml",
    "LT",
    "Ntilde",
    "Oacute",
    "Ocirc",
    "Ograve",
    "Oslash",
    "Otilde",
    "Ouml",
    "QUOT",
    "REG",
    "THORN",
    "Uacute",
    "Ucirc",
    "Ugrave",
    "Uuml",
    "Yacute",
    "aacute",
    "acirc",
    "acute",
    "aelig",
    "agrave",
    "amp",
    "aring",
    "atilde",
    "auml",
    "brvbar",
    "ccedil",
    "cedil",
    "cent",
    "copy",
    "curren",
    "deg",
    "divide",
    "eacute",
    "ecirc",
    "egrave",
    "eth",
    "euml",
    "frac12",
    "frac14",
    "frac34",
    "gt",
    "iacute",
    "icirc",
    "iexcl",
    "igrave",
    "iquest",
    "iuml",
    "laquo",
    "lt",
    "macr",
    "micro",
    "middot",
    "nbsp",
    "not",
    "ntilde",
    "oacute",
    "ocirc",
    "ograve",
    "ordf",
    "ordm",
    "oslash",
    "otilde",
    "ouml",
    "para",
    "plusmn",
    "pound",
    "quot",
    "raquo",
    "reg",
    "sect",
    "shy",
    "sup1",
    "sup2",
    "sup3",
    "szlig",
    "thorn",
    "times",
    "uacute",
    "ucirc",
    "ugrave",
    "uml",
    "uuml",
    "yacute",
    "yen",
    "yuml"
  ], xC = {
    0: "\uFFFD",
    128: "\u20AC",
    130: "\u201A",
    131: "\u0192",
    132: "\u201E",
    133: "\u2026",
    134: "\u2020",
    135: "\u2021",
    136: "\u02C6",
    137: "\u2030",
    138: "\u0160",
    139: "\u2039",
    140: "\u0152",
    142: "\u017D",
    145: "\u2018",
    146: "\u2019",
    147: "\u201C",
    148: "\u201D",
    149: "\u2022",
    150: "\u2013",
    151: "\u2014",
    152: "\u02DC",
    153: "\u2122",
    154: "\u0161",
    155: "\u203A",
    156: "\u0153",
    158: "\u017E",
    159: "\u0178"
  };
  s(fw, "isDecimal");
  s(Tj, "isHexadecimal");
  s(Ij, "isAlphabetical");
  s(bC, "isAlphanumerical");
  vC = {
    AElig: "\xC6",
    AMP: "&",
    Aacute: "\xC1",
    Abreve: "\u0102",
    Acirc: "\xC2",
    Acy: "\u0410",
    Afr: "\u{1D504}",
    Agrave: "\xC0",
    Alpha: "\u0391",
    Amacr: "\u0100",
    And: "\u2A53",
    Aogon: "\u0104",
    Aopf: "\u{1D538}",
    ApplyFunction: "\u2061",
    Aring: "\xC5",
    Ascr: "\u{1D49C}",
    Assign: "\u2254",
    Atilde: "\xC3",
    Auml: "\xC4",
    Backslash: "\u2216",
    Barv: "\u2AE7",
    Barwed: "\u2306",
    Bcy: "\u0411",
    Because: "\u2235",
    Bernoullis: "\u212C",
    Beta: "\u0392",
    Bfr: "\u{1D505}",
    Bopf: "\u{1D539}",
    Breve: "\u02D8",
    Bscr: "\u212C",
    Bumpeq: "\u224E",
    CHcy: "\u0427",
    COPY: "\xA9",
    Cacute: "\u0106",
    Cap: "\u22D2",
    CapitalDifferentialD: "\u2145",
    Cayleys: "\u212D",
    Ccaron: "\u010C",
    Ccedil: "\xC7",
    Ccirc: "\u0108",
    Cconint: "\u2230",
    Cdot: "\u010A",
    Cedilla: "\xB8",
    CenterDot: "\xB7",
    Cfr: "\u212D",
    Chi: "\u03A7",
    CircleDot: "\u2299",
    CircleMinus: "\u2296",
    CirclePlus: "\u2295",
    CircleTimes: "\u2297",
    ClockwiseContourIntegral: "\u2232",
    CloseCurlyDoubleQuote: "\u201D",
    CloseCurlyQuote: "\u2019",
    Colon: "\u2237",
    Colone: "\u2A74",
    Congruent: "\u2261",
    Conint: "\u222F",
    ContourIntegral: "\u222E",
    Copf: "\u2102",
    Coproduct: "\u2210",
    CounterClockwiseContourIntegral: "\u2233",
    Cross: "\u2A2F",
    Cscr: "\u{1D49E}",
    Cup: "\u22D3",
    CupCap: "\u224D",
    DD: "\u2145",
    DDotrahd: "\u2911",
    DJcy: "\u0402",
    DScy: "\u0405",
    DZcy: "\u040F",
    Dagger: "\u2021",
    Darr: "\u21A1",
    Dashv: "\u2AE4",
    Dcaron: "\u010E",
    Dcy: "\u0414",
    Del: "\u2207",
    Delta: "\u0394",
    Dfr: "\u{1D507}",
    DiacriticalAcute: "\xB4",
    DiacriticalDot: "\u02D9",
    DiacriticalDoubleAcute: "\u02DD",
    DiacriticalGrave: "`",
    DiacriticalTilde: "\u02DC",
    Diamond: "\u22C4",
    DifferentialD: "\u2146",
    Dopf: "\u{1D53B}",
    Dot: "\xA8",
    DotDot: "\u20DC",
    DotEqual: "\u2250",
    DoubleContourIntegral: "\u222F",
    DoubleDot: "\xA8",
    DoubleDownArrow: "\u21D3",
    DoubleLeftArrow: "\u21D0",
    DoubleLeftRightArrow: "\u21D4",
    DoubleLeftTee: "\u2AE4",
    DoubleLongLeftArrow: "\u27F8",
    DoubleLongLeftRightArrow: "\u27FA",
    DoubleLongRightArrow: "\u27F9",
    DoubleRightArrow: "\u21D2",
    DoubleRightTee: "\u22A8",
    DoubleUpArrow: "\u21D1",
    DoubleUpDownArrow: "\u21D5",
    DoubleVerticalBar: "\u2225",
    DownArrow: "\u2193",
    DownArrowBar: "\u2913",
    DownArrowUpArrow: "\u21F5",
    DownBreve: "\u0311",
    DownLeftRightVector: "\u2950",
    DownLeftTeeVector: "\u295E",
    DownLeftVector: "\u21BD",
    DownLeftVectorBar: "\u2956",
    DownRightTeeVector: "\u295F",
    DownRightVector: "\u21C1",
    DownRightVectorBar: "\u2957",
    DownTee: "\u22A4",
    DownTeeArrow: "\u21A7",
    Downarrow: "\u21D3",
    Dscr: "\u{1D49F}",
    Dstrok: "\u0110",
    ENG: "\u014A",
    ETH: "\xD0",
    Eacute: "\xC9",
    Ecaron: "\u011A",
    Ecirc: "\xCA",
    Ecy: "\u042D",
    Edot: "\u0116",
    Efr: "\u{1D508}",
    Egrave: "\xC8",
    Element: "\u2208",
    Emacr: "\u0112",
    EmptySmallSquare: "\u25FB",
    EmptyVerySmallSquare: "\u25AB",
    Eogon: "\u0118",
    Eopf: "\u{1D53C}",
    Epsilon: "\u0395",
    Equal: "\u2A75",
    EqualTilde: "\u2242",
    Equilibrium: "\u21CC",
    Escr: "\u2130",
    Esim: "\u2A73",
    Eta: "\u0397",
    Euml: "\xCB",
    Exists: "\u2203",
    ExponentialE: "\u2147",
    Fcy: "\u0424",
    Ffr: "\u{1D509}",
    FilledSmallSquare: "\u25FC",
    FilledVerySmallSquare: "\u25AA",
    Fopf: "\u{1D53D}",
    ForAll: "\u2200",
    Fouriertrf: "\u2131",
    Fscr: "\u2131",
    GJcy: "\u0403",
    GT: ">",
    Gamma: "\u0393",
    Gammad: "\u03DC",
    Gbreve: "\u011E",
    Gcedil: "\u0122",
    Gcirc: "\u011C",
    Gcy: "\u0413",
    Gdot: "\u0120",
    Gfr: "\u{1D50A}",
    Gg: "\u22D9",
    Gopf: "\u{1D53E}",
    GreaterEqual: "\u2265",
    GreaterEqualLess: "\u22DB",
    GreaterFullEqual: "\u2267",
    GreaterGreater: "\u2AA2",
    GreaterLess: "\u2277",
    GreaterSlantEqual: "\u2A7E",
    GreaterTilde: "\u2273",
    Gscr: "\u{1D4A2}",
    Gt: "\u226B",
    HARDcy: "\u042A",
    Hacek: "\u02C7",
    Hat: "^",
    Hcirc: "\u0124",
    Hfr: "\u210C",
    HilbertSpace: "\u210B",
    Hopf: "\u210D",
    HorizontalLine: "\u2500",
    Hscr: "\u210B",
    Hstrok: "\u0126",
    HumpDownHump: "\u224E",
    HumpEqual: "\u224F",
    IEcy: "\u0415",
    IJlig: "\u0132",
    IOcy: "\u0401",
    Iacute: "\xCD",
    Icirc: "\xCE",
    Icy: "\u0418",
    Idot: "\u0130",
    Ifr: "\u2111",
    Igrave: "\xCC",
    Im: "\u2111",
    Imacr: "\u012A",
    ImaginaryI: "\u2148",
    Implies: "\u21D2",
    Int: "\u222C",
    Integral: "\u222B",
    Intersection: "\u22C2",
    InvisibleComma: "\u2063",
    InvisibleTimes: "\u2062",
    Iogon: "\u012E",
    Iopf: "\u{1D540}",
    Iota: "\u0399",
    Iscr: "\u2110",
    Itilde: "\u0128",
    Iukcy: "\u0406",
    Iuml: "\xCF",
    Jcirc: "\u0134",
    Jcy: "\u0419",
    Jfr: "\u{1D50D}",
    Jopf: "\u{1D541}",
    Jscr: "\u{1D4A5}",
    Jsercy: "\u0408",
    Jukcy: "\u0404",
    KHcy: "\u0425",
    KJcy: "\u040C",
    Kappa: "\u039A",
    Kcedil: "\u0136",
    Kcy: "\u041A",
    Kfr: "\u{1D50E}",
    Kopf: "\u{1D542}",
    Kscr: "\u{1D4A6}",
    LJcy: "\u0409",
    LT: "<",
    Lacute: "\u0139",
    Lambda: "\u039B",
    Lang: "\u27EA",
    Laplacetrf: "\u2112",
    Larr: "\u219E",
    Lcaron: "\u013D",
    Lcedil: "\u013B",
    Lcy: "\u041B",
    LeftAngleBracket: "\u27E8",
    LeftArrow: "\u2190",
    LeftArrowBar: "\u21E4",
    LeftArrowRightArrow: "\u21C6",
    LeftCeiling: "\u2308",
    LeftDoubleBracket: "\u27E6",
    LeftDownTeeVector: "\u2961",
    LeftDownVector: "\u21C3",
    LeftDownVectorBar: "\u2959",
    LeftFloor: "\u230A",
    LeftRightArrow: "\u2194",
    LeftRightVector: "\u294E",
    LeftTee: "\u22A3",
    LeftTeeArrow: "\u21A4",
    LeftTeeVector: "\u295A",
    LeftTriangle: "\u22B2",
    LeftTriangleBar: "\u29CF",
    LeftTriangleEqual: "\u22B4",
    LeftUpDownVector: "\u2951",
    LeftUpTeeVector: "\u2960",
    LeftUpVector: "\u21BF",
    LeftUpVectorBar: "\u2958",
    LeftVector: "\u21BC",
    LeftVectorBar: "\u2952",
    Leftarrow: "\u21D0",
    Leftrightarrow: "\u21D4",
    LessEqualGreater: "\u22DA",
    LessFullEqual: "\u2266",
    LessGreater: "\u2276",
    LessLess: "\u2AA1",
    LessSlantEqual: "\u2A7D",
    LessTilde: "\u2272",
    Lfr: "\u{1D50F}",
    Ll: "\u22D8",
    Lleftarrow: "\u21DA",
    Lmidot: "\u013F",
    LongLeftArrow: "\u27F5",
    LongLeftRightArrow: "\u27F7",
    LongRightArrow: "\u27F6",
    Longleftarrow: "\u27F8",
    Longleftrightarrow: "\u27FA",
    Longrightarrow: "\u27F9",
    Lopf: "\u{1D543}",
    LowerLeftArrow: "\u2199",
    LowerRightArrow: "\u2198",
    Lscr: "\u2112",
    Lsh: "\u21B0",
    Lstrok: "\u0141",
    Lt: "\u226A",
    Map: "\u2905",
    Mcy: "\u041C",
    MediumSpace: "\u205F",
    Mellintrf: "\u2133",
    Mfr: "\u{1D510}",
    MinusPlus: "\u2213",
    Mopf: "\u{1D544}",
    Mscr: "\u2133",
    Mu: "\u039C",
    NJcy: "\u040A",
    Nacute: "\u0143",
    Ncaron: "\u0147",
    Ncedil: "\u0145",
    Ncy: "\u041D",
    NegativeMediumSpace: "\u200B",
    NegativeThickSpace: "\u200B",
    NegativeThinSpace: "\u200B",
    NegativeVeryThinSpace: "\u200B",
    NestedGreaterGreater: "\u226B",
    NestedLessLess: "\u226A",
    NewLine: `
`,
    Nfr: "\u{1D511}",
    NoBreak: "\u2060",
    NonBreakingSpace: "\xA0",
    Nopf: "\u2115",
    Not: "\u2AEC",
    NotCongruent: "\u2262",
    NotCupCap: "\u226D",
    NotDoubleVerticalBar: "\u2226",
    NotElement: "\u2209",
    NotEqual: "\u2260",
    NotEqualTilde: "\u2242\u0338",
    NotExists: "\u2204",
    NotGreater: "\u226F",
    NotGreaterEqual: "\u2271",
    NotGreaterFullEqual: "\u2267\u0338",
    NotGreaterGreater: "\u226B\u0338",
    NotGreaterLess: "\u2279",
    NotGreaterSlantEqual: "\u2A7E\u0338",
    NotGreaterTilde: "\u2275",
    NotHumpDownHump: "\u224E\u0338",
    NotHumpEqual: "\u224F\u0338",
    NotLeftTriangle: "\u22EA",
    NotLeftTriangleBar: "\u29CF\u0338",
    NotLeftTriangleEqual: "\u22EC",
    NotLess: "\u226E",
    NotLessEqual: "\u2270",
    NotLessGreater: "\u2278",
    NotLessLess: "\u226A\u0338",
    NotLessSlantEqual: "\u2A7D\u0338",
    NotLessTilde: "\u2274",
    NotNestedGreaterGreater: "\u2AA2\u0338",
    NotNestedLessLess: "\u2AA1\u0338",
    NotPrecedes: "\u2280",
    NotPrecedesEqual: "\u2AAF\u0338",
    NotPrecedesSlantEqual: "\u22E0",
    NotReverseElement: "\u220C",
    NotRightTriangle: "\u22EB",
    NotRightTriangleBar: "\u29D0\u0338",
    NotRightTriangleEqual: "\u22ED",
    NotSquareSubset: "\u228F\u0338",
    NotSquareSubsetEqual: "\u22E2",
    NotSquareSuperset: "\u2290\u0338",
    NotSquareSupersetEqual: "\u22E3",
    NotSubset: "\u2282\u20D2",
    NotSubsetEqual: "\u2288",
    NotSucceeds: "\u2281",
    NotSucceedsEqual: "\u2AB0\u0338",
    NotSucceedsSlantEqual: "\u22E1",
    NotSucceedsTilde: "\u227F\u0338",
    NotSuperset: "\u2283\u20D2",
    NotSupersetEqual: "\u2289",
    NotTilde: "\u2241",
    NotTildeEqual: "\u2244",
    NotTildeFullEqual: "\u2247",
    NotTildeTilde: "\u2249",
    NotVerticalBar: "\u2224",
    Nscr: "\u{1D4A9}",
    Ntilde: "\xD1",
    Nu: "\u039D",
    OElig: "\u0152",
    Oacute: "\xD3",
    Ocirc: "\xD4",
    Ocy: "\u041E",
    Odblac: "\u0150",
    Ofr: "\u{1D512}",
    Ograve: "\xD2",
    Omacr: "\u014C",
    Omega: "\u03A9",
    Omicron: "\u039F",
    Oopf: "\u{1D546}",
    OpenCurlyDoubleQuote: "\u201C",
    OpenCurlyQuote: "\u2018",
    Or: "\u2A54",
    Oscr: "\u{1D4AA}",
    Oslash: "\xD8",
    Otilde: "\xD5",
    Otimes: "\u2A37",
    Ouml: "\xD6",
    OverBar: "\u203E",
    OverBrace: "\u23DE",
    OverBracket: "\u23B4",
    OverParenthesis: "\u23DC",
    PartialD: "\u2202",
    Pcy: "\u041F",
    Pfr: "\u{1D513}",
    Phi: "\u03A6",
    Pi: "\u03A0",
    PlusMinus: "\xB1",
    Poincareplane: "\u210C",
    Popf: "\u2119",
    Pr: "\u2ABB",
    Precedes: "\u227A",
    PrecedesEqual: "\u2AAF",
    PrecedesSlantEqual: "\u227C",
    PrecedesTilde: "\u227E",
    Prime: "\u2033",
    Product: "\u220F",
    Proportion: "\u2237",
    Proportional: "\u221D",
    Pscr: "\u{1D4AB}",
    Psi: "\u03A8",
    QUOT: '"',
    Qfr: "\u{1D514}",
    Qopf: "\u211A",
    Qscr: "\u{1D4AC}",
    RBarr: "\u2910",
    REG: "\xAE",
    Racute: "\u0154",
    Rang: "\u27EB",
    Rarr: "\u21A0",
    Rarrtl: "\u2916",
    Rcaron: "\u0158",
    Rcedil: "\u0156",
    Rcy: "\u0420",
    Re: "\u211C",
    ReverseElement: "\u220B",
    ReverseEquilibrium: "\u21CB",
    ReverseUpEquilibrium: "\u296F",
    Rfr: "\u211C",
    Rho: "\u03A1",
    RightAngleBracket: "\u27E9",
    RightArrow: "\u2192",
    RightArrowBar: "\u21E5",
    RightArrowLeftArrow: "\u21C4",
    RightCeiling: "\u2309",
    RightDoubleBracket: "\u27E7",
    RightDownTeeVector: "\u295D",
    RightDownVector: "\u21C2",
    RightDownVectorBar: "\u2955",
    RightFloor: "\u230B",
    RightTee: "\u22A2",
    RightTeeArrow: "\u21A6",
    RightTeeVector: "\u295B",
    RightTriangle: "\u22B3",
    RightTriangleBar: "\u29D0",
    RightTriangleEqual: "\u22B5",
    RightUpDownVector: "\u294F",
    RightUpTeeVector: "\u295C",
    RightUpVector: "\u21BE",
    RightUpVectorBar: "\u2954",
    RightVector: "\u21C0",
    RightVectorBar: "\u2953",
    Rightarrow: "\u21D2",
    Ropf: "\u211D",
    RoundImplies: "\u2970",
    Rrightarrow: "\u21DB",
    Rscr: "\u211B",
    Rsh: "\u21B1",
    RuleDelayed: "\u29F4",
    SHCHcy: "\u0429",
    SHcy: "\u0428",
    SOFTcy: "\u042C",
    Sacute: "\u015A",
    Sc: "\u2ABC",
    Scaron: "\u0160",
    Scedil: "\u015E",
    Scirc: "\u015C",
    Scy: "\u0421",
    Sfr: "\u{1D516}",
    ShortDownArrow: "\u2193",
    ShortLeftArrow: "\u2190",
    ShortRightArrow: "\u2192",
    ShortUpArrow: "\u2191",
    Sigma: "\u03A3",
    SmallCircle: "\u2218",
    Sopf: "\u{1D54A}",
    Sqrt: "\u221A",
    Square: "\u25A1",
    SquareIntersection: "\u2293",
    SquareSubset: "\u228F",
    SquareSubsetEqual: "\u2291",
    SquareSuperset: "\u2290",
    SquareSupersetEqual: "\u2292",
    SquareUnion: "\u2294",
    Sscr: "\u{1D4AE}",
    Star: "\u22C6",
    Sub: "\u22D0",
    Subset: "\u22D0",
    SubsetEqual: "\u2286",
    Succeeds: "\u227B",
    SucceedsEqual: "\u2AB0",
    SucceedsSlantEqual: "\u227D",
    SucceedsTilde: "\u227F",
    SuchThat: "\u220B",
    Sum: "\u2211",
    Sup: "\u22D1",
    Superset: "\u2283",
    SupersetEqual: "\u2287",
    Supset: "\u22D1",
    THORN: "\xDE",
    TRADE: "\u2122",
    TSHcy: "\u040B",
    TScy: "\u0426",
    Tab: "	",
    Tau: "\u03A4",
    Tcaron: "\u0164",
    Tcedil: "\u0162",
    Tcy: "\u0422",
    Tfr: "\u{1D517}",
    Therefore: "\u2234",
    Theta: "\u0398",
    ThickSpace: "\u205F\u200A",
    ThinSpace: "\u2009",
    Tilde: "\u223C",
    TildeEqual: "\u2243",
    TildeFullEqual: "\u2245",
    TildeTilde: "\u2248",
    Topf: "\u{1D54B}",
    TripleDot: "\u20DB",
    Tscr: "\u{1D4AF}",
    Tstrok: "\u0166",
    Uacute: "\xDA",
    Uarr: "\u219F",
    Uarrocir: "\u2949",
    Ubrcy: "\u040E",
    Ubreve: "\u016C",
    Ucirc: "\xDB",
    Ucy: "\u0423",
    Udblac: "\u0170",
    Ufr: "\u{1D518}",
    Ugrave: "\xD9",
    Umacr: "\u016A",
    UnderBar: "_",
    UnderBrace: "\u23DF",
    UnderBracket: "\u23B5",
    UnderParenthesis: "\u23DD",
    Union: "\u22C3",
    UnionPlus: "\u228E",
    Uogon: "\u0172",
    Uopf: "\u{1D54C}",
    UpArrow: "\u2191",
    UpArrowBar: "\u2912",
    UpArrowDownArrow: "\u21C5",
    UpDownArrow: "\u2195",
    UpEquilibrium: "\u296E",
    UpTee: "\u22A5",
    UpTeeArrow: "\u21A5",
    Uparrow: "\u21D1",
    Updownarrow: "\u21D5",
    UpperLeftArrow: "\u2196",
    UpperRightArrow: "\u2197",
    Upsi: "\u03D2",
    Upsilon: "\u03A5",
    Uring: "\u016E",
    Uscr: "\u{1D4B0}",
    Utilde: "\u0168",
    Uuml: "\xDC",
    VDash: "\u22AB",
    Vbar: "\u2AEB",
    Vcy: "\u0412",
    Vdash: "\u22A9",
    Vdashl: "\u2AE6",
    Vee: "\u22C1",
    Verbar: "\u2016",
    Vert: "\u2016",
    VerticalBar: "\u2223",
    VerticalLine: "|",
    VerticalSeparator: "\u2758",
    VerticalTilde: "\u2240",
    VeryThinSpace: "\u200A",
    Vfr: "\u{1D519}",
    Vopf: "\u{1D54D}",
    Vscr: "\u{1D4B1}",
    Vvdash: "\u22AA",
    Wcirc: "\u0174",
    Wedge: "\u22C0",
    Wfr: "\u{1D51A}",
    Wopf: "\u{1D54E}",
    Wscr: "\u{1D4B2}",
    Xfr: "\u{1D51B}",
    Xi: "\u039E",
    Xopf: "\u{1D54F}",
    Xscr: "\u{1D4B3}",
    YAcy: "\u042F",
    YIcy: "\u0407",
    YUcy: "\u042E",
    Yacute: "\xDD",
    Ycirc: "\u0176",
    Ycy: "\u042B",
    Yfr: "\u{1D51C}",
    Yopf: "\u{1D550}",
    Yscr: "\u{1D4B4}",
    Yuml: "\u0178",
    ZHcy: "\u0416",
    Zacute: "\u0179",
    Zcaron: "\u017D",
    Zcy: "\u0417",
    Zdot: "\u017B",
    ZeroWidthSpace: "\u200B",
    Zeta: "\u0396",
    Zfr: "\u2128",
    Zopf: "\u2124",
    Zscr: "\u{1D4B5}",
    aacute: "\xE1",
    abreve: "\u0103",
    ac: "\u223E",
    acE: "\u223E\u0333",
    acd: "\u223F",
    acirc: "\xE2",
    acute: "\xB4",
    acy: "\u0430",
    aelig: "\xE6",
    af: "\u2061",
    afr: "\u{1D51E}",
    agrave: "\xE0",
    alefsym: "\u2135",
    aleph: "\u2135",
    alpha: "\u03B1",
    amacr: "\u0101",
    amalg: "\u2A3F",
    amp: "&",
    and: "\u2227",
    andand: "\u2A55",
    andd: "\u2A5C",
    andslope: "\u2A58",
    andv: "\u2A5A",
    ang: "\u2220",
    ange: "\u29A4",
    angle: "\u2220",
    angmsd: "\u2221",
    angmsdaa: "\u29A8",
    angmsdab: "\u29A9",
    angmsdac: "\u29AA",
    angmsdad: "\u29AB",
    angmsdae: "\u29AC",
    angmsdaf: "\u29AD",
    angmsdag: "\u29AE",
    angmsdah: "\u29AF",
    angrt: "\u221F",
    angrtvb: "\u22BE",
    angrtvbd: "\u299D",
    angsph: "\u2222",
    angst: "\xC5",
    angzarr: "\u237C",
    aogon: "\u0105",
    aopf: "\u{1D552}",
    ap: "\u2248",
    apE: "\u2A70",
    apacir: "\u2A6F",
    ape: "\u224A",
    apid: "\u224B",
    apos: "'",
    approx: "\u2248",
    approxeq: "\u224A",
    aring: "\xE5",
    ascr: "\u{1D4B6}",
    ast: "*",
    asymp: "\u2248",
    asympeq: "\u224D",
    atilde: "\xE3",
    auml: "\xE4",
    awconint: "\u2233",
    awint: "\u2A11",
    bNot: "\u2AED",
    backcong: "\u224C",
    backepsilon: "\u03F6",
    backprime: "\u2035",
    backsim: "\u223D",
    backsimeq: "\u22CD",
    barvee: "\u22BD",
    barwed: "\u2305",
    barwedge: "\u2305",
    bbrk: "\u23B5",
    bbrktbrk: "\u23B6",
    bcong: "\u224C",
    bcy: "\u0431",
    bdquo: "\u201E",
    becaus: "\u2235",
    because: "\u2235",
    bemptyv: "\u29B0",
    bepsi: "\u03F6",
    bernou: "\u212C",
    beta: "\u03B2",
    beth: "\u2136",
    between: "\u226C",
    bfr: "\u{1D51F}",
    bigcap: "\u22C2",
    bigcirc: "\u25EF",
    bigcup: "\u22C3",
    bigodot: "\u2A00",
    bigoplus: "\u2A01",
    bigotimes: "\u2A02",
    bigsqcup: "\u2A06",
    bigstar: "\u2605",
    bigtriangledown: "\u25BD",
    bigtriangleup: "\u25B3",
    biguplus: "\u2A04",
    bigvee: "\u22C1",
    bigwedge: "\u22C0",
    bkarow: "\u290D",
    blacklozenge: "\u29EB",
    blacksquare: "\u25AA",
    blacktriangle: "\u25B4",
    blacktriangledown: "\u25BE",
    blacktriangleleft: "\u25C2",
    blacktriangleright: "\u25B8",
    blank: "\u2423",
    blk12: "\u2592",
    blk14: "\u2591",
    blk34: "\u2593",
    block: "\u2588",
    bne: "=\u20E5",
    bnequiv: "\u2261\u20E5",
    bnot: "\u2310",
    bopf: "\u{1D553}",
    bot: "\u22A5",
    bottom: "\u22A5",
    bowtie: "\u22C8",
    boxDL: "\u2557",
    boxDR: "\u2554",
    boxDl: "\u2556",
    boxDr: "\u2553",
    boxH: "\u2550",
    boxHD: "\u2566",
    boxHU: "\u2569",
    boxHd: "\u2564",
    boxHu: "\u2567",
    boxUL: "\u255D",
    boxUR: "\u255A",
    boxUl: "\u255C",
    boxUr: "\u2559",
    boxV: "\u2551",
    boxVH: "\u256C",
    boxVL: "\u2563",
    boxVR: "\u2560",
    boxVh: "\u256B",
    boxVl: "\u2562",
    boxVr: "\u255F",
    boxbox: "\u29C9",
    boxdL: "\u2555",
    boxdR: "\u2552",
    boxdl: "\u2510",
    boxdr: "\u250C",
    boxh: "\u2500",
    boxhD: "\u2565",
    boxhU: "\u2568",
    boxhd: "\u252C",
    boxhu: "\u2534",
    boxminus: "\u229F",
    boxplus: "\u229E",
    boxtimes: "\u22A0",
    boxuL: "\u255B",
    boxuR: "\u2558",
    boxul: "\u2518",
    boxur: "\u2514",
    boxv: "\u2502",
    boxvH: "\u256A",
    boxvL: "\u2561",
    boxvR: "\u255E",
    boxvh: "\u253C",
    boxvl: "\u2524",
    boxvr: "\u251C",
    bprime: "\u2035",
    breve: "\u02D8",
    brvbar: "\xA6",
    bscr: "\u{1D4B7}",
    bsemi: "\u204F",
    bsim: "\u223D",
    bsime: "\u22CD",
    bsol: "\\",
    bsolb: "\u29C5",
    bsolhsub: "\u27C8",
    bull: "\u2022",
    bullet: "\u2022",
    bump: "\u224E",
    bumpE: "\u2AAE",
    bumpe: "\u224F",
    bumpeq: "\u224F",
    cacute: "\u0107",
    cap: "\u2229",
    capand: "\u2A44",
    capbrcup: "\u2A49",
    capcap: "\u2A4B",
    capcup: "\u2A47",
    capdot: "\u2A40",
    caps: "\u2229\uFE00",
    caret: "\u2041",
    caron: "\u02C7",
    ccaps: "\u2A4D",
    ccaron: "\u010D",
    ccedil: "\xE7",
    ccirc: "\u0109",
    ccups: "\u2A4C",
    ccupssm: "\u2A50",
    cdot: "\u010B",
    cedil: "\xB8",
    cemptyv: "\u29B2",
    cent: "\xA2",
    centerdot: "\xB7",
    cfr: "\u{1D520}",
    chcy: "\u0447",
    check: "\u2713",
    checkmark: "\u2713",
    chi: "\u03C7",
    cir: "\u25CB",
    cirE: "\u29C3",
    circ: "\u02C6",
    circeq: "\u2257",
    circlearrowleft: "\u21BA",
    circlearrowright: "\u21BB",
    circledR: "\xAE",
    circledS: "\u24C8",
    circledast: "\u229B",
    circledcirc: "\u229A",
    circleddash: "\u229D",
    cire: "\u2257",
    cirfnint: "\u2A10",
    cirmid: "\u2AEF",
    cirscir: "\u29C2",
    clubs: "\u2663",
    clubsuit: "\u2663",
    colon: ":",
    colone: "\u2254",
    coloneq: "\u2254",
    comma: ",",
    commat: "@",
    comp: "\u2201",
    compfn: "\u2218",
    complement: "\u2201",
    complexes: "\u2102",
    cong: "\u2245",
    congdot: "\u2A6D",
    conint: "\u222E",
    copf: "\u{1D554}",
    coprod: "\u2210",
    copy: "\xA9",
    copysr: "\u2117",
    crarr: "\u21B5",
    cross: "\u2717",
    cscr: "\u{1D4B8}",
    csub: "\u2ACF",
    csube: "\u2AD1",
    csup: "\u2AD0",
    csupe: "\u2AD2",
    ctdot: "\u22EF",
    cudarrl: "\u2938",
    cudarrr: "\u2935",
    cuepr: "\u22DE",
    cuesc: "\u22DF",
    cularr: "\u21B6",
    cularrp: "\u293D",
    cup: "\u222A",
    cupbrcap: "\u2A48",
    cupcap: "\u2A46",
    cupcup: "\u2A4A",
    cupdot: "\u228D",
    cupor: "\u2A45",
    cups: "\u222A\uFE00",
    curarr: "\u21B7",
    curarrm: "\u293C",
    curlyeqprec: "\u22DE",
    curlyeqsucc: "\u22DF",
    curlyvee: "\u22CE",
    curlywedge: "\u22CF",
    curren: "\xA4",
    curvearrowleft: "\u21B6",
    curvearrowright: "\u21B7",
    cuvee: "\u22CE",
    cuwed: "\u22CF",
    cwconint: "\u2232",
    cwint: "\u2231",
    cylcty: "\u232D",
    dArr: "\u21D3",
    dHar: "\u2965",
    dagger: "\u2020",
    daleth: "\u2138",
    darr: "\u2193",
    dash: "\u2010",
    dashv: "\u22A3",
    dbkarow: "\u290F",
    dblac: "\u02DD",
    dcaron: "\u010F",
    dcy: "\u0434",
    dd: "\u2146",
    ddagger: "\u2021",
    ddarr: "\u21CA",
    ddotseq: "\u2A77",
    deg: "\xB0",
    delta: "\u03B4",
    demptyv: "\u29B1",
    dfisht: "\u297F",
    dfr: "\u{1D521}",
    dharl: "\u21C3",
    dharr: "\u21C2",
    diam: "\u22C4",
    diamond: "\u22C4",
    diamondsuit: "\u2666",
    diams: "\u2666",
    die: "\xA8",
    digamma: "\u03DD",
    disin: "\u22F2",
    div: "\xF7",
    divide: "\xF7",
    divideontimes: "\u22C7",
    divonx: "\u22C7",
    djcy: "\u0452",
    dlcorn: "\u231E",
    dlcrop: "\u230D",
    dollar: "$",
    dopf: "\u{1D555}",
    dot: "\u02D9",
    doteq: "\u2250",
    doteqdot: "\u2251",
    dotminus: "\u2238",
    dotplus: "\u2214",
    dotsquare: "\u22A1",
    doublebarwedge: "\u2306",
    downarrow: "\u2193",
    downdownarrows: "\u21CA",
    downharpoonleft: "\u21C3",
    downharpoonright: "\u21C2",
    drbkarow: "\u2910",
    drcorn: "\u231F",
    drcrop: "\u230C",
    dscr: "\u{1D4B9}",
    dscy: "\u0455",
    dsol: "\u29F6",
    dstrok: "\u0111",
    dtdot: "\u22F1",
    dtri: "\u25BF",
    dtrif: "\u25BE",
    duarr: "\u21F5",
    duhar: "\u296F",
    dwangle: "\u29A6",
    dzcy: "\u045F",
    dzigrarr: "\u27FF",
    eDDot: "\u2A77",
    eDot: "\u2251",
    eacute: "\xE9",
    easter: "\u2A6E",
    ecaron: "\u011B",
    ecir: "\u2256",
    ecirc: "\xEA",
    ecolon: "\u2255",
    ecy: "\u044D",
    edot: "\u0117",
    ee: "\u2147",
    efDot: "\u2252",
    efr: "\u{1D522}",
    eg: "\u2A9A",
    egrave: "\xE8",
    egs: "\u2A96",
    egsdot: "\u2A98",
    el: "\u2A99",
    elinters: "\u23E7",
    ell: "\u2113",
    els: "\u2A95",
    elsdot: "\u2A97",
    emacr: "\u0113",
    empty: "\u2205",
    emptyset: "\u2205",
    emptyv: "\u2205",
    emsp13: "\u2004",
    emsp14: "\u2005",
    emsp: "\u2003",
    eng: "\u014B",
    ensp: "\u2002",
    eogon: "\u0119",
    eopf: "\u{1D556}",
    epar: "\u22D5",
    eparsl: "\u29E3",
    eplus: "\u2A71",
    epsi: "\u03B5",
    epsilon: "\u03B5",
    epsiv: "\u03F5",
    eqcirc: "\u2256",
    eqcolon: "\u2255",
    eqsim: "\u2242",
    eqslantgtr: "\u2A96",
    eqslantless: "\u2A95",
    equals: "=",
    equest: "\u225F",
    equiv: "\u2261",
    equivDD: "\u2A78",
    eqvparsl: "\u29E5",
    erDot: "\u2253",
    erarr: "\u2971",
    escr: "\u212F",
    esdot: "\u2250",
    esim: "\u2242",
    eta: "\u03B7",
    eth: "\xF0",
    euml: "\xEB",
    euro: "\u20AC",
    excl: "!",
    exist: "\u2203",
    expectation: "\u2130",
    exponentiale: "\u2147",
    fallingdotseq: "\u2252",
    fcy: "\u0444",
    female: "\u2640",
    ffilig: "\uFB03",
    fflig: "\uFB00",
    ffllig: "\uFB04",
    ffr: "\u{1D523}",
    filig: "\uFB01",
    fjlig: "fj",
    flat: "\u266D",
    fllig: "\uFB02",
    fltns: "\u25B1",
    fnof: "\u0192",
    fopf: "\u{1D557}",
    forall: "\u2200",
    fork: "\u22D4",
    forkv: "\u2AD9",
    fpartint: "\u2A0D",
    frac12: "\xBD",
    frac13: "\u2153",
    frac14: "\xBC",
    frac15: "\u2155",
    frac16: "\u2159",
    frac18: "\u215B",
    frac23: "\u2154",
    frac25: "\u2156",
    frac34: "\xBE",
    frac35: "\u2157",
    frac38: "\u215C",
    frac45: "\u2158",
    frac56: "\u215A",
    frac58: "\u215D",
    frac78: "\u215E",
    frasl: "\u2044",
    frown: "\u2322",
    fscr: "\u{1D4BB}",
    gE: "\u2267",
    gEl: "\u2A8C",
    gacute: "\u01F5",
    gamma: "\u03B3",
    gammad: "\u03DD",
    gap: "\u2A86",
    gbreve: "\u011F",
    gcirc: "\u011D",
    gcy: "\u0433",
    gdot: "\u0121",
    ge: "\u2265",
    gel: "\u22DB",
    geq: "\u2265",
    geqq: "\u2267",
    geqslant: "\u2A7E",
    ges: "\u2A7E",
    gescc: "\u2AA9",
    gesdot: "\u2A80",
    gesdoto: "\u2A82",
    gesdotol: "\u2A84",
    gesl: "\u22DB\uFE00",
    gesles: "\u2A94",
    gfr: "\u{1D524}",
    gg: "\u226B",
    ggg: "\u22D9",
    gimel: "\u2137",
    gjcy: "\u0453",
    gl: "\u2277",
    glE: "\u2A92",
    gla: "\u2AA5",
    glj: "\u2AA4",
    gnE: "\u2269",
    gnap: "\u2A8A",
    gnapprox: "\u2A8A",
    gne: "\u2A88",
    gneq: "\u2A88",
    gneqq: "\u2269",
    gnsim: "\u22E7",
    gopf: "\u{1D558}",
    grave: "`",
    gscr: "\u210A",
    gsim: "\u2273",
    gsime: "\u2A8E",
    gsiml: "\u2A90",
    gt: ">",
    gtcc: "\u2AA7",
    gtcir: "\u2A7A",
    gtdot: "\u22D7",
    gtlPar: "\u2995",
    gtquest: "\u2A7C",
    gtrapprox: "\u2A86",
    gtrarr: "\u2978",
    gtrdot: "\u22D7",
    gtreqless: "\u22DB",
    gtreqqless: "\u2A8C",
    gtrless: "\u2277",
    gtrsim: "\u2273",
    gvertneqq: "\u2269\uFE00",
    gvnE: "\u2269\uFE00",
    hArr: "\u21D4",
    hairsp: "\u200A",
    half: "\xBD",
    hamilt: "\u210B",
    hardcy: "\u044A",
    harr: "\u2194",
    harrcir: "\u2948",
    harrw: "\u21AD",
    hbar: "\u210F",
    hcirc: "\u0125",
    hearts: "\u2665",
    heartsuit: "\u2665",
    hellip: "\u2026",
    hercon: "\u22B9",
    hfr: "\u{1D525}",
    hksearow: "\u2925",
    hkswarow: "\u2926",
    hoarr: "\u21FF",
    homtht: "\u223B",
    hookleftarrow: "\u21A9",
    hookrightarrow: "\u21AA",
    hopf: "\u{1D559}",
    horbar: "\u2015",
    hscr: "\u{1D4BD}",
    hslash: "\u210F",
    hstrok: "\u0127",
    hybull: "\u2043",
    hyphen: "\u2010",
    iacute: "\xED",
    ic: "\u2063",
    icirc: "\xEE",
    icy: "\u0438",
    iecy: "\u0435",
    iexcl: "\xA1",
    iff: "\u21D4",
    ifr: "\u{1D526}",
    igrave: "\xEC",
    ii: "\u2148",
    iiiint: "\u2A0C",
    iiint: "\u222D",
    iinfin: "\u29DC",
    iiota: "\u2129",
    ijlig: "\u0133",
    imacr: "\u012B",
    image: "\u2111",
    imagline: "\u2110",
    imagpart: "\u2111",
    imath: "\u0131",
    imof: "\u22B7",
    imped: "\u01B5",
    in: "\u2208",
    incare: "\u2105",
    infin: "\u221E",
    infintie: "\u29DD",
    inodot: "\u0131",
    int: "\u222B",
    intcal: "\u22BA",
    integers: "\u2124",
    intercal: "\u22BA",
    intlarhk: "\u2A17",
    intprod: "\u2A3C",
    iocy: "\u0451",
    iogon: "\u012F",
    iopf: "\u{1D55A}",
    iota: "\u03B9",
    iprod: "\u2A3C",
    iquest: "\xBF",
    iscr: "\u{1D4BE}",
    isin: "\u2208",
    isinE: "\u22F9",
    isindot: "\u22F5",
    isins: "\u22F4",
    isinsv: "\u22F3",
    isinv: "\u2208",
    it: "\u2062",
    itilde: "\u0129",
    iukcy: "\u0456",
    iuml: "\xEF",
    jcirc: "\u0135",
    jcy: "\u0439",
    jfr: "\u{1D527}",
    jmath: "\u0237",
    jopf: "\u{1D55B}",
    jscr: "\u{1D4BF}",
    jsercy: "\u0458",
    jukcy: "\u0454",
    kappa: "\u03BA",
    kappav: "\u03F0",
    kcedil: "\u0137",
    kcy: "\u043A",
    kfr: "\u{1D528}",
    kgreen: "\u0138",
    khcy: "\u0445",
    kjcy: "\u045C",
    kopf: "\u{1D55C}",
    kscr: "\u{1D4C0}",
    lAarr: "\u21DA",
    lArr: "\u21D0",
    lAtail: "\u291B",
    lBarr: "\u290E",
    lE: "\u2266",
    lEg: "\u2A8B",
    lHar: "\u2962",
    lacute: "\u013A",
    laemptyv: "\u29B4",
    lagran: "\u2112",
    lambda: "\u03BB",
    lang: "\u27E8",
    langd: "\u2991",
    langle: "\u27E8",
    lap: "\u2A85",
    laquo: "\xAB",
    larr: "\u2190",
    larrb: "\u21E4",
    larrbfs: "\u291F",
    larrfs: "\u291D",
    larrhk: "\u21A9",
    larrlp: "\u21AB",
    larrpl: "\u2939",
    larrsim: "\u2973",
    larrtl: "\u21A2",
    lat: "\u2AAB",
    latail: "\u2919",
    late: "\u2AAD",
    lates: "\u2AAD\uFE00",
    lbarr: "\u290C",
    lbbrk: "\u2772",
    lbrace: "{",
    lbrack: "[",
    lbrke: "\u298B",
    lbrksld: "\u298F",
    lbrkslu: "\u298D",
    lcaron: "\u013E",
    lcedil: "\u013C",
    lceil: "\u2308",
    lcub: "{",
    lcy: "\u043B",
    ldca: "\u2936",
    ldquo: "\u201C",
    ldquor: "\u201E",
    ldrdhar: "\u2967",
    ldrushar: "\u294B",
    ldsh: "\u21B2",
    le: "\u2264",
    leftarrow: "\u2190",
    leftarrowtail: "\u21A2",
    leftharpoondown: "\u21BD",
    leftharpoonup: "\u21BC",
    leftleftarrows: "\u21C7",
    leftrightarrow: "\u2194",
    leftrightarrows: "\u21C6",
    leftrightharpoons: "\u21CB",
    leftrightsquigarrow: "\u21AD",
    leftthreetimes: "\u22CB",
    leg: "\u22DA",
    leq: "\u2264",
    leqq: "\u2266",
    leqslant: "\u2A7D",
    les: "\u2A7D",
    lescc: "\u2AA8",
    lesdot: "\u2A7F",
    lesdoto: "\u2A81",
    lesdotor: "\u2A83",
    lesg: "\u22DA\uFE00",
    lesges: "\u2A93",
    lessapprox: "\u2A85",
    lessdot: "\u22D6",
    lesseqgtr: "\u22DA",
    lesseqqgtr: "\u2A8B",
    lessgtr: "\u2276",
    lesssim: "\u2272",
    lfisht: "\u297C",
    lfloor: "\u230A",
    lfr: "\u{1D529}",
    lg: "\u2276",
    lgE: "\u2A91",
    lhard: "\u21BD",
    lharu: "\u21BC",
    lharul: "\u296A",
    lhblk: "\u2584",
    ljcy: "\u0459",
    ll: "\u226A",
    llarr: "\u21C7",
    llcorner: "\u231E",
    llhard: "\u296B",
    lltri: "\u25FA",
    lmidot: "\u0140",
    lmoust: "\u23B0",
    lmoustache: "\u23B0",
    lnE: "\u2268",
    lnap: "\u2A89",
    lnapprox: "\u2A89",
    lne: "\u2A87",
    lneq: "\u2A87",
    lneqq: "\u2268",
    lnsim: "\u22E6",
    loang: "\u27EC",
    loarr: "\u21FD",
    lobrk: "\u27E6",
    longleftarrow: "\u27F5",
    longleftrightarrow: "\u27F7",
    longmapsto: "\u27FC",
    longrightarrow: "\u27F6",
    looparrowleft: "\u21AB",
    looparrowright: "\u21AC",
    lopar: "\u2985",
    lopf: "\u{1D55D}",
    loplus: "\u2A2D",
    lotimes: "\u2A34",
    lowast: "\u2217",
    lowbar: "_",
    loz: "\u25CA",
    lozenge: "\u25CA",
    lozf: "\u29EB",
    lpar: "(",
    lparlt: "\u2993",
    lrarr: "\u21C6",
    lrcorner: "\u231F",
    lrhar: "\u21CB",
    lrhard: "\u296D",
    lrm: "\u200E",
    lrtri: "\u22BF",
    lsaquo: "\u2039",
    lscr: "\u{1D4C1}",
    lsh: "\u21B0",
    lsim: "\u2272",
    lsime: "\u2A8D",
    lsimg: "\u2A8F",
    lsqb: "[",
    lsquo: "\u2018",
    lsquor: "\u201A",
    lstrok: "\u0142",
    lt: "<",
    ltcc: "\u2AA6",
    ltcir: "\u2A79",
    ltdot: "\u22D6",
    lthree: "\u22CB",
    ltimes: "\u22C9",
    ltlarr: "\u2976",
    ltquest: "\u2A7B",
    ltrPar: "\u2996",
    ltri: "\u25C3",
    ltrie: "\u22B4",
    ltrif: "\u25C2",
    lurdshar: "\u294A",
    luruhar: "\u2966",
    lvertneqq: "\u2268\uFE00",
    lvnE: "\u2268\uFE00",
    mDDot: "\u223A",
    macr: "\xAF",
    male: "\u2642",
    malt: "\u2720",
    maltese: "\u2720",
    map: "\u21A6",
    mapsto: "\u21A6",
    mapstodown: "\u21A7",
    mapstoleft: "\u21A4",
    mapstoup: "\u21A5",
    marker: "\u25AE",
    mcomma: "\u2A29",
    mcy: "\u043C",
    mdash: "\u2014",
    measuredangle: "\u2221",
    mfr: "\u{1D52A}",
    mho: "\u2127",
    micro: "\xB5",
    mid: "\u2223",
    midast: "*",
    midcir: "\u2AF0",
    middot: "\xB7",
    minus: "\u2212",
    minusb: "\u229F",
    minusd: "\u2238",
    minusdu: "\u2A2A",
    mlcp: "\u2ADB",
    mldr: "\u2026",
    mnplus: "\u2213",
    models: "\u22A7",
    mopf: "\u{1D55E}",
    mp: "\u2213",
    mscr: "\u{1D4C2}",
    mstpos: "\u223E",
    mu: "\u03BC",
    multimap: "\u22B8",
    mumap: "\u22B8",
    nGg: "\u22D9\u0338",
    nGt: "\u226B\u20D2",
    nGtv: "\u226B\u0338",
    nLeftarrow: "\u21CD",
    nLeftrightarrow: "\u21CE",
    nLl: "\u22D8\u0338",
    nLt: "\u226A\u20D2",
    nLtv: "\u226A\u0338",
    nRightarrow: "\u21CF",
    nVDash: "\u22AF",
    nVdash: "\u22AE",
    nabla: "\u2207",
    nacute: "\u0144",
    nang: "\u2220\u20D2",
    nap: "\u2249",
    napE: "\u2A70\u0338",
    napid: "\u224B\u0338",
    napos: "\u0149",
    napprox: "\u2249",
    natur: "\u266E",
    natural: "\u266E",
    naturals: "\u2115",
    nbsp: "\xA0",
    nbump: "\u224E\u0338",
    nbumpe: "\u224F\u0338",
    ncap: "\u2A43",
    ncaron: "\u0148",
    ncedil: "\u0146",
    ncong: "\u2247",
    ncongdot: "\u2A6D\u0338",
    ncup: "\u2A42",
    ncy: "\u043D",
    ndash: "\u2013",
    ne: "\u2260",
    neArr: "\u21D7",
    nearhk: "\u2924",
    nearr: "\u2197",
    nearrow: "\u2197",
    nedot: "\u2250\u0338",
    nequiv: "\u2262",
    nesear: "\u2928",
    nesim: "\u2242\u0338",
    nexist: "\u2204",
    nexists: "\u2204",
    nfr: "\u{1D52B}",
    ngE: "\u2267\u0338",
    nge: "\u2271",
    ngeq: "\u2271",
    ngeqq: "\u2267\u0338",
    ngeqslant: "\u2A7E\u0338",
    nges: "\u2A7E\u0338",
    ngsim: "\u2275",
    ngt: "\u226F",
    ngtr: "\u226F",
    nhArr: "\u21CE",
    nharr: "\u21AE",
    nhpar: "\u2AF2",
    ni: "\u220B",
    nis: "\u22FC",
    nisd: "\u22FA",
    niv: "\u220B",
    njcy: "\u045A",
    nlArr: "\u21CD",
    nlE: "\u2266\u0338",
    nlarr: "\u219A",
    nldr: "\u2025",
    nle: "\u2270",
    nleftarrow: "\u219A",
    nleftrightarrow: "\u21AE",
    nleq: "\u2270",
    nleqq: "\u2266\u0338",
    nleqslant: "\u2A7D\u0338",
    nles: "\u2A7D\u0338",
    nless: "\u226E",
    nlsim: "\u2274",
    nlt: "\u226E",
    nltri: "\u22EA",
    nltrie: "\u22EC",
    nmid: "\u2224",
    nopf: "\u{1D55F}",
    not: "\xAC",
    notin: "\u2209",
    notinE: "\u22F9\u0338",
    notindot: "\u22F5\u0338",
    notinva: "\u2209",
    notinvb: "\u22F7",
    notinvc: "\u22F6",
    notni: "\u220C",
    notniva: "\u220C",
    notnivb: "\u22FE",
    notnivc: "\u22FD",
    npar: "\u2226",
    nparallel: "\u2226",
    nparsl: "\u2AFD\u20E5",
    npart: "\u2202\u0338",
    npolint: "\u2A14",
    npr: "\u2280",
    nprcue: "\u22E0",
    npre: "\u2AAF\u0338",
    nprec: "\u2280",
    npreceq: "\u2AAF\u0338",
    nrArr: "\u21CF",
    nrarr: "\u219B",
    nrarrc: "\u2933\u0338",
    nrarrw: "\u219D\u0338",
    nrightarrow: "\u219B",
    nrtri: "\u22EB",
    nrtrie: "\u22ED",
    nsc: "\u2281",
    nsccue: "\u22E1",
    nsce: "\u2AB0\u0338",
    nscr: "\u{1D4C3}",
    nshortmid: "\u2224",
    nshortparallel: "\u2226",
    nsim: "\u2241",
    nsime: "\u2244",
    nsimeq: "\u2244",
    nsmid: "\u2224",
    nspar: "\u2226",
    nsqsube: "\u22E2",
    nsqsupe: "\u22E3",
    nsub: "\u2284",
    nsubE: "\u2AC5\u0338",
    nsube: "\u2288",
    nsubset: "\u2282\u20D2",
    nsubseteq: "\u2288",
    nsubseteqq: "\u2AC5\u0338",
    nsucc: "\u2281",
    nsucceq: "\u2AB0\u0338",
    nsup: "\u2285",
    nsupE: "\u2AC6\u0338",
    nsupe: "\u2289",
    nsupset: "\u2283\u20D2",
    nsupseteq: "\u2289",
    nsupseteqq: "\u2AC6\u0338",
    ntgl: "\u2279",
    ntilde: "\xF1",
    ntlg: "\u2278",
    ntriangleleft: "\u22EA",
    ntrianglelefteq: "\u22EC",
    ntriangleright: "\u22EB",
    ntrianglerighteq: "\u22ED",
    nu: "\u03BD",
    num: "#",
    numero: "\u2116",
    numsp: "\u2007",
    nvDash: "\u22AD",
    nvHarr: "\u2904",
    nvap: "\u224D\u20D2",
    nvdash: "\u22AC",
    nvge: "\u2265\u20D2",
    nvgt: ">\u20D2",
    nvinfin: "\u29DE",
    nvlArr: "\u2902",
    nvle: "\u2264\u20D2",
    nvlt: "<\u20D2",
    nvltrie: "\u22B4\u20D2",
    nvrArr: "\u2903",
    nvrtrie: "\u22B5\u20D2",
    nvsim: "\u223C\u20D2",
    nwArr: "\u21D6",
    nwarhk: "\u2923",
    nwarr: "\u2196",
    nwarrow: "\u2196",
    nwnear: "\u2927",
    oS: "\u24C8",
    oacute: "\xF3",
    oast: "\u229B",
    ocir: "\u229A",
    ocirc: "\xF4",
    ocy: "\u043E",
    odash: "\u229D",
    odblac: "\u0151",
    odiv: "\u2A38",
    odot: "\u2299",
    odsold: "\u29BC",
    oelig: "\u0153",
    ofcir: "\u29BF",
    ofr: "\u{1D52C}",
    ogon: "\u02DB",
    ograve: "\xF2",
    ogt: "\u29C1",
    ohbar: "\u29B5",
    ohm: "\u03A9",
    oint: "\u222E",
    olarr: "\u21BA",
    olcir: "\u29BE",
    olcross: "\u29BB",
    oline: "\u203E",
    olt: "\u29C0",
    omacr: "\u014D",
    omega: "\u03C9",
    omicron: "\u03BF",
    omid: "\u29B6",
    ominus: "\u2296",
    oopf: "\u{1D560}",
    opar: "\u29B7",
    operp: "\u29B9",
    oplus: "\u2295",
    or: "\u2228",
    orarr: "\u21BB",
    ord: "\u2A5D",
    order: "\u2134",
    orderof: "\u2134",
    ordf: "\xAA",
    ordm: "\xBA",
    origof: "\u22B6",
    oror: "\u2A56",
    orslope: "\u2A57",
    orv: "\u2A5B",
    oscr: "\u2134",
    oslash: "\xF8",
    osol: "\u2298",
    otilde: "\xF5",
    otimes: "\u2297",
    otimesas: "\u2A36",
    ouml: "\xF6",
    ovbar: "\u233D",
    par: "\u2225",
    para: "\xB6",
    parallel: "\u2225",
    parsim: "\u2AF3",
    parsl: "\u2AFD",
    part: "\u2202",
    pcy: "\u043F",
    percnt: "%",
    period: ".",
    permil: "\u2030",
    perp: "\u22A5",
    pertenk: "\u2031",
    pfr: "\u{1D52D}",
    phi: "\u03C6",
    phiv: "\u03D5",
    phmmat: "\u2133",
    phone: "\u260E",
    pi: "\u03C0",
    pitchfork: "\u22D4",
    piv: "\u03D6",
    planck: "\u210F",
    planckh: "\u210E",
    plankv: "\u210F",
    plus: "+",
    plusacir: "\u2A23",
    plusb: "\u229E",
    pluscir: "\u2A22",
    plusdo: "\u2214",
    plusdu: "\u2A25",
    pluse: "\u2A72",
    plusmn: "\xB1",
    plussim: "\u2A26",
    plustwo: "\u2A27",
    pm: "\xB1",
    pointint: "\u2A15",
    popf: "\u{1D561}",
    pound: "\xA3",
    pr: "\u227A",
    prE: "\u2AB3",
    prap: "\u2AB7",
    prcue: "\u227C",
    pre: "\u2AAF",
    prec: "\u227A",
    precapprox: "\u2AB7",
    preccurlyeq: "\u227C",
    preceq: "\u2AAF",
    precnapprox: "\u2AB9",
    precneqq: "\u2AB5",
    precnsim: "\u22E8",
    precsim: "\u227E",
    prime: "\u2032",
    primes: "\u2119",
    prnE: "\u2AB5",
    prnap: "\u2AB9",
    prnsim: "\u22E8",
    prod: "\u220F",
    profalar: "\u232E",
    profline: "\u2312",
    profsurf: "\u2313",
    prop: "\u221D",
    propto: "\u221D",
    prsim: "\u227E",
    prurel: "\u22B0",
    pscr: "\u{1D4C5}",
    psi: "\u03C8",
    puncsp: "\u2008",
    qfr: "\u{1D52E}",
    qint: "\u2A0C",
    qopf: "\u{1D562}",
    qprime: "\u2057",
    qscr: "\u{1D4C6}",
    quaternions: "\u210D",
    quatint: "\u2A16",
    quest: "?",
    questeq: "\u225F",
    quot: '"',
    rAarr: "\u21DB",
    rArr: "\u21D2",
    rAtail: "\u291C",
    rBarr: "\u290F",
    rHar: "\u2964",
    race: "\u223D\u0331",
    racute: "\u0155",
    radic: "\u221A",
    raemptyv: "\u29B3",
    rang: "\u27E9",
    rangd: "\u2992",
    range: "\u29A5",
    rangle: "\u27E9",
    raquo: "\xBB",
    rarr: "\u2192",
    rarrap: "\u2975",
    rarrb: "\u21E5",
    rarrbfs: "\u2920",
    rarrc: "\u2933",
    rarrfs: "\u291E",
    rarrhk: "\u21AA",
    rarrlp: "\u21AC",
    rarrpl: "\u2945",
    rarrsim: "\u2974",
    rarrtl: "\u21A3",
    rarrw: "\u219D",
    ratail: "\u291A",
    ratio: "\u2236",
    rationals: "\u211A",
    rbarr: "\u290D",
    rbbrk: "\u2773",
    rbrace: "}",
    rbrack: "]",
    rbrke: "\u298C",
    rbrksld: "\u298E",
    rbrkslu: "\u2990",
    rcaron: "\u0159",
    rcedil: "\u0157",
    rceil: "\u2309",
    rcub: "}",
    rcy: "\u0440",
    rdca: "\u2937",
    rdldhar: "\u2969",
    rdquo: "\u201D",
    rdquor: "\u201D",
    rdsh: "\u21B3",
    real: "\u211C",
    realine: "\u211B",
    realpart: "\u211C",
    reals: "\u211D",
    rect: "\u25AD",
    reg: "\xAE",
    rfisht: "\u297D",
    rfloor: "\u230B",
    rfr: "\u{1D52F}",
    rhard: "\u21C1",
    rharu: "\u21C0",
    rharul: "\u296C",
    rho: "\u03C1",
    rhov: "\u03F1",
    rightarrow: "\u2192",
    rightarrowtail: "\u21A3",
    rightharpoondown: "\u21C1",
    rightharpoonup: "\u21C0",
    rightleftarrows: "\u21C4",
    rightleftharpoons: "\u21CC",
    rightrightarrows: "\u21C9",
    rightsquigarrow: "\u219D",
    rightthreetimes: "\u22CC",
    ring: "\u02DA",
    risingdotseq: "\u2253",
    rlarr: "\u21C4",
    rlhar: "\u21CC",
    rlm: "\u200F",
    rmoust: "\u23B1",
    rmoustache: "\u23B1",
    rnmid: "\u2AEE",
    roang: "\u27ED",
    roarr: "\u21FE",
    robrk: "\u27E7",
    ropar: "\u2986",
    ropf: "\u{1D563}",
    roplus: "\u2A2E",
    rotimes: "\u2A35",
    rpar: ")",
    rpargt: "\u2994",
    rppolint: "\u2A12",
    rrarr: "\u21C9",
    rsaquo: "\u203A",
    rscr: "\u{1D4C7}",
    rsh: "\u21B1",
    rsqb: "]",
    rsquo: "\u2019",
    rsquor: "\u2019",
    rthree: "\u22CC",
    rtimes: "\u22CA",
    rtri: "\u25B9",
    rtrie: "\u22B5",
    rtrif: "\u25B8",
    rtriltri: "\u29CE",
    ruluhar: "\u2968",
    rx: "\u211E",
    sacute: "\u015B",
    sbquo: "\u201A",
    sc: "\u227B",
    scE: "\u2AB4",
    scap: "\u2AB8",
    scaron: "\u0161",
    sccue: "\u227D",
    sce: "\u2AB0",
    scedil: "\u015F",
    scirc: "\u015D",
    scnE: "\u2AB6",
    scnap: "\u2ABA",
    scnsim: "\u22E9",
    scpolint: "\u2A13",
    scsim: "\u227F",
    scy: "\u0441",
    sdot: "\u22C5",
    sdotb: "\u22A1",
    sdote: "\u2A66",
    seArr: "\u21D8",
    searhk: "\u2925",
    searr: "\u2198",
    searrow: "\u2198",
    sect: "\xA7",
    semi: ";",
    seswar: "\u2929",
    setminus: "\u2216",
    setmn: "\u2216",
    sext: "\u2736",
    sfr: "\u{1D530}",
    sfrown: "\u2322",
    sharp: "\u266F",
    shchcy: "\u0449",
    shcy: "\u0448",
    shortmid: "\u2223",
    shortparallel: "\u2225",
    shy: "\xAD",
    sigma: "\u03C3",
    sigmaf: "\u03C2",
    sigmav: "\u03C2",
    sim: "\u223C",
    simdot: "\u2A6A",
    sime: "\u2243",
    simeq: "\u2243",
    simg: "\u2A9E",
    simgE: "\u2AA0",
    siml: "\u2A9D",
    simlE: "\u2A9F",
    simne: "\u2246",
    simplus: "\u2A24",
    simrarr: "\u2972",
    slarr: "\u2190",
    smallsetminus: "\u2216",
    smashp: "\u2A33",
    smeparsl: "\u29E4",
    smid: "\u2223",
    smile: "\u2323",
    smt: "\u2AAA",
    smte: "\u2AAC",
    smtes: "\u2AAC\uFE00",
    softcy: "\u044C",
    sol: "/",
    solb: "\u29C4",
    solbar: "\u233F",
    sopf: "\u{1D564}",
    spades: "\u2660",
    spadesuit: "\u2660",
    spar: "\u2225",
    sqcap: "\u2293",
    sqcaps: "\u2293\uFE00",
    sqcup: "\u2294",
    sqcups: "\u2294\uFE00",
    sqsub: "\u228F",
    sqsube: "\u2291",
    sqsubset: "\u228F",
    sqsubseteq: "\u2291",
    sqsup: "\u2290",
    sqsupe: "\u2292",
    sqsupset: "\u2290",
    sqsupseteq: "\u2292",
    squ: "\u25A1",
    square: "\u25A1",
    squarf: "\u25AA",
    squf: "\u25AA",
    srarr: "\u2192",
    sscr: "\u{1D4C8}",
    ssetmn: "\u2216",
    ssmile: "\u2323",
    sstarf: "\u22C6",
    star: "\u2606",
    starf: "\u2605",
    straightepsilon: "\u03F5",
    straightphi: "\u03D5",
    strns: "\xAF",
    sub: "\u2282",
    subE: "\u2AC5",
    subdot: "\u2ABD",
    sube: "\u2286",
    subedot: "\u2AC3",
    submult: "\u2AC1",
    subnE: "\u2ACB",
    subne: "\u228A",
    subplus: "\u2ABF",
    subrarr: "\u2979",
    subset: "\u2282",
    subseteq: "\u2286",
    subseteqq: "\u2AC5",
    subsetneq: "\u228A",
    subsetneqq: "\u2ACB",
    subsim: "\u2AC7",
    subsub: "\u2AD5",
    subsup: "\u2AD3",
    succ: "\u227B",
    succapprox: "\u2AB8",
    succcurlyeq: "\u227D",
    succeq: "\u2AB0",
    succnapprox: "\u2ABA",
    succneqq: "\u2AB6",
    succnsim: "\u22E9",
    succsim: "\u227F",
    sum: "\u2211",
    sung: "\u266A",
    sup1: "\xB9",
    sup2: "\xB2",
    sup3: "\xB3",
    sup: "\u2283",
    supE: "\u2AC6",
    supdot: "\u2ABE",
    supdsub: "\u2AD8",
    supe: "\u2287",
    supedot: "\u2AC4",
    suphsol: "\u27C9",
    suphsub: "\u2AD7",
    suplarr: "\u297B",
    supmult: "\u2AC2",
    supnE: "\u2ACC",
    supne: "\u228B",
    supplus: "\u2AC0",
    supset: "\u2283",
    supseteq: "\u2287",
    supseteqq: "\u2AC6",
    supsetneq: "\u228B",
    supsetneqq: "\u2ACC",
    supsim: "\u2AC8",
    supsub: "\u2AD4",
    supsup: "\u2AD6",
    swArr: "\u21D9",
    swarhk: "\u2926",
    swarr: "\u2199",
    swarrow: "\u2199",
    swnwar: "\u292A",
    szlig: "\xDF",
    target: "\u2316",
    tau: "\u03C4",
    tbrk: "\u23B4",
    tcaron: "\u0165",
    tcedil: "\u0163",
    tcy: "\u0442",
    tdot: "\u20DB",
    telrec: "\u2315",
    tfr: "\u{1D531}",
    there4: "\u2234",
    therefore: "\u2234",
    theta: "\u03B8",
    thetasym: "\u03D1",
    thetav: "\u03D1",
    thickapprox: "\u2248",
    thicksim: "\u223C",
    thinsp: "\u2009",
    thkap: "\u2248",
    thksim: "\u223C",
    thorn: "\xFE",
    tilde: "\u02DC",
    times: "\xD7",
    timesb: "\u22A0",
    timesbar: "\u2A31",
    timesd: "\u2A30",
    tint: "\u222D",
    toea: "\u2928",
    top: "\u22A4",
    topbot: "\u2336",
    topcir: "\u2AF1",
    topf: "\u{1D565}",
    topfork: "\u2ADA",
    tosa: "\u2929",
    tprime: "\u2034",
    trade: "\u2122",
    triangle: "\u25B5",
    triangledown: "\u25BF",
    triangleleft: "\u25C3",
    trianglelefteq: "\u22B4",
    triangleq: "\u225C",
    triangleright: "\u25B9",
    trianglerighteq: "\u22B5",
    tridot: "\u25EC",
    trie: "\u225C",
    triminus: "\u2A3A",
    triplus: "\u2A39",
    trisb: "\u29CD",
    tritime: "\u2A3B",
    trpezium: "\u23E2",
    tscr: "\u{1D4C9}",
    tscy: "\u0446",
    tshcy: "\u045B",
    tstrok: "\u0167",
    twixt: "\u226C",
    twoheadleftarrow: "\u219E",
    twoheadrightarrow: "\u21A0",
    uArr: "\u21D1",
    uHar: "\u2963",
    uacute: "\xFA",
    uarr: "\u2191",
    ubrcy: "\u045E",
    ubreve: "\u016D",
    ucirc: "\xFB",
    ucy: "\u0443",
    udarr: "\u21C5",
    udblac: "\u0171",
    udhar: "\u296E",
    ufisht: "\u297E",
    ufr: "\u{1D532}",
    ugrave: "\xF9",
    uharl: "\u21BF",
    uharr: "\u21BE",
    uhblk: "\u2580",
    ulcorn: "\u231C",
    ulcorner: "\u231C",
    ulcrop: "\u230F",
    ultri: "\u25F8",
    umacr: "\u016B",
    uml: "\xA8",
    uogon: "\u0173",
    uopf: "\u{1D566}",
    uparrow: "\u2191",
    updownarrow: "\u2195",
    upharpoonleft: "\u21BF",
    upharpoonright: "\u21BE",
    uplus: "\u228E",
    upsi: "\u03C5",
    upsih: "\u03D2",
    upsilon: "\u03C5",
    upuparrows: "\u21C8",
    urcorn: "\u231D",
    urcorner: "\u231D",
    urcrop: "\u230E",
    uring: "\u016F",
    urtri: "\u25F9",
    uscr: "\u{1D4CA}",
    utdot: "\u22F0",
    utilde: "\u0169",
    utri: "\u25B5",
    utrif: "\u25B4",
    uuarr: "\u21C8",
    uuml: "\xFC",
    uwangle: "\u29A7",
    vArr: "\u21D5",
    vBar: "\u2AE8",
    vBarv: "\u2AE9",
    vDash: "\u22A8",
    vangrt: "\u299C",
    varepsilon: "\u03F5",
    varkappa: "\u03F0",
    varnothing: "\u2205",
    varphi: "\u03D5",
    varpi: "\u03D6",
    varpropto: "\u221D",
    varr: "\u2195",
    varrho: "\u03F1",
    varsigma: "\u03C2",
    varsubsetneq: "\u228A\uFE00",
    varsubsetneqq: "\u2ACB\uFE00",
    varsupsetneq: "\u228B\uFE00",
    varsupsetneqq: "\u2ACC\uFE00",
    vartheta: "\u03D1",
    vartriangleleft: "\u22B2",
    vartriangleright: "\u22B3",
    vcy: "\u0432",
    vdash: "\u22A2",
    vee: "\u2228",
    veebar: "\u22BB",
    veeeq: "\u225A",
    vellip: "\u22EE",
    verbar: "|",
    vert: "|",
    vfr: "\u{1D533}",
    vltri: "\u22B2",
    vnsub: "\u2282\u20D2",
    vnsup: "\u2283\u20D2",
    vopf: "\u{1D567}",
    vprop: "\u221D",
    vrtri: "\u22B3",
    vscr: "\u{1D4CB}",
    vsubnE: "\u2ACB\uFE00",
    vsubne: "\u228A\uFE00",
    vsupnE: "\u2ACC\uFE00",
    vsupne: "\u228B\uFE00",
    vzigzag: "\u299A",
    wcirc: "\u0175",
    wedbar: "\u2A5F",
    wedge: "\u2227",
    wedgeq: "\u2259",
    weierp: "\u2118",
    wfr: "\u{1D534}",
    wopf: "\u{1D568}",
    wp: "\u2118",
    wr: "\u2240",
    wreath: "\u2240",
    wscr: "\u{1D4CC}",
    xcap: "\u22C2",
    xcirc: "\u25EF",
    xcup: "\u22C3",
    xdtri: "\u25BD",
    xfr: "\u{1D535}",
    xhArr: "\u27FA",
    xharr: "\u27F7",
    xi: "\u03BE",
    xlArr: "\u27F8",
    xlarr: "\u27F5",
    xmap: "\u27FC",
    xnis: "\u22FB",
    xodot: "\u2A00",
    xopf: "\u{1D569}",
    xoplus: "\u2A01",
    xotime: "\u2A02",
    xrArr: "\u27F9",
    xrarr: "\u27F6",
    xscr: "\u{1D4CD}",
    xsqcup: "\u2A06",
    xuplus: "\u2A04",
    xutri: "\u25B3",
    xvee: "\u22C1",
    xwedge: "\u22C0",
    yacute: "\xFD",
    yacy: "\u044F",
    ycirc: "\u0177",
    ycy: "\u044B",
    yen: "\xA5",
    yfr: "\u{1D536}",
    yicy: "\u0457",
    yopf: "\u{1D56A}",
    yscr: "\u{1D4CE}",
    yucy: "\u044E",
    yuml: "\xFF",
    zacute: "\u017A",
    zcaron: "\u017E",
    zcy: "\u0437",
    zdot: "\u017C",
    zeetrf: "\u2128",
    zeta: "\u03B6",
    zfr: "\u{1D537}",
    zhcy: "\u0436",
    zigrarr: "\u21DD",
    zopf: "\u{1D56B}",
    zscr: "\u{1D4CF}",
    zwj: "\u200D",
    zwnj: "\u200C"
  }, Pj = {}.hasOwnProperty;
  s(Go, "decodeNamedCharacterReference");
  Cs = String.fromCharCode, Bj = [
    "",
    /* 1: Non terminated (named) */
    "Named character references must be terminated by a semicolon",
    /* 2: Non terminated (numeric) */
    "Numeric character references must be terminated by a semicolon",
    /* 3: Empty (named) */
    "Named character references cannot be empty",
    /* 4: Empty (numeric) */
    "Numeric character references cannot be empty",
    /* 5: Unknown (named) */
    "Named character references must be known",
    /* 6: Disallowed (numeric) */
    "Numeric character references cannot be disallowed",
    /* 7: Prohibited (numeric) */
    "Numeric character references cannot be outside the permissible Unicode range"
  ];
  s(Oj, "parseEntities");
  s(Rj, "prohibited");
  s(Nj, "disallowed");
  s(Lj, "core");
  s(jj, "charactersToExpression");
  s(Mj, "formatBasic");
  s(qj, "stringifyEntitiesLight");
  dw = "  ";
  s($j, "mdxJsxFromMarkdown");
  s(Vj, "mdxJsxToMarkdown");
  s(Uj, "containerFlow");
  s(mw, "inferDepth");
  s(gw, "createIndent");
  s(Wj, "peekElement");
  s(zj, "mdxjsEsmFromMarkdown");
  s(Hj, "mdxjsEsmToMarkdown");
  s(Gj, "enterMdxjsEsm");
  s(Jj, "exitMdxjsEsm");
  s(Zj, "exitMdxjsEsmData");
  s(Xj, "handleMdxjsEsm");
  s(Kj, "mdxFromMarkdown");
  s(Yj, "mdxToMarkdown");
  Qj = zu(gj(), 1), eM = Gn(/\p{P}/u), Or = Gn(/[A-Za-z]/), Yt = Gn(/[\dA-Za-z]/), tM = Gn(/[#-'*+\--9=?A-Z^-~]/);
  s(Nd, "asciiControl");
  Ld = Gn(/\d/), rM = Gn(/[\dA-Fa-f]/), yw = Gn(/[!-/:-@[-`{-~]/);
  s(le, "markdownLineEnding");
  s(pt, "markdownLineEndingOrSpace");
  s(Re, "markdownSpace");
  s(nM, "unicodePunctuation");
  xn = Gn(/\s/);
  s(Gn, "regexCheck");
  s(iM, "color");
  sM = {}.hasOwnProperty, oM = Symbol("continue"), Cd = Symbol("exit"), aM = Symbol("skip");
  s(uM, "visit");
  s(EC, "toResult");
  s(wd, "nodelike");
  s(Dw, "eventsToAcorn");
  s(CC, "empty");
  s(lM, "collect");
  s(cM, "relativeToPoint");
  s(pM, "serializeChunks");
  s(bn, "positionFromEstree");
  s(wC, "pointOrUndefined");
  s(Sd, "numberOrUndefined");
  ks = "https://github.com/micromark/micromark-extension-mdx-expression/tree/main/packages/micromark-extension-mdx-expression", hM = "#unexp\
ected-end-of-file-in-expression-expected-a-corresponding-closing-brace-for-", fM = "#unexpected-lazy-line-in-expression-in-container-expecte\
d-line-to-be-prefixed", SC = "#unexpected-type-in-code-expected-an-object-spread-spread", dM = "#unexpected-extra-content-in-spread-only-a-s\
ingle-spread-is-supported", mM = "#could-not-parse-expression-with-acorn";
  s(cl, "factoryMdxExpression");
  s(gM, "mdxExpressionParse");
  s($e, "factorySpace");
  s(yM, "mdxExpression");
  AC = "https://github.com/micromark/micromark-extension-mdx-jsx";
  s(xw, "factoryTag");
  s(DM, "serializeCharCode");
  s(xM, "jsxText");
  s(bM, "jsxFlow");
  s(vM, "mdxJsx");
  s(EM, "mdxMd");
  s(Xr, "splice");
  s(gr, "push");
  s(FC, "classifyCharacter");
  s(Vd, "resolveAll");
  jd = {
    name: "attention",
    tokenize: wM,
    resolveAll: CM
  };
  s(CM, "resolveAllAttention");
  s(wM, "tokenizeAttention");
  s(_C, "movePoint");
  SM = {
    name: "autolink",
    tokenize: AM
  };
  s(AM, "tokenizeAutolink");
  Zo = {
    tokenize: FM,
    partial: !0
  };
  s(FM, "tokenizeBlankLine");
  bw = {
    name: "blockQuote",
    tokenize: _M,
    continuation: {
      tokenize: kM
    },
    exit: TM
  };
  s(_M, "tokenizeBlockQuoteStart");
  s(kM, "tokenizeBlockQuoteContinuation");
  s(TM, "exit");
  vw = {
    name: "characterEscape",
    tokenize: IM
  };
  s(IM, "tokenizeCharacterEscape");
  Ew = {
    name: "characterReference",
    tokenize: PM
  };
  s(PM, "tokenizeCharacterReference");
  kC = {
    tokenize: OM,
    partial: !0
  }, TC = {
    name: "codeFenced",
    tokenize: BM,
    concrete: !0
  };
  s(BM, "tokenizeCodeFenced");
  s(OM, "tokenizeNonLazyContinuation");
  Ad = {
    name: "codeIndented",
    tokenize: NM
  }, RM = {
    tokenize: LM,
    partial: !0
  };
  s(NM, "tokenizeCodeIndented");
  s(LM, "tokenizeFurtherStart");
  jM = {
    name: "codeText",
    tokenize: $M,
    resolve: MM,
    previous: qM
  };
  s(MM, "resolveCodeText");
  s(qM, "previous");
  s($M, "tokenizeCodeText");
  s(Cw, "subtokenize");
  s(VM, "subcontent");
  UM = {
    tokenize: HM,
    resolve: zM
  }, WM = {
    tokenize: GM,
    partial: !0
  };
  s(zM, "resolveContent");
  s(HM, "tokenizeContent");
  s(GM, "tokenizeContinuation");
  s(ww, "factoryDestination");
  s(Sw, "factoryLabel");
  s(Aw, "factoryTitle");
  s(zo, "factoryWhitespace");
  s(Ts, "normalizeIdentifier");
  JM = {
    name: "definition",
    tokenize: XM
  }, ZM = {
    tokenize: KM,
    partial: !0
  };
  s(XM, "tokenizeDefinition");
  s(KM, "tokenizeTitleBefore");
  YM = {
    name: "hardBreakEscape",
    tokenize: QM
  };
  s(QM, "tokenizeHardBreakEscape");
  eq = {
    name: "headingAtx",
    tokenize: rq,
    resolve: tq
  };
  s(tq, "resolveHeadingAtx");
  s(rq, "tokenizeHeadingAtx");
  nq = [
    "address",
    "article",
    "aside",
    "base",
    "basefont",
    "blockquote",
    "body",
    "caption",
    "center",
    "col",
    "colgroup",
    "dd",
    "details",
    "dialog",
    "dir",
    "div",
    "dl",
    "dt",
    "fieldset",
    "figcaption",
    "figure",
    "footer",
    "form",
    "frame",
    "frameset",
    "h1",
    "h2",
    "h3",
    "h4",
    "h5",
    "h6",
    "head",
    "header",
    "hr",
    "html",
    "iframe",
    "legend",
    "li",
    "link",
    "main",
    "menu",
    "menuitem",
    "nav",
    "noframes",
    "ol",
    "optgroup",
    "option",
    "p",
    "param",
    "search",
    "section",
    "summary",
    "table",
    "tbody",
    "td",
    "tfoot",
    "th",
    "thead",
    "title",
    "tr",
    "track",
    "ul"
  ], IC = ["pre", "script", "style", "textarea"], iq = {
    name: "htmlFlow",
    tokenize: uq,
    resolveTo: aq,
    concrete: !0
  }, sq = {
    tokenize: cq,
    partial: !0
  }, oq = {
    tokenize: lq,
    partial: !0
  };
  s(aq, "resolveToHtmlFlow");
  s(uq, "tokenizeHtmlFlow");
  s(lq, "tokenizeNonLazyContinuationStart");
  s(cq, "tokenizeBlankLineBefore");
  pq = {
    name: "htmlText",
    tokenize: hq
  };
  s(hq, "tokenizeHtmlText");
  Ud = {
    name: "labelEnd",
    tokenize: Dq,
    resolveTo: yq,
    resolveAll: gq
  }, fq = {
    tokenize: xq
  }, dq = {
    tokenize: bq
  }, mq = {
    tokenize: vq
  };
  s(gq, "resolveAllLabelEnd");
  s(yq, "resolveToLabelEnd");
  s(Dq, "tokenizeLabelEnd");
  s(xq, "tokenizeResource");
  s(bq, "tokenizeReferenceFull");
  s(vq, "tokenizeReferenceCollapsed");
  Eq = {
    name: "labelStartImage",
    tokenize: Cq,
    resolveAll: Ud.resolveAll
  };
  s(Cq, "tokenizeLabelStartImage");
  wq = {
    name: "labelStartLink",
    tokenize: Sq,
    resolveAll: Ud.resolveAll
  };
  s(Sq, "tokenizeLabelStartLink");
  Fd = {
    name: "lineEnding",
    tokenize: Aq
  };
  s(Aq, "tokenizeLineEnding");
  ll = {
    name: "thematicBreak",
    tokenize: Fq
  };
  s(Fq, "tokenizeThematicBreak");
  Vt = {
    name: "list",
    tokenize: Tq,
    continuation: {
      tokenize: Iq
    },
    exit: Bq
  }, _q = {
    tokenize: Oq,
    partial: !0
  }, kq = {
    tokenize: Pq,
    partial: !0
  };
  s(Tq, "tokenizeListStart");
  s(Iq, "tokenizeListContinuation");
  s(Pq, "tokenizeIndent");
  s(Bq, "tokenizeListEnd");
  s(Oq, "tokenizeListItemPrefixWhitespace");
  PC = {
    name: "setextUnderline",
    tokenize: Nq,
    resolveTo: Rq
  };
  s(Rq, "resolveToSetextUnderline");
  s(Nq, "tokenizeSetextUnderline");
  Lq = {
    tokenize: qq,
    partial: !0
  }, BC = "https://github.com/micromark/micromark-extension-mdxjs-esm", jq = /* @__PURE__ */ new Set(["ExportAllDeclaration", "ExportDefault\
Declaration", "ExportNamedDeclaration", "ImportDeclaration"]);
  s(Mq, "mdxjsEsm");
  s(qq, "tokenizeNextBlank");
  OC = {}.hasOwnProperty;
  s(Fw, "combineExtensions");
  s($q, "syntaxExtension");
  s(Vq, "constructs");
  s(Uq, "mdxjs");
  Wq = {};
  s(zq, "remarkMdx");
  Hq = {};
  s(Gq, "toString");
  s(_w, "one");
  s(RC, "all");
  s(Jq, "node");
  s(kw, "decodeNumericCharacterReference");
  s(Is, "normalizeUri");
  Zq = {
    tokenize: Xq
  };
  s(Xq, "initializeContent");
  Kq = {
    tokenize: Yq
  }, NC = {
    tokenize: Qq
  };
  s(Yq, "initializeDocument");
  s(Qq, "tokenizeContainer");
  e$ = {
    tokenize: t$
  };
  s(t$, "initializeFlow");
  r$ = {
    resolveAll: Iw()
  }, n$ = Tw("string"), i$ = Tw("text");
  s(Tw, "initializeFactory");
  s(Iw, "createResolver");
  s(s$, "resolveAllLineSuffixes");
  s(o$, "createTokenizer");
  s(a$, "sliceChunks");
  s(u$, "serializeChunks2");
  Pw = {};
  Yf(Pw, {
    attentionMarkers: /* @__PURE__ */ s(() => g$, "attentionMarkers"),
    contentInitial: /* @__PURE__ */ s(() => c$, "contentInitial"),
    disable: /* @__PURE__ */ s(() => y$, "disable"),
    document: /* @__PURE__ */ s(() => l$, "document"),
    flow: /* @__PURE__ */ s(() => h$, "flow"),
    flowInitial: /* @__PURE__ */ s(() => p$, "flowInitial"),
    insideSpan: /* @__PURE__ */ s(() => m$, "insideSpan"),
    string: /* @__PURE__ */ s(() => f$, "string"),
    text: /* @__PURE__ */ s(() => d$, "text")
  });
  l$ = {
    42: Vt,
    43: Vt,
    45: Vt,
    48: Vt,
    49: Vt,
    50: Vt,
    51: Vt,
    52: Vt,
    53: Vt,
    54: Vt,
    55: Vt,
    56: Vt,
    57: Vt,
    62: bw
  }, c$ = {
    91: JM
  }, p$ = {
    [-2]: Ad,
    [-1]: Ad,
    32: Ad
  }, h$ = {
    35: eq,
    42: ll,
    45: [PC, ll],
    60: iq,
    61: PC,
    95: ll,
    96: TC,
    126: TC
  }, f$ = {
    38: Ew,
    92: vw
  }, d$ = {
    [-5]: Fd,
    [-4]: Fd,
    [-3]: Fd,
    33: Eq,
    38: Ew,
    42: jd,
    60: [SM, pq],
    91: wq,
    92: [YM, vw],
    93: Ud,
    95: jd,
    96: jM
  }, m$ = {
    null: [jd, r$]
  }, g$ = {
    null: [42, 95]
  }, y$ = {
    null: []
  };
  s(D$, "parse");
  s(x$, "postprocess");
  LC = /[\0\t\n\r]/g;
  s(b$, "preprocess");
  v$ = /\\([!-/:-@[-`{-~])|&(#(?:\d{1,7}|x[\da-f]{1,6})|[\da-z]{1,31});/gi;
  s(E$, "decodeString");
  s(C$, "decode");
  Bw = {}.hasOwnProperty;
  s(w$, "fromMarkdown");
  s(S$, "compiler");
  s(Wn, "point2");
  s(Ow, "configure");
  s(A$, "extension");
  s(jC, "defaultOnError");
  s(F$, "remarkParse");
  s(_$, "blockquote");
  s(k$, "hardBreak");
  s(T$, "code");
  s(I$, "strikethrough");
  s(P$, "emphasis");
  s(B$, "footnoteReference");
  s(O$, "heading");
  s(R$, "html");
  s(Rw, "revert");
  s(N$, "imageReference");
  s(L$, "image");
  s(j$, "inlineCode");
  s(M$, "linkReference");
  s(q$, "link");
  s($$, "listItem");
  s(V$, "listLoose");
  s(Nw, "listItemLoose");
  s(U$, "list2");
  s(W$, "paragraph");
  s(z$, "root");
  s(H$, "strong");
  s(G$, "table");
  s(J$, "tableRow");
  s(Z$, "tableCell");
  MC = 9, qC = 32;
  s(X$, "trimLines");
  s($C, "trimLine");
  s(K$, "text3");
  s(Y$, "thematicBreak2");
  Q$ = {
    blockquote: _$,
    break: k$,
    code: T$,
    delete: I$,
    emphasis: P$,
    footnoteReference: B$,
    heading: O$,
    html: R$,
    imageReference: N$,
    image: L$,
    inlineCode: j$,
    linkReference: M$,
    link: q$,
    listItem: $$,
    list: U$,
    paragraph: W$,
    // @ts-expect-error: root is different, but hard to type.
    root: z$,
    strong: H$,
    table: G$,
    tableCell: Z$,
    tableRow: J$,
    text: K$,
    thematicBreak: Y$,
    toml: il,
    yaml: il,
    definition: il,
    footnoteDefinition: il
  };
  s(il, "ignore");
  Lw = -1, ml = 0, pl = 1, hl = 2, Wd = 3, zd = 4, Hd = 5, Gd = 6, jw = 7, Mw = 8, VC = typeof self == "object" ? self : globalThis, eV = /* @__PURE__ */ s(
  (e, t) => {
    let r = /* @__PURE__ */ s((i, o) => (e.set(o, i), i), "as"), n = /* @__PURE__ */ s((i) => {
      if (e.has(i))
        return e.get(i);
      let [o, a] = t[i];
      switch (o) {
        case ml:
        case Lw:
          return r(a, i);
        case pl: {
          let u = r([], i);
          for (let l of a)
            u.push(n(l));
          return u;
        }
        case hl: {
          let u = r({}, i);
          for (let [l, c] of a)
            u[n(l)] = n(c);
          return u;
        }
        case Wd:
          return r(new Date(a), i);
        case zd: {
          let { source: u, flags: l } = a;
          return r(new RegExp(u, l), i);
        }
        case Hd: {
          let u = r(/* @__PURE__ */ new Map(), i);
          for (let [l, c] of a)
            u.set(n(l), n(c));
          return u;
        }
        case Gd: {
          let u = r(/* @__PURE__ */ new Set(), i);
          for (let l of a)
            u.add(n(l));
          return u;
        }
        case jw: {
          let { name: u, message: l } = a;
          return r(new VC[u](l), i);
        }
        case Mw:
          return r(BigInt(a), i);
        case "BigInt":
          return r(Object(BigInt(a)), i);
      }
      return r(new VC[o](a), i);
    }, "unpair");
    return n;
  }, "deserializer"), UC = /* @__PURE__ */ s((e) => eV(/* @__PURE__ */ new Map(), e)(0), "deserialize"), ws = "", { toString: tV } = {}, { keys: rV } =
  Object, Wo = /* @__PURE__ */ s((e) => {
    let t = typeof e;
    if (t !== "object" || !e)
      return [ml, t];
    let r = tV.call(e).slice(8, -1);
    switch (r) {
      case "Array":
        return [pl, ws];
      case "Object":
        return [hl, ws];
      case "Date":
        return [Wd, ws];
      case "RegExp":
        return [zd, ws];
      case "Map":
        return [Hd, ws];
      case "Set":
        return [Gd, ws];
    }
    return r.includes("Array") ? [pl, r] : r.includes("Error") ? [jw, r] : [hl, r];
  }, "typeOf"), sl = /* @__PURE__ */ s(([e, t]) => e === ml && (t === "function" || t === "symbol"), "shouldSkip"), nV = /* @__PURE__ */ s((e, t, r, n) => {
    let i = /* @__PURE__ */ s((a, u) => {
      let l = n.push(a) - 1;
      return r.set(u, l), l;
    }, "as"), o = /* @__PURE__ */ s((a) => {
      if (r.has(a))
        return r.get(a);
      let [u, l] = Wo(a);
      switch (u) {
        case ml: {
          let p = a;
          switch (l) {
            case "bigint":
              u = Mw, p = a.toString();
              break;
            case "function":
            case "symbol":
              if (e)
                throw new TypeError("unable to serialize " + l);
              p = null;
              break;
            case "undefined":
              return i([Lw], a);
          }
          return i([u, p], a);
        }
        case pl: {
          if (l)
            return i([l, [...a]], a);
          let p = [], h = i([u, p], a);
          for (let f of a)
            p.push(o(f));
          return h;
        }
        case hl: {
          if (l)
            switch (l) {
              case "BigInt":
                return i([l, a.toString()], a);
              case "Boolean":
              case "Number":
              case "String":
                return i([l, a.valueOf()], a);
            }
          if (t && "toJSON" in a)
            return o(a.toJSON());
          let p = [], h = i([u, p], a);
          for (let f of rV(a))
            (e || !sl(Wo(a[f]))) && p.push([o(f), o(a[f])]);
          return h;
        }
        case Wd:
          return i([u, a.toISOString()], a);
        case zd: {
          let { source: p, flags: h } = a;
          return i([u, { source: p, flags: h }], a);
        }
        case Hd: {
          let p = [], h = i([u, p], a);
          for (let [f, d] of a)
            (e || !(sl(Wo(f)) || sl(Wo(d)))) && p.push([o(f), o(d)]);
          return h;
        }
        case Gd: {
          let p = [], h = i([u, p], a);
          for (let f of a)
            (e || !sl(Wo(f))) && p.push(o(f));
          return h;
        }
      }
      let { message: c } = a;
      return i([u, { name: l, message: c }], a);
    }, "pair");
    return o;
  }, "serializer"), WC = /* @__PURE__ */ s((e, { json: t, lossy: r } = {}) => {
    let n = [];
    return nV(!(t || r), !!t, /* @__PURE__ */ new Map(), n)(e), n;
  }, "serialize"), fl = typeof structuredClone == "function" ? (
    /* c8 ignore start */
    (e, t) => t && ("json" in t || "lossy" in t) ? UC(WC(e, t)) : structuredClone(e)
  ) : (e, t) => UC(WC(e, t));
  s(iV, "defaultFootnoteBackContent");
  s(sV, "defaultFootnoteBackLabel");
  s(oV, "footer");
  qw = // Note: overloads in JSDoc can’t yet use different `@template`s.
  /**
   * @type {(
   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &
   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &
   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &
   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &
   *   ((test?: Test) => Check)
   * )}
   */
  /**
   * @param {Test} [test]
   * @returns {Check}
   */
  /* @__PURE__ */ s(function(e) {
    if (e == null)
      return cV;
    if (typeof e == "function")
      return gl(e);
    if (typeof e == "object")
      return Array.isArray(e) ? aV(e) : uV(e);
    if (typeof e == "string")
      return lV(e);
    throw new Error("Expected function, string, or object as test");
  }, "convert");
  s(aV, "anyFactory");
  s(uV, "propsFactory");
  s(lV, "typeFactory");
  s(gl, "castFactory");
  s(cV, "ok2");
  s(pV, "looksLikeANode");
  s(hV, "color2");
  $w = [], fV = !0, zC = !1, dV = "skip";
  s(mV, "visitParents");
  s(gV, "toResult2");
  s(Jd, "visit2");
  Md = {}.hasOwnProperty, yV = {};
  s(DV, "createState");
  s(xV, "patch");
  s(bV, "applyData");
  s(vV, "defaultUnknownHandler");
  s(EV, "wrap");
  s(HC, "trimMarkdownSpaceStart");
  s(GC, "toHast");
  s(CV, "remarkRehype");
  s(JC, "bail");
  _d = zu(yj(), 1);
  s(qd, "isPlainObject");
  s(wV, "trough");
  s(SV, "wrap2");
  AV = /**
   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}
   */
  /** @type {unknown} */
  /**
   * @this {Function}
   * @param {string | symbol} property
   * @returns {(...parameters: Array<unknown>) => unknown}
   */
  /* @__PURE__ */ s(function(e) {
    let n = (
      /** @type {Record<string | symbol, Function>} */
      // Prototypes do exist.
      // type-coverage:ignore-next-line
      this.constructor.prototype
    ), i = n[e], o = /* @__PURE__ */ s(function() {
      return i.apply(o, arguments);
    }, "apply");
    Object.setPrototypeOf(o, n);
    let a = Object.getOwnPropertyNames(i);
    for (let u of a) {
      let l = Object.getOwnPropertyDescriptor(i, u);
      l && Object.defineProperty(o, u, l);
    }
    return o;
  }, "CallableInstance"), FV = {}.hasOwnProperty, Vw = class extends AV {
    static {
      s(this, "Processor");
    }
    /**
     * Create a processor.
     */
    constructor() {
      super("copy"), this.Compiler = void 0, this.Parser = void 0, this.attachers = [], this.compiler = void 0, this.freezeIndex = -1, this.
      frozen = void 0, this.namespace = {}, this.parser = void 0, this.transformers = wV();
    }
    /**
     * Copy a processor.
     *
     * @deprecated
     *   This is a private internal method and should not be used.
     * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
     *   New *unfrozen* processor ({@link Processor `Processor`}) that is
     *   configured to work the same as its ancestor.
     *   When the descendant processor is configured in the future it does not
     *   affect the ancestral processor.
     */
    copy() {
      let e = (
        /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */
        new Vw()
      ), t = -1;
      for (; ++t < this.attachers.length; ) {
        let r = this.attachers[t];
        e.use(...r);
      }
      return e.data((0, _d.default)(!0, {}, this.namespace)), e;
    }
    /**
     * Configure the processor with info available to all plugins.
     * Information is stored in an object.
     *
     * Typically, options can be given to a specific plugin, but sometimes it
     * makes sense to have information shared with several plugins.
     * For example, a list of HTML elements that are self-closing, which is
     * needed during all phases.
     *
     * > 👉 **Note**: setting information cannot occur on *frozen* processors.
     * > Call the processor first to create a new unfrozen processor.
     *
     * > 👉 **Note**: to register custom data in TypeScript, augment the
     * > {@link Data `Data`} interface.
     *
     * @example
     *   This example show how to get and set info:
     *
     *   ```js
     *   import {unified} from 'unified'
     *
     *   const processor = unified().data('alpha', 'bravo')
     *
     *   processor.data('alpha') // => 'bravo'
     *
     *   processor.data() // => {alpha: 'bravo'}
     *
     *   processor.data({charlie: 'delta'})
     *
     *   processor.data() // => {charlie: 'delta'}
     *   ```
     *
     * @template {keyof Data} Key
     *
     * @overload
     * @returns {Data}
     *
     * @overload
     * @param {Data} dataset
     * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
     *
     * @overload
     * @param {Key} key
     * @returns {Data[Key]}
     *
     * @overload
     * @param {Key} key
     * @param {Data[Key]} value
     * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
     *
     * @param {Data | Key} [key]
     *   Key to get or set, or entire dataset to set, or nothing to get the
     *   entire dataset (optional).
     * @param {Data[Key]} [value]
     *   Value to set (optional).
     * @returns {unknown}
     *   The current processor when setting, the value at `key` when getting, or
     *   the entire dataset when getting without key.
     */
    data(e, t) {
      return typeof e == "string" ? arguments.length === 2 ? (Id("data", this.frozen), this.namespace[e] = t, this) : FV.call(this.namespace,
      e) && this.namespace[e] || void 0 : e ? (Id("data", this.frozen), this.namespace = e, this) : this.namespace;
    }
    /**
     * Freeze a processor.
     *
     * Frozen processors are meant to be extended and not to be configured
     * directly.
     *
     * When a processor is frozen it cannot be unfrozen.
     * New processors working the same way can be created by calling the
     * processor.
     *
     * It’s possible to freeze processors explicitly by calling `.freeze()`.
     * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,
     * `.stringify()`, `.process()`, or `.processSync()` are called.
     *
     * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
     *   The current processor.
     */
    freeze() {
      if (this.frozen)
        return this;
      let e = (
        /** @type {Processor} */
        /** @type {unknown} */
        this
      );
      for (; ++this.freezeIndex < this.attachers.length; ) {
        let [t, ...r] = this.attachers[this.freezeIndex];
        if (r[0] === !1)
          continue;
        r[0] === !0 && (r[0] = void 0);
        let n = t.call(e, ...r);
        typeof n == "function" && this.transformers.use(n);
      }
      return this.frozen = !0, this.freezeIndex = Number.POSITIVE_INFINITY, this;
    }
    /**
     * Parse text to a syntax tree.
     *
     * > 👉 **Note**: `parse` freezes the processor if not already *frozen*.
     *
     * > 👉 **Note**: `parse` performs the parse phase, not the run phase or other
     * > phases.
     *
     * @param {Compatible | undefined} [file]
     *   file to parse (optional); typically `string` or `VFile`; any value
     *   accepted as `x` in `new VFile(x)`.
     * @returns {ParseTree extends undefined ? Node : ParseTree}
     *   Syntax tree representing `file`.
     */
    parse(e) {
      this.freeze();
      let t = ol(e), r = this.parser || this.Parser;
      return kd("parse", r), r(String(t), t);
    }
    /**
     * Process the given file as configured on the processor.
     *
     * > 👉 **Note**: `process` freezes the processor if not already *frozen*.
     *
     * > 👉 **Note**: `process` performs the parse, run, and stringify phases.
     *
     * @overload
     * @param {Compatible | undefined} file
     * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done
     * @returns {undefined}
     *
     * @overload
     * @param {Compatible | undefined} [file]
     * @returns {Promise<VFileWithOutput<CompileResult>>}
     *
     * @param {Compatible | undefined} [file]
     *   File (optional); typically `string` or `VFile`]; any value accepted as
     *   `x` in `new VFile(x)`.
     * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]
     *   Callback (optional).
     * @returns {Promise<VFile> | undefined}
     *   Nothing if `done` is given.
     *   Otherwise a promise, rejected with a fatal error or resolved with the
     *   processed file.
     *
     *   The parsed, transformed, and compiled value is available at
     *   `file.value` (see note).
     *
     *   > 👉 **Note**: unified typically compiles by serializing: most
     *   > compilers return `string` (or `Uint8Array`).
     *   > Some compilers, such as the one configured with
     *   > [`rehype-react`][rehype-react], return other values (in this case, a
     *   > React tree).
     *   > If you’re using a compiler that doesn’t serialize, expect different
     *   > result values.
     *   >
     *   > To register custom results in TypeScript, add them to
     *   > {@link CompileResultMap `CompileResultMap`}.
     *
     *   [rehype-react]: https://github.com/rehypejs/rehype-react
     */
    process(e, t) {
      let r = this;
      return this.freeze(), kd("process", this.parser || this.Parser), Td("process", this.compiler || this.Compiler), t ? n(void 0, t) : new Promise(
      n);
      function n(i, o) {
        let a = ol(e), u = (
          /** @type {HeadTree extends undefined ? Node : HeadTree} */
          /** @type {unknown} */
          r.parse(a)
        );
        r.run(u, a, function(c, p, h) {
          if (c || !p || !h)
            return l(c);
          let f = (
            /** @type {CompileTree extends undefined ? Node : CompileTree} */
            /** @type {unknown} */
            p
          ), d = r.stringify(f, h);
          TV(d) ? h.value = d : h.result = d, l(
            c,
            /** @type {VFileWithOutput<CompileResult>} */
            h
          );
        });
        function l(c, p) {
          c || !p ? o(c) : i ? i(p) : t(void 0, p);
        }
        s(l, "realDone");
      }
      s(n, "executor");
    }
    /**
     * Process the given file as configured on the processor.
     *
     * An error is thrown if asynchronous transforms are configured.
     *
     * > 👉 **Note**: `processSync` freezes the processor if not already *frozen*.
     *
     * > 👉 **Note**: `processSync` performs the parse, run, and stringify phases.
     *
     * @param {Compatible | undefined} [file]
     *   File (optional); typically `string` or `VFile`; any value accepted as
     *   `x` in `new VFile(x)`.
     * @returns {VFileWithOutput<CompileResult>}
     *   The processed file.
     *
     *   The parsed, transformed, and compiled value is available at
     *   `file.value` (see note).
     *
     *   > 👉 **Note**: unified typically compiles by serializing: most
     *   > compilers return `string` (or `Uint8Array`).
     *   > Some compilers, such as the one configured with
     *   > [`rehype-react`][rehype-react], return other values (in this case, a
     *   > React tree).
     *   > If you’re using a compiler that doesn’t serialize, expect different
     *   > result values.
     *   >
     *   > To register custom results in TypeScript, add them to
     *   > {@link CompileResultMap `CompileResultMap`}.
     *
     *   [rehype-react]: https://github.com/rehypejs/rehype-react
     */
    processSync(e) {
      let t = !1, r;
      return this.freeze(), kd("processSync", this.parser || this.Parser), Td("processSync", this.compiler || this.Compiler), this.process(e,
      n), XC("processSync", "process", t), r;
      function n(i, o) {
        t = !0, JC(i), r = o;
      }
      s(n, "realDone");
    }
    /**
     * Run *transformers* on a syntax tree.
     *
     * > 👉 **Note**: `run` freezes the processor if not already *frozen*.
     *
     * > 👉 **Note**: `run` performs the run phase, not other phases.
     *
     * @overload
     * @param {HeadTree extends undefined ? Node : HeadTree} tree
     * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done
     * @returns {undefined}
     *
     * @overload
     * @param {HeadTree extends undefined ? Node : HeadTree} tree
     * @param {Compatible | undefined} file
     * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done
     * @returns {undefined}
     *
     * @overload
     * @param {HeadTree extends undefined ? Node : HeadTree} tree
     * @param {Compatible | undefined} [file]
     * @returns {Promise<TailTree extends undefined ? Node : TailTree>}
     *
     * @param {HeadTree extends undefined ? Node : HeadTree} tree
     *   Tree to transform and inspect.
     * @param {(
     *   RunCallback<TailTree extends undefined ? Node : TailTree> |
     *   Compatible
     * )} [file]
     *   File associated with `node` (optional); any value accepted as `x` in
     *   `new VFile(x)`.
     * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]
     *   Callback (optional).
     * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}
     *   Nothing if `done` is given.
     *   Otherwise, a promise rejected with a fatal error or resolved with the
     *   transformed tree.
     */
    run(e, t, r) {
      ZC(e), this.freeze();
      let n = this.transformers;
      return !r && typeof t == "function" && (r = t, t = void 0), r ? i(void 0, r) : new Promise(i);
      function i(o, a) {
        let u = ol(t);
        n.run(e, u, l);
        function l(c, p, h) {
          let f = (
            /** @type {TailTree extends undefined ? Node : TailTree} */
            p || e
          );
          c ? a(c) : o ? o(f) : r(void 0, f, h);
        }
        s(l, "realDone");
      }
      s(i, "executor");
    }
    /**
     * Run *transformers* on a syntax tree.
     *
     * An error is thrown if asynchronous transforms are configured.
     *
     * > 👉 **Note**: `runSync` freezes the processor if not already *frozen*.
     *
     * > 👉 **Note**: `runSync` performs the run phase, not other phases.
     *
     * @param {HeadTree extends undefined ? Node : HeadTree} tree
     *   Tree to transform and inspect.
     * @param {Compatible | undefined} [file]
     *   File associated with `node` (optional); any value accepted as `x` in
     *   `new VFile(x)`.
     * @returns {TailTree extends undefined ? Node : TailTree}
     *   Transformed tree.
     */
    runSync(e, t) {
      let r = !1, n;
      return this.run(e, t, i), XC("runSync", "run", r), n;
      function i(o, a) {
        JC(o), n = a, r = !0;
      }
      s(i, "realDone");
    }
    /**
     * Compile a syntax tree.
     *
     * > 👉 **Note**: `stringify` freezes the processor if not already *frozen*.
     *
     * > 👉 **Note**: `stringify` performs the stringify phase, not the run phase
     * > or other phases.
     *
     * @param {CompileTree extends undefined ? Node : CompileTree} tree
     *   Tree to compile.
     * @param {Compatible | undefined} [file]
     *   File associated with `node` (optional); any value accepted as `x` in
     *   `new VFile(x)`.
     * @returns {CompileResult extends undefined ? Value : CompileResult}
     *   Textual representation of the tree (see note).
     *
     *   > 👉 **Note**: unified typically compiles by serializing: most compilers
     *   > return `string` (or `Uint8Array`).
     *   > Some compilers, such as the one configured with
     *   > [`rehype-react`][rehype-react], return other values (in this case, a
     *   > React tree).
     *   > If you’re using a compiler that doesn’t serialize, expect different
     *   > result values.
     *   >
     *   > To register custom results in TypeScript, add them to
     *   > {@link CompileResultMap `CompileResultMap`}.
     *
     *   [rehype-react]: https://github.com/rehypejs/rehype-react
     */
    stringify(e, t) {
      this.freeze();
      let r = ol(t), n = this.compiler || this.Compiler;
      return Td("stringify", n), ZC(e), n(e, r);
    }
    /**
     * Configure the processor to use a plugin, a list of usable values, or a
     * preset.
     *
     * If the processor is already using a plugin, the previous plugin
     * configuration is changed based on the options that are passed in.
     * In other words, the plugin is not added a second time.
     *
     * > 👉 **Note**: `use` cannot be called on *frozen* processors.
     * > Call the processor first to create a new unfrozen processor.
     *
     * @example
     *   There are many ways to pass plugins to `.use()`.
     *   This example gives an overview:
     *
     *   ```js
     *   import {unified} from 'unified'
     *
     *   unified()
     *     // Plugin with options:
     *     .use(pluginA, {x: true, y: true})
     *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):
     *     .use(pluginA, {y: false, z: true})
     *     // Plugins:
     *     .use([pluginB, pluginC])
     *     // Two plugins, the second with options:
     *     .use([pluginD, [pluginE, {}]])
     *     // Preset with plugins and settings:
     *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})
     *     // Settings only:
     *     .use({settings: {position: false}})
     *   ```
     *
     * @template {Array<unknown>} [Parameters=[]]
     * @template {Node | string | undefined} [Input=undefined]
     * @template [Output=Input]
     *
     * @overload
     * @param {Preset | null | undefined} [preset]
     * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
     *
     * @overload
     * @param {PluggableList} list
     * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
     *
     * @overload
     * @param {Plugin<Parameters, Input, Output>} plugin
     * @param {...(Parameters | [boolean])} parameters
     * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}
     *
     * @param {PluggableList | Plugin | Preset | null | undefined} value
     *   Usable value.
     * @param {...unknown} parameters
     *   Parameters, when a plugin is given as a usable value.
     * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}
     *   Current processor.
     */
    use(e, ...t) {
      let r = this.attachers, n = this.namespace;
      if (Id("use", this.frozen), e != null)
        if (typeof e == "function")
          u(e, t);
        else if (typeof e == "object")
          Array.isArray(e) ? a(e) : o(e);
        else
          throw new TypeError("Expected usable value, not `" + e + "`");
      return this;
      function i(l) {
        if (typeof l == "function")
          u(l, []);
        else if (typeof l == "object")
          if (Array.isArray(l)) {
            let [c, ...p] = (
              /** @type {PluginTuple<Array<unknown>>} */
              l
            );
            u(c, p);
          } else
            o(l);
        else
          throw new TypeError("Expected usable value, not `" + l + "`");
      }
      function o(l) {
        if (!("plugins" in l) && !("settings" in l))
          throw new Error(
            "Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and some\
times with `settings`, but this has neither"
          );
        a(l.plugins), l.settings && (n.settings = (0, _d.default)(!0, n.settings, l.settings));
      }
      function a(l) {
        let c = -1;
        if (l != null)
          if (Array.isArray(l))
            for (; ++c < l.length; ) {
              let p = l[c];
              i(p);
            }
          else
            throw new TypeError("Expected a list of plugins, not `" + l + "`");
      }
      function u(l, c) {
        let p = -1, h = -1;
        for (; ++p < r.length; )
          if (r[p][0] === l) {
            h = p;
            break;
          }
        if (h === -1)
          r.push([l, ...c]);
        else if (c.length > 0) {
          let [f, ...d] = c, m = r[h][1];
          qd(m) && qd(f) && (f = (0, _d.default)(!0, m, f)), r[h] = [l, f, ...d];
        }
      }
    }
  }, _V = new Vw().freeze();
  s(kd, "assertParser");
  s(Td, "assertCompiler");
  s(Id, "assertUnfrozen");
  s(ZC, "assertNode");
  s(XC, "assertDone");
  s(ol, "vfile");
  s(kV, "looksLikeAVFile2");
  s(TV, "looksLikeAValue");
  s(IV, "isUint8Array2");
  PV = class {
    static {
      s(this, "WalkerBase");
    }
    constructor() {
      this.should_skip = !1, this.should_remove = !1, this.replacement = null, this.context = {
        skip: /* @__PURE__ */ s(() => this.should_skip = !0, "skip"),
        remove: /* @__PURE__ */ s(() => this.should_remove = !0, "remove"),
        replace: /* @__PURE__ */ s((e) => this.replacement = e, "replace")
      };
    }
    /**
     * @template {Node} Parent
     * @param {Parent | null | undefined} parent
     * @param {keyof Parent | null | undefined} prop
     * @param {number | null | undefined} index
     * @param {Node} node
     */
    replace(e, t, r, n) {
      e && t && (r != null ? e[t][r] = n : e[t] = n);
    }
    /**
     * @template {Node} Parent
     * @param {Parent | null | undefined} parent
     * @param {keyof Parent | null | undefined} prop
     * @param {number | null | undefined} index
     */
    remove(e, t, r) {
      e && t && (r != null ? e[t].splice(r, 1) : delete e[t]);
    }
  }, BV = class extends PV {
    static {
      s(this, "SyncWalker");
    }
    /**
     *
     * @param {SyncHandler} [enter]
     * @param {SyncHandler} [leave]
     */
    constructor(e, t) {
      super(), this.should_skip = !1, this.should_remove = !1, this.replacement = null, this.context = {
        skip: /* @__PURE__ */ s(() => this.should_skip = !0, "skip"),
        remove: /* @__PURE__ */ s(() => this.should_remove = !0, "remove"),
        replace: /* @__PURE__ */ s((r) => this.replacement = r, "replace")
      }, this.enter = e, this.leave = t;
    }
    /**
     * @template {Node} Parent
     * @param {Node} node
     * @param {Parent | null} parent
     * @param {keyof Parent} [prop]
     * @param {number | null} [index]
     * @returns {Node | null}
     */
    visit(e, t, r, n) {
      if (e) {
        if (this.enter) {
          let o = this.should_skip, a = this.should_remove, u = this.replacement;
          this.should_skip = !1, this.should_remove = !1, this.replacement = null, this.enter.call(this.context, e, t, r, n), this.replacement &&
          (e = this.replacement, this.replace(t, r, n, e)), this.should_remove && this.remove(t, r, n);
          let l = this.should_skip, c = this.should_remove;
          if (this.should_skip = o, this.should_remove = a, this.replacement = u, l)
            return e;
          if (c)
            return null;
        }
        let i;
        for (i in e) {
          let o = e[i];
          if (o && typeof o == "object")
            if (Array.isArray(o)) {
              let a = (
                /** @type {Array<unknown>} */
                o
              );
              for (let u = 0; u < a.length; u += 1) {
                let l = a[u];
                KC(l) && (this.visit(l, e, i, u) || u--);
              }
            } else KC(o) && this.visit(o, e, i, null);
        }
        if (this.leave) {
          let o = this.replacement, a = this.should_remove;
          this.replacement = null, this.should_remove = !1, this.leave.call(this.context, e, t, r, n), this.replacement && (e = this.replacement,
          this.replace(t, r, n, e)), this.should_remove && this.remove(t, r, n);
          let u = this.should_remove;
          if (this.replacement = o, this.should_remove = a, u)
            return null;
        }
      }
      return e;
    }
  };
  s(KC, "isNode");
  s(Jo, "walk");
  s(Uw, "is_reference");
  s(Ww, "analyze");
  s(zw, "add_reference");
  Ss = class {
    static {
      s(this, "Scope");
    }
    /**
     * @param {Scope | null} parent 
     * @param {boolean} block 
     */
    constructor(e, t) {
      this.parent = e, this.block = t, this.declarations = /* @__PURE__ */ new Map(), this.initialised_declarations = /* @__PURE__ */ new Set(),
      this.references = /* @__PURE__ */ new Set();
    }
    /**
     * @param {import('estree').VariableDeclaration | import('estree').ClassDeclaration} node
     */
    add_declaration(e) {
      if (e.type === "VariableDeclaration")
        if (e.kind === "var" && this.block && this.parent)
          this.parent.add_declaration(e);
        else {
          let t = /* @__PURE__ */ s((r) => {
            $d(r.id).forEach((n) => {
              this.declarations.set(n, e), r.init && this.initialised_declarations.add(n);
            });
          }, "handle_declarator");
          e.declarations.forEach(t);
        }
      else e.id && this.declarations.set(e.id.name, e);
    }
    /**
     * @param {string} name
     * @returns {Scope | null}
     */
    find_owner(e) {
      return this.declarations.has(e) ? this : this.parent && this.parent.find_owner(e);
    }
    /**
     * @param {string} name
     * @returns {boolean}
     */
    has(e) {
      return this.declarations.has(e) || !!this.parent && this.parent.has(e);
    }
  };
  s($d, "extract_names");
  s(_s, "extract_identifiers");
  s(zn, "create");
  s(OV, "declarationToExpression");
  s(RV, "isDeclaration");
  s(Zd, "specifiersToDeclarations");
  s(Hn, "toIdOrMemberExpression");
  s(YC, "toJsxIdOrMemberExpression");
  s(NV, "recmaDocument");
  s(LV, "resolveDynamicMdxSpecifier");
  s(jV, "createImportMetaUrlVariable");
  Pd = /@(jsx|jsxFrag|jsxImportSource|jsxRuntime)\s+(\S+)/g;
  s(MV, "buildJsx");
  s(qV, "toProperty");
  s(dl, "toIdentifier");
  s(QC, "toMemberExpression");
  s(Ho, "create2");
  s($V, "recmaJsxBuild");
  s(ew, "toBinaryAddition");
  s(VV, "recmaJsxRewrite");
  s(UV, "createImportProvider");
  s(As, "isNamedFunction");
  s(Bd, "inScope");
  ({ stringify: WV } = JSON);
  if (!String.prototype.repeat)
    throw new Error(
      "String.prototype.repeat is undefined, see https://github.com/davidbonnet/astring#installation"
    );
  if (!String.prototype.endsWith)
    throw new Error(
      "String.prototype.endsWith is undefined, see https://github.com/davidbonnet/astring#installation"
    );
  al = {
    "||": 2,
    "??": 3,
    "&&": 4,
    "|": 5,
    "^": 6,
    "&": 7,
    "==": 8,
    "!=": 8,
    "===": 8,
    "!==": 8,
    "<": 9,
    ">": 9,
    "<=": 9,
    ">=": 9,
    in: 9,
    instanceof: 9,
    "<<": 10,
    ">>": 10,
    ">>>": 10,
    "+": 11,
    "-": 11,
    "*": 12,
    "%": 12,
    "/": 12,
    "**": 13
  }, Br = 17, zV = {
    // Definitions
    ArrayExpression: 20,
    TaggedTemplateExpression: 20,
    ThisExpression: 20,
    Identifier: 20,
    PrivateIdentifier: 20,
    Literal: 18,
    TemplateLiteral: 20,
    Super: 20,
    SequenceExpression: 20,
    // Operations
    MemberExpression: 19,
    ChainExpression: 19,
    CallExpression: 19,
    NewExpression: 19,
    // Other definitions
    ArrowFunctionExpression: Br,
    ClassExpression: Br,
    FunctionExpression: Br,
    ObjectExpression: Br,
    // Other operations
    UpdateExpression: 16,
    UnaryExpression: 15,
    AwaitExpression: 15,
    BinaryExpression: 14,
    LogicalExpression: 13,
    ConditionalExpression: 4,
    AssignmentExpression: 3,
    YieldExpression: 2,
    RestElement: 1
  };
  s(Fs, "formatSequence");
  s(Hw, "expressionNeedsParenthesis");
  s(ul, "formatExpression");
  s(HV, "reindent");
  s(Bt, "formatComments");
  s(GV, "hasCallExpression");
  s(Od, "formatVariableDeclaration");
  Gw = {
    /*
    Default generator.
    */
    Program(e, t) {
      let r = t.indent.repeat(t.indentLevel), { lineEnd: n, writeComments: i } = t;
      i && e.comments != null && Bt(t, e.comments, r, n);
      let o = e.body, { length: a } = o;
      for (let u = 0; u < a; u++) {
        let l = o[u];
        i && l.comments != null && Bt(t, l.comments, r, n), t.write(r), this[l.type](l, t), t.write(n);
      }
      i && e.trailingComments != null && Bt(t, e.trailingComments, r, n);
    },
    BlockStatement: ow = /* @__PURE__ */ s(function(e, t) {
      let r = t.indent.repeat(t.indentLevel++), { lineEnd: n, writeComments: i } = t, o = r + t.indent;
      t.write("{");
      let a = e.body;
      if (a != null && a.length > 0) {
        t.write(n), i && e.comments != null && Bt(t, e.comments, o, n);
        let { length: u } = a;
        for (let l = 0; l < u; l++) {
          let c = a[l];
          i && c.comments != null && Bt(t, c.comments, o, n), t.write(o), this[c.type](c, t), t.write(n);
        }
        t.write(r);
      } else
        i && e.comments != null && (t.write(n), Bt(t, e.comments, o, n), t.write(r));
      i && e.trailingComments != null && Bt(t, e.trailingComments, o, n), t.write("}"), t.indentLevel--;
    }, "BlockStatement"),
    ClassBody: ow,
    StaticBlock(e, t) {
      t.write("static "), this.BlockStatement(e, t);
    },
    EmptyStatement(e, t) {
      t.write(";");
    },
    ExpressionStatement(e, t) {
      let r = t.expressionsPrecedence[e.expression.type];
      r === Br || r === 3 && e.expression.left.type[0] === "O" ? (t.write("("), this[e.expression.type](e.expression, t), t.write(")")) : this[e.
      expression.type](e.expression, t), t.write(";");
    },
    IfStatement(e, t) {
      t.write("if ("), this[e.test.type](e.test, t), t.write(") "), this[e.consequent.type](e.consequent, t), e.alternate != null && (t.write(
      " else "), this[e.alternate.type](e.alternate, t));
    },
    LabeledStatement(e, t) {
      this[e.label.type](e.label, t), t.write(": "), this[e.body.type](e.body, t);
    },
    BreakStatement(e, t) {
      t.write("break"), e.label != null && (t.write(" "), this[e.label.type](e.label, t)), t.write(";");
    },
    ContinueStatement(e, t) {
      t.write("continue"), e.label != null && (t.write(" "), this[e.label.type](e.label, t)), t.write(";");
    },
    WithStatement(e, t) {
      t.write("with ("), this[e.object.type](e.object, t), t.write(") "), this[e.body.type](e.body, t);
    },
    SwitchStatement(e, t) {
      let r = t.indent.repeat(t.indentLevel++), { lineEnd: n, writeComments: i } = t;
      t.indentLevel++;
      let o = r + t.indent, a = o + t.indent;
      t.write("switch ("), this[e.discriminant.type](e.discriminant, t), t.write(") {" + n);
      let { cases: u } = e, { length: l } = u;
      for (let c = 0; c < l; c++) {
        let p = u[c];
        i && p.comments != null && Bt(t, p.comments, o, n), p.test ? (t.write(o + "case "), this[p.test.type](p.test, t), t.write(":" + n)) :
        t.write(o + "default:" + n);
        let { consequent: h } = p, { length: f } = h;
        for (let d = 0; d < f; d++) {
          let m = h[d];
          i && m.comments != null && Bt(t, m.comments, a, n), t.write(a), this[m.type](m, t), t.write(n);
        }
      }
      t.indentLevel -= 2, t.write(r + "}");
    },
    ReturnStatement(e, t) {
      t.write("return"), e.argument && (t.write(" "), this[e.argument.type](e.argument, t)), t.write(";");
    },
    ThrowStatement(e, t) {
      t.write("throw "), this[e.argument.type](e.argument, t), t.write(";");
    },
    TryStatement(e, t) {
      if (t.write("try "), this[e.block.type](e.block, t), e.handler) {
        let { handler: r } = e;
        r.param == null ? t.write(" catch ") : (t.write(" catch ("), this[r.param.type](r.param, t), t.write(") ")), this[r.body.type](r.body,
        t);
      }
      e.finalizer && (t.write(" finally "), this[e.finalizer.type](e.finalizer, t));
    },
    WhileStatement(e, t) {
      t.write("while ("), this[e.test.type](e.test, t), t.write(") "), this[e.body.type](e.body, t);
    },
    DoWhileStatement(e, t) {
      t.write("do "), this[e.body.type](e.body, t), t.write(" while ("), this[e.test.type](e.test, t), t.write(");");
    },
    ForStatement(e, t) {
      if (t.write("for ("), e.init != null) {
        let { init: r } = e;
        r.type[0] === "V" ? Od(t, r) : this[r.type](r, t);
      }
      t.write("; "), e.test && this[e.test.type](e.test, t), t.write("; "), e.update && this[e.update.type](e.update, t), t.write(") "), this[e.
      body.type](e.body, t);
    },
    ForInStatement: tw = /* @__PURE__ */ s(function(e, t) {
      t.write(`for ${e.await ? "await " : ""}(`);
      let { left: r } = e;
      r.type[0] === "V" ? Od(t, r) : this[r.type](r, t), t.write(e.type[3] === "I" ? " in " : " of "), this[e.right.type](e.right, t), t.write(
      ") "), this[e.body.type](e.body, t);
    }, "ForInStatement"),
    ForOfStatement: tw,
    DebuggerStatement(e, t) {
      t.write("debugger;", e);
    },
    FunctionDeclaration: rw = /* @__PURE__ */ s(function(e, t) {
      t.write(
        (e.async ? "async " : "") + (e.generator ? "function* " : "function ") + (e.id ? e.id.name : ""),
        e
      ), Fs(t, e.params), t.write(" "), this[e.body.type](e.body, t);
    }, "FunctionDeclaration"),
    FunctionExpression: rw,
    VariableDeclaration(e, t) {
      Od(t, e), t.write(";");
    },
    VariableDeclarator(e, t) {
      this[e.id.type](e.id, t), e.init != null && (t.write(" = "), this[e.init.type](e.init, t));
    },
    ClassDeclaration(e, t) {
      if (t.write("class " + (e.id ? `${e.id.name} ` : ""), e), e.superClass) {
        t.write("extends ");
        let { superClass: r } = e, { type: n } = r, i = t.expressionsPrecedence[n];
        (n[0] !== "C" || n[1] !== "l" || n[5] !== "E") && (i === Br || i < t.expressionsPrecedence.ClassExpression) ? (t.write("("), this[e.
        superClass.type](r, t), t.write(")")) : this[r.type](r, t), t.write(" ");
      }
      this.ClassBody(e.body, t);
    },
    ImportDeclaration(e, t) {
      t.write("import ");
      let { specifiers: r } = e, { length: n } = r, i = 0;
      if (n > 0) {
        for (; i < n; ) {
          i > 0 && t.write(", ");
          let o = r[i], a = o.type[6];
          if (a === "D")
            t.write(o.local.name, o), i++;
          else if (a === "N")
            t.write("* as " + o.local.name, o), i++;
          else
            break;
        }
        if (i < n) {
          for (t.write("{"); ; ) {
            let o = r[i], { name: a } = o.imported;
            if (t.write(a, o), a !== o.local.name && t.write(" as " + o.local.name), ++i < n)
              t.write(", ");
            else
              break;
          }
          t.write("}");
        }
        t.write(" from ");
      }
      this.Literal(e.source, t), t.write(";");
    },
    ImportExpression(e, t) {
      t.write("import("), this[e.source.type](e.source, t), t.write(")");
    },
    ExportDefaultDeclaration(e, t) {
      t.write("export default "), this[e.declaration.type](e.declaration, t), t.expressionsPrecedence[e.declaration.type] != null && e.declaration.
      type[0] !== "F" && t.write(";");
    },
    ExportNamedDeclaration(e, t) {
      if (t.write("export "), e.declaration)
        this[e.declaration.type](e.declaration, t);
      else {
        t.write("{");
        let { specifiers: r } = e, { length: n } = r;
        if (n > 0)
          for (let i = 0; ; ) {
            let o = r[i], { name: a } = o.local;
            if (t.write(a, o), a !== o.exported.name && t.write(" as " + o.exported.name), ++i < n)
              t.write(", ");
            else
              break;
          }
        t.write("}"), e.source && (t.write(" from "), this.Literal(e.source, t)), t.write(";");
      }
    },
    ExportAllDeclaration(e, t) {
      e.exported != null ? t.write("export * as " + e.exported.name + " from ") : t.write("export * from "), this.Literal(e.source, t), t.write(
      ";");
    },
    MethodDefinition(e, t) {
      e.static && t.write("static ");
      let r = e.kind[0];
      (r === "g" || r === "s") && t.write(e.kind + " "), e.value.async && t.write("async "), e.value.generator && t.write("*"), e.computed ?
      (t.write("["), this[e.key.type](e.key, t), t.write("]")) : this[e.key.type](e.key, t), Fs(t, e.value.params), t.write(" "), this[e.value.
      body.type](e.value.body, t);
    },
    ClassExpression(e, t) {
      this.ClassDeclaration(e, t);
    },
    ArrowFunctionExpression(e, t) {
      t.write(e.async ? "async " : "", e);
      let { params: r } = e;
      r != null && (r.length === 1 && r[0].type[0] === "I" ? t.write(r[0].name, r[0]) : Fs(t, e.params)), t.write(" => "), e.body.type[0] ===
      "O" ? (t.write("("), this.ObjectExpression(e.body, t), t.write(")")) : this[e.body.type](e.body, t);
    },
    ThisExpression(e, t) {
      t.write("this", e);
    },
    Super(e, t) {
      t.write("super", e);
    },
    RestElement: nw = /* @__PURE__ */ s(function(e, t) {
      t.write("..."), this[e.argument.type](e.argument, t);
    }, "RestElement"),
    SpreadElement: nw,
    YieldExpression(e, t) {
      t.write(e.delegate ? "yield*" : "yield"), e.argument && (t.write(" "), this[e.argument.type](e.argument, t));
    },
    AwaitExpression(e, t) {
      t.write("await ", e), ul(t, e.argument, e);
    },
    TemplateLiteral(e, t) {
      let { quasis: r, expressions: n } = e;
      t.write("`");
      let { length: i } = n;
      for (let a = 0; a < i; a++) {
        let u = n[a], l = r[a];
        t.write(l.value.raw, l), t.write("${"), this[u.type](u, t), t.write("}");
      }
      let o = r[r.length - 1];
      t.write(o.value.raw, o), t.write("`");
    },
    TemplateElement(e, t) {
      t.write(e.value.raw, e);
    },
    TaggedTemplateExpression(e, t) {
      ul(t, e.tag, e), this[e.quasi.type](e.quasi, t);
    },
    ArrayExpression: sw = /* @__PURE__ */ s(function(e, t) {
      if (t.write("["), e.elements.length > 0) {
        let { elements: r } = e, { length: n } = r;
        for (let i = 0; ; ) {
          let o = r[i];
          if (o != null && this[o.type](o, t), ++i < n)
            t.write(", ");
          else {
            o == null && t.write(", ");
            break;
          }
        }
      }
      t.write("]");
    }, "ArrayExpression"),
    ArrayPattern: sw,
    ObjectExpression(e, t) {
      let r = t.indent.repeat(t.indentLevel++), { lineEnd: n, writeComments: i } = t, o = r + t.indent;
      if (t.write("{"), e.properties.length > 0) {
        t.write(n), i && e.comments != null && Bt(t, e.comments, o, n);
        let a = "," + n, { properties: u } = e, { length: l } = u;
        for (let c = 0; ; ) {
          let p = u[c];
          if (i && p.comments != null && Bt(t, p.comments, o, n), t.write(o), this[p.type](p, t), ++c < l)
            t.write(a);
          else
            break;
        }
        t.write(n), i && e.trailingComments != null && Bt(t, e.trailingComments, o, n), t.write(r + "}");
      } else i ? e.comments != null ? (t.write(n), Bt(t, e.comments, o, n), e.trailingComments != null && Bt(t, e.trailingComments, o, n), t.
      write(r + "}")) : e.trailingComments != null ? (t.write(n), Bt(t, e.trailingComments, o, n), t.write(r + "}")) : t.write("}") : t.write(
      "}");
      t.indentLevel--;
    },
    Property(e, t) {
      e.method || e.kind[0] !== "i" ? this.MethodDefinition(e, t) : (e.shorthand || (e.computed ? (t.write("["), this[e.key.type](e.key, t),
      t.write("]")) : this[e.key.type](e.key, t), t.write(": ")), this[e.value.type](e.value, t));
    },
    PropertyDefinition(e, t) {
      if (e.static && t.write("static "), e.computed && t.write("["), this[e.key.type](e.key, t), e.computed && t.write("]"), e.value == null) {
        e.key.type[0] !== "F" && t.write(";");
        return;
      }
      t.write(" = "), this[e.value.type](e.value, t), t.write(";");
    },
    ObjectPattern(e, t) {
      if (t.write("{"), e.properties.length > 0) {
        let { properties: r } = e, { length: n } = r;
        for (let i = 0; this[r[i].type](r[i], t), ++i < n; )
          t.write(", ");
      }
      t.write("}");
    },
    SequenceExpression(e, t) {
      Fs(t, e.expressions);
    },
    UnaryExpression(e, t) {
      if (e.prefix) {
        let {
          operator: r,
          argument: n,
          argument: { type: i }
        } = e;
        t.write(r);
        let o = Hw(t, n, e);
        !o && (r.length > 1 || i[0] === "U" && (i[1] === "n" || i[1] === "p") && n.prefix && n.operator[0] === r && (r === "+" || r === "-")) &&
        t.write(" "), o ? (t.write(r.length > 1 ? " (" : "("), this[i](n, t), t.write(")")) : this[i](n, t);
      } else
        this[e.argument.type](e.argument, t), t.write(e.operator);
    },
    UpdateExpression(e, t) {
      e.prefix ? (t.write(e.operator), this[e.argument.type](e.argument, t)) : (this[e.argument.type](e.argument, t), t.write(e.operator));
    },
    AssignmentExpression(e, t) {
      this[e.left.type](e.left, t), t.write(" " + e.operator + " "), this[e.right.type](e.right, t);
    },
    AssignmentPattern(e, t) {
      this[e.left.type](e.left, t), t.write(" = "), this[e.right.type](e.right, t);
    },
    BinaryExpression: iw = /* @__PURE__ */ s(function(e, t) {
      let r = e.operator === "in";
      r && t.write("("), ul(t, e.left, e, !1), t.write(" " + e.operator + " "), ul(t, e.right, e, !0), r && t.write(")");
    }, "BinaryExpression"),
    LogicalExpression: iw,
    ConditionalExpression(e, t) {
      let { test: r } = e, n = t.expressionsPrecedence[r.type];
      n === Br || n <= t.expressionsPrecedence.ConditionalExpression ? (t.write("("), this[r.type](r, t), t.write(")")) : this[r.type](r, t),
      t.write(" ? "), this[e.consequent.type](e.consequent, t), t.write(" : "), this[e.alternate.type](e.alternate, t);
    },
    NewExpression(e, t) {
      t.write("new ");
      let r = t.expressionsPrecedence[e.callee.type];
      r === Br || r < t.expressionsPrecedence.CallExpression || GV(e.callee) ? (t.write("("), this[e.callee.type](e.callee, t), t.write(")")) :
      this[e.callee.type](e.callee, t), Fs(t, e.arguments);
    },
    CallExpression(e, t) {
      let r = t.expressionsPrecedence[e.callee.type];
      r === Br || r < t.expressionsPrecedence.CallExpression ? (t.write("("), this[e.callee.type](e.callee, t), t.write(")")) : this[e.callee.
      type](e.callee, t), e.optional && t.write("?."), Fs(t, e.arguments);
    },
    ChainExpression(e, t) {
      this[e.expression.type](e.expression, t);
    },
    MemberExpression(e, t) {
      let r = t.expressionsPrecedence[e.object.type];
      r === Br || r < t.expressionsPrecedence.MemberExpression ? (t.write("("), this[e.object.type](e.object, t), t.write(")")) : this[e.object.
      type](e.object, t), e.computed ? (e.optional && t.write("?."), t.write("["), this[e.property.type](e.property, t), t.write("]")) : (e.
      optional ? t.write("?.") : t.write("."), this[e.property.type](e.property, t));
    },
    MetaProperty(e, t) {
      t.write(e.meta.name + "." + e.property.name, e);
    },
    Identifier(e, t) {
      t.write(e.name, e);
    },
    PrivateIdentifier(e, t) {
      t.write(`#${e.name}`, e);
    },
    Literal(e, t) {
      e.raw != null ? t.write(e.raw, e) : e.regex != null ? this.RegExpLiteral(e, t) : e.bigint != null ? t.write(e.bigint + "n", e) : t.write(
      WV(e.value), e);
    },
    RegExpLiteral(e, t) {
      let { regex: r } = e;
      t.write(`/${r.pattern}/${r.flags}`, e);
    }
  }, JV = {}, ZV = class {
    static {
      s(this, "State");
    }
    constructor(e) {
      let t = e ?? JV;
      this.output = "", t.output != null ? (this.output = t.output, this.write = this.writeToStream) : this.output = "", this.generator = t.
      generator != null ? t.generator : Gw, this.expressionsPrecedence = t.expressionsPrecedence != null ? t.expressionsPrecedence : zV, this.
      indent = t.indent != null ? t.indent : "  ", this.lineEnd = t.lineEnd != null ? t.lineEnd : `
`, this.indentLevel = t.startingIndentLevel != null ? t.startingIndentLevel : 0, this.writeComments = t.comments ? t.comments : !1, t.sourceMap !=
      null && (this.write = t.output == null ? this.writeAndMap : this.writeToStreamAndMap, this.sourceMap = t.sourceMap, this.line = 1, this.
      column = 0, this.lineEndSize = this.lineEnd.split(`
`).length - 1, this.mapping = {
        original: null,
        // Uses the entire state to avoid generating ephemeral objects
        generated: this,
        name: void 0,
        source: t.sourceMap.file || t.sourceMap._file
      });
    }
    write(e) {
      this.output += e;
    }
    writeToStream(e) {
      this.output.write(e);
    }
    writeAndMap(e, t) {
      this.output += e, this.map(e, t);
    }
    writeToStreamAndMap(e, t) {
      this.output.write(e), this.map(e, t);
    }
    map(e, t) {
      if (t != null) {
        let { type: i } = t;
        if (i[0] === "L" && i[2] === "n") {
          this.column = 0, this.line++;
          return;
        }
        if (t.loc != null) {
          let { mapping: o } = this;
          o.original = t.loc.start, o.name = t.name, this.sourceMap.addMapping(o);
        }
        if (i[0] === "T" && i[8] === "E" || i[0] === "L" && i[1] === "i" && typeof t.value == "string") {
          let { length: o } = e, { column: a, line: u } = this;
          for (let l = 0; l < o; l++)
            e[l] === `
` ? (a = 0, u++) : a++;
          this.column = a, this.line = u;
          return;
        }
      }
      let { length: r } = e, { lineEnd: n } = this;
      r > 0 && (this.lineEndSize > 0 && (n.length === 1 ? e[r - 1] === n : e.endsWith(n)) ? (this.line += this.lineEndSize, this.column = 0) :
      this.column += r);
    }
    toString() {
      return this.output;
    }
  };
  s(XV, "generate");
  KV = {};
  s(aw, "toJs");
  uw = {
    JSXAttribute: YV,
    JSXClosingElement: QV,
    JSXClosingFragment: eU,
    JSXElement: tU,
    JSXEmptyExpression: rU,
    JSXExpressionContainer: nU,
    JSXFragment: iU,
    JSXIdentifier: sU,
    JSXMemberExpression: oU,
    JSXNamespacedName: aU,
    JSXOpeningElement: uU,
    JSXOpeningFragment: lU,
    JSXSpreadAttribute: cU,
    JSXText: pU
  };
  s(YV, "jsxAttribute");
  s(QV, "jsxClosingElement");
  s(eU, "jsxClosingFragment");
  s(tU, "jsxElement");
  s(rU, "jsxEmptyExpression");
  s(nU, "jsxExpressionContainer");
  s(iU, "jsxFragment");
  s(sU, "jsxIdentifier");
  s(oU, "jsxMemberExpression");
  s(aU, "jsxNamespacedName");
  s(uU, "jsxOpeningElement");
  s(lU, "jsxOpeningFragment");
  s(cU, "jsxSpreadAttribute");
  s(pU, "jsxText2");
  s(Jw, "encodeJsx");
  s(hU, "replaceJsxChar");
  s(fU, "recmaStringify");
  s(dU, "rehypeRecma");
  s(mU, "rehypeRemoveRaw");
  gU = /\s+/g, yU = /[\t\n\v\f\r ]+/g;
  s(DU, "collapseWhiteSpace");
  s(xU, "replaceLineEnding");
  s(bU, "replaceSpace");
  s(vU, "trimFactory");
  s(EU, "remarkMarkAndUnravel");
  Zw = /** @type {const} */
  [
    "mdxFlowExpression",
    "mdxJsxFlowElement",
    "mdxJsxTextElement",
    "mdxTextExpression",
    "mdxjsEsm"
  ], lw = [
    "compilers",
    "filepath",
    "hastPlugins",
    "mdPlugins",
    "skipExport",
    "wrapExport"
  ], cw = !1;
  s(Xd, "createProcessor");
  s(Xw, "compile");
  s(Kw, "compileSync");
  s(Yw, "resolveEvaluateOptions");
  CU = Object.getPrototypeOf(Kd).constructor;
  s(Kd, "run");
  s(Qw, "runSync");
  s(wU, "evaluate");
  s(SU, "evaluateSync");
});

// ../node_modules/@storybook/docs-mdx/dist/index.js
var o2 = {};
pi(o2, {
  analyze: () => TU,
  extractImports: () => i2,
  plugin: () => s2
});
var Yd, n2, r2, AU, FU, _U, kU, i2, s2, TU, a2 = Et(() => {
  sd();
  Yd = /* @__PURE__ */ s((e, t) => e.attributes.find((r) => r.type === "JSXAttribute" && r.name.name === t), "getAttr"), n2 = /* @__PURE__ */ s(
  (e, t) => Yd(e, t)?.value, "getAttrValue"), r2 = /* @__PURE__ */ s((e, t) => {
    let r = n2(e, t);
    if (r) {
      if (r.type === "Literal")
        return r.value;
      throw new Error(`Expected string literal ${t}, received ${r.type}`);
    }
  }, "getAttrLiteral"), AU = /* @__PURE__ */ s((e, t) => {
    let r = n2(e, "of");
    if (r)
      if (r.type === "JSXExpressionContainer") {
        let n = r.expression;
        if (n?.type === "Identifier") {
          let i = t[n.name];
          if (i)
            return i;
          throw new Error(`Unknown identifier ${n.name}`);
        } else
          throw new Error(`Expected identifier, received ${n.type}`);
      } else
        throw new Error(`Expected JSX expression, received ${r.type}`);
  }, "getOf"), FU = /* @__PURE__ */ s((e) => {
    let t = Yd(e, "tags");
    if (!t)
      return;
    let r = t.value;
    if (r.type === "JSXExpressionContainer") {
      let n = r.expression;
      if (n.type === "ArrayExpression")
        return n.elements.map((o) => {
          if (o.type === "Literal" && typeof o.value == "string")
            return o.value;
          throw new Error(`Expected string literal tag, received ${o.type}`);
        });
      throw new Error(`Expected tags array, received ${n.type}`);
    } else
      throw new Error(`Expected JSX expression tags, received ${r.type}`);
  }, "getTags"), _U = /* @__PURE__ */ s((e) => {
    let t = Yd(e, "isTemplate");
    if (!t)
      return !1;
    let r = t.value;
    if (r == null)
      return !0;
    if (r.type === "JSXExpressionContainer") {
      let n = r.expression;
      if (n.type === "Literal" && typeof n.value == "boolean")
        return n.value;
      throw new Error(`Expected boolean isTemplate, received ${typeof n.value}`);
    } else
      throw new Error(`Expected expression isTemplate, received ${r.type}`);
  }, "getIsTemplate"), kU = /* @__PURE__ */ s((e, t) => {
    let r = { title: void 0, of: void 0, name: void 0, isTemplate: !1 }, n = e.body.filter(
      (o) => o.type === "ExpressionStatement" && o.expression.type === "JSXFragment"
    );
    if (n.length > 1)
      throw new Error("duplicate contents");
    return n.length === 0 || n[0].expression.children.forEach((o) => {
      if (o.type === "JSXElement") {
        let { openingElement: a } = o;
        if (a.name.name === "Meta") {
          if (r.title || r.name || r.of)
            throw new Error("Meta can only be declared once");
          r.title = r2(a, "title"), r.name = r2(a, "name"), r.of = AU(a, t), r.isTemplate = _U(a), r.metaTags = FU(a);
        }
      } else if (o.type !== "JSXExpressionContainer")
        throw new Error(`Unexpected JSX child: ${o.type}`);
    }), r;
  }, "extractTitle"), i2 = /* @__PURE__ */ s((e) => {
    let t = {};
    return e.body.forEach((r) => {
      if (r.type === "ImportDeclaration") {
        let { source: n, specifiers: i } = r;
        if (n.type === "Literal")
          i.forEach((o) => {
            t[o.local.name] = n.value.toString();
          });
        else
          throw new Error("MDX: unexpected import source");
      }
    }), t;
  }, "extractImports"), s2 = /* @__PURE__ */ s((e) => (t) => {
    let r = Hu(t), n = i2(r), { title: i, of: o, name: a, isTemplate: u, metaTags: l } = kU(r, n);
    return e.title = i, e.of = o, e.name = a, e.isTemplate = u, e.metaTags = l, e.imports = Array.from(new Set(Object.values(n))), t;
  }, "plugin"), TU = /* @__PURE__ */ s(async (e) => {
    let t = {
      title: void 0,
      of: void 0,
      name: void 0,
      isTemplate: !1,
      metaTags: void 0,
      imports: void 0
    }, { compile: r } = await Promise.resolve().then(() => (t2(), e2));
    await r(e, {
      rehypePlugins: [[s2, t]]
    });
    let { title: n, of: i, name: o, isTemplate: a, metaTags: u, imports: l = [] } = t;
    return { title: n, of: i, name: o, isTemplate: a, metaTags: u, imports: l };
  }, "analyze");
});

// ../node_modules/totalist/sync/index.mjs
var y2 = {};
pi(y2, {
  totalist: () => g2
});
import { join as im, resolve as $U } from "path";
import { readdirSync as VU, statSync as UU } from "fs";
function g2(e, t, r = "") {
  e = $U(".", e);
  let n = VU(e), i = 0, o, a;
  for (; i < n.length; i++)
    o = im(e, n[i]), a = UU(o), a.isDirectory() ? g2(o, t, im(r, n[i])) : t(im(r, n[i]), o, a);
}
var D2 = Et(() => {
  s(g2, "totalist");
});

// ../node_modules/@polka/url/build.mjs
var b2 = {};
pi(b2, {
  parse: () => sm
});
import * as x2 from "node:querystring";
function sm(e) {
  let t = e.url;
  if (t == null) return;
  let r = e._parsedUrl;
  if (r && r.raw === t) return r;
  let n = t, i = "", o, a;
  if (t.length > 1) {
    let u = t.indexOf("#", 1);
    u !== -1 && (a = t.substring(u), n = t.substring(0, u)), u = n.indexOf("?", 1), u !== -1 && (i = n.substring(u), n = n.substring(0, u), i.
    length > 1 && (o = x2.parse(i.substring(1))));
  }
  return e._parsedUrl = { pathname: n, search: i, query: o, hash: a, raw: t };
}
var om = Et(() => {
  s(sm, "parse");
});

// ../node_modules/mrmime/index.mjs
var E2 = {};
pi(E2, {
  lookup: () => WU,
  mimes: () => v2
});
function WU(e) {
  let t = ("" + e).trim().toLowerCase(), r = t.lastIndexOf(".");
  return v2[~r ? t.substring(++r) : t];
}
var v2, C2 = Et(() => {
  v2 = {
    "3g2": "video/3gpp2",
    "3gp": "video/3gpp",
    "3gpp": "video/3gpp",
    "3mf": "model/3mf",
    aac: "audio/aac",
    ac: "application/pkix-attr-cert",
    adp: "audio/adpcm",
    adts: "audio/aac",
    ai: "application/postscript",
    aml: "application/automationml-aml+xml",
    amlx: "application/automationml-amlx+zip",
    amr: "audio/amr",
    apng: "image/apng",
    appcache: "text/cache-manifest",
    appinstaller: "application/appinstaller",
    appx: "application/appx",
    appxbundle: "application/appxbundle",
    asc: "application/pgp-keys",
    atom: "application/atom+xml",
    atomcat: "application/atomcat+xml",
    atomdeleted: "application/atomdeleted+xml",
    atomsvc: "application/atomsvc+xml",
    au: "audio/basic",
    avci: "image/avci",
    avcs: "image/avcs",
    avif: "image/avif",
    aw: "application/applixware",
    bdoc: "application/bdoc",
    bin: "application/octet-stream",
    bmp: "image/bmp",
    bpk: "application/octet-stream",
    btf: "image/prs.btif",
    btif: "image/prs.btif",
    buffer: "application/octet-stream",
    ccxml: "application/ccxml+xml",
    cdfx: "application/cdfx+xml",
    cdmia: "application/cdmi-capability",
    cdmic: "application/cdmi-container",
    cdmid: "application/cdmi-domain",
    cdmio: "application/cdmi-object",
    cdmiq: "application/cdmi-queue",
    cer: "application/pkix-cert",
    cgm: "image/cgm",
    cjs: "application/node",
    class: "application/java-vm",
    coffee: "text/coffeescript",
    conf: "text/plain",
    cpl: "application/cpl+xml",
    cpt: "application/mac-compactpro",
    crl: "application/pkix-crl",
    css: "text/css",
    csv: "text/csv",
    cu: "application/cu-seeme",
    cwl: "application/cwl",
    cww: "application/prs.cww",
    davmount: "application/davmount+xml",
    dbk: "application/docbook+xml",
    deb: "application/octet-stream",
    def: "text/plain",
    deploy: "application/octet-stream",
    dib: "image/bmp",
    "disposition-notification": "message/disposition-notification",
    dist: "application/octet-stream",
    distz: "application/octet-stream",
    dll: "application/octet-stream",
    dmg: "application/octet-stream",
    dms: "application/octet-stream",
    doc: "application/msword",
    dot: "application/msword",
    dpx: "image/dpx",
    drle: "image/dicom-rle",
    dsc: "text/prs.lines.tag",
    dssc: "application/dssc+der",
    dtd: "application/xml-dtd",
    dump: "application/octet-stream",
    dwd: "application/atsc-dwd+xml",
    ear: "application/java-archive",
    ecma: "application/ecmascript",
    elc: "application/octet-stream",
    emf: "image/emf",
    eml: "message/rfc822",
    emma: "application/emma+xml",
    emotionml: "application/emotionml+xml",
    eps: "application/postscript",
    epub: "application/epub+zip",
    exe: "application/octet-stream",
    exi: "application/exi",
    exp: "application/express",
    exr: "image/aces",
    ez: "application/andrew-inset",
    fdf: "application/fdf",
    fdt: "application/fdt+xml",
    fits: "image/fits",
    g3: "image/g3fax",
    gbr: "application/rpki-ghostbusters",
    geojson: "application/geo+json",
    gif: "image/gif",
    glb: "model/gltf-binary",
    gltf: "model/gltf+json",
    gml: "application/gml+xml",
    gpx: "application/gpx+xml",
    gram: "application/srgs",
    grxml: "application/srgs+xml",
    gxf: "application/gxf",
    gz: "application/gzip",
    h261: "video/h261",
    h263: "video/h263",
    h264: "video/h264",
    heic: "image/heic",
    heics: "image/heic-sequence",
    heif: "image/heif",
    heifs: "image/heif-sequence",
    hej2: "image/hej2k",
    held: "application/atsc-held+xml",
    hjson: "application/hjson",
    hlp: "application/winhlp",
    hqx: "application/mac-binhex40",
    hsj2: "image/hsj2",
    htm: "text/html",
    html: "text/html",
    ics: "text/calendar",
    ief: "image/ief",
    ifb: "text/calendar",
    iges: "model/iges",
    igs: "model/iges",
    img: "application/octet-stream",
    in: "text/plain",
    ini: "text/plain",
    ink: "application/inkml+xml",
    inkml: "application/inkml+xml",
    ipfix: "application/ipfix",
    iso: "application/octet-stream",
    its: "application/its+xml",
    jade: "text/jade",
    jar: "application/java-archive",
    jhc: "image/jphc",
    jls: "image/jls",
    jp2: "image/jp2",
    jpe: "image/jpeg",
    jpeg: "image/jpeg",
    jpf: "image/jpx",
    jpg: "image/jpeg",
    jpg2: "image/jp2",
    jpgm: "image/jpm",
    jpgv: "video/jpeg",
    jph: "image/jph",
    jpm: "image/jpm",
    jpx: "image/jpx",
    js: "text/javascript",
    json: "application/json",
    json5: "application/json5",
    jsonld: "application/ld+json",
    jsonml: "application/jsonml+json",
    jsx: "text/jsx",
    jt: "model/jt",
    jxl: "image/jxl",
    jxr: "image/jxr",
    jxra: "image/jxra",
    jxrs: "image/jxrs",
    jxs: "image/jxs",
    jxsc: "image/jxsc",
    jxsi: "image/jxsi",
    jxss: "image/jxss",
    kar: "audio/midi",
    ktx: "image/ktx",
    ktx2: "image/ktx2",
    less: "text/less",
    lgr: "application/lgr+xml",
    list: "text/plain",
    litcoffee: "text/coffeescript",
    log: "text/plain",
    lostxml: "application/lost+xml",
    lrf: "application/octet-stream",
    m1v: "video/mpeg",
    m21: "application/mp21",
    m2a: "audio/mpeg",
    m2t: "video/mp2t",
    m2ts: "video/mp2t",
    m2v: "video/mpeg",
    m3a: "audio/mpeg",
    m4a: "audio/mp4",
    m4p: "application/mp4",
    m4s: "video/iso.segment",
    ma: "application/mathematica",
    mads: "application/mads+xml",
    maei: "application/mmt-aei+xml",
    man: "text/troff",
    manifest: "text/cache-manifest",
    map: "application/json",
    mar: "application/octet-stream",
    markdown: "text/markdown",
    mathml: "application/mathml+xml",
    mb: "application/mathematica",
    mbox: "application/mbox",
    md: "text/markdown",
    mdx: "text/mdx",
    me: "text/troff",
    mesh: "model/mesh",
    meta4: "application/metalink4+xml",
    metalink: "application/metalink+xml",
    mets: "application/mets+xml",
    mft: "application/rpki-manifest",
    mid: "audio/midi",
    midi: "audio/midi",
    mime: "message/rfc822",
    mj2: "video/mj2",
    mjp2: "video/mj2",
    mjs: "text/javascript",
    mml: "text/mathml",
    mods: "application/mods+xml",
    mov: "video/quicktime",
    mp2: "audio/mpeg",
    mp21: "application/mp21",
    mp2a: "audio/mpeg",
    mp3: "audio/mpeg",
    mp4: "video/mp4",
    mp4a: "audio/mp4",
    mp4s: "application/mp4",
    mp4v: "video/mp4",
    mpd: "application/dash+xml",
    mpe: "video/mpeg",
    mpeg: "video/mpeg",
    mpf: "application/media-policy-dataset+xml",
    mpg: "video/mpeg",
    mpg4: "video/mp4",
    mpga: "audio/mpeg",
    mpp: "application/dash-patch+xml",
    mrc: "application/marc",
    mrcx: "application/marcxml+xml",
    ms: "text/troff",
    mscml: "application/mediaservercontrol+xml",
    msh: "model/mesh",
    msi: "application/octet-stream",
    msix: "application/msix",
    msixbundle: "application/msixbundle",
    msm: "application/octet-stream",
    msp: "application/octet-stream",
    mtl: "model/mtl",
    mts: "video/mp2t",
    musd: "application/mmt-usd+xml",
    mxf: "application/mxf",
    mxmf: "audio/mobile-xmf",
    mxml: "application/xv+xml",
    n3: "text/n3",
    nb: "application/mathematica",
    nq: "application/n-quads",
    nt: "application/n-triples",
    obj: "model/obj",
    oda: "application/oda",
    oga: "audio/ogg",
    ogg: "audio/ogg",
    ogv: "video/ogg",
    ogx: "application/ogg",
    omdoc: "application/omdoc+xml",
    onepkg: "application/onenote",
    onetmp: "application/onenote",
    onetoc: "application/onenote",
    onetoc2: "application/onenote",
    opf: "application/oebps-package+xml",
    opus: "audio/ogg",
    otf: "font/otf",
    owl: "application/rdf+xml",
    oxps: "application/oxps",
    p10: "application/pkcs10",
    p7c: "application/pkcs7-mime",
    p7m: "application/pkcs7-mime",
    p7s: "application/pkcs7-signature",
    p8: "application/pkcs8",
    pdf: "application/pdf",
    pfr: "application/font-tdpfr",
    pgp: "application/pgp-encrypted",
    pkg: "application/octet-stream",
    pki: "application/pkixcmp",
    pkipath: "application/pkix-pkipath",
    pls: "application/pls+xml",
    png: "image/png",
    prc: "model/prc",
    prf: "application/pics-rules",
    provx: "application/provenance+xml",
    ps: "application/postscript",
    pskcxml: "application/pskc+xml",
    pti: "image/prs.pti",
    qt: "video/quicktime",
    raml: "application/raml+yaml",
    rapd: "application/route-apd+xml",
    rdf: "application/rdf+xml",
    relo: "application/p2p-overlay+xml",
    rif: "application/reginfo+xml",
    rl: "application/resource-lists+xml",
    rld: "application/resource-lists-diff+xml",
    rmi: "audio/midi",
    rnc: "application/relax-ng-compact-syntax",
    rng: "application/xml",
    roa: "application/rpki-roa",
    roff: "text/troff",
    rq: "application/sparql-query",
    rs: "application/rls-services+xml",
    rsat: "application/atsc-rsat+xml",
    rsd: "application/rsd+xml",
    rsheet: "application/urc-ressheet+xml",
    rss: "application/rss+xml",
    rtf: "text/rtf",
    rtx: "text/richtext",
    rusd: "application/route-usd+xml",
    s3m: "audio/s3m",
    sbml: "application/sbml+xml",
    scq: "application/scvp-cv-request",
    scs: "application/scvp-cv-response",
    sdp: "application/sdp",
    senmlx: "application/senml+xml",
    sensmlx: "application/sensml+xml",
    ser: "application/java-serialized-object",
    setpay: "application/set-payment-initiation",
    setreg: "application/set-registration-initiation",
    sgi: "image/sgi",
    sgm: "text/sgml",
    sgml: "text/sgml",
    shex: "text/shex",
    shf: "application/shf+xml",
    shtml: "text/html",
    sieve: "application/sieve",
    sig: "application/pgp-signature",
    sil: "audio/silk",
    silo: "model/mesh",
    siv: "application/sieve",
    slim: "text/slim",
    slm: "text/slim",
    sls: "application/route-s-tsid+xml",
    smi: "application/smil+xml",
    smil: "application/smil+xml",
    snd: "audio/basic",
    so: "application/octet-stream",
    spdx: "text/spdx",
    spp: "application/scvp-vp-response",
    spq: "application/scvp-vp-request",
    spx: "audio/ogg",
    sql: "application/sql",
    sru: "application/sru+xml",
    srx: "application/sparql-results+xml",
    ssdl: "application/ssdl+xml",
    ssml: "application/ssml+xml",
    stk: "application/hyperstudio",
    stl: "model/stl",
    stpx: "model/step+xml",
    stpxz: "model/step-xml+zip",
    stpz: "model/step+zip",
    styl: "text/stylus",
    stylus: "text/stylus",
    svg: "image/svg+xml",
    svgz: "image/svg+xml",
    swidtag: "application/swid+xml",
    t: "text/troff",
    t38: "image/t38",
    td: "application/urc-targetdesc+xml",
    tei: "application/tei+xml",
    teicorpus: "application/tei+xml",
    text: "text/plain",
    tfi: "application/thraud+xml",
    tfx: "image/tiff-fx",
    tif: "image/tiff",
    tiff: "image/tiff",
    toml: "application/toml",
    tr: "text/troff",
    trig: "application/trig",
    ts: "video/mp2t",
    tsd: "application/timestamped-data",
    tsv: "text/tab-separated-values",
    ttc: "font/collection",
    ttf: "font/ttf",
    ttl: "text/turtle",
    ttml: "application/ttml+xml",
    txt: "text/plain",
    u3d: "model/u3d",
    u8dsn: "message/global-delivery-status",
    u8hdr: "message/global-headers",
    u8mdn: "message/global-disposition-notification",
    u8msg: "message/global",
    ubj: "application/ubjson",
    uri: "text/uri-list",
    uris: "text/uri-list",
    urls: "text/uri-list",
    vcard: "text/vcard",
    vrml: "model/vrml",
    vtt: "text/vtt",
    vxml: "application/voicexml+xml",
    war: "application/java-archive",
    wasm: "application/wasm",
    wav: "audio/wav",
    weba: "audio/webm",
    webm: "video/webm",
    webmanifest: "application/manifest+json",
    webp: "image/webp",
    wgsl: "text/wgsl",
    wgt: "application/widget",
    wif: "application/watcherinfo+xml",
    wmf: "image/wmf",
    woff: "font/woff",
    woff2: "font/woff2",
    wrl: "model/vrml",
    wsdl: "application/wsdl+xml",
    wspolicy: "application/wspolicy+xml",
    x3d: "model/x3d+xml",
    x3db: "model/x3d+fastinfoset",
    x3dbz: "model/x3d+binary",
    x3dv: "model/x3d-vrml",
    x3dvz: "model/x3d+vrml",
    x3dz: "model/x3d+xml",
    xaml: "application/xaml+xml",
    xav: "application/xcap-att+xml",
    xca: "application/xcap-caps+xml",
    xcs: "application/calendar+xml",
    xdf: "application/xcap-diff+xml",
    xdssc: "application/dssc+xml",
    xel: "application/xcap-el+xml",
    xenc: "application/xenc+xml",
    xer: "application/patch-ops-error+xml",
    xfdf: "application/xfdf",
    xht: "application/xhtml+xml",
    xhtml: "application/xhtml+xml",
    xhvml: "application/xv+xml",
    xlf: "application/xliff+xml",
    xm: "audio/xm",
    xml: "text/xml",
    xns: "application/xcap-ns+xml",
    xop: "application/xop+xml",
    xpl: "application/xproc+xml",
    xsd: "application/xml",
    xsf: "application/prs.xsf+xml",
    xsl: "application/xml",
    xslt: "application/xml",
    xspf: "application/xspf+xml",
    xvm: "application/xv+xml",
    xvml: "application/xv+xml",
    yaml: "text/yaml",
    yang: "application/yang",
    yin: "application/yin+xml",
    yml: "text/yaml",
    zip: "application/zip"
  };
  s(WU, "lookup");
});

// ../node_modules/sirv/build.js
var F2 = I((vfe, A2) => {
  var am = H("fs"), { join: zU, normalize: HU, resolve: GU } = H("path"), { totalist: JU } = (D2(), Dp(y2)), { parse: ZU } = (om(), Dp(b2)),
  { lookup: XU } = (C2(), Dp(E2)), KU = /* @__PURE__ */ s(() => {
  }, "noop");
  function YU(e, t) {
    for (let r = 0; r < t.length; r++)
      if (t[r].test(e)) return !0;
  }
  s(YU, "isMatch");
  function w2(e, t) {
    let r = 0, n, i = e.length - 1;
    e.charCodeAt(i) === 47 && (e = e.substring(0, i));
    let o = [], a = `${e}/index`;
    for (; r < t.length; r++)
      n = t[r] ? `.${t[r]}` : "", e && o.push(e + n), o.push(a + n);
    return o;
  }
  s(w2, "toAssume");
  function QU(e, t, r) {
    let n = 0, i, o = w2(t, r);
    for (; n < o.length; n++)
      if (i = e[o[n]]) return i;
  }
  s(QU, "viaCache");
  function eW(e, t, r, n) {
    let i = 0, o = w2(r, n), a, u, l, c;
    for (; i < o.length; i++)
      if (a = HU(zU(e, l = o[i])), a.startsWith(e) && am.existsSync(a)) {
        if (u = am.statSync(a), u.isDirectory()) continue;
        return c = S2(l, u, t), c["Cache-Control"] = t ? "no-cache" : "no-store", { abs: a, stats: u, headers: c };
      }
  }
  s(eW, "viaLocal");
  function tW(e, t) {
    return t.statusCode = 404, t.end();
  }
  s(tW, "is404");
  function rW(e, t, r, n, i) {
    let o = 200, a, u = {};
    i = { ...i };
    for (let l in i)
      a = t.getHeader(l), a && (i[l] = a);
    if ((a = t.getHeader("content-type")) && (i["Content-Type"] = a), e.headers.range) {
      o = 206;
      let [l, c] = e.headers.range.replace("bytes=", "").split("-"), p = u.end = parseInt(c, 10) || n.size - 1, h = u.start = parseInt(l, 10) ||
      0;
      if (p >= n.size && (p = n.size - 1), h >= n.size)
        return t.setHeader("Content-Range", `bytes */${n.size}`), t.statusCode = 416, t.end();
      i["Content-Range"] = `bytes ${h}-${p}/${n.size}`, i["Content-Length"] = p - h + 1, i["Accept-Ranges"] = "bytes";
    }
    t.writeHead(o, i), am.createReadStream(r, u).pipe(t);
  }
  s(rW, "send");
  var nW = {
    ".br": "br",
    ".gz": "gzip"
  };
  function S2(e, t, r) {
    let n = nW[e.slice(-3)], i = XU(e.slice(0, n && -3)) || "";
    i === "text/html" && (i += ";charset=utf-8");
    let o = {
      "Content-Length": t.size,
      "Content-Type": i,
      "Last-Modified": t.mtime.toUTCString()
    };
    return n && (o["Content-Encoding"] = n), r && (o.ETag = `W/"${t.size}-${t.mtime.getTime()}"`), o;
  }
  s(S2, "toHeaders");
  A2.exports = function(e, t = {}) {
    e = GU(e || ".");
    let r = t.onNoMatch || tW, n = t.setHeaders || KU, i = t.extensions || ["html", "htm"], o = t.gzip && i.map((m) => `${m}.gz`).concat("gz"),
    a = t.brotli && i.map((m) => `${m}.br`).concat("br"), u = {}, l = "/", c = !!t.etag, p = !!t.single;
    if (typeof t.single == "string") {
      let m = t.single.lastIndexOf(".");
      l += ~m ? t.single.substring(0, m) : t.single;
    }
    let h = [];
    t.ignores !== !1 && (h.push(/[/]([A-Za-z\s\d~$._-]+\.\w+){1,}$/), t.dotfiles ? h.push(/\/\.\w/) : h.push(/\/\.well-known/), [].concat(t.
    ignores || []).forEach((m) => {
      h.push(new RegExp(m, "i"));
    }));
    let f = t.maxAge != null && `public,max-age=${t.maxAge}`;
    f && t.immutable ? f += ",immutable" : f && t.maxAge === 0 && (f += ",must-revalidate"), t.dev || JU(e, (m, g, b) => {
      if (!/\.well-known[\\+\/]/.test(m)) {
        if (!t.dotfiles && /(^\.|[\\+|\/+]\.)/.test(m)) return;
      }
      let y = S2(m, b, c);
      f && (y["Cache-Control"] = f), u["/" + m.normalize().replace(/\\+/g, "/")] = { abs: g, stats: b, headers: y };
    });
    let d = t.dev ? eW.bind(0, e, c) : QU.bind(0, u);
    return function(m, g, b) {
      let y = [""], E = ZU(m).pathname, A = m.headers["accept-encoding"] || "";
      if (o && A.includes("gzip") && y.unshift(...o), a && /(br|brotli)/i.test(A) && y.unshift(...a), y.push(...i), E.indexOf("%") !== -1)
        try {
          E = decodeURI(E);
        } catch {
        }
      let k = d(E, y) || p && !YU(E, h) && d(l, y);
      if (!k) return b ? b() : r(m, g);
      if (c && m.headers["if-none-match"] === k.headers.ETag)
        return g.writeHead(304), g.end();
      (o || a) && g.setHeader("Vary", "Accept-Encoding"), n(g, E, k.stats), rW(m, g, k.abs, k.stats, k.headers);
    };
  };
});

// ../node_modules/@discoveryjs/json-ext/package.json
var z2 = I((zfe, CW) => {
  CW.exports = {
    name: "@discoveryjs/json-ext",
    version: "0.5.7",
    description: "A set of utilities that extend the use of JSON",
    keywords: [
      "json",
      "utils",
      "stream",
      "async",
      "promise",
      "stringify",
      "info"
    ],
    author: "Roman Dvornov <rdvornov@gmail.com> (https://github.com/lahmatiy)",
    license: "MIT",
    repository: "discoveryjs/json-ext",
    main: "./src/index",
    browser: {
      "./src/stringify-stream.js": "./src/stringify-stream-browser.js",
      "./src/text-decoder.js": "./src/text-decoder-browser.js",
      "./src/version.js": "./dist/version.js"
    },
    types: "./index.d.ts",
    scripts: {
      test: "mocha --reporter progress",
      lint: "eslint src test",
      "lint-and-test": "npm run lint && npm test",
      build: "rollup --config",
      "test:all": "npm run test:src && npm run test:dist",
      "test:src": "npm test",
      "test:dist": "cross-env MODE=dist npm test && cross-env MODE=dist-min npm test",
      "build-and-test": "npm run build && npm run test:dist",
      coverage: "c8 --reporter=lcovonly npm test",
      prepublishOnly: "npm run lint && npm test && npm run build-and-test"
    },
    devDependencies: {
      "@rollup/plugin-commonjs": "^15.1.0",
      "@rollup/plugin-json": "^4.1.0",
      "@rollup/plugin-node-resolve": "^9.0.0",
      c8: "^7.10.0",
      chalk: "^4.1.0",
      "cross-env": "^7.0.3",
      eslint: "^8.10.0",
      mocha: "^8.4.0",
      rollup: "^2.28.2",
      "rollup-plugin-terser": "^7.0.2"
    },
    engines: {
      node: ">=10.0.0"
    },
    files: [
      "dist",
      "src",
      "index.d.ts"
    ]
  };
});

// ../node_modules/@discoveryjs/json-ext/src/version.js
var G2 = I((Hfe, H2) => {
  H2.exports = z2().version;
});

// ../node_modules/@discoveryjs/json-ext/src/utils.js
var El = I((Gfe, Z2) => {
  var wW = {
    // JSON Single Character Escape Sequences
    8: "\\b",
    9: "\\t",
    10: "\\n",
    12: "\\f",
    13: "\\r",
    34: '\\"',
    92: "\\\\"
  };
  function SW(e) {
    return e >= 55296 && e <= 56319;
  }
  s(SW, "isLeadingSurrogate");
  function AW(e) {
    return e >= 56320 && e <= 57343;
  }
  s(AW, "isTrailingSurrogate");
  function J2(e) {
    return typeof e.pipe == "function" && typeof e._read == "function" && typeof e._readableState == "object" && e._readableState !== null;
  }
  s(J2, "isReadableStream");
  function FW(e, t, r, n) {
    switch (r && typeof r.toJSON == "function" && (r = r.toJSON()), n !== null && (r = n.call(e, String(t), r)), typeof r) {
      case "function":
      case "symbol":
        r = void 0;
        break;
      case "object":
        if (r !== null) {
          let i = r.constructor;
          (i === String || i === Number || i === Boolean) && (r = r.valueOf());
        }
        break;
    }
    return r;
  }
  s(FW, "replaceValue");
  function _W(e) {
    return e === null || typeof e != "object" ? 1 : Array.isArray(e) ? 3 : 2;
  }
  s(_W, "getTypeNative");
  function kW(e) {
    return e === null || typeof e != "object" ? 1 : typeof e.then == "function" ? 4 : J2(e) ? e._readableState.objectMode ? 6 : 5 : Array.isArray(
    e) ? 3 : 2;
  }
  s(kW, "getTypeAsync");
  function TW(e) {
    return typeof e == "function" ? e : Array.isArray(e) ? [...new Set(
      e.map((r) => {
        let n = r && r.constructor;
        return n === String || n === Number ? String(r) : null;
      }).filter((r) => typeof r == "string")
    )] : null;
  }
  s(TW, "normalizeReplacer");
  function IW(e) {
    return typeof e == "number" ? !Number.isFinite(e) || e < 1 ? !1 : " ".repeat(Math.min(e, 10)) : typeof e == "string" && e.slice(0, 10) ||
    !1;
  }
  s(IW, "normalizeSpace");
  Z2.exports = {
    escapableCharCodeSubstitution: wW,
    isLeadingSurrogate: SW,
    isTrailingSurrogate: AW,
    type: {
      PRIMITIVE: 1,
      PROMISE: 4,
      ARRAY: 3,
      OBJECT: 2,
      STRING_STREAM: 5,
      OBJECT_STREAM: 6
    },
    isReadableStream: J2,
    replaceValue: FW,
    getTypeNative: _W,
    getTypeAsync: kW,
    normalizeReplacer: TW,
    normalizeSpace: IW
  };
});

// ../node_modules/@discoveryjs/json-ext/src/stringify-info.js
var Q2 = I((Zfe, Y2) => {
  var {
    normalizeReplacer: PW,
    normalizeSpace: BW,
    replaceValue: OW,
    getTypeNative: RW,
    getTypeAsync: NW,
    isLeadingSurrogate: LW,
    isTrailingSurrogate: jW,
    escapableCharCodeSubstitution: MW,
    type: {
      PRIMITIVE: X2,
      OBJECT: qW,
      ARRAY: $W,
      PROMISE: VW,
      STRING_STREAM: UW,
      OBJECT_STREAM: WW
    }
  } = El(), zW = Array.from({ length: 2048 }).map((e, t) => MW.hasOwnProperty(t) ? 2 : t < 32 ? 6 : t < 128 ? 1 : 2);
  function K2(e) {
    let t = 0, r = !1;
    for (let n = 0; n < e.length; n++) {
      let i = e.charCodeAt(n);
      if (i < 2048)
        t += zW[i];
      else if (LW(i)) {
        t += 6, r = !0;
        continue;
      } else jW(i) ? t = r ? t - 2 : t + 6 : t += 3;
      r = !1;
    }
    return t + 2;
  }
  s(K2, "stringLength");
  function HW(e) {
    switch (typeof e) {
      case "string":
        return K2(e);
      case "number":
        return Number.isFinite(e) ? String(e).length : 4;
      case "boolean":
        return e ? 4 : 5;
      case "undefined":
      case "object":
        return 4;
      /* null */
      default:
        return 0;
    }
  }
  s(HW, "primitiveLength");
  function GW(e) {
    return e = BW(e), typeof e == "string" ? e.length : 0;
  }
  s(GW, "spaceLength");
  Y2.exports = /* @__PURE__ */ s(function(t, r, n, i) {
    function o(b, y, E) {
      if (m)
        return;
      E = OW(b, y, E, r);
      let A = f(E);
      if (A !== X2 && l.has(E)) {
        p.add(E), g += 4, i.continueOnCircular || (m = !0);
        return;
      }
      switch (A) {
        case X2:
          E !== void 0 || Array.isArray(b) ? g += HW(E) : b === d && (g += 9);
          break;
        case qW: {
          if (u.has(E)) {
            c.add(E), g += u.get(E);
            break;
          }
          let k = g, O = 0;
          g += 2, l.add(E);
          for (let w in E)
            if (hasOwnProperty.call(E, w) && (a === null || a.has(w))) {
              let C = g;
              o(E, w, E[w]), C !== g && (g += K2(w) + 1, O++);
            }
          O > 1 && (g += O - 1), l.delete(E), n > 0 && O > 0 && (g += (1 + (l.size + 1) * n + 1) * O, g += 1 + l.size * n), u.set(E, g - k);
          break;
        }
        case $W: {
          if (u.has(E)) {
            c.add(E), g += u.get(E);
            break;
          }
          let k = g;
          g += 2, l.add(E);
          for (let O = 0; O < E.length; O++)
            o(E, O, E[O]);
          E.length > 1 && (g += E.length - 1), l.delete(E), n > 0 && E.length > 0 && (g += (1 + (l.size + 1) * n) * E.length, g += 1 + l.size *
          n), u.set(E, g - k);
          break;
        }
        case VW:
        case UW:
          h.add(E);
          break;
        case WW:
          g += 2, h.add(E);
          break;
      }
    }
    s(o, "walk");
    let a = null;
    r = PW(r), Array.isArray(r) && (a = new Set(r), r = null), n = GW(n), i = i || {};
    let u = /* @__PURE__ */ new Map(), l = /* @__PURE__ */ new Set(), c = /* @__PURE__ */ new Set(), p = /* @__PURE__ */ new Set(), h = /* @__PURE__ */ new Set(),
    f = i.async ? NW : RW, d = { "": t }, m = !1, g = 0;
    return o(d, "", t), {
      minLength: isNaN(g) ? 1 / 0 : g,
      circular: [...p],
      duplicate: [...c],
      async: [...h]
    };
  }, "jsonStringifyInfo");
});

// ../node_modules/@discoveryjs/json-ext/src/stringify-stream.js
var uS = I((Kfe, aS) => {
  var { Readable: JW } = H("stream"), {
    normalizeReplacer: ZW,
    normalizeSpace: XW,
    replaceValue: KW,
    getTypeAsync: YW,
    type: {
      PRIMITIVE: QW,
      OBJECT: ez,
      ARRAY: tz,
      PROMISE: rz,
      STRING_STREAM: nz,
      OBJECT_STREAM: dm
    }
  } = El(), eS = /* @__PURE__ */ s(() => {
  }, "noop"), iz = Object.prototype.hasOwnProperty, sz = JSON.stringify("\uD800") === '"\\ud800"' ? JSON.stringify : (e) => JSON.stringify(e).
  replace(
    /\p{Surrogate}/gu,
    (t) => `\\u${t.charCodeAt(0).toString(16)}`
  );
  function oz() {
    this.push(this._stack.value), this.popStack();
  }
  s(oz, "push");
  function az(e) {
    switch (typeof e) {
      case "string":
        this.push(this.encodeString(e));
        break;
      case "number":
        this.push(Number.isFinite(e) ? this.encodeNumber(e) : "null");
        break;
      case "boolean":
        this.push(e ? "true" : "false");
        break;
      case "undefined":
      case "object":
        this.push("null");
        break;
      default:
        this.destroy(new TypeError(`Do not know how to serialize a ${e.constructor && e.constructor.name || typeof e}`));
    }
  }
  s(az, "pushPrimitive");
  function iS(e) {
    let t = this._stack;
    t.first ? this.push(",") : t.first = !0, this.space ? this.push(`
${this.space.repeat(this._depth)}${this.encodeString(e)}: `) : this.push(this.encodeString(e) + ":");
  }
  s(iS, "processObjectEntry");
  function tS() {
    let e = this._stack;
    if (e.index === e.keys.length) {
      this.space && e.first ? this.push(`
${this.space.repeat(this._depth - 1)}}`) : this.push("}"), this.popStack();
      return;
    }
    let t = e.keys[e.index];
    this.processValue(e.value, t, e.value[t], iS), e.index++;
  }
  s(tS, "processObject");
  function sS(e) {
    e !== 0 && this.push(","), this.space && this.push(`
${this.space.repeat(this._depth)}`);
  }
  s(sS, "processArrayItem");
  function rS() {
    let e = this._stack;
    if (e.index === e.value.length) {
      this.space && e.index > 0 ? this.push(`
${this.space.repeat(this._depth - 1)}]`) : this.push("]"), this.popStack();
      return;
    }
    this.processValue(e.value, e.index, e.value[e.index], sS), e.index++;
  }
  s(rS, "processArray");
  function oS(e) {
    return function() {
      let t = this._stack, r = t.value.read(this._readSize);
      r !== null ? (t.first = !1, e.call(this, r, t)) : t.first && !t.value._readableState.reading || t.ended ? this.popStack() : (t.first =
      !0, t.awaiting = !0);
    };
  }
  s(oS, "createStreamReader");
  var nS = oS(function(e, t) {
    this.processValue(t.value, t.index, e, sS), t.index++;
  }), uz = oS(function(e) {
    this.push(e);
  }), mm = class extends JW {
    static {
      s(this, "JsonStringifyStream");
    }
    constructor(t, r, n) {
      if (super({
        autoDestroy: !0
      }), this.getKeys = Object.keys, this.replacer = ZW(r), Array.isArray(this.replacer)) {
        let i = this.replacer;
        this.getKeys = (o) => i.filter((a) => iz.call(o, a)), this.replacer = null;
      }
      this.space = XW(n), this._depth = 0, this.error = null, this._processing = !1, this._ended = !1, this._readSize = 0, this._buffer = "",
      this._stack = null, this._visited = /* @__PURE__ */ new WeakSet(), this.pushStack({
        handler: /* @__PURE__ */ s(() => {
          this.popStack(), this.processValue({ "": t }, "", t, eS);
        }, "handler")
      });
    }
    encodeString(t) {
      return /[^\x20-\uD799]|[\x22\x5c]/.test(t) ? sz(t) : '"' + t + '"';
    }
    encodeNumber(t) {
      return t;
    }
    processValue(t, r, n, i) {
      n = KW(t, r, n, this.replacer);
      let o = YW(n);
      switch (o) {
        case QW:
          (i !== iS || n !== void 0) && (i.call(this, r), az.call(this, n));
          break;
        case ez:
          if (i.call(this, r), this._visited.has(n))
            return this.destroy(new TypeError("Converting circular structure to JSON"));
          this._visited.add(n), this._depth++, this.push("{"), this.pushStack({
            handler: tS,
            value: n,
            index: 0,
            first: !1,
            keys: this.getKeys(n)
          });
          break;
        case tz:
          if (i.call(this, r), this._visited.has(n))
            return this.destroy(new TypeError("Converting circular structure to JSON"));
          this._visited.add(n), this.push("["), this.pushStack({
            handler: rS,
            value: n,
            index: 0
          }), this._depth++;
          break;
        case rz:
          this.pushStack({
            handler: eS,
            awaiting: !0
          }), Promise.resolve(n).then((l) => {
            this.popStack(), this.processValue(t, r, l, i), this.processStack();
          }).catch((l) => {
            this.destroy(l);
          });
          break;
        case nz:
        case dm:
          if (i.call(this, r), n.readableEnded || n._readableState.endEmitted)
            return this.destroy(new Error("Readable Stream has ended before it was serialized. All stream data have been lost"));
          if (n.readableFlowing)
            return this.destroy(new Error("Readable Stream is in flowing mode, data may have been lost. Trying to pause stream."));
          o === dm && (this.push("["), this.pushStack({
            handler: oz,
            value: this.space ? `
` + this.space.repeat(this._depth) + "]" : "]"
          }), this._depth++);
          let a = this.pushStack({
            handler: o === dm ? nS : uz,
            value: n,
            index: 0,
            first: !1,
            ended: !1,
            awaiting: !n.readable || n.readableLength === 0
          }), u = /* @__PURE__ */ s(() => {
            a.awaiting && (a.awaiting = !1, this.processStack());
          }, "continueProcessing");
          n.once("error", (l) => this.destroy(l)), n.once("end", () => {
            a.ended = !0, u();
          }), n.on("readable", u);
          break;
      }
    }
    pushStack(t) {
      return t.prev = this._stack, this._stack = t;
    }
    popStack() {
      let { handler: t, value: r } = this._stack;
      (t === tS || t === rS || t === nS) && (this._visited.delete(r), this._depth--), this._stack = this._stack.prev;
    }
    processStack() {
      if (!(this._processing || this._ended)) {
        try {
          for (this._processing = !0; this._stack !== null && !this._stack.awaiting; )
            if (this._stack.handler.call(this), !this._processing)
              return;
          this._processing = !1;
        } catch (t) {
          this.destroy(t);
          return;
        }
        this._stack === null && !this._ended && (this._finish(), this.push(null));
      }
    }
    push(t) {
      if (t !== null) {
        if (this._buffer += t, this._buffer.length < this._readSize)
          return;
        t = this._buffer, this._buffer = "", this._processing = !1;
      }
      super.push(t);
    }
    _read(t) {
      this._readSize = t || this.readableHighWaterMark, this.processStack();
    }
    _finish() {
      this._ended = !0, this._processing = !1, this._stack = null, this._visited = null, this._buffer && this._buffer.length && super.push(this.
      _buffer), this._buffer = "";
    }
    _destroy(t, r) {
      this.error = this.error || t, this._finish(), r(t);
    }
  };
  aS.exports = /* @__PURE__ */ s(function(t, r, n) {
    return new mm(t, r, n);
  }, "createJsonStringifyStream");
});

// ../node_modules/@discoveryjs/json-ext/src/text-decoder.js
var cS = I((Qfe, lS) => {
  lS.exports = H("util").TextDecoder;
});

// ../node_modules/@discoveryjs/json-ext/src/parse-chunked.js
var fS = I((ede, hS) => {
  var { isReadableStream: lz } = El(), cz = cS(), ea = 1, pz = 2, hz = new cz();
  function pS(e) {
    return e !== null && typeof e == "object";
  }
  s(pS, "isObject");
  function gm(e, t) {
    return e.name === "SyntaxError" && t.jsonParseOffset && (e.message = e.message.replace(
      /at position (\d+)/,
      (r, n) => "at position " + (Number(n) + t.jsonParseOffset)
    )), e;
  }
  s(gm, "adjustPosition");
  function fz(e, t) {
    let r = e.length;
    e.length += t.length;
    for (let n = 0; n < t.length; n++)
      e[r + n] = t[n];
  }
  s(fz, "append");
  hS.exports = function(e) {
    let t = new ym();
    if (pS(e) && lz(e))
      return new Promise((r, n) => {
        e.on("data", (i) => {
          try {
            t.push(i);
          } catch (o) {
            n(gm(o, t)), t = null;
          }
        }).on("error", (i) => {
          t = null, n(i);
        }).on("end", () => {
          try {
            r(t.finish());
          } catch (i) {
            n(gm(i, t));
          } finally {
            t = null;
          }
        });
      });
    if (typeof e == "function") {
      let r = e();
      if (pS(r) && (Symbol.iterator in r || Symbol.asyncIterator in r))
        return new Promise(async (n, i) => {
          try {
            for await (let o of r)
              t.push(o);
            n(t.finish());
          } catch (o) {
            i(gm(o, t));
          } finally {
            t = null;
          }
        });
    }
    throw new Error(
      "Chunk emitter should be readable stream, generator, async generator or function returning an iterable object"
    );
  };
  var ym = class {
    static {
      s(this, "ChunkParser");
    }
    constructor() {
      this.value = void 0, this.valueStack = null, this.stack = new Array(100), this.lastFlushDepth = 0, this.flushDepth = 0, this.stateString =
      !1, this.stateStringEscape = !1, this.pendingByteSeq = null, this.pendingChunk = null, this.chunkOffset = 0, this.jsonParseOffset = 0;
    }
    parseAndAppend(t, r) {
      this.stack[this.lastFlushDepth - 1] === ea ? (r && (this.jsonParseOffset--, t = "{" + t + "}"), Object.assign(this.valueStack.value, JSON.
      parse(t))) : (r && (this.jsonParseOffset--, t = "[" + t + "]"), fz(this.valueStack.value, JSON.parse(t)));
    }
    prepareAddition(t) {
      let { value: r } = this.valueStack;
      if (Array.isArray(r) ? r.length !== 0 : Object.keys(r).length !== 0) {
        if (t[0] === ",")
          return this.jsonParseOffset++, t.slice(1);
        if (t[0] !== "}" && t[0] !== "]")
          return this.jsonParseOffset -= 3, "[[]" + t;
      }
      return t;
    }
    flush(t, r, n) {
      let i = t.slice(r, n);
      if (this.jsonParseOffset = this.chunkOffset + r, this.pendingChunk !== null && (i = this.pendingChunk + i, this.jsonParseOffset -= this.
      pendingChunk.length, this.pendingChunk = null), this.flushDepth === this.lastFlushDepth)
        this.flushDepth > 0 ? this.parseAndAppend(this.prepareAddition(i), !0) : (this.value = JSON.parse(i), this.valueStack = {
          value: this.value,
          prev: null
        });
      else if (this.flushDepth > this.lastFlushDepth) {
        for (let o = this.flushDepth - 1; o >= this.lastFlushDepth; o--)
          i += this.stack[o] === ea ? "}" : "]";
        this.lastFlushDepth === 0 ? (this.value = JSON.parse(i), this.valueStack = {
          value: this.value,
          prev: null
        }) : this.parseAndAppend(this.prepareAddition(i), !0);
        for (let o = this.lastFlushDepth || 1; o < this.flushDepth; o++) {
          let a = this.valueStack.value;
          if (this.stack[o - 1] === ea) {
            let u;
            for (u in a) ;
            a = a[u];
          } else
            a = a[a.length - 1];
          this.valueStack = {
            value: a,
            prev: this.valueStack
          };
        }
      } else {
        i = this.prepareAddition(i);
        for (let o = this.lastFlushDepth - 1; o >= this.flushDepth; o--)
          this.jsonParseOffset--, i = (this.stack[o] === ea ? "{" : "[") + i;
        this.parseAndAppend(i, !1);
        for (let o = this.lastFlushDepth - 1; o >= this.flushDepth; o--)
          this.valueStack = this.valueStack.prev;
      }
      this.lastFlushDepth = this.flushDepth;
    }
    push(t) {
      if (typeof t != "string") {
        if (this.pendingByteSeq !== null) {
          let o = t;
          t = new Uint8Array(this.pendingByteSeq.length + o.length), t.set(this.pendingByteSeq), t.set(o, this.pendingByteSeq.length), this.
          pendingByteSeq = null;
        }
        if (t[t.length - 1] > 127)
          for (let o = 0; o < t.length; o++) {
            let a = t[t.length - 1 - o];
            if (a >> 6 === 3) {
              o++, (o !== 4 && a >> 3 === 30 || o !== 3 && a >> 4 === 14 || o !== 2 && a >> 5 === 6) && (this.pendingByteSeq = t.slice(t.length -
              o), t = t.slice(0, -o));
              break;
            }
          }
        t = hz.decode(t);
      }
      let r = t.length, n = 0, i = 0;
      e: for (let o = 0; o < r; o++) {
        if (this.stateString) {
          for (; o < r; o++)
            if (this.stateStringEscape)
              this.stateStringEscape = !1;
            else
              switch (t.charCodeAt(o)) {
                case 34:
                  this.stateString = !1;
                  continue e;
                case 92:
                  this.stateStringEscape = !0;
              }
          break;
        }
        switch (t.charCodeAt(o)) {
          case 34:
            this.stateString = !0, this.stateStringEscape = !1;
            break;
          case 44:
            i = o;
            break;
          case 123:
            i = o + 1, this.stack[this.flushDepth++] = ea;
            break;
          case 91:
            i = o + 1, this.stack[this.flushDepth++] = pz;
            break;
          case 93:
          /* ] */
          case 125:
            i = o + 1, this.flushDepth--, this.flushDepth < this.lastFlushDepth && (this.flush(t, n, i), n = i);
            break;
          case 9:
          /* \t */
          case 10:
          /* \n */
          case 13:
          /* \r */
          case 32:
            n === o && n++, i === o && i++;
            break;
        }
      }
      i > n && this.flush(t, n, i), i < r && (this.pendingChunk !== null ? this.pendingChunk += t : this.pendingChunk = t.slice(i, r)), this.
      chunkOffset += r;
    }
    finish() {
      return this.pendingChunk !== null && (this.flush("", 0, 0), this.pendingChunk = null), this.value;
    }
  };
});

// ../node_modules/@discoveryjs/json-ext/src/index.js
var mS = I((rde, dS) => {
  dS.exports = {
    version: G2(),
    stringifyInfo: Q2(),
    stringifyStream: uS(),
    parseChunked: fS()
  };
});

// ../node_modules/graceful-fs/polyfills.js
var vS = I((mde, bS) => {
  var Jn = H("constants"), gz = process.cwd, wl = null, yz = process.env.GRACEFUL_FS_PLATFORM || process.platform;
  process.cwd = function() {
    return wl || (wl = gz.call(process)), wl;
  };
  try {
    process.cwd();
  } catch {
  }
  typeof process.chdir == "function" && (bm = process.chdir, process.chdir = function(e) {
    wl = null, bm.call(process, e);
  }, Object.setPrototypeOf && Object.setPrototypeOf(process.chdir, bm));
  var bm;
  bS.exports = Dz;
  function Dz(e) {
    Jn.hasOwnProperty("O_SYMLINK") && process.version.match(/^v0\.6\.[0-2]|^v0\.5\./) && t(e), e.lutimes || r(e), e.chown = o(e.chown), e.fchown =
    o(e.fchown), e.lchown = o(e.lchown), e.chmod = n(e.chmod), e.fchmod = n(e.fchmod), e.lchmod = n(e.lchmod), e.chownSync = a(e.chownSync),
    e.fchownSync = a(e.fchownSync), e.lchownSync = a(e.lchownSync), e.chmodSync = i(e.chmodSync), e.fchmodSync = i(e.fchmodSync), e.lchmodSync =
    i(e.lchmodSync), e.stat = u(e.stat), e.fstat = u(e.fstat), e.lstat = u(e.lstat), e.statSync = l(e.statSync), e.fstatSync = l(e.fstatSync),
    e.lstatSync = l(e.lstatSync), e.chmod && !e.lchmod && (e.lchmod = function(p, h, f) {
      f && process.nextTick(f);
    }, e.lchmodSync = function() {
    }), e.chown && !e.lchown && (e.lchown = function(p, h, f, d) {
      d && process.nextTick(d);
    }, e.lchownSync = function() {
    }), yz === "win32" && (e.rename = typeof e.rename != "function" ? e.rename : function(p) {
      function h(f, d, m) {
        var g = Date.now(), b = 0;
        p(f, d, /* @__PURE__ */ s(function y(E) {
          if (E && (E.code === "EACCES" || E.code === "EPERM" || E.code === "EBUSY") && Date.now() - g < 6e4) {
            setTimeout(function() {
              e.stat(d, function(A, k) {
                A && A.code === "ENOENT" ? p(f, d, y) : m(E);
              });
            }, b), b < 100 && (b += 10);
            return;
          }
          m && m(E);
        }, "CB"));
      }
      return s(h, "rename"), Object.setPrototypeOf && Object.setPrototypeOf(h, p), h;
    }(e.rename)), e.read = typeof e.read != "function" ? e.read : function(p) {
      function h(f, d, m, g, b, y) {
        var E;
        if (y && typeof y == "function") {
          var A = 0;
          E = /* @__PURE__ */ s(function(k, O, w) {
            if (k && k.code === "EAGAIN" && A < 10)
              return A++, p.call(e, f, d, m, g, b, E);
            y.apply(this, arguments);
          }, "callback");
        }
        return p.call(e, f, d, m, g, b, E);
      }
      return s(h, "read"), Object.setPrototypeOf && Object.setPrototypeOf(h, p), h;
    }(e.read), e.readSync = typeof e.readSync != "function" ? e.readSync : /* @__PURE__ */ function(p) {
      return function(h, f, d, m, g) {
        for (var b = 0; ; )
          try {
            return p.call(e, h, f, d, m, g);
          } catch (y) {
            if (y.code === "EAGAIN" && b < 10) {
              b++;
              continue;
            }
            throw y;
          }
      };
    }(e.readSync);
    function t(p) {
      p.lchmod = function(h, f, d) {
        p.open(
          h,
          Jn.O_WRONLY | Jn.O_SYMLINK,
          f,
          function(m, g) {
            if (m) {
              d && d(m);
              return;
            }
            p.fchmod(g, f, function(b) {
              p.close(g, function(y) {
                d && d(b || y);
              });
            });
          }
        );
      }, p.lchmodSync = function(h, f) {
        var d = p.openSync(h, Jn.O_WRONLY | Jn.O_SYMLINK, f), m = !0, g;
        try {
          g = p.fchmodSync(d, f), m = !1;
        } finally {
          if (m)
            try {
              p.closeSync(d);
            } catch {
            }
          else
            p.closeSync(d);
        }
        return g;
      };
    }
    s(t, "patchLchmod");
    function r(p) {
      Jn.hasOwnProperty("O_SYMLINK") && p.futimes ? (p.lutimes = function(h, f, d, m) {
        p.open(h, Jn.O_SYMLINK, function(g, b) {
          if (g) {
            m && m(g);
            return;
          }
          p.futimes(b, f, d, function(y) {
            p.close(b, function(E) {
              m && m(y || E);
            });
          });
        });
      }, p.lutimesSync = function(h, f, d) {
        var m = p.openSync(h, Jn.O_SYMLINK), g, b = !0;
        try {
          g = p.futimesSync(m, f, d), b = !1;
        } finally {
          if (b)
            try {
              p.closeSync(m);
            } catch {
            }
          else
            p.closeSync(m);
        }
        return g;
      }) : p.futimes && (p.lutimes = function(h, f, d, m) {
        m && process.nextTick(m);
      }, p.lutimesSync = function() {
      });
    }
    s(r, "patchLutimes");
    function n(p) {
      return p && function(h, f, d) {
        return p.call(e, h, f, function(m) {
          c(m) && (m = null), d && d.apply(this, arguments);
        });
      };
    }
    s(n, "chmodFix");
    function i(p) {
      return p && function(h, f) {
        try {
          return p.call(e, h, f);
        } catch (d) {
          if (!c(d)) throw d;
        }
      };
    }
    s(i, "chmodFixSync");
    function o(p) {
      return p && function(h, f, d, m) {
        return p.call(e, h, f, d, function(g) {
          c(g) && (g = null), m && m.apply(this, arguments);
        });
      };
    }
    s(o, "chownFix");
    function a(p) {
      return p && function(h, f, d) {
        try {
          return p.call(e, h, f, d);
        } catch (m) {
          if (!c(m)) throw m;
        }
      };
    }
    s(a, "chownFixSync");
    function u(p) {
      return p && function(h, f, d) {
        typeof f == "function" && (d = f, f = null);
        function m(g, b) {
          b && (b.uid < 0 && (b.uid += 4294967296), b.gid < 0 && (b.gid += 4294967296)), d && d.apply(this, arguments);
        }
        return s(m, "callback"), f ? p.call(e, h, f, m) : p.call(e, h, m);
      };
    }
    s(u, "statFix");
    function l(p) {
      return p && function(h, f) {
        var d = f ? p.call(e, h, f) : p.call(e, h);
        return d && (d.uid < 0 && (d.uid += 4294967296), d.gid < 0 && (d.gid += 4294967296)), d;
      };
    }
    s(l, "statFixSync");
    function c(p) {
      if (!p || p.code === "ENOSYS")
        return !0;
      var h = !process.getuid || process.getuid() !== 0;
      return !!(h && (p.code === "EINVAL" || p.code === "EPERM"));
    }
    s(c, "chownErOk");
  }
  s(Dz, "patch");
});

// ../node_modules/graceful-fs/legacy-streams.js
var wS = I((yde, CS) => {
  var ES = H("stream").Stream;
  CS.exports = xz;
  function xz(e) {
    return {
      ReadStream: t,
      WriteStream: r
    };
    function t(n, i) {
      if (!(this instanceof t)) return new t(n, i);
      ES.call(this);
      var o = this;
      this.path = n, this.fd = null, this.readable = !0, this.paused = !1, this.flags = "r", this.mode = 438, this.bufferSize = 64 * 1024, i =
      i || {};
      for (var a = Object.keys(i), u = 0, l = a.length; u < l; u++) {
        var c = a[u];
        this[c] = i[c];
      }
      if (this.encoding && this.setEncoding(this.encoding), this.start !== void 0) {
        if (typeof this.start != "number")
          throw TypeError("start must be a Number");
        if (this.end === void 0)
          this.end = 1 / 0;
        else if (typeof this.end != "number")
          throw TypeError("end must be a Number");
        if (this.start > this.end)
          throw new Error("start must be <= end");
        this.pos = this.start;
      }
      if (this.fd !== null) {
        process.nextTick(function() {
          o._read();
        });
        return;
      }
      e.open(this.path, this.flags, this.mode, function(p, h) {
        if (p) {
          o.emit("error", p), o.readable = !1;
          return;
        }
        o.fd = h, o.emit("open", h), o._read();
      });
    }
    function r(n, i) {
      if (!(this instanceof r)) return new r(n, i);
      ES.call(this), this.path = n, this.fd = null, this.writable = !0, this.flags = "w", this.encoding = "binary", this.mode = 438, this.bytesWritten =
      0, i = i || {};
      for (var o = Object.keys(i), a = 0, u = o.length; a < u; a++) {
        var l = o[a];
        this[l] = i[l];
      }
      if (this.start !== void 0) {
        if (typeof this.start != "number")
          throw TypeError("start must be a Number");
        if (this.start < 0)
          throw new Error("start must be >= zero");
        this.pos = this.start;
      }
      this.busy = !1, this._queue = [], this.fd === null && (this._open = e.open, this._queue.push([this._open, this.path, this.flags, this.
      mode, void 0]), this.flush());
    }
  }
  s(xz, "legacy");
});

// ../node_modules/graceful-fs/clone.js
var AS = I((xde, SS) => {
  "use strict";
  SS.exports = vz;
  var bz = Object.getPrototypeOf || function(e) {
    return e.__proto__;
  };
  function vz(e) {
    if (e === null || typeof e != "object")
      return e;
    if (e instanceof Object)
      var t = { __proto__: bz(e) };
    else
      var t = /* @__PURE__ */ Object.create(null);
    return Object.getOwnPropertyNames(e).forEach(function(r) {
      Object.defineProperty(t, r, Object.getOwnPropertyDescriptor(e, r));
    }), t;
  }
  s(vz, "clone");
});

// ../node_modules/graceful-fs/graceful-fs.js
var TS = I((vde, Cm) => {
  var st = H("fs"), Ez = vS(), Cz = wS(), wz = AS(), Sl = H("util"), Ct, Fl;
  typeof Symbol == "function" && typeof Symbol.for == "function" ? (Ct = Symbol.for("graceful-fs.queue"), Fl = Symbol.for("graceful-fs.previ\
ous")) : (Ct = "___graceful-fs.queue", Fl = "___graceful-fs.previous");
  function Sz() {
  }
  s(Sz, "noop");
  function kS(e, t) {
    Object.defineProperty(e, Ct, {
      get: /* @__PURE__ */ s(function() {
        return t;
      }, "get")
    });
  }
  s(kS, "publishQueue");
  var Ei = Sz;
  Sl.debuglog ? Ei = Sl.debuglog("gfs4") : /\bgfs4\b/i.test(process.env.NODE_DEBUG || "") && (Ei = /* @__PURE__ */ s(function() {
    var e = Sl.format.apply(Sl, arguments);
    e = "GFS4: " + e.split(/\n/).join(`
GFS4: `), console.error(e);
  }, "debug"));
  st[Ct] || (FS = global[Ct] || [], kS(st, FS), st.close = function(e) {
    function t(r, n) {
      return e.call(st, r, function(i) {
        i || _S(), typeof n == "function" && n.apply(this, arguments);
      });
    }
    return s(t, "close"), Object.defineProperty(t, Fl, {
      value: e
    }), t;
  }(st.close), st.closeSync = function(e) {
    function t(r) {
      e.apply(st, arguments), _S();
    }
    return s(t, "closeSync"), Object.defineProperty(t, Fl, {
      value: e
    }), t;
  }(st.closeSync), /\bgfs4\b/i.test(process.env.NODE_DEBUG || "") && process.on("exit", function() {
    Ei(st[Ct]), H("assert").equal(st[Ct].length, 0);
  }));
  var FS;
  global[Ct] || kS(global, st[Ct]);
  Cm.exports = vm(wz(st));
  process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !st.__patched && (Cm.exports = vm(st), st.__patched = !0);
  function vm(e) {
    Ez(e), e.gracefulify = vm, e.createReadStream = O, e.createWriteStream = w;
    var t = e.readFile;
    e.readFile = r;
    function r(F, $, R) {
      return typeof $ == "function" && (R = $, $ = null), U(F, $, R);
      function U(W, Y, j, N) {
        return t(W, Y, function(z) {
          z && (z.code === "EMFILE" || z.code === "ENFILE") ? Bs([U, [W, Y, j], z, N || Date.now(), Date.now()]) : typeof j == "function" &&
          j.apply(this, arguments);
        });
      }
      s(U, "go$readFile");
    }
    s(r, "readFile");
    var n = e.writeFile;
    e.writeFile = i;
    function i(F, $, R, U) {
      return typeof R == "function" && (U = R, R = null), W(F, $, R, U);
      function W(Y, j, N, z, Q) {
        return n(Y, j, N, function(ie) {
          ie && (ie.code === "EMFILE" || ie.code === "ENFILE") ? Bs([W, [Y, j, N, z], ie, Q || Date.now(), Date.now()]) : typeof z == "funct\
ion" && z.apply(this, arguments);
        });
      }
      s(W, "go$writeFile");
    }
    s(i, "writeFile");
    var o = e.appendFile;
    o && (e.appendFile = a);
    function a(F, $, R, U) {
      return typeof R == "function" && (U = R, R = null), W(F, $, R, U);
      function W(Y, j, N, z, Q) {
        return o(Y, j, N, function(ie) {
          ie && (ie.code === "EMFILE" || ie.code === "ENFILE") ? Bs([W, [Y, j, N, z], ie, Q || Date.now(), Date.now()]) : typeof z == "funct\
ion" && z.apply(this, arguments);
        });
      }
      s(W, "go$appendFile");
    }
    s(a, "appendFile");
    var u = e.copyFile;
    u && (e.copyFile = l);
    function l(F, $, R, U) {
      return typeof R == "function" && (U = R, R = 0), W(F, $, R, U);
      function W(Y, j, N, z, Q) {
        return u(Y, j, N, function(ie) {
          ie && (ie.code === "EMFILE" || ie.code === "ENFILE") ? Bs([W, [Y, j, N, z], ie, Q || Date.now(), Date.now()]) : typeof z == "funct\
ion" && z.apply(this, arguments);
        });
      }
      s(W, "go$copyFile");
    }
    s(l, "copyFile");
    var c = e.readdir;
    e.readdir = h;
    var p = /^v[0-5]\./;
    function h(F, $, R) {
      typeof $ == "function" && (R = $, $ = null);
      var U = p.test(process.version) ? /* @__PURE__ */ s(function(j, N, z, Q) {
        return c(j, W(
          j,
          N,
          z,
          Q
        ));
      }, "go$readdir") : /* @__PURE__ */ s(function(j, N, z, Q) {
        return c(j, N, W(
          j,
          N,
          z,
          Q
        ));
      }, "go$readdir");
      return U(F, $, R);
      function W(Y, j, N, z) {
        return function(Q, ie) {
          Q && (Q.code === "EMFILE" || Q.code === "ENFILE") ? Bs([
            U,
            [Y, j, N],
            Q,
            z || Date.now(),
            Date.now()
          ]) : (ie && ie.sort && ie.sort(), typeof N == "function" && N.call(this, Q, ie));
        };
      }
    }
    if (s(h, "readdir"), process.version.substr(0, 4) === "v0.8") {
      var f = Cz(e);
      y = f.ReadStream, A = f.WriteStream;
    }
    var d = e.ReadStream;
    d && (y.prototype = Object.create(d.prototype), y.prototype.open = E);
    var m = e.WriteStream;
    m && (A.prototype = Object.create(m.prototype), A.prototype.open = k), Object.defineProperty(e, "ReadStream", {
      get: /* @__PURE__ */ s(function() {
        return y;
      }, "get"),
      set: /* @__PURE__ */ s(function(F) {
        y = F;
      }, "set"),
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(e, "WriteStream", {
      get: /* @__PURE__ */ s(function() {
        return A;
      }, "get"),
      set: /* @__PURE__ */ s(function(F) {
        A = F;
      }, "set"),
      enumerable: !0,
      configurable: !0
    });
    var g = y;
    Object.defineProperty(e, "FileReadStream", {
      get: /* @__PURE__ */ s(function() {
        return g;
      }, "get"),
      set: /* @__PURE__ */ s(function(F) {
        g = F;
      }, "set"),
      enumerable: !0,
      configurable: !0
    });
    var b = A;
    Object.defineProperty(e, "FileWriteStream", {
      get: /* @__PURE__ */ s(function() {
        return b;
      }, "get"),
      set: /* @__PURE__ */ s(function(F) {
        b = F;
      }, "set"),
      enumerable: !0,
      configurable: !0
    });
    function y(F, $) {
      return this instanceof y ? (d.apply(this, arguments), this) : y.apply(Object.create(y.prototype), arguments);
    }
    s(y, "ReadStream");
    function E() {
      var F = this;
      T(F.path, F.flags, F.mode, function($, R) {
        $ ? (F.autoClose && F.destroy(), F.emit("error", $)) : (F.fd = R, F.emit("open", R), F.read());
      });
    }
    s(E, "ReadStream$open");
    function A(F, $) {
      return this instanceof A ? (m.apply(this, arguments), this) : A.apply(Object.create(A.prototype), arguments);
    }
    s(A, "WriteStream");
    function k() {
      var F = this;
      T(F.path, F.flags, F.mode, function($, R) {
        $ ? (F.destroy(), F.emit("error", $)) : (F.fd = R, F.emit("open", R));
      });
    }
    s(k, "WriteStream$open");
    function O(F, $) {
      return new e.ReadStream(F, $);
    }
    s(O, "createReadStream");
    function w(F, $) {
      return new e.WriteStream(F, $);
    }
    s(w, "createWriteStream");
    var C = e.open;
    e.open = T;
    function T(F, $, R, U) {
      return typeof R == "function" && (U = R, R = null), W(F, $, R, U);
      function W(Y, j, N, z, Q) {
        return C(Y, j, N, function(ie, B) {
          ie && (ie.code === "EMFILE" || ie.code === "ENFILE") ? Bs([W, [Y, j, N, z], ie, Q || Date.now(), Date.now()]) : typeof z == "funct\
ion" && z.apply(this, arguments);
        });
      }
      s(W, "go$open");
    }
    return s(T, "open"), e;
  }
  s(vm, "patch");
  function Bs(e) {
    Ei("ENQUEUE", e[0].name, e[1]), st[Ct].push(e), Em();
  }
  s(Bs, "enqueue");
  var Al;
  function _S() {
    for (var e = Date.now(), t = 0; t < st[Ct].length; ++t)
      st[Ct][t].length > 2 && (st[Ct][t][3] = e, st[Ct][t][4] = e);
    Em();
  }
  s(_S, "resetQueue");
  function Em() {
    if (clearTimeout(Al), Al = void 0, st[Ct].length !== 0) {
      var e = st[Ct].shift(), t = e[0], r = e[1], n = e[2], i = e[3], o = e[4];
      if (i === void 0)
        Ei("RETRY", t.name, r), t.apply(null, r);
      else if (Date.now() - i >= 6e4) {
        Ei("TIMEOUT", t.name, r);
        var a = r.pop();
        typeof a == "function" && a.call(null, n);
      } else {
        var u = Date.now() - o, l = Math.max(o - i, 1), c = Math.min(l * 1.2, 100);
        u >= c ? (Ei("RETRY", t.name, r), t.apply(null, r.concat([i]))) : st[Ct].push(e);
      }
      Al === void 0 && (Al = setTimeout(Em, 0));
    }
  }
  s(Em, "retry");
});

// ../node_modules/watchpack/lib/reducePlan.js
var PS = I((Cde, IS) => {
  "use strict";
  var Az = H("path");
  IS.exports = (e, t) => {
    let r = /* @__PURE__ */ new Map();
    for (let [o, a] of e)
      r.set(o, {
        filePath: o,
        parent: void 0,
        children: void 0,
        entries: 1,
        active: !0,
        value: a
      });
    let n = r.size;
    for (let o of r.values()) {
      let a = Az.dirname(o.filePath);
      if (a !== o.filePath) {
        let u = r.get(a);
        if (u === void 0)
          u = {
            filePath: a,
            parent: void 0,
            children: [o],
            entries: o.entries,
            active: !1,
            value: void 0
          }, r.set(a, u), o.parent = u;
        else {
          o.parent = u, u.children === void 0 ? u.children = [o] : u.children.push(o);
          do
            u.entries += o.entries, u = u.parent;
          while (u);
        }
      }
    }
    for (; n > t; ) {
      let o = n - t, a, u = 1 / 0;
      for (let h of r.values()) {
        if (h.entries <= 1 || !h.children || !h.parent || h.children.length === 0 || h.children.length === 1 && !h.value) continue;
        let f = h.entries - 1 >= o ? h.entries - 1 - o : o - h.entries + 1 + t * 0.3;
        f < u && (a = h, u = f);
      }
      if (!a) break;
      let l = a.entries - 1;
      a.active = !0, a.entries = 1, n -= l;
      let c = a.parent;
      for (; c; )
        c.entries -= l, c = c.parent;
      let p = new Set(a.children);
      for (let h of p)
        if (h.active = !1, h.entries = 0, h.children)
          for (let f of h.children) p.add(f);
    }
    let i = /* @__PURE__ */ new Map();
    for (let o of r.values()) {
      if (!o.active) continue;
      let a = /* @__PURE__ */ new Map(), u = /* @__PURE__ */ new Set([o]);
      for (let l of u)
        if (!(l.active && l !== o)) {
          if (l.value)
            if (Array.isArray(l.value))
              for (let c of l.value)
                a.set(c, l.filePath);
            else
              a.set(l.value, l.filePath);
          if (l.children)
            for (let c of l.children)
              u.add(c);
        }
      i.set(o.filePath, a);
    }
    return i;
  };
});

// ../node_modules/watchpack/lib/watchEventSource.js
var km = I((Tl) => {
  "use strict";
  var OS = H("fs"), kl = H("path"), { EventEmitter: Fz } = H("events"), _z = PS(), RS = H("os").platform() === "darwin", kz = H("os").platform() ===
  "win32", Tz = RS || kz, BS = +process.env.WATCHPACK_WATCHER_LIMIT || (RS ? 2e3 : 1e4), _l = !!process.env.WATCHPACK_RECURSIVE_WATCHER_LOGGING,
  Sm = !1, Os = 0, ta = /* @__PURE__ */ new Map(), ra = /* @__PURE__ */ new Map(), na = /* @__PURE__ */ new Map(), Ci = /* @__PURE__ */ new Map(),
  Am = class {
    static {
      s(this, "DirectWatcher");
    }
    constructor(t) {
      this.filePath = t, this.watchers = /* @__PURE__ */ new Set(), this.watcher = void 0;
      try {
        let r = OS.watch(t);
        this.watcher = r, r.on("change", (n, i) => {
          for (let o of this.watchers)
            o.emit("change", n, i);
        }), r.on("error", (n) => {
          for (let i of this.watchers)
            i.emit("error", n);
        });
      } catch (r) {
        process.nextTick(() => {
          for (let n of this.watchers)
            n.emit("error", r);
        });
      }
      Os++;
    }
    add(t) {
      Ci.set(t, this), this.watchers.add(t);
    }
    remove(t) {
      this.watchers.delete(t), this.watchers.size === 0 && (na.delete(this.filePath), Os--, this.watcher && this.watcher.close());
    }
    getWatchers() {
      return this.watchers;
    }
  }, Fm = class {
    static {
      s(this, "RecursiveWatcher");
    }
    constructor(t) {
      this.rootPath = t, this.mapWatcherToPath = /* @__PURE__ */ new Map(), this.mapPathToWatchers = /* @__PURE__ */ new Map(), this.watcher =
      void 0;
      try {
        let r = OS.watch(t, {
          recursive: !0
        });
        this.watcher = r, r.on("change", (n, i) => {
          if (i) {
            let o = kl.dirname(i), a = this.mapPathToWatchers.get(o);
            if (_l && process.stderr.write(
              `[watchpack] dispatch ${n} event in recursive watcher (${this.rootPath}) for '${i}' to ${a ? a.size : 0} watchers
`
            ), a === void 0) return;
            for (let u of a)
              u.emit("change", n, kl.basename(i));
          } else {
            _l && process.stderr.write(
              `[watchpack] dispatch ${n} event in recursive watcher (${this.rootPath}) to all watchers
`
            );
            for (let o of this.mapWatcherToPath.keys())
              o.emit("change", n);
          }
        }), r.on("error", (n) => {
          for (let i of this.mapWatcherToPath.keys())
            i.emit("error", n);
        });
      } catch (r) {
        process.nextTick(() => {
          for (let n of this.mapWatcherToPath.keys())
            n.emit("error", r);
        });
      }
      Os++, _l && process.stderr.write(
        `[watchpack] created recursive watcher at ${t}
`
      );
    }
    add(t, r) {
      Ci.set(r, this);
      let n = t.slice(this.rootPath.length + 1) || ".";
      this.mapWatcherToPath.set(r, n);
      let i = this.mapPathToWatchers.get(n);
      if (i === void 0) {
        let o = /* @__PURE__ */ new Set();
        o.add(r), this.mapPathToWatchers.set(n, o);
      } else
        i.add(r);
    }
    remove(t) {
      let r = this.mapWatcherToPath.get(t);
      if (!r) return;
      this.mapWatcherToPath.delete(t);
      let n = this.mapPathToWatchers.get(r);
      n.delete(t), n.size === 0 && this.mapPathToWatchers.delete(r), this.mapWatcherToPath.size === 0 && (ra.delete(this.rootPath), Os--, this.
      watcher && this.watcher.close(), _l && process.stderr.write(
        `[watchpack] closed recursive watcher at ${this.rootPath}
`
      ));
    }
    getWatchers() {
      return this.mapWatcherToPath;
    }
  }, _m = class extends Fz {
    static {
      s(this, "Watcher");
    }
    close() {
      if (ta.has(this)) {
        ta.delete(this);
        return;
      }
      Ci.get(this).remove(this), Ci.delete(this);
    }
  }, wm = /* @__PURE__ */ s((e) => {
    let t = na.get(e);
    if (t !== void 0) return t;
    let r = new Am(e);
    return na.set(e, r), r;
  }, "createDirectWatcher"), Iz = /* @__PURE__ */ s((e) => {
    let t = ra.get(e);
    if (t !== void 0) return t;
    let r = new Fm(e);
    return ra.set(e, r), r;
  }, "createRecursiveWatcher"), NS = /* @__PURE__ */ s(() => {
    let e = /* @__PURE__ */ new Map(), t = /* @__PURE__ */ s((n, i) => {
      let o = e.get(i);
      o === void 0 ? e.set(i, n) : Array.isArray(o) ? o.push(n) : e.set(i, [o, n]);
    }, "addWatcher");
    for (let [n, i] of ta)
      t(n, i);
    if (ta.clear(), !Tz || BS - Os >= e.size) {
      for (let [n, i] of e) {
        let o = wm(n);
        if (Array.isArray(i))
          for (let a of i) o.add(a);
        else
          o.add(i);
      }
      return;
    }
    for (let n of ra.values())
      for (let [i, o] of n.getWatchers())
        t(i, kl.join(n.rootPath, o));
    for (let n of na.values())
      for (let i of n.getWatchers())
        t(i, n.filePath);
    let r = _z(e, BS * 0.9);
    for (let [n, i] of r)
      if (i.size === 1)
        for (let [o, a] of i) {
          let u = wm(a), l = Ci.get(o);
          l !== u && (u.add(o), l !== void 0 && l.remove(o));
        }
      else {
        let o = new Set(i.values());
        if (o.size > 1) {
          let a = Iz(n);
          for (let [u, l] of i) {
            let c = Ci.get(u);
            c !== a && (a.add(l, u), c !== void 0 && c.remove(u));
          }
        } else
          for (let a of o) {
            let u = wm(a);
            for (let l of i.keys()) {
              let c = Ci.get(l);
              c !== u && (u.add(l), c !== void 0 && c.remove(l));
            }
          }
      }
  }, "execute");
  Tl.watch = (e) => {
    let t = new _m(), r = na.get(e);
    if (r !== void 0)
      return r.add(t), t;
    let n = e;
    for (; ; ) {
      let i = ra.get(n);
      if (i !== void 0)
        return i.add(e, t), t;
      let o = kl.dirname(n);
      if (o === n) break;
      n = o;
    }
    return ta.set(t, e), Sm || NS(), t;
  };
  Tl.batch = (e) => {
    Sm = !0;
    try {
      e();
    } finally {
      Sm = !1, NS();
    }
  };
  Tl.getNumberOfWatchers = () => Os;
});

// ../node_modules/watchpack/lib/DirectoryWatcher.js
var $S = I((Ade, Pm) => {
  "use strict";
  var qS = H("events").EventEmitter, Il = TS(), ia = H("path"), Pz = km(), Ns = Object.freeze({}), Ot = 2e3, LS = H("os").platform() === "da\
rwin", sa = process.env.WATCHPACK_POLLING, jS = `${+sa}` === sa ? +sa : !!sa && sa !== "false";
  function Rs(e) {
    return e.toLowerCase();
  }
  s(Rs, "withoutCase");
  function Bz(e, t) {
    return function() {
      if (--e === 0)
        return t();
    };
  }
  s(Bz, "needCalls");
  var Tm = class extends qS {
    static {
      s(this, "Watcher");
    }
    constructor(t, r, n) {
      super(), this.directoryWatcher = t, this.path = r, this.startTime = n && +n;
    }
    checkStartTime(t, r) {
      let n = this.startTime;
      return typeof n != "number" ? !r : n <= t;
    }
    close() {
      this.emit("closed");
    }
  }, Im = class extends qS {
    static {
      s(this, "DirectoryWatcher");
    }
    constructor(t, r, n) {
      super(), jS && (n.poll = jS), this.watcherManager = t, this.options = n, this.path = r, this.files = /* @__PURE__ */ new Map(), this.filesWithoutCase =
      /* @__PURE__ */ new Map(), this.directories = /* @__PURE__ */ new Map(), this.lastWatchEvent = 0, this.initialScan = !0, this.ignored =
      n.ignored || (() => !1), this.nestedWatching = !1, this.polledWatching = typeof n.poll == "number" ? n.poll : n.poll ? 5007 : !1, this.
      timeout = void 0, this.initialScanRemoved = /* @__PURE__ */ new Set(), this.initialScanFinished = void 0, this.watchers = /* @__PURE__ */ new Map(),
      this.parentWatcher = null, this.refs = 0, this._activeEvents = /* @__PURE__ */ new Map(), this.closed = !1, this.scanning = !1, this.scanAgain =
      !1, this.scanAgainInitial = !1, this.createWatcher(), this.doScan(!0);
    }
    createWatcher() {
      try {
        this.polledWatching ? this.watcher = {
          close: /* @__PURE__ */ s(() => {
            this.timeout && (clearTimeout(this.timeout), this.timeout = void 0);
          }, "close")
        } : (LS && this.watchInParentDirectory(), this.watcher = Pz.watch(this.path), this.watcher.on("change", this.onWatchEvent.bind(this)),
        this.watcher.on("error", this.onWatcherError.bind(this)));
      } catch (t) {
        this.onWatcherError(t);
      }
    }
    forEachWatcher(t, r) {
      let n = this.watchers.get(Rs(t));
      if (n !== void 0)
        for (let i of n)
          r(i);
    }
    setMissing(t, r, n) {
      this.initialScan && this.initialScanRemoved.add(t);
      let i = this.directories.get(t);
      if (i && (this.nestedWatching && i.close(), this.directories.delete(t), this.forEachWatcher(t, (a) => a.emit("remove", n)), r || this.
      forEachWatcher(
        this.path,
        (a) => a.emit("change", t, null, n, r)
      )), this.files.get(t)) {
        this.files.delete(t);
        let a = Rs(t), u = this.filesWithoutCase.get(a) - 1;
        u <= 0 ? (this.filesWithoutCase.delete(a), this.forEachWatcher(t, (l) => l.emit("remove", n))) : this.filesWithoutCase.set(a, u), r ||
        this.forEachWatcher(
          this.path,
          (l) => l.emit("change", t, null, n, r)
        );
      }
    }
    setFileTime(t, r, n, i, o) {
      let a = Date.now();
      if (this.ignored(t)) return;
      let u = this.files.get(t), l, c;
      if (n)
        l = Math.min(a, r) + Ot, c = Ot;
      else if (l = a, c = 0, u && u.timestamp === r && r + Ot < a)
        return;
      if (!(i && u && u.timestamp === r)) {
        if (this.files.set(t, {
          safeTime: l,
          accuracy: c,
          timestamp: r
        }), u)
          n || this.forEachWatcher(t, (p) => p.emit("change", r, o));
        else {
          let p = Rs(t), h = this.filesWithoutCase.get(p);
          this.filesWithoutCase.set(p, (h || 0) + 1), h !== void 0 && this.doScan(!1), this.forEachWatcher(t, (f) => {
            (!n || f.checkStartTime(l, n)) && f.emit("change", r, o);
          });
        }
        this.forEachWatcher(this.path, (p) => {
          (!n || p.checkStartTime(l, n)) && p.emit("change", t, l, o, n);
        });
      }
    }
    setDirectory(t, r, n, i) {
      if (!this.ignored(t)) {
        if (t === this.path)
          n || this.forEachWatcher(
            this.path,
            (o) => o.emit("change", t, r, i, n)
          );
        else if (!this.directories.get(t)) {
          let a = Date.now();
          this.nestedWatching ? this.createNestedWatcher(t) : this.directories.set(t, !0);
          let u;
          n ? u = Math.min(a, r) + Ot : u = a, this.forEachWatcher(t, (l) => {
            (!n || l.checkStartTime(u, !1)) && l.emit("change", r, i);
          }), this.forEachWatcher(this.path, (l) => {
            (!n || l.checkStartTime(u, n)) && l.emit("change", t, u, i, n);
          });
        }
      }
    }
    createNestedWatcher(t) {
      let r = this.watcherManager.watchDirectory(t, 1);
      r.on("change", (n, i, o, a) => {
        this.forEachWatcher(this.path, (u) => {
          (!a || u.checkStartTime(i, a)) && u.emit("change", n, i, o, a);
        });
      }), this.directories.set(t, r);
    }
    setNestedWatching(t) {
      if (this.nestedWatching !== !!t)
        if (this.nestedWatching = !!t, this.nestedWatching)
          for (let r of this.directories.keys())
            this.createNestedWatcher(r);
        else
          for (let [r, n] of this.directories)
            n.close(), this.directories.set(r, !0);
    }
    watch(t, r) {
      let n = Rs(t), i = this.watchers.get(n);
      i === void 0 && (i = /* @__PURE__ */ new Set(), this.watchers.set(n, i)), this.refs++;
      let o = new Tm(this, t, r);
      o.on("closed", () => {
        if (--this.refs <= 0) {
          this.close();
          return;
        }
        i.delete(o), i.size === 0 && (this.watchers.delete(n), this.path === t && this.setNestedWatching(!1));
      }), i.add(o);
      let a;
      if (t === this.path) {
        this.setNestedWatching(!0), a = this.lastWatchEvent;
        for (let u of this.files.values())
          Pl(u), a = Math.max(a, u.safeTime);
      } else {
        let u = this.files.get(t);
        u ? (Pl(u), a = u.safeTime) : a = 0;
      }
      return a ? a >= r && process.nextTick(() => {
        this.closed || (t === this.path ? o.emit(
          "change",
          t,
          a,
          "watch (outdated on attach)",
          !0
        ) : o.emit(
          "change",
          a,
          "watch (outdated on attach)",
          !0
        ));
      }) : this.initialScan ? this.initialScanRemoved.has(t) && process.nextTick(() => {
        this.closed || o.emit("remove");
      }) : t !== this.path && !this.directories.has(t) && o.checkStartTime(this.initialScanFinished, !1) && process.nextTick(() => {
        this.closed || o.emit("initial-missing", "watch (missing on attach)");
      }), o;
    }
    onWatchEvent(t, r) {
      if (this.closed) return;
      if (!r) {
        this.doScan(!1);
        return;
      }
      let n = ia.join(this.path, r);
      if (!this.ignored(n))
        if (this._activeEvents.get(r) === void 0) {
          this._activeEvents.set(r, !1);
          let i = /* @__PURE__ */ s(() => {
            this.closed || (this._activeEvents.set(r, !1), Il.lstat(n, (o, a) => {
              if (!this.closed) {
                if (this._activeEvents.get(r) === !0) {
                  process.nextTick(i);
                  return;
                }
                this._activeEvents.delete(r), o && (o.code !== "ENOENT" && o.code !== "EPERM" && o.code !== "EBUSY" ? this.onStatsError(o) :
                r === ia.basename(this.path) && (Il.existsSync(this.path) || this.onDirectoryRemoved("stat failed"))), this.lastWatchEvent =
                Date.now(), a ? a.isDirectory() ? this.setDirectory(
                  n,
                  +a.birthtime || 1,
                  !1,
                  t
                ) : (a.isFile() || a.isSymbolicLink()) && (a.mtime && MS(a.mtime), this.setFileTime(
                  n,
                  +a.mtime || +a.ctime || 1,
                  !1,
                  !1,
                  t
                )) : this.setMissing(n, !1, t);
              }
            }));
          }, "checkStats");
          process.nextTick(i);
        } else
          this._activeEvents.set(r, !0);
    }
    onWatcherError(t) {
      this.closed || t && (t.code !== "EPERM" && t.code !== "ENOENT" && console.error("Watchpack Error (watcher): " + t), this.onDirectoryRemoved(
      "watch error"));
    }
    onStatsError(t) {
      t && console.error("Watchpack Error (stats): " + t);
    }
    onScanError(t) {
      t && console.error("Watchpack Error (initial scan): " + t), this.onScanFinished();
    }
    onScanFinished() {
      this.polledWatching && (this.timeout = setTimeout(() => {
        this.closed || this.doScan(!1);
      }, this.polledWatching));
    }
    onDirectoryRemoved(t) {
      this.watcher && (this.watcher.close(), this.watcher = null), this.watchInParentDirectory();
      let r = `directory-removed (${t})`;
      for (let n of this.directories.keys())
        this.setMissing(n, null, r);
      for (let n of this.files.keys())
        this.setMissing(n, null, r);
    }
    watchInParentDirectory() {
      if (!this.parentWatcher) {
        let t = ia.dirname(this.path);
        if (ia.dirname(t) === t) return;
        this.parentWatcher = this.watcherManager.watchFile(this.path, 1), this.parentWatcher.on("change", (r, n) => {
          this.closed || ((!LS || this.polledWatching) && this.parentWatcher && (this.parentWatcher.close(), this.parentWatcher = null), this.
          watcher || (this.createWatcher(), this.doScan(!1), this.forEachWatcher(
            this.path,
            (i) => i.emit("change", this.path, r, n, !1)
          )));
        }), this.parentWatcher.on("remove", () => {
          this.onDirectoryRemoved("parent directory removed");
        });
      }
    }
    doScan(t) {
      if (this.scanning) {
        this.scanAgain ? t || (this.scanAgainInitial = !1) : (this.scanAgain = !0, this.scanAgainInitial = t);
        return;
      }
      this.scanning = !0, this.timeout && (clearTimeout(this.timeout), this.timeout = void 0), process.nextTick(() => {
        this.closed || Il.readdir(this.path, (r, n) => {
          if (this.closed) return;
          if (r) {
            if (r.code === "ENOENT" || r.code === "EPERM" ? this.onDirectoryRemoved("scan readdir failed") : this.onScanError(r), this.initialScan =
            !1, this.initialScanFinished = Date.now(), t)
              for (let a of this.watchers.values())
                for (let u of a)
                  u.checkStartTime(this.initialScanFinished, !1) && u.emit(
                    "initial-missing",
                    "scan (parent directory missing in initial scan)"
                  );
            this.scanAgain ? (this.scanAgain = !1, this.doScan(this.scanAgainInitial)) : this.scanning = !1;
            return;
          }
          let i = new Set(
            n.map((a) => ia.join(this.path, a.normalize("NFC")))
          );
          for (let a of this.files.keys())
            i.has(a) || this.setMissing(a, t, "scan (missing)");
          for (let a of this.directories.keys())
            i.has(a) || this.setMissing(a, t, "scan (missing)");
          if (this.scanAgain) {
            this.scanAgain = !1, this.doScan(t);
            return;
          }
          let o = Bz(i.size + 1, () => {
            if (!this.closed) {
              if (this.initialScan = !1, this.initialScanRemoved = null, this.initialScanFinished = Date.now(), t) {
                let a = new Map(this.watchers);
                a.delete(Rs(this.path));
                for (let u of i)
                  a.delete(Rs(u));
                for (let u of a.values())
                  for (let l of u)
                    l.checkStartTime(this.initialScanFinished, !1) && l.emit(
                      "initial-missing",
                      "scan (missing in initial scan)"
                    );
              }
              this.scanAgain ? (this.scanAgain = !1, this.doScan(this.scanAgainInitial)) : (this.scanning = !1, this.onScanFinished());
            }
          });
          for (let a of i)
            Il.lstat(a, (u, l) => {
              if (!this.closed) {
                if (u) {
                  u.code === "ENOENT" || u.code === "EPERM" || u.code === "EACCES" || u.code === "EBUSY" ? this.setMissing(a, t, "scan (" + u.
                  code + ")") : this.onScanError(u), o();
                  return;
                }
                l.isFile() || l.isSymbolicLink() ? (l.mtime && MS(l.mtime), this.setFileTime(
                  a,
                  +l.mtime || +l.ctime || 1,
                  t,
                  !0,
                  "scan (file)"
                )) : l.isDirectory() && (!t || !this.directories.has(a)) && this.setDirectory(
                  a,
                  +l.birthtime || 1,
                  t,
                  "scan (dir)"
                ), o();
              }
            });
          o();
        });
      });
    }
    getTimes() {
      let t = /* @__PURE__ */ Object.create(null), r = this.lastWatchEvent;
      for (let [n, i] of this.files)
        Pl(i), r = Math.max(r, i.safeTime), t[n] = Math.max(i.safeTime, i.timestamp);
      if (this.nestedWatching) {
        for (let n of this.directories.values()) {
          let i = n.directoryWatcher.getTimes();
          for (let o of Object.keys(i)) {
            let a = i[o];
            r = Math.max(r, a), t[o] = a;
          }
        }
        t[this.path] = r;
      }
      if (!this.initialScan)
        for (let n of this.watchers.values())
          for (let i of n) {
            let o = i.path;
            Object.prototype.hasOwnProperty.call(t, o) || (t[o] = null);
          }
      return t;
    }
    collectTimeInfoEntries(t, r) {
      let n = this.lastWatchEvent;
      for (let [i, o] of this.files)
        Pl(o), n = Math.max(n, o.safeTime), t.set(i, o);
      if (this.nestedWatching) {
        for (let i of this.directories.values())
          n = Math.max(
            n,
            i.directoryWatcher.collectTimeInfoEntries(
              t,
              r
            )
          );
        t.set(this.path, Ns), r.set(this.path, {
          safeTime: n
        });
      } else {
        for (let i of this.directories.keys())
          t.set(i, Ns), r.has(i) || r.set(i, Ns);
        t.set(this.path, Ns), r.set(this.path, Ns);
      }
      if (!this.initialScan)
        for (let i of this.watchers.values())
          for (let o of i) {
            let a = o.path;
            t.has(a) || t.set(a, null);
          }
      return n;
    }
    close() {
      if (this.closed = !0, this.initialScan = !1, this.watcher && (this.watcher.close(), this.watcher = null), this.nestedWatching) {
        for (let t of this.directories.values())
          t.close();
        this.directories.clear();
      }
      this.parentWatcher && (this.parentWatcher.close(), this.parentWatcher = null), this.emit("closed");
    }
  };
  Pm.exports = Im;
  Pm.exports.EXISTANCE_ONLY_TIME_ENTRY = Ns;
  function Pl(e) {
    e.accuracy > Ot && (e.safeTime = e.safeTime - e.accuracy + Ot, e.accuracy = Ot);
  }
  s(Pl, "fixupEntryAccuracy");
  function MS(e) {
    e && (Ot > 1 && e % 1 !== 0 ? Ot = 1 : Ot > 10 && e % 10 !== 0 ? Ot = 10 : Ot > 100 && e % 100 !== 0 ? Ot = 100 : Ot > 1e3 && e % 1e3 !==
    0 && (Ot = 1e3));
  }
  s(MS, "ensureFsAccuracy");
});

// ../node_modules/watchpack/lib/getWatcherManager.js
var US = I((_de, Bm) => {
  "use strict";
  var Oz = H("path"), Rz = $S(), Bl = class {
    static {
      s(this, "WatcherManager");
    }
    constructor(t) {
      this.options = t, this.directoryWatchers = /* @__PURE__ */ new Map();
    }
    getDirectoryWatcher(t) {
      let r = this.directoryWatchers.get(t);
      if (r === void 0) {
        let n = new Rz(this, t, this.options);
        return this.directoryWatchers.set(t, n), n.on("closed", () => {
          this.directoryWatchers.delete(t);
        }), n;
      }
      return r;
    }
    watchFile(t, r) {
      let n = Oz.dirname(t);
      return n === t ? null : this.getDirectoryWatcher(n).watch(t, r);
    }
    watchDirectory(t, r) {
      return this.getDirectoryWatcher(t).watch(t, r);
    }
  }, VS = /* @__PURE__ */ new WeakMap();
  Bm.exports = (e) => {
    let t = VS.get(e);
    if (t !== void 0) return t;
    let r = new Bl(e);
    return VS.set(e, r), r;
  };
  Bm.exports.WatcherManager = Bl;
});

// ../node_modules/watchpack/lib/LinkResolver.js
var HS = I((Tde, zS) => {
  "use strict";
  var Nz = H("fs"), Ol = H("path"), WS = /* @__PURE__ */ new Set(["EINVAL", "ENOENT"]);
  process.platform === "win32" && WS.add("UNKNOWN");
  var Om = class {
    static {
      s(this, "LinkResolver");
    }
    constructor() {
      this.cache = /* @__PURE__ */ new Map();
    }
    /**
     * @param {string} file path to file or directory
     * @returns {string[]} array of file and all symlinks contributed in the resolving process (first item is the resolved file)
     */
    resolve(t) {
      let r = this.cache.get(t);
      if (r !== void 0)
        return r;
      let n = Ol.dirname(t);
      if (n === t) {
        let a = Object.freeze([t]);
        return this.cache.set(t, a), a;
      }
      let i = this.resolve(n), o = t;
      if (i[0] !== n) {
        let a = Ol.basename(t);
        o = Ol.resolve(i[0], a);
      }
      try {
        let a = Nz.readlinkSync(o), u = Ol.resolve(i[0], a), l = this.resolve(u), c;
        if (l.length > 1 && i.length > 1) {
          let p = new Set(l);
          p.add(o);
          for (let h = 1; h < i.length; h++)
            p.add(i[h]);
          c = Object.freeze(Array.from(p));
        } else i.length > 1 ? (c = i.slice(), c[0] = l[0], c.push(o), Object.freeze(c)) : l.length > 1 ? (c = l.slice(), c.push(o), Object.freeze(
        c)) : c = Object.freeze([
          // the resolve real location
          l[0],
          // add the link
          o
        ]);
        return this.cache.set(t, c), c;
      } catch (a) {
        if (!WS.has(a.code))
          throw a;
        let u = i.slice();
        return u[0] = o, Object.freeze(u), this.cache.set(t, u), u;
      }
    }
  };
  zS.exports = Om;
});

// ../node_modules/glob-to-regexp/index.js
var JS = I((Pde, GS) => {
  GS.exports = function(e, t) {
    if (typeof e != "string")
      throw new TypeError("Expected a string");
    for (var r = String(e), n = "", i = t ? !!t.extended : !1, o = t ? !!t.globstar : !1, a = !1, u = t && typeof t.flags == "string" ? t.flags :
    "", l, c = 0, p = r.length; c < p; c++)
      switch (l = r[c], l) {
        case "/":
        case "$":
        case "^":
        case "+":
        case ".":
        case "(":
        case ")":
        case "=":
        case "!":
        case "|":
          n += "\\" + l;
          break;
        case "?":
          if (i) {
            n += ".";
            break;
          }
        case "[":
        case "]":
          if (i) {
            n += l;
            break;
          }
        case "{":
          if (i) {
            a = !0, n += "(";
            break;
          }
        case "}":
          if (i) {
            a = !1, n += ")";
            break;
          }
        case ",":
          if (a) {
            n += "|";
            break;
          }
          n += "\\" + l;
          break;
        case "*":
          for (var h = r[c - 1], f = 1; r[c + 1] === "*"; )
            f++, c++;
          var d = r[c + 1];
          if (!o)
            n += ".*";
          else {
            var m = f > 1 && (h === "/" || h === void 0) && (d === "/" || d === void 0);
            m ? (n += "((?:[^/]*(?:/|$))*)", c++) : n += "([^/]*)";
          }
          break;
        default:
          n += l;
      }
    return (!u || !~u.indexOf("g")) && (n = "^" + n + "$"), new RegExp(n, u);
  };
});

// ../node_modules/watchpack/lib/watchpack.js
var jm = I((Bde, KS) => {
  "use strict";
  var Lz = US(), jz = HS(), Mz = H("events").EventEmitter, qz = JS(), $z = km(), Rl = [], Vz = {};
  function Nl(e, t) {
    for (let r of e) {
      let n = r.watcher;
      t.has(n.directoryWatcher) || t.add(n.directoryWatcher);
    }
  }
  s(Nl, "addWatchersToSet");
  var ZS = /* @__PURE__ */ s((e) => {
    if (e.length === 0)
      return;
    let t = qz(e, { globstar: !0, extended: !0 }).source;
    return t.slice(0, t.length - 1) + "(?:$|\\/)";
  }, "stringToRegexp"), Uz = /* @__PURE__ */ s((e) => {
    if (Array.isArray(e)) {
      let t = e.map((n) => ZS(n)).filter(Boolean);
      if (t.length === 0)
        return () => !1;
      let r = new RegExp(t.join("|"));
      return (n) => r.test(n.replace(/\\/g, "/"));
    } else if (typeof e == "string") {
      let t = ZS(e);
      if (!t)
        return () => !1;
      let r = new RegExp(t);
      return (n) => r.test(n.replace(/\\/g, "/"));
    } else {
      if (e instanceof RegExp)
        return (t) => e.test(t.replace(/\\/g, "/"));
      if (e instanceof Function)
        return e;
      if (e)
        throw new Error(`Invalid option for 'ignored': ${e}`);
      return () => !1;
    }
  }, "ignoredToFunction"), Wz = /* @__PURE__ */ s((e) => ({
    followSymlinks: !!e.followSymlinks,
    ignored: Uz(e.ignored),
    poll: e.poll
  }), "normalizeOptions"), XS = /* @__PURE__ */ new WeakMap(), zz = /* @__PURE__ */ s((e) => {
    let t = XS.get(e);
    if (t !== void 0) return t;
    let r = Wz(e);
    return XS.set(e, r), r;
  }, "cachedNormalizeOptions"), Rm = class {
    static {
      s(this, "WatchpackFileWatcher");
    }
    constructor(t, r, n) {
      this.files = Array.isArray(n) ? n : [n], this.watcher = r, r.on("initial-missing", (i) => {
        for (let o of this.files)
          t._missing.has(o) || t._onRemove(o, o, i);
      }), r.on("change", (i, o) => {
        for (let a of this.files)
          t._onChange(a, i, a, o);
      }), r.on("remove", (i) => {
        for (let o of this.files)
          t._onRemove(o, o, i);
      });
    }
    update(t) {
      Array.isArray(t) ? this.files = t : this.files.length !== 1 ? this.files = [t] : this.files[0] !== t && (this.files[0] = t);
    }
    close() {
      this.watcher.close();
    }
  }, Nm = class {
    static {
      s(this, "WatchpackDirectoryWatcher");
    }
    constructor(t, r, n) {
      this.directories = Array.isArray(n) ? n : [n], this.watcher = r, r.on("initial-missing", (i) => {
        for (let o of this.directories)
          t._onRemove(o, o, i);
      }), r.on("change", (i, o, a) => {
        for (let u of this.directories)
          t._onChange(u, o, i, a);
      }), r.on("remove", (i) => {
        for (let o of this.directories)
          t._onRemove(o, o, i);
      });
    }
    update(t) {
      Array.isArray(t) ? this.directories = t : this.directories.length !== 1 ? this.directories = [t] : this.directories[0] !== t && (this.
      directories[0] = t);
    }
    close() {
      this.watcher.close();
    }
  }, Lm = class extends Mz {
    static {
      s(this, "Watchpack");
    }
    constructor(t) {
      super(), t || (t = Vz), this.options = t, this.aggregateTimeout = typeof t.aggregateTimeout == "number" ? t.aggregateTimeout : 200, this.
      watcherOptions = zz(t), this.watcherManager = Lz(this.watcherOptions), this.fileWatchers = /* @__PURE__ */ new Map(), this.directoryWatchers =
      /* @__PURE__ */ new Map(), this._missing = /* @__PURE__ */ new Set(), this.startTime = void 0, this.paused = !1, this.aggregatedChanges =
      /* @__PURE__ */ new Set(), this.aggregatedRemovals = /* @__PURE__ */ new Set(), this.aggregateTimer = void 0, this._onTimeout = this._onTimeout.
      bind(this);
    }
    watch(t, r, n) {
      let i, o, a, u;
      r ? (i = t, o = r, a = Rl, u = n) : {
        files: i = Rl,
        directories: o = Rl,
        missing: a = Rl,
        startTime: u
      } = t, this.paused = !1;
      let l = this.fileWatchers, c = this.directoryWatchers, p = this.watcherOptions.ignored, h = /* @__PURE__ */ s((b) => !p(b), "filter"),
      f = /* @__PURE__ */ s((b, y, E) => {
        let A = b.get(y);
        A === void 0 ? b.set(y, E) : Array.isArray(A) ? A.push(E) : b.set(y, [A, E]);
      }, "addToMap"), d = /* @__PURE__ */ new Map(), m = /* @__PURE__ */ new Map(), g = /* @__PURE__ */ new Set();
      if (this.watcherOptions.followSymlinks) {
        let b = new jz();
        for (let y of i)
          if (h(y))
            for (let E of b.resolve(y))
              (y === E || h(E)) && f(d, E, y);
        for (let y of a)
          if (h(y))
            for (let E of b.resolve(y))
              (y === E || h(E)) && (g.add(y), f(d, E, y));
        for (let y of o)
          if (h(y)) {
            let E = !0;
            for (let A of b.resolve(y))
              h(A) && f(
                E ? m : d,
                A,
                y
              ), E = !1;
          }
      } else {
        for (let b of i)
          h(b) && f(d, b, b);
        for (let b of a)
          h(b) && (g.add(b), f(d, b, b));
        for (let b of o)
          h(b) && f(m, b, b);
      }
      for (let [b, y] of l) {
        let E = d.get(b);
        E === void 0 ? (y.close(), l.delete(b)) : (y.update(E), d.delete(b));
      }
      for (let [b, y] of c) {
        let E = m.get(b);
        E === void 0 ? (y.close(), c.delete(b)) : (y.update(E), m.delete(b));
      }
      $z.batch(() => {
        for (let [b, y] of d) {
          let E = this.watcherManager.watchFile(b, u);
          E && l.set(b, new Rm(this, E, y));
        }
        for (let [b, y] of m) {
          let E = this.watcherManager.watchDirectory(b, u);
          E && c.set(
            b,
            new Nm(this, E, y)
          );
        }
      }), this._missing = g, this.startTime = u;
    }
    close() {
      this.paused = !0, this.aggregateTimer && clearTimeout(this.aggregateTimer);
      for (let t of this.fileWatchers.values()) t.close();
      for (let t of this.directoryWatchers.values()) t.close();
      this.fileWatchers.clear(), this.directoryWatchers.clear();
    }
    pause() {
      this.paused = !0, this.aggregateTimer && clearTimeout(this.aggregateTimer);
    }
    getTimes() {
      let t = /* @__PURE__ */ new Set();
      Nl(this.fileWatchers.values(), t), Nl(this.directoryWatchers.values(), t);
      let r = /* @__PURE__ */ Object.create(null);
      for (let n of t) {
        let i = n.getTimes();
        for (let o of Object.keys(i)) r[o] = i[o];
      }
      return r;
    }
    getTimeInfoEntries() {
      let t = /* @__PURE__ */ new Map();
      return this.collectTimeInfoEntries(t, t), t;
    }
    collectTimeInfoEntries(t, r) {
      let n = /* @__PURE__ */ new Set();
      Nl(this.fileWatchers.values(), n), Nl(this.directoryWatchers.values(), n);
      let i = { value: 0 };
      for (let o of n)
        o.collectTimeInfoEntries(t, r, i);
    }
    getAggregated() {
      this.aggregateTimer && (clearTimeout(this.aggregateTimer), this.aggregateTimer = void 0);
      let t = this.aggregatedChanges, r = this.aggregatedRemovals;
      return this.aggregatedChanges = /* @__PURE__ */ new Set(), this.aggregatedRemovals = /* @__PURE__ */ new Set(), { changes: t, removals: r };
    }
    _onChange(t, r, n, i) {
      n = n || t, this.paused || (this.emit("change", n, r, i), this.aggregateTimer && clearTimeout(this.aggregateTimer), this.aggregateTimer =
      setTimeout(this._onTimeout, this.aggregateTimeout)), this.aggregatedRemovals.delete(t), this.aggregatedChanges.add(t);
    }
    _onRemove(t, r, n) {
      r = r || t, this.paused || (this.emit("remove", r, n), this.aggregateTimer && clearTimeout(this.aggregateTimer), this.aggregateTimer =
      setTimeout(this._onTimeout, this.aggregateTimeout)), this.aggregatedChanges.delete(t), this.aggregatedRemovals.add(t);
    }
    _onTimeout() {
      this.aggregateTimer = void 0;
      let t = this.aggregatedChanges, r = this.aggregatedRemovals;
      this.aggregatedChanges = /* @__PURE__ */ new Set(), this.aggregatedRemovals = /* @__PURE__ */ new Set(), this.emit("aggregated", t, r);
    }
  };
  KS.exports = Lm;
});

// ../node_modules/kleur/index.js
var ot = I((Dme, pA) => {
  "use strict";
  var { FORCE_COLOR: DH, NODE_DISABLE_COLORS: xH, TERM: bH } = process.env, Me = {
    enabled: !xH && bH !== "dumb" && DH !== "0",
    // modifiers
    reset: He(0, 0),
    bold: He(1, 22),
    dim: He(2, 22),
    italic: He(3, 23),
    underline: He(4, 24),
    inverse: He(7, 27),
    hidden: He(8, 28),
    strikethrough: He(9, 29),
    // colors
    black: He(30, 39),
    red: He(31, 39),
    green: He(32, 39),
    yellow: He(33, 39),
    blue: He(34, 39),
    magenta: He(35, 39),
    cyan: He(36, 39),
    white: He(37, 39),
    gray: He(90, 39),
    grey: He(90, 39),
    // background colors
    bgBlack: He(40, 49),
    bgRed: He(41, 49),
    bgGreen: He(42, 49),
    bgYellow: He(43, 49),
    bgBlue: He(44, 49),
    bgMagenta: He(45, 49),
    bgCyan: He(46, 49),
    bgWhite: He(47, 49)
  };
  function cA(e, t) {
    let r = 0, n, i = "", o = "";
    for (; r < e.length; r++)
      n = e[r], i += n.open, o += n.close, t.includes(n.close) && (t = t.replace(n.rgx, n.close + n.open));
    return i + t + o;
  }
  s(cA, "run");
  function vH(e, t) {
    let r = { has: e, keys: t };
    return r.reset = Me.reset.bind(r), r.bold = Me.bold.bind(r), r.dim = Me.dim.bind(r), r.italic = Me.italic.bind(r), r.underline = Me.underline.
    bind(r), r.inverse = Me.inverse.bind(r), r.hidden = Me.hidden.bind(r), r.strikethrough = Me.strikethrough.bind(r), r.black = Me.black.bind(
    r), r.red = Me.red.bind(r), r.green = Me.green.bind(r), r.yellow = Me.yellow.bind(r), r.blue = Me.blue.bind(r), r.magenta = Me.magenta.bind(
    r), r.cyan = Me.cyan.bind(r), r.white = Me.white.bind(r), r.gray = Me.gray.bind(r), r.grey = Me.grey.bind(r), r.bgBlack = Me.bgBlack.bind(
    r), r.bgRed = Me.bgRed.bind(r), r.bgGreen = Me.bgGreen.bind(r), r.bgYellow = Me.bgYellow.bind(r), r.bgBlue = Me.bgBlue.bind(r), r.bgMagenta =
    Me.bgMagenta.bind(r), r.bgCyan = Me.bgCyan.bind(r), r.bgWhite = Me.bgWhite.bind(r), r;
  }
  s(vH, "chain");
  function He(e, t) {
    let r = {
      open: `\x1B[${e}m`,
      close: `\x1B[${t}m`,
      rgx: new RegExp(`\\x1b\\[${t}m`, "g")
    };
    return function(n) {
      return this !== void 0 && this.has !== void 0 ? (this.has.includes(e) || (this.has.push(e), this.keys.push(r)), n === void 0 ? this : Me.
      enabled ? cA(this.keys, n + "") : n + "") : n === void 0 ? vH([e], [r]) : Me.enabled ? cA([r], n + "") : n + "";
    };
  }
  s(He, "init");
  pA.exports = Me;
});

// ../node_modules/prompts/dist/util/action.js
var fA = I((bme, hA) => {
  "use strict";
  hA.exports = (e, t) => {
    if (!(e.meta && e.name !== "escape")) {
      if (e.ctrl) {
        if (e.name === "a") return "first";
        if (e.name === "c" || e.name === "d") return "abort";
        if (e.name === "e") return "last";
        if (e.name === "g") return "reset";
      }
      if (t) {
        if (e.name === "j") return "down";
        if (e.name === "k") return "up";
      }
      return e.name === "return" || e.name === "enter" ? "submit" : e.name === "backspace" ? "delete" : e.name === "delete" ? "deleteForward" :
      e.name === "abort" ? "abort" : e.name === "escape" ? "exit" : e.name === "tab" ? "next" : e.name === "pagedown" ? "nextPage" : e.name ===
      "pageup" ? "prevPage" : e.name === "home" ? "home" : e.name === "end" ? "end" : e.name === "up" ? "up" : e.name === "down" ? "down" : e.
      name === "right" ? "right" : e.name === "left" ? "left" : !1;
    }
  };
});

// ../node_modules/prompts/dist/util/strip.js
var jl = I((vme, dA) => {
  "use strict";
  dA.exports = (e) => {
    let t = ["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
    "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PRZcf-ntqry=><~]))"].join("|"), r = new RegExp(t, "g");
    return typeof e == "string" ? e.replace(r, "") : e;
  };
});

// ../node_modules/sisteransi/src/index.js
var ut = I((Eme, mA) => {
  "use strict";
  var qm = "\x1B", at = `${qm}[`, EH = "\x07", $m = {
    to(e, t) {
      return t ? `${at}${t + 1};${e + 1}H` : `${at}${e + 1}G`;
    },
    move(e, t) {
      let r = "";
      return e < 0 ? r += `${at}${-e}D` : e > 0 && (r += `${at}${e}C`), t < 0 ? r += `${at}${-t}A` : t > 0 && (r += `${at}${t}B`), r;
    },
    up: /* @__PURE__ */ s((e = 1) => `${at}${e}A`, "up"),
    down: /* @__PURE__ */ s((e = 1) => `${at}${e}B`, "down"),
    forward: /* @__PURE__ */ s((e = 1) => `${at}${e}C`, "forward"),
    backward: /* @__PURE__ */ s((e = 1) => `${at}${e}D`, "backward"),
    nextLine: /* @__PURE__ */ s((e = 1) => `${at}E`.repeat(e), "nextLine"),
    prevLine: /* @__PURE__ */ s((e = 1) => `${at}F`.repeat(e), "prevLine"),
    left: `${at}G`,
    hide: `${at}?25l`,
    show: `${at}?25h`,
    save: `${qm}7`,
    restore: `${qm}8`
  }, CH = {
    up: /* @__PURE__ */ s((e = 1) => `${at}S`.repeat(e), "up"),
    down: /* @__PURE__ */ s((e = 1) => `${at}T`.repeat(e), "down")
  }, wH = {
    screen: `${at}2J`,
    up: /* @__PURE__ */ s((e = 1) => `${at}1J`.repeat(e), "up"),
    down: /* @__PURE__ */ s((e = 1) => `${at}J`.repeat(e), "down"),
    line: `${at}2K`,
    lineEnd: `${at}K`,
    lineStart: `${at}1K`,
    lines(e) {
      let t = "";
      for (let r = 0; r < e; r++)
        t += this.line + (r < e - 1 ? $m.up() : "");
      return e && (t += $m.left), t;
    }
  };
  mA.exports = { cursor: $m, scroll: CH, erase: wH, beep: EH };
});

// ../node_modules/prompts/dist/util/clear.js
var bA = I((wme, xA) => {
  "use strict";
  function SH(e, t) {
    var r = typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (!r) {
      if (Array.isArray(e) || (r = AH(e)) || t && e && typeof e.length == "number") {
        r && (e = r);
        var n = 0, i = /* @__PURE__ */ s(function() {
        }, "F");
        return { s: i, n: /* @__PURE__ */ s(function() {
          return n >= e.length ? { done: !0 } : { done: !1, value: e[n++] };
        }, "n"), e: /* @__PURE__ */ s(function(c) {
          throw c;
        }, "e"), f: i };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var o = !0, a = !1, u;
    return { s: /* @__PURE__ */ s(function() {
      r = r.call(e);
    }, "s"), n: /* @__PURE__ */ s(function() {
      var c = r.next();
      return o = c.done, c;
    }, "n"), e: /* @__PURE__ */ s(function(c) {
      a = !0, u = c;
    }, "e"), f: /* @__PURE__ */ s(function() {
      try {
        !o && r.return != null && r.return();
      } finally {
        if (a) throw u;
      }
    }, "f") };
  }
  s(SH, "_createForOfIteratorHelper");
  function AH(e, t) {
    if (e) {
      if (typeof e == "string") return gA(e, t);
      var r = Object.prototype.toString.call(e).slice(8, -1);
      if (r === "Object" && e.constructor && (r = e.constructor.name), r === "Map" || r === "Set") return Array.from(e);
      if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return gA(e, t);
    }
  }
  s(AH, "_unsupportedIterableToArray");
  function gA(e, t) {
    (t == null || t > e.length) && (t = e.length);
    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
    return n;
  }
  s(gA, "_arrayLikeToArray");
  var FH = jl(), DA = ut(), yA = DA.erase, _H = DA.cursor, kH = /* @__PURE__ */ s((e) => [...FH(e)].length, "width");
  xA.exports = function(e, t) {
    if (!t) return yA.line + _H.to(0);
    let r = 0, n = e.split(/\r?\n/);
    var i = SH(n), o;
    try {
      for (i.s(); !(o = i.n()).done; ) {
        let a = o.value;
        r += 1 + Math.floor(Math.max(kH(a) - 1, 0) / t);
      }
    } catch (a) {
      i.e(a);
    } finally {
      i.f();
    }
    return yA.lines(r);
  };
});

// ../node_modules/prompts/dist/util/figures.js
var Vm = I((Ame, vA) => {
  "use strict";
  var oa = {
    arrowUp: "\u2191",
    arrowDown: "\u2193",
    arrowLeft: "\u2190",
    arrowRight: "\u2192",
    radioOn: "\u25C9",
    radioOff: "\u25EF",
    tick: "\u2714",
    cross: "\u2716",
    ellipsis: "\u2026",
    pointerSmall: "\u203A",
    line: "\u2500",
    pointer: "\u276F"
  }, TH = {
    arrowUp: oa.arrowUp,
    arrowDown: oa.arrowDown,
    arrowLeft: oa.arrowLeft,
    arrowRight: oa.arrowRight,
    radioOn: "(*)",
    radioOff: "( )",
    tick: "\u221A",
    cross: "\xD7",
    ellipsis: "...",
    pointerSmall: "\xBB",
    line: "\u2500",
    pointer: ">"
  }, IH = process.platform === "win32" ? TH : oa;
  vA.exports = IH;
});

// ../node_modules/prompts/dist/util/style.js
var CA = I((Fme, EA) => {
  "use strict";
  var js = ot(), wi = Vm(), Um = Object.freeze({
    password: {
      scale: 1,
      render: /* @__PURE__ */ s((e) => "*".repeat(e.length), "render")
    },
    emoji: {
      scale: 2,
      render: /* @__PURE__ */ s((e) => "\u{1F603}".repeat(e.length), "render")
    },
    invisible: {
      scale: 0,
      render: /* @__PURE__ */ s((e) => "", "render")
    },
    default: {
      scale: 1,
      render: /* @__PURE__ */ s((e) => `${e}`, "render")
    }
  }), PH = /* @__PURE__ */ s((e) => Um[e] || Um.default, "render"), aa = Object.freeze({
    aborted: js.red(wi.cross),
    done: js.green(wi.tick),
    exited: js.yellow(wi.cross),
    default: js.cyan("?")
  }), BH = /* @__PURE__ */ s((e, t, r) => t ? aa.aborted : r ? aa.exited : e ? aa.done : aa.default, "symbol"), OH = /* @__PURE__ */ s((e) => js.
  gray(e ? wi.ellipsis : wi.pointerSmall), "delimiter"), RH = /* @__PURE__ */ s((e, t) => js.gray(e ? t ? wi.pointerSmall : "+" : wi.line), "\
item");
  EA.exports = {
    styles: Um,
    render: PH,
    symbols: aa,
    symbol: BH,
    delimiter: OH,
    item: RH
  };
});

// ../node_modules/prompts/dist/util/lines.js
var SA = I((kme, wA) => {
  "use strict";
  var NH = jl();
  wA.exports = function(e, t) {
    let r = String(NH(e) || "").split(/\r?\n/);
    return t ? r.map((n) => Math.ceil(n.length / t)).reduce((n, i) => n + i) : r.length;
  };
});

// ../node_modules/prompts/dist/util/wrap.js
var FA = I((Tme, AA) => {
  "use strict";
  AA.exports = (e, t = {}) => {
    let r = Number.isSafeInteger(parseInt(t.margin)) ? new Array(parseInt(t.margin)).fill(" ").join("") : t.margin || "", n = t.width;
    return (e || "").split(/\r?\n/g).map((i) => i.split(/\s+/g).reduce((o, a) => (a.length + r.length >= n || o[o.length - 1].length + a.length +
    1 < n ? o[o.length - 1] += ` ${a}` : o.push(`${r}${a}`), o), [r]).join(`
`)).join(`
`);
  };
});

// ../node_modules/prompts/dist/util/entriesToDisplay.js
var kA = I((Ime, _A) => {
  "use strict";
  _A.exports = (e, t, r) => {
    r = r || t;
    let n = Math.min(t - r, e - Math.floor(r / 2));
    n < 0 && (n = 0);
    let i = Math.min(n + r, t);
    return {
      startIndex: n,
      endIndex: i
    };
  };
});

// ../node_modules/prompts/dist/util/index.js
var Rr = I((Pme, TA) => {
  "use strict";
  TA.exports = {
    action: fA(),
    clear: bA(),
    style: CA(),
    strip: jl(),
    figures: Vm(),
    lines: SA(),
    wrap: FA(),
    entriesToDisplay: kA()
  };
});

// ../node_modules/prompts/dist/elements/prompt.js
var En = I((Bme, BA) => {
  "use strict";
  var IA = H("readline"), LH = Rr(), jH = LH.action, MH = H("events"), PA = ut(), qH = PA.beep, $H = PA.cursor, VH = ot(), Wm = class extends MH {
    static {
      s(this, "Prompt");
    }
    constructor(t = {}) {
      super(), this.firstRender = !0, this.in = t.stdin || process.stdin, this.out = t.stdout || process.stdout, this.onRender = (t.onRender ||
      (() => {
      })).bind(this);
      let r = IA.createInterface({
        input: this.in,
        escapeCodeTimeout: 50
      });
      IA.emitKeypressEvents(this.in, r), this.in.isTTY && this.in.setRawMode(!0);
      let n = ["SelectPrompt", "MultiselectPrompt"].indexOf(this.constructor.name) > -1, i = /* @__PURE__ */ s((o, a) => {
        let u = jH(a, n);
        u === !1 ? this._ && this._(o, a) : typeof this[u] == "function" ? this[u](a) : this.bell();
      }, "keypress");
      this.close = () => {
        this.out.write($H.show), this.in.removeListener("keypress", i), this.in.isTTY && this.in.setRawMode(!1), r.close(), this.emit(this.aborted ?
        "abort" : this.exited ? "exit" : "submit", this.value), this.closed = !0;
      }, this.in.on("keypress", i);
    }
    fire() {
      this.emit("state", {
        value: this.value,
        aborted: !!this.aborted,
        exited: !!this.exited
      });
    }
    bell() {
      this.out.write(qH);
    }
    render() {
      this.onRender(VH), this.firstRender && (this.firstRender = !1);
    }
  };
  BA.exports = Wm;
});

// ../node_modules/prompts/dist/elements/text.js
var jA = I((Rme, LA) => {
  "use strict";
  function OA(e, t, r, n, i, o, a) {
    try {
      var u = e[o](a), l = u.value;
    } catch (c) {
      r(c);
      return;
    }
    u.done ? t(l) : Promise.resolve(l).then(n, i);
  }
  s(OA, "asyncGeneratorStep");
  function RA(e) {
    return function() {
      var t = this, r = arguments;
      return new Promise(function(n, i) {
        var o = e.apply(t, r);
        function a(l) {
          OA(o, n, i, a, u, "next", l);
        }
        s(a, "_next");
        function u(l) {
          OA(o, n, i, a, u, "throw", l);
        }
        s(u, "_throw"), a(void 0);
      });
    };
  }
  s(RA, "_asyncToGenerator");
  var Ml = ot(), UH = En(), NA = ut(), WH = NA.erase, ua = NA.cursor, ql = Rr(), zm = ql.style, Hm = ql.clear, zH = ql.lines, HH = ql.figures,
  Gm = class extends UH {
    static {
      s(this, "TextPrompt");
    }
    constructor(t = {}) {
      super(t), this.transform = zm.render(t.style), this.scale = this.transform.scale, this.msg = t.message, this.initial = t.initial || "",
      this.validator = t.validate || (() => !0), this.value = "", this.errorMsg = t.error || "Please Enter A Valid Value", this.cursor = +!!this.
      initial, this.cursorOffset = 0, this.clear = Hm("", this.out.columns), this.render();
    }
    set value(t) {
      !t && this.initial ? (this.placeholder = !0, this.rendered = Ml.gray(this.transform.render(this.initial))) : (this.placeholder = !1, this.
      rendered = this.transform.render(t)), this._value = t, this.fire();
    }
    get value() {
      return this._value;
    }
    reset() {
      this.value = "", this.cursor = +!!this.initial, this.cursorOffset = 0, this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.value = this.value || this.initial, this.done = this.aborted = !0, this.error = !1, this.red = !1, this.fire(), this.render(), this.
      out.write(`
`), this.close();
    }
    validate() {
      var t = this;
      return RA(function* () {
        let r = yield t.validator(t.value);
        typeof r == "string" && (t.errorMsg = r, r = !1), t.error = !r;
      })();
    }
    submit() {
      var t = this;
      return RA(function* () {
        if (t.value = t.value || t.initial, t.cursorOffset = 0, t.cursor = t.rendered.length, yield t.validate(), t.error) {
          t.red = !0, t.fire(), t.render();
          return;
        }
        t.done = !0, t.aborted = !1, t.fire(), t.render(), t.out.write(`
`), t.close();
      })();
    }
    next() {
      if (!this.placeholder) return this.bell();
      this.value = this.initial, this.cursor = this.rendered.length, this.fire(), this.render();
    }
    moveCursor(t) {
      this.placeholder || (this.cursor = this.cursor + t, this.cursorOffset += t);
    }
    _(t, r) {
      let n = this.value.slice(0, this.cursor), i = this.value.slice(this.cursor);
      this.value = `${n}${t}${i}`, this.red = !1, this.cursor = this.placeholder ? 0 : n.length + 1, this.render();
    }
    delete() {
      if (this.isCursorAtStart()) return this.bell();
      let t = this.value.slice(0, this.cursor - 1), r = this.value.slice(this.cursor);
      this.value = `${t}${r}`, this.red = !1, this.isCursorAtStart() ? this.cursorOffset = 0 : (this.cursorOffset++, this.moveCursor(-1)), this.
      render();
    }
    deleteForward() {
      if (this.cursor * this.scale >= this.rendered.length || this.placeholder) return this.bell();
      let t = this.value.slice(0, this.cursor), r = this.value.slice(this.cursor + 1);
      this.value = `${t}${r}`, this.red = !1, this.isCursorAtEnd() ? this.cursorOffset = 0 : this.cursorOffset++, this.render();
    }
    first() {
      this.cursor = 0, this.render();
    }
    last() {
      this.cursor = this.value.length, this.render();
    }
    left() {
      if (this.cursor <= 0 || this.placeholder) return this.bell();
      this.moveCursor(-1), this.render();
    }
    right() {
      if (this.cursor * this.scale >= this.rendered.length || this.placeholder) return this.bell();
      this.moveCursor(1), this.render();
    }
    isCursorAtStart() {
      return this.cursor === 0 || this.placeholder && this.cursor === 1;
    }
    isCursorAtEnd() {
      return this.cursor === this.rendered.length || this.placeholder && this.cursor === this.rendered.length + 1;
    }
    render() {
      this.closed || (this.firstRender || (this.outputError && this.out.write(ua.down(zH(this.outputError, this.out.columns) - 1) + Hm(this.
      outputError, this.out.columns)), this.out.write(Hm(this.outputText, this.out.columns))), super.render(), this.outputError = "", this.outputText =
      [zm.symbol(this.done, this.aborted), Ml.bold(this.msg), zm.delimiter(this.done), this.red ? Ml.red(this.rendered) : this.rendered].join(
      " "), this.error && (this.outputError += this.errorMsg.split(`
`).reduce((t, r, n) => t + `
${n ? " " : HH.pointerSmall} ${Ml.red().italic(r)}`, "")), this.out.write(WH.line + ua.to(0) + this.outputText + ua.save + this.outputError +
      ua.restore + ua.move(this.cursorOffset, 0)));
    }
  };
  LA.exports = Gm;
});

// ../node_modules/prompts/dist/elements/select.js
var VA = I((Lme, $A) => {
  "use strict";
  var Cn = ot(), GH = En(), la = Rr(), MA = la.style, qA = la.clear, $l = la.figures, JH = la.wrap, ZH = la.entriesToDisplay, XH = ut(), KH = XH.
  cursor, Jm = class extends GH {
    static {
      s(this, "SelectPrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.hint = t.hint || "- Use arrow-keys. Return to submit.", this.warn = t.warn || "- This option is d\
isabled", this.cursor = t.initial || 0, this.choices = t.choices.map((r, n) => (typeof r == "string" && (r = {
        title: r,
        value: n
      }), {
        title: r && (r.title || r.value || r),
        value: r && (r.value === void 0 ? n : r.value),
        description: r && r.description,
        selected: r && r.selected,
        disabled: r && r.disabled
      })), this.optionsPerPage = t.optionsPerPage || 10, this.value = (this.choices[this.cursor] || {}).value, this.clear = qA("", this.out.
      columns), this.render();
    }
    moveCursor(t) {
      this.cursor = t, this.value = this.choices[t].value, this.fire();
    }
    reset() {
      this.moveCursor(0), this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.selection.disabled ? this.bell() : (this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close());
    }
    first() {
      this.moveCursor(0), this.render();
    }
    last() {
      this.moveCursor(this.choices.length - 1), this.render();
    }
    up() {
      this.cursor === 0 ? this.moveCursor(this.choices.length - 1) : this.moveCursor(this.cursor - 1), this.render();
    }
    down() {
      this.cursor === this.choices.length - 1 ? this.moveCursor(0) : this.moveCursor(this.cursor + 1), this.render();
    }
    next() {
      this.moveCursor((this.cursor + 1) % this.choices.length), this.render();
    }
    _(t, r) {
      if (t === " ") return this.submit();
    }
    get selection() {
      return this.choices[this.cursor];
    }
    render() {
      if (this.closed) return;
      this.firstRender ? this.out.write(KH.hide) : this.out.write(qA(this.outputText, this.out.columns)), super.render();
      let t = ZH(this.cursor, this.choices.length, this.optionsPerPage), r = t.startIndex, n = t.endIndex;
      if (this.outputText = [MA.symbol(this.done, this.aborted), Cn.bold(this.msg), MA.delimiter(!1), this.done ? this.selection.title : this.
      selection.disabled ? Cn.yellow(this.warn) : Cn.gray(this.hint)].join(" "), !this.done) {
        this.outputText += `
`;
        for (let i = r; i < n; i++) {
          let o, a, u = "", l = this.choices[i];
          i === r && r > 0 ? a = $l.arrowUp : i === n - 1 && n < this.choices.length ? a = $l.arrowDown : a = " ", l.disabled ? (o = this.cursor ===
          i ? Cn.gray().underline(l.title) : Cn.strikethrough().gray(l.title), a = (this.cursor === i ? Cn.bold().gray($l.pointer) + " " : "\
  ") + a) : (o = this.cursor === i ? Cn.cyan().underline(l.title) : l.title, a = (this.cursor === i ? Cn.cyan($l.pointer) + " " : "  ") + a,
          l.description && this.cursor === i && (u = ` - ${l.description}`, (a.length + o.length + u.length >= this.out.columns || l.description.
          split(/\r?\n/).length > 1) && (u = `
` + JH(l.description, {
            margin: 3,
            width: this.out.columns
          })))), this.outputText += `${a} ${o}${Cn.gray(u)}
`;
        }
      }
      this.out.write(this.outputText);
    }
  };
  $A.exports = Jm;
});

// ../node_modules/prompts/dist/elements/toggle.js
var JA = I((Mme, GA) => {
  "use strict";
  var Vl = ot(), YH = En(), zA = Rr(), UA = zA.style, QH = zA.clear, HA = ut(), WA = HA.cursor, eG = HA.erase, Zm = class extends YH {
    static {
      s(this, "TogglePrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.value = !!t.initial, this.active = t.active || "on", this.inactive = t.inactive || "off", this.initialValue =
      this.value, this.render();
    }
    reset() {
      this.value = this.initialValue, this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    deactivate() {
      if (this.value === !1) return this.bell();
      this.value = !1, this.render();
    }
    activate() {
      if (this.value === !0) return this.bell();
      this.value = !0, this.render();
    }
    delete() {
      this.deactivate();
    }
    left() {
      this.deactivate();
    }
    right() {
      this.activate();
    }
    down() {
      this.deactivate();
    }
    up() {
      this.activate();
    }
    next() {
      this.value = !this.value, this.fire(), this.render();
    }
    _(t, r) {
      if (t === " ")
        this.value = !this.value;
      else if (t === "1")
        this.value = !0;
      else if (t === "0")
        this.value = !1;
      else return this.bell();
      this.render();
    }
    render() {
      this.closed || (this.firstRender ? this.out.write(WA.hide) : this.out.write(QH(this.outputText, this.out.columns)), super.render(), this.
      outputText = [UA.symbol(this.done, this.aborted), Vl.bold(this.msg), UA.delimiter(this.done), this.value ? this.inactive : Vl.cyan().underline(
      this.inactive), Vl.gray("/"), this.value ? Vl.cyan().underline(this.active) : this.active].join(" "), this.out.write(eG.line + WA.to(0) +
      this.outputText));
    }
  };
  GA.exports = Zm;
});

// ../node_modules/prompts/dist/dateparts/datepart.js
var Kr = I(($me, ZA) => {
  "use strict";
  var Xm = class e {
    static {
      s(this, "DatePart");
    }
    constructor({
      token: t,
      date: r,
      parts: n,
      locales: i
    }) {
      this.token = t, this.date = r || /* @__PURE__ */ new Date(), this.parts = n || [this], this.locales = i || {};
    }
    up() {
    }
    down() {
    }
    next() {
      let t = this.parts.indexOf(this);
      return this.parts.find((r, n) => n > t && r instanceof e);
    }
    setTo(t) {
    }
    prev() {
      let t = [].concat(this.parts).reverse(), r = t.indexOf(this);
      return t.find((n, i) => i > r && n instanceof e);
    }
    toString() {
      return String(this.date);
    }
  };
  ZA.exports = Xm;
});

// ../node_modules/prompts/dist/dateparts/meridiem.js
var KA = I((Ume, XA) => {
  "use strict";
  var tG = Kr(), Km = class extends tG {
    static {
      s(this, "Meridiem");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setHours((this.date.getHours() + 12) % 24);
    }
    down() {
      this.up();
    }
    toString() {
      let t = this.date.getHours() > 12 ? "pm" : "am";
      return /\A/.test(this.token) ? t.toUpperCase() : t;
    }
  };
  XA.exports = Km;
});

// ../node_modules/prompts/dist/dateparts/day.js
var QA = I((zme, YA) => {
  "use strict";
  var rG = Kr(), nG = /* @__PURE__ */ s((e) => (e = e % 10, e === 1 ? "st" : e === 2 ? "nd" : e === 3 ? "rd" : "th"), "pos"), Ym = class extends rG {
    static {
      s(this, "Day");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setDate(this.date.getDate() + 1);
    }
    down() {
      this.date.setDate(this.date.getDate() - 1);
    }
    setTo(t) {
      this.date.setDate(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getDate(), r = this.date.getDay();
      return this.token === "DD" ? String(t).padStart(2, "0") : this.token === "Do" ? t + nG(t) : this.token === "d" ? r + 1 : this.token ===
      "ddd" ? this.locales.weekdaysShort[r] : this.token === "dddd" ? this.locales.weekdays[r] : t;
    }
  };
  YA.exports = Ym;
});

// ../node_modules/prompts/dist/dateparts/hours.js
var tF = I((Gme, eF) => {
  "use strict";
  var iG = Kr(), Qm = class extends iG {
    static {
      s(this, "Hours");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setHours(this.date.getHours() + 1);
    }
    down() {
      this.date.setHours(this.date.getHours() - 1);
    }
    setTo(t) {
      this.date.setHours(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getHours();
      return /h/.test(this.token) && (t = t % 12 || 12), this.token.length > 1 ? String(t).padStart(2, "0") : t;
    }
  };
  eF.exports = Qm;
});

// ../node_modules/prompts/dist/dateparts/milliseconds.js
var nF = I((Zme, rF) => {
  "use strict";
  var sG = Kr(), eg = class extends sG {
    static {
      s(this, "Milliseconds");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setMilliseconds(this.date.getMilliseconds() + 1);
    }
    down() {
      this.date.setMilliseconds(this.date.getMilliseconds() - 1);
    }
    setTo(t) {
      this.date.setMilliseconds(parseInt(t.substr(-this.token.length)));
    }
    toString() {
      return String(this.date.getMilliseconds()).padStart(4, "0").substr(0, this.token.length);
    }
  };
  rF.exports = eg;
});

// ../node_modules/prompts/dist/dateparts/minutes.js
var sF = I((Kme, iF) => {
  "use strict";
  var oG = Kr(), tg = class extends oG {
    static {
      s(this, "Minutes");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setMinutes(this.date.getMinutes() + 1);
    }
    down() {
      this.date.setMinutes(this.date.getMinutes() - 1);
    }
    setTo(t) {
      this.date.setMinutes(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getMinutes();
      return this.token.length > 1 ? String(t).padStart(2, "0") : t;
    }
  };
  iF.exports = tg;
});

// ../node_modules/prompts/dist/dateparts/month.js
var aF = I((Qme, oF) => {
  "use strict";
  var aG = Kr(), rg = class extends aG {
    static {
      s(this, "Month");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setMonth(this.date.getMonth() + 1);
    }
    down() {
      this.date.setMonth(this.date.getMonth() - 1);
    }
    setTo(t) {
      t = parseInt(t.substr(-2)) - 1, this.date.setMonth(t < 0 ? 0 : t);
    }
    toString() {
      let t = this.date.getMonth(), r = this.token.length;
      return r === 2 ? String(t + 1).padStart(2, "0") : r === 3 ? this.locales.monthsShort[t] : r === 4 ? this.locales.months[t] : String(t +
      1);
    }
  };
  oF.exports = rg;
});

// ../node_modules/prompts/dist/dateparts/seconds.js
var lF = I((tge, uF) => {
  "use strict";
  var uG = Kr(), ng = class extends uG {
    static {
      s(this, "Seconds");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setSeconds(this.date.getSeconds() + 1);
    }
    down() {
      this.date.setSeconds(this.date.getSeconds() - 1);
    }
    setTo(t) {
      this.date.setSeconds(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getSeconds();
      return this.token.length > 1 ? String(t).padStart(2, "0") : t;
    }
  };
  uF.exports = ng;
});

// ../node_modules/prompts/dist/dateparts/year.js
var pF = I((nge, cF) => {
  "use strict";
  var lG = Kr(), ig = class extends lG {
    static {
      s(this, "Year");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setFullYear(this.date.getFullYear() + 1);
    }
    down() {
      this.date.setFullYear(this.date.getFullYear() - 1);
    }
    setTo(t) {
      this.date.setFullYear(t.substr(-4));
    }
    toString() {
      let t = String(this.date.getFullYear()).padStart(4, "0");
      return this.token.length === 2 ? t.substr(-2) : t;
    }
  };
  cF.exports = ig;
});

// ../node_modules/prompts/dist/dateparts/index.js
var fF = I((sge, hF) => {
  "use strict";
  hF.exports = {
    DatePart: Kr(),
    Meridiem: KA(),
    Day: QA(),
    Hours: tF(),
    Milliseconds: nF(),
    Minutes: sF(),
    Month: aF(),
    Seconds: lF(),
    Year: pF()
  };
});

// ../node_modules/prompts/dist/elements/date.js
var CF = I((oge, EF) => {
  "use strict";
  function dF(e, t, r, n, i, o, a) {
    try {
      var u = e[o](a), l = u.value;
    } catch (c) {
      r(c);
      return;
    }
    u.done ? t(l) : Promise.resolve(l).then(n, i);
  }
  s(dF, "asyncGeneratorStep");
  function mF(e) {
    return function() {
      var t = this, r = arguments;
      return new Promise(function(n, i) {
        var o = e.apply(t, r);
        function a(l) {
          dF(o, n, i, a, u, "next", l);
        }
        s(a, "_next");
        function u(l) {
          dF(o, n, i, a, u, "throw", l);
        }
        s(u, "_throw"), a(void 0);
      });
    };
  }
  s(mF, "_asyncToGenerator");
  var sg = ot(), cG = En(), ag = Rr(), gF = ag.style, yF = ag.clear, pG = ag.figures, vF = ut(), hG = vF.erase, DF = vF.cursor, wn = fF(), xF = wn.
  DatePart, fG = wn.Meridiem, dG = wn.Day, mG = wn.Hours, gG = wn.Milliseconds, yG = wn.Minutes, DG = wn.Month, xG = wn.Seconds, bG = wn.Year,
  vG = /\\(.)|"((?:\\["\\]|[^"])+)"|(D[Do]?|d{3,4}|d)|(M{1,4})|(YY(?:YY)?)|([aA])|([Hh]{1,2})|(m{1,2})|(s{1,2})|(S{1,4})|./g, bF = {
    1: ({
      token: e
    }) => e.replace(/\\(.)/g, "$1"),
    2: (e) => new dG(e),
    // Day // TODO
    3: (e) => new DG(e),
    // Month
    4: (e) => new bG(e),
    // Year
    5: (e) => new fG(e),
    // AM/PM // TODO (special)
    6: (e) => new mG(e),
    // Hours
    7: (e) => new yG(e),
    // Minutes
    8: (e) => new xG(e),
    // Seconds
    9: (e) => new gG(e)
    // Fractional seconds
  }, EG = {
    months: "January,February,March,April,May,June,July,August,September,October,November,December".split(","),
    monthsShort: "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec".split(","),
    weekdays: "Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday".split(","),
    weekdaysShort: "Sun,Mon,Tue,Wed,Thu,Fri,Sat".split(",")
  }, og = class extends cG {
    static {
      s(this, "DatePrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.cursor = 0, this.typed = "", this.locales = Object.assign(EG, t.locales), this._date = t.initial ||
      /* @__PURE__ */ new Date(), this.errorMsg = t.error || "Please Enter A Valid Value", this.validator = t.validate || (() => !0), this.mask =
      t.mask || "YYYY-MM-DD HH:mm:ss", this.clear = yF("", this.out.columns), this.render();
    }
    get value() {
      return this.date;
    }
    get date() {
      return this._date;
    }
    set date(t) {
      t && this._date.setTime(t.getTime());
    }
    set mask(t) {
      let r;
      for (this.parts = []; r = vG.exec(t); ) {
        let i = r.shift(), o = r.findIndex((a) => a != null);
        this.parts.push(o in bF ? bF[o]({
          token: r[o] || i,
          date: this.date,
          parts: this.parts,
          locales: this.locales
        }) : r[o] || i);
      }
      let n = this.parts.reduce((i, o) => (typeof o == "string" && typeof i[i.length - 1] == "string" ? i[i.length - 1] += o : i.push(o), i),
      []);
      this.parts.splice(0), this.parts.push(...n), this.reset();
    }
    moveCursor(t) {
      this.typed = "", this.cursor = t, this.fire();
    }
    reset() {
      this.moveCursor(this.parts.findIndex((t) => t instanceof xF)), this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.error = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    validate() {
      var t = this;
      return mF(function* () {
        let r = yield t.validator(t.value);
        typeof r == "string" && (t.errorMsg = r, r = !1), t.error = !r;
      })();
    }
    submit() {
      var t = this;
      return mF(function* () {
        if (yield t.validate(), t.error) {
          t.color = "red", t.fire(), t.render();
          return;
        }
        t.done = !0, t.aborted = !1, t.fire(), t.render(), t.out.write(`
`), t.close();
      })();
    }
    up() {
      this.typed = "", this.parts[this.cursor].up(), this.render();
    }
    down() {
      this.typed = "", this.parts[this.cursor].down(), this.render();
    }
    left() {
      let t = this.parts[this.cursor].prev();
      if (t == null) return this.bell();
      this.moveCursor(this.parts.indexOf(t)), this.render();
    }
    right() {
      let t = this.parts[this.cursor].next();
      if (t == null) return this.bell();
      this.moveCursor(this.parts.indexOf(t)), this.render();
    }
    next() {
      let t = this.parts[this.cursor].next();
      this.moveCursor(t ? this.parts.indexOf(t) : this.parts.findIndex((r) => r instanceof xF)), this.render();
    }
    _(t) {
      /\d/.test(t) && (this.typed += t, this.parts[this.cursor].setTo(this.typed), this.render());
    }
    render() {
      this.closed || (this.firstRender ? this.out.write(DF.hide) : this.out.write(yF(this.outputText, this.out.columns)), super.render(), this.
      outputText = [gF.symbol(this.done, this.aborted), sg.bold(this.msg), gF.delimiter(!1), this.parts.reduce((t, r, n) => t.concat(n === this.
      cursor && !this.done ? sg.cyan().underline(r.toString()) : r), []).join("")].join(" "), this.error && (this.outputText += this.errorMsg.
      split(`
`).reduce((t, r, n) => t + `
${n ? " " : pG.pointerSmall} ${sg.red().italic(r)}`, "")), this.out.write(hG.line + DF.to(0) + this.outputText));
    }
  };
  EF.exports = og;
});

// ../node_modules/prompts/dist/elements/number.js
var TF = I((uge, kF) => {
  "use strict";
  function wF(e, t, r, n, i, o, a) {
    try {
      var u = e[o](a), l = u.value;
    } catch (c) {
      r(c);
      return;
    }
    u.done ? t(l) : Promise.resolve(l).then(n, i);
  }
  s(wF, "asyncGeneratorStep");
  function SF(e) {
    return function() {
      var t = this, r = arguments;
      return new Promise(function(n, i) {
        var o = e.apply(t, r);
        function a(l) {
          wF(o, n, i, a, u, "next", l);
        }
        s(a, "_next");
        function u(l) {
          wF(o, n, i, a, u, "throw", l);
        }
        s(u, "_throw"), a(void 0);
      });
    };
  }
  s(SF, "_asyncToGenerator");
  var Ul = ot(), CG = En(), _F = ut(), Wl = _F.cursor, wG = _F.erase, zl = Rr(), ug = zl.style, SG = zl.figures, AF = zl.clear, AG = zl.lines,
  FG = /[0-9]/, lg = /* @__PURE__ */ s((e) => e !== void 0, "isDef"), FF = /* @__PURE__ */ s((e, t) => {
    let r = Math.pow(10, t);
    return Math.round(e * r) / r;
  }, "round"), cg = class extends CG {
    static {
      s(this, "NumberPrompt");
    }
    constructor(t = {}) {
      super(t), this.transform = ug.render(t.style), this.msg = t.message, this.initial = lg(t.initial) ? t.initial : "", this.float = !!t.float,
      this.round = t.round || 2, this.inc = t.increment || 1, this.min = lg(t.min) ? t.min : -1 / 0, this.max = lg(t.max) ? t.max : 1 / 0, this.
      errorMsg = t.error || "Please Enter A Valid Value", this.validator = t.validate || (() => !0), this.color = "cyan", this.value = "", this.
      typed = "", this.lastHit = 0, this.render();
    }
    set value(t) {
      !t && t !== 0 ? (this.placeholder = !0, this.rendered = Ul.gray(this.transform.render(`${this.initial}`)), this._value = "") : (this.placeholder =
      !1, this.rendered = this.transform.render(`${FF(t, this.round)}`), this._value = FF(t, this.round)), this.fire();
    }
    get value() {
      return this._value;
    }
    parse(t) {
      return this.float ? parseFloat(t) : parseInt(t);
    }
    valid(t) {
      return t === "-" || t === "." && this.float || FG.test(t);
    }
    reset() {
      this.typed = "", this.value = "", this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      let t = this.value;
      this.value = t !== "" ? t : this.initial, this.done = this.aborted = !0, this.error = !1, this.fire(), this.render(), this.out.write(`\

`), this.close();
    }
    validate() {
      var t = this;
      return SF(function* () {
        let r = yield t.validator(t.value);
        typeof r == "string" && (t.errorMsg = r, r = !1), t.error = !r;
      })();
    }
    submit() {
      var t = this;
      return SF(function* () {
        if (yield t.validate(), t.error) {
          t.color = "red", t.fire(), t.render();
          return;
        }
        let r = t.value;
        t.value = r !== "" ? r : t.initial, t.done = !0, t.aborted = !1, t.error = !1, t.fire(), t.render(), t.out.write(`
`), t.close();
      })();
    }
    up() {
      if (this.typed = "", this.value === "" && (this.value = this.min - this.inc), this.value >= this.max) return this.bell();
      this.value += this.inc, this.color = "cyan", this.fire(), this.render();
    }
    down() {
      if (this.typed = "", this.value === "" && (this.value = this.min + this.inc), this.value <= this.min) return this.bell();
      this.value -= this.inc, this.color = "cyan", this.fire(), this.render();
    }
    delete() {
      let t = this.value.toString();
      if (t.length === 0) return this.bell();
      this.value = this.parse(t = t.slice(0, -1)) || "", this.value !== "" && this.value < this.min && (this.value = this.min), this.color =
      "cyan", this.fire(), this.render();
    }
    next() {
      this.value = this.initial, this.fire(), this.render();
    }
    _(t, r) {
      if (!this.valid(t)) return this.bell();
      let n = Date.now();
      if (n - this.lastHit > 1e3 && (this.typed = ""), this.typed += t, this.lastHit = n, this.color = "cyan", t === ".") return this.fire();
      this.value = Math.min(this.parse(this.typed), this.max), this.value > this.max && (this.value = this.max), this.value < this.min && (this.
      value = this.min), this.fire(), this.render();
    }
    render() {
      this.closed || (this.firstRender || (this.outputError && this.out.write(Wl.down(AG(this.outputError, this.out.columns) - 1) + AF(this.
      outputError, this.out.columns)), this.out.write(AF(this.outputText, this.out.columns))), super.render(), this.outputError = "", this.outputText =
      [ug.symbol(this.done, this.aborted), Ul.bold(this.msg), ug.delimiter(this.done), !this.done || !this.done && !this.placeholder ? Ul[this.
      color]().underline(this.rendered) : this.rendered].join(" "), this.error && (this.outputError += this.errorMsg.split(`
`).reduce((t, r, n) => t + `
${n ? " " : SG.pointerSmall} ${Ul.red().italic(r)}`, "")), this.out.write(wG.line + Wl.to(0) + this.outputText + Wl.save + this.outputError +
      Wl.restore));
    }
  };
  kF.exports = cg;
});

// ../node_modules/prompts/dist/elements/multiselect.js
var hg = I((cge, BF) => {
  "use strict";
  var Yr = ot(), _G = ut(), kG = _G.cursor, TG = En(), ca = Rr(), IF = ca.clear, Xn = ca.figures, PF = ca.style, IG = ca.wrap, PG = ca.entriesToDisplay,
  pg = class extends TG {
    static {
      s(this, "MultiselectPrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.cursor = t.cursor || 0, this.scrollIndex = t.cursor || 0, this.hint = t.hint || "", this.warn = t.
      warn || "- This option is disabled -", this.minSelected = t.min, this.showMinError = !1, this.maxChoices = t.max, this.instructions = t.
      instructions, this.optionsPerPage = t.optionsPerPage || 10, this.value = t.choices.map((r, n) => (typeof r == "string" && (r = {
        title: r,
        value: n
      }), {
        title: r && (r.title || r.value || r),
        description: r && r.description,
        value: r && (r.value === void 0 ? n : r.value),
        selected: r && r.selected,
        disabled: r && r.disabled
      })), this.clear = IF("", this.out.columns), t.overrideRender || this.render();
    }
    reset() {
      this.value.map((t) => !t.selected), this.cursor = 0, this.fire(), this.render();
    }
    selected() {
      return this.value.filter((t) => t.selected);
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      let t = this.value.filter((r) => r.selected);
      this.minSelected && t.length < this.minSelected ? (this.showMinError = !0, this.render()) : (this.done = !0, this.aborted = !1, this.fire(),
      this.render(), this.out.write(`
`), this.close());
    }
    first() {
      this.cursor = 0, this.render();
    }
    last() {
      this.cursor = this.value.length - 1, this.render();
    }
    next() {
      this.cursor = (this.cursor + 1) % this.value.length, this.render();
    }
    up() {
      this.cursor === 0 ? this.cursor = this.value.length - 1 : this.cursor--, this.render();
    }
    down() {
      this.cursor === this.value.length - 1 ? this.cursor = 0 : this.cursor++, this.render();
    }
    left() {
      this.value[this.cursor].selected = !1, this.render();
    }
    right() {
      if (this.value.filter((t) => t.selected).length >= this.maxChoices) return this.bell();
      this.value[this.cursor].selected = !0, this.render();
    }
    handleSpaceToggle() {
      let t = this.value[this.cursor];
      if (t.selected)
        t.selected = !1, this.render();
      else {
        if (t.disabled || this.value.filter((r) => r.selected).length >= this.maxChoices)
          return this.bell();
        t.selected = !0, this.render();
      }
    }
    toggleAll() {
      if (this.maxChoices !== void 0 || this.value[this.cursor].disabled)
        return this.bell();
      let t = !this.value[this.cursor].selected;
      this.value.filter((r) => !r.disabled).forEach((r) => r.selected = t), this.render();
    }
    _(t, r) {
      if (t === " ")
        this.handleSpaceToggle();
      else if (t === "a")
        this.toggleAll();
      else
        return this.bell();
    }
    renderInstructions() {
      return this.instructions === void 0 || this.instructions ? typeof this.instructions == "string" ? this.instructions : `
Instructions:
    ${Xn.arrowUp}/${Xn.arrowDown}: Highlight option
    ${Xn.arrowLeft}/${Xn.arrowRight}/[space]: Toggle selection
` + (this.maxChoices === void 0 ? `    a: Toggle all
` : "") + "    enter/return: Complete answer" : "";
    }
    renderOption(t, r, n, i) {
      let o = (r.selected ? Yr.green(Xn.radioOn) : Xn.radioOff) + " " + i + " ", a, u;
      return r.disabled ? a = t === n ? Yr.gray().underline(r.title) : Yr.strikethrough().gray(r.title) : (a = t === n ? Yr.cyan().underline(
      r.title) : r.title, t === n && r.description && (u = ` - ${r.description}`, (o.length + a.length + u.length >= this.out.columns || r.description.
      split(/\r?\n/).length > 1) && (u = `
` + IG(r.description, {
        margin: o.length,
        width: this.out.columns
      })))), o + a + Yr.gray(u || "");
    }
    // shared with autocompleteMultiselect
    paginateOptions(t) {
      if (t.length === 0)
        return Yr.red("No matches for this query.");
      let r = PG(this.cursor, t.length, this.optionsPerPage), n = r.startIndex, i = r.endIndex, o, a = [];
      for (let u = n; u < i; u++)
        u === n && n > 0 ? o = Xn.arrowUp : u === i - 1 && i < t.length ? o = Xn.arrowDown : o = " ", a.push(this.renderOption(this.cursor, t[u],
        u, o));
      return `
` + a.join(`
`);
    }
    // shared with autocomleteMultiselect
    renderOptions(t) {
      return this.done ? "" : this.paginateOptions(t);
    }
    renderDoneOrInstructions() {
      if (this.done)
        return this.value.filter((r) => r.selected).map((r) => r.title).join(", ");
      let t = [Yr.gray(this.hint), this.renderInstructions()];
      return this.value[this.cursor].disabled && t.push(Yr.yellow(this.warn)), t.join(" ");
    }
    render() {
      if (this.closed) return;
      this.firstRender && this.out.write(kG.hide), super.render();
      let t = [PF.symbol(this.done, this.aborted), Yr.bold(this.msg), PF.delimiter(!1), this.renderDoneOrInstructions()].join(" ");
      this.showMinError && (t += Yr.red(`You must select a minimum of ${this.minSelected} choices.`), this.showMinError = !1), t += this.renderOptions(
      this.value), this.out.write(this.clear + t), this.clear = IF(t, this.out.columns);
    }
  };
  BF.exports = pg;
});

// ../node_modules/prompts/dist/elements/autocomplete.js
var qF = I((hge, MF) => {
  "use strict";
  function OF(e, t, r, n, i, o, a) {
    try {
      var u = e[o](a), l = u.value;
    } catch (c) {
      r(c);
      return;
    }
    u.done ? t(l) : Promise.resolve(l).then(n, i);
  }
  s(OF, "asyncGeneratorStep");
  function BG(e) {
    return function() {
      var t = this, r = arguments;
      return new Promise(function(n, i) {
        var o = e.apply(t, r);
        function a(l) {
          OF(o, n, i, a, u, "next", l);
        }
        s(a, "_next");
        function u(l) {
          OF(o, n, i, a, u, "throw", l);
        }
        s(u, "_throw"), a(void 0);
      });
    };
  }
  s(BG, "_asyncToGenerator");
  var pa = ot(), OG = En(), jF = ut(), RG = jF.erase, RF = jF.cursor, ha = Rr(), fg = ha.style, NF = ha.clear, dg = ha.figures, NG = ha.wrap,
  LG = ha.entriesToDisplay, LF = /* @__PURE__ */ s((e, t) => e[t] && (e[t].value || e[t].title || e[t]), "getVal"), jG = /* @__PURE__ */ s((e, t) => e[t] &&
  (e[t].title || e[t].value || e[t]), "getTitle"), MG = /* @__PURE__ */ s((e, t) => {
    let r = e.findIndex((n) => n.value === t || n.title === t);
    return r > -1 ? r : void 0;
  }, "getIndex"), mg = class extends OG {
    static {
      s(this, "AutocompletePrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.suggest = t.suggest, this.choices = t.choices, this.initial = typeof t.initial == "number" ? t.initial :
      MG(t.choices, t.initial), this.select = this.initial || t.cursor || 0, this.i18n = {
        noMatches: t.noMatches || "no matches found"
      }, this.fallback = t.fallback || this.initial, this.clearFirst = t.clearFirst || !1, this.suggestions = [], this.input = "", this.limit =
      t.limit || 10, this.cursor = 0, this.transform = fg.render(t.style), this.scale = this.transform.scale, this.render = this.render.bind(
      this), this.complete = this.complete.bind(this), this.clear = NF("", this.out.columns), this.complete(this.render), this.render();
    }
    set fallback(t) {
      this._fb = Number.isSafeInteger(parseInt(t)) ? parseInt(t) : t;
    }
    get fallback() {
      let t;
      return typeof this._fb == "number" ? t = this.choices[this._fb] : typeof this._fb == "string" && (t = {
        title: this._fb
      }), t || this._fb || {
        title: this.i18n.noMatches
      };
    }
    moveSelect(t) {
      this.select = t, this.suggestions.length > 0 ? this.value = LF(this.suggestions, t) : this.value = this.fallback.value, this.fire();
    }
    complete(t) {
      var r = this;
      return BG(function* () {
        let n = r.completing = r.suggest(r.input, r.choices), i = yield n;
        if (r.completing !== n) return;
        r.suggestions = i.map((a, u, l) => ({
          title: jG(l, u),
          value: LF(l, u),
          description: a.description
        })), r.completing = !1;
        let o = Math.max(i.length - 1, 0);
        r.moveSelect(Math.min(o, r.select)), t && t();
      })();
    }
    reset() {
      this.input = "", this.complete(() => {
        this.moveSelect(this.initial !== void 0 ? this.initial : 0), this.render();
      }), this.render();
    }
    exit() {
      this.clearFirst && this.input.length > 0 ? this.reset() : (this.done = this.exited = !0, this.aborted = !1, this.fire(), this.render(),
      this.out.write(`
`), this.close());
    }
    abort() {
      this.done = this.aborted = !0, this.exited = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.done = !0, this.aborted = this.exited = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    _(t, r) {
      let n = this.input.slice(0, this.cursor), i = this.input.slice(this.cursor);
      this.input = `${n}${t}${i}`, this.cursor = n.length + 1, this.complete(this.render), this.render();
    }
    delete() {
      if (this.cursor === 0) return this.bell();
      let t = this.input.slice(0, this.cursor - 1), r = this.input.slice(this.cursor);
      this.input = `${t}${r}`, this.complete(this.render), this.cursor = this.cursor - 1, this.render();
    }
    deleteForward() {
      if (this.cursor * this.scale >= this.rendered.length) return this.bell();
      let t = this.input.slice(0, this.cursor), r = this.input.slice(this.cursor + 1);
      this.input = `${t}${r}`, this.complete(this.render), this.render();
    }
    first() {
      this.moveSelect(0), this.render();
    }
    last() {
      this.moveSelect(this.suggestions.length - 1), this.render();
    }
    up() {
      this.select === 0 ? this.moveSelect(this.suggestions.length - 1) : this.moveSelect(this.select - 1), this.render();
    }
    down() {
      this.select === this.suggestions.length - 1 ? this.moveSelect(0) : this.moveSelect(this.select + 1), this.render();
    }
    next() {
      this.select === this.suggestions.length - 1 ? this.moveSelect(0) : this.moveSelect(this.select + 1), this.render();
    }
    nextPage() {
      this.moveSelect(Math.min(this.select + this.limit, this.suggestions.length - 1)), this.render();
    }
    prevPage() {
      this.moveSelect(Math.max(this.select - this.limit, 0)), this.render();
    }
    left() {
      if (this.cursor <= 0) return this.bell();
      this.cursor = this.cursor - 1, this.render();
    }
    right() {
      if (this.cursor * this.scale >= this.rendered.length) return this.bell();
      this.cursor = this.cursor + 1, this.render();
    }
    renderOption(t, r, n, i) {
      let o, a = n ? dg.arrowUp : i ? dg.arrowDown : " ", u = r ? pa.cyan().underline(t.title) : t.title;
      return a = (r ? pa.cyan(dg.pointer) + " " : "  ") + a, t.description && (o = ` - ${t.description}`, (a.length + u.length + o.length >=
      this.out.columns || t.description.split(/\r?\n/).length > 1) && (o = `
` + NG(t.description, {
        margin: 3,
        width: this.out.columns
      }))), a + " " + u + pa.gray(o || "");
    }
    render() {
      if (this.closed) return;
      this.firstRender ? this.out.write(RF.hide) : this.out.write(NF(this.outputText, this.out.columns)), super.render();
      let t = LG(this.select, this.choices.length, this.limit), r = t.startIndex, n = t.endIndex;
      if (this.outputText = [fg.symbol(this.done, this.aborted, this.exited), pa.bold(this.msg), fg.delimiter(this.completing), this.done &&
      this.suggestions[this.select] ? this.suggestions[this.select].title : this.rendered = this.transform.render(this.input)].join(" "), !this.
      done) {
        let i = this.suggestions.slice(r, n).map((o, a) => this.renderOption(o, this.select === a + r, a === 0 && r > 0, a + r === n - 1 && n <
        this.choices.length)).join(`
`);
        this.outputText += `
` + (i || pa.gray(this.fallback.title));
      }
      this.out.write(RG.line + RF.to(0) + this.outputText);
    }
  };
  MF.exports = mg;
});

// ../node_modules/prompts/dist/elements/autocompleteMultiselect.js
var WF = I((dge, UF) => {
  "use strict";
  var Sn = ot(), qG = ut(), $G = qG.cursor, VG = hg(), yg = Rr(), $F = yg.clear, VF = yg.style, Ms = yg.figures, gg = class extends VG {
    static {
      s(this, "AutocompleteMultiselectPrompt");
    }
    constructor(t = {}) {
      t.overrideRender = !0, super(t), this.inputValue = "", this.clear = $F("", this.out.columns), this.filteredOptions = this.value, this.
      render();
    }
    last() {
      this.cursor = this.filteredOptions.length - 1, this.render();
    }
    next() {
      this.cursor = (this.cursor + 1) % this.filteredOptions.length, this.render();
    }
    up() {
      this.cursor === 0 ? this.cursor = this.filteredOptions.length - 1 : this.cursor--, this.render();
    }
    down() {
      this.cursor === this.filteredOptions.length - 1 ? this.cursor = 0 : this.cursor++, this.render();
    }
    left() {
      this.filteredOptions[this.cursor].selected = !1, this.render();
    }
    right() {
      if (this.value.filter((t) => t.selected).length >= this.maxChoices) return this.bell();
      this.filteredOptions[this.cursor].selected = !0, this.render();
    }
    delete() {
      this.inputValue.length && (this.inputValue = this.inputValue.substr(0, this.inputValue.length - 1), this.updateFilteredOptions());
    }
    updateFilteredOptions() {
      let t = this.filteredOptions[this.cursor];
      this.filteredOptions = this.value.filter((n) => this.inputValue ? !!(typeof n.title == "string" && n.title.toLowerCase().includes(this.
      inputValue.toLowerCase()) || typeof n.value == "string" && n.value.toLowerCase().includes(this.inputValue.toLowerCase())) : !0);
      let r = this.filteredOptions.findIndex((n) => n === t);
      this.cursor = r < 0 ? 0 : r, this.render();
    }
    handleSpaceToggle() {
      let t = this.filteredOptions[this.cursor];
      if (t.selected)
        t.selected = !1, this.render();
      else {
        if (t.disabled || this.value.filter((r) => r.selected).length >= this.maxChoices)
          return this.bell();
        t.selected = !0, this.render();
      }
    }
    handleInputChange(t) {
      this.inputValue = this.inputValue + t, this.updateFilteredOptions();
    }
    _(t, r) {
      t === " " ? this.handleSpaceToggle() : this.handleInputChange(t);
    }
    renderInstructions() {
      return this.instructions === void 0 || this.instructions ? typeof this.instructions == "string" ? this.instructions : `
Instructions:
    ${Ms.arrowUp}/${Ms.arrowDown}: Highlight option
    ${Ms.arrowLeft}/${Ms.arrowRight}/[space]: Toggle selection
    [a,b,c]/delete: Filter choices
    enter/return: Complete answer
` : "";
    }
    renderCurrentInput() {
      return `
Filtered results for: ${this.inputValue ? this.inputValue : Sn.gray("Enter something to filter")}
`;
    }
    renderOption(t, r, n) {
      let i;
      return r.disabled ? i = t === n ? Sn.gray().underline(r.title) : Sn.strikethrough().gray(r.title) : i = t === n ? Sn.cyan().underline(
      r.title) : r.title, (r.selected ? Sn.green(Ms.radioOn) : Ms.radioOff) + "  " + i;
    }
    renderDoneOrInstructions() {
      if (this.done)
        return this.value.filter((r) => r.selected).map((r) => r.title).join(", ");
      let t = [Sn.gray(this.hint), this.renderInstructions(), this.renderCurrentInput()];
      return this.filteredOptions.length && this.filteredOptions[this.cursor].disabled && t.push(Sn.yellow(this.warn)), t.join(" ");
    }
    render() {
      if (this.closed) return;
      this.firstRender && this.out.write($G.hide), super.render();
      let t = [VF.symbol(this.done, this.aborted), Sn.bold(this.msg), VF.delimiter(!1), this.renderDoneOrInstructions()].join(" ");
      this.showMinError && (t += Sn.red(`You must select a minimum of ${this.minSelected} choices.`), this.showMinError = !1), t += this.renderOptions(
      this.filteredOptions), this.out.write(this.clear + t), this.clear = $F(t, this.out.columns);
    }
  };
  UF.exports = gg;
});

// ../node_modules/prompts/dist/elements/confirm.js
var KF = I((gge, XF) => {
  "use strict";
  var zF = ot(), UG = En(), JF = Rr(), HF = JF.style, WG = JF.clear, ZF = ut(), zG = ZF.erase, GF = ZF.cursor, Dg = class extends UG {
    static {
      s(this, "ConfirmPrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.value = t.initial, this.initialValue = !!t.initial, this.yesMsg = t.yes || "yes", this.yesOption =
      t.yesOption || "(Y/n)", this.noMsg = t.no || "no", this.noOption = t.noOption || "(y/N)", this.render();
    }
    reset() {
      this.value = this.initialValue, this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.value = this.value || !1, this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    _(t, r) {
      return t.toLowerCase() === "y" ? (this.value = !0, this.submit()) : t.toLowerCase() === "n" ? (this.value = !1, this.submit()) : this.
      bell();
    }
    render() {
      this.closed || (this.firstRender ? this.out.write(GF.hide) : this.out.write(WG(this.outputText, this.out.columns)), super.render(), this.
      outputText = [HF.symbol(this.done, this.aborted), zF.bold(this.msg), HF.delimiter(this.done), this.done ? this.value ? this.yesMsg : this.
      noMsg : zF.gray(this.initialValue ? this.yesOption : this.noOption)].join(" "), this.out.write(zG.line + GF.to(0) + this.outputText));
    }
  };
  XF.exports = Dg;
});

// ../node_modules/prompts/dist/elements/index.js
var QF = I((Dge, YF) => {
  "use strict";
  YF.exports = {
    TextPrompt: jA(),
    SelectPrompt: VA(),
    TogglePrompt: JA(),
    DatePrompt: CF(),
    NumberPrompt: TF(),
    MultiselectPrompt: hg(),
    AutocompletePrompt: qF(),
    AutocompleteMultiselectPrompt: WF(),
    ConfirmPrompt: KF()
  };
});

// ../node_modules/prompts/dist/prompts.js
var t_ = I((e_) => {
  "use strict";
  var Ut = e_, HG = QF(), Hl = /* @__PURE__ */ s((e) => e, "noop");
  function Qr(e, t, r = {}) {
    return new Promise((n, i) => {
      let o = new HG[e](t), a = r.onAbort || Hl, u = r.onSubmit || Hl, l = r.onExit || Hl;
      o.on("state", t.onState || Hl), o.on("submit", (c) => n(u(c))), o.on("exit", (c) => n(l(c))), o.on("abort", (c) => i(a(c)));
    });
  }
  s(Qr, "toPrompt");
  Ut.text = (e) => Qr("TextPrompt", e);
  Ut.password = (e) => (e.style = "password", Ut.text(e));
  Ut.invisible = (e) => (e.style = "invisible", Ut.text(e));
  Ut.number = (e) => Qr("NumberPrompt", e);
  Ut.date = (e) => Qr("DatePrompt", e);
  Ut.confirm = (e) => Qr("ConfirmPrompt", e);
  Ut.list = (e) => {
    let t = e.separator || ",";
    return Qr("TextPrompt", e, {
      onSubmit: /* @__PURE__ */ s((r) => r.split(t).map((n) => n.trim()), "onSubmit")
    });
  };
  Ut.toggle = (e) => Qr("TogglePrompt", e);
  Ut.select = (e) => Qr("SelectPrompt", e);
  Ut.multiselect = (e) => {
    e.choices = [].concat(e.choices || []);
    let t = /* @__PURE__ */ s((r) => r.filter((n) => n.selected).map((n) => n.value), "toSelected");
    return Qr("MultiselectPrompt", e, {
      onAbort: t,
      onSubmit: t
    });
  };
  Ut.autocompleteMultiselect = (e) => {
    e.choices = [].concat(e.choices || []);
    let t = /* @__PURE__ */ s((r) => r.filter((n) => n.selected).map((n) => n.value), "toSelected");
    return Qr("AutocompleteMultiselectPrompt", e, {
      onAbort: t,
      onSubmit: t
    });
  };
  var GG = /* @__PURE__ */ s((e, t) => Promise.resolve(t.filter((r) => r.title.slice(0, e.length).toLowerCase() === e.toLowerCase())), "byTi\
tle");
  Ut.autocomplete = (e) => (e.suggest = e.suggest || GG, e.choices = [].concat(e.choices || []), Qr("AutocompletePrompt", e));
});

// ../node_modules/prompts/dist/index.js
var l_ = I((vge, u_) => {
  "use strict";
  function r_(e, t) {
    var r = Object.keys(e);
    if (Object.getOwnPropertySymbols) {
      var n = Object.getOwnPropertySymbols(e);
      t && (n = n.filter(function(i) {
        return Object.getOwnPropertyDescriptor(e, i).enumerable;
      })), r.push.apply(r, n);
    }
    return r;
  }
  s(r_, "ownKeys");
  function n_(e) {
    for (var t = 1; t < arguments.length; t++) {
      var r = arguments[t] != null ? arguments[t] : {};
      t % 2 ? r_(Object(r), !0).forEach(function(n) {
        JG(e, n, r[n]);
      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : r_(Object(r)).forEach(function(n) {
        Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
      });
    }
    return e;
  }
  s(n_, "_objectSpread");
  function JG(e, t, r) {
    return t in e ? Object.defineProperty(e, t, { value: r, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = r, e;
  }
  s(JG, "_defineProperty");
  function ZG(e, t) {
    var r = typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
    if (!r) {
      if (Array.isArray(e) || (r = XG(e)) || t && e && typeof e.length == "number") {
        r && (e = r);
        var n = 0, i = /* @__PURE__ */ s(function() {
        }, "F");
        return { s: i, n: /* @__PURE__ */ s(function() {
          return n >= e.length ? { done: !0 } : { done: !1, value: e[n++] };
        }, "n"), e: /* @__PURE__ */ s(function(c) {
          throw c;
        }, "e"), f: i };
      }
      throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
    }
    var o = !0, a = !1, u;
    return { s: /* @__PURE__ */ s(function() {
      r = r.call(e);
    }, "s"), n: /* @__PURE__ */ s(function() {
      var c = r.next();
      return o = c.done, c;
    }, "n"), e: /* @__PURE__ */ s(function(c) {
      a = !0, u = c;
    }, "e"), f: /* @__PURE__ */ s(function() {
      try {
        !o && r.return != null && r.return();
      } finally {
        if (a) throw u;
      }
    }, "f") };
  }
  s(ZG, "_createForOfIteratorHelper");
  function XG(e, t) {
    if (e) {
      if (typeof e == "string") return i_(e, t);
      var r = Object.prototype.toString.call(e).slice(8, -1);
      if (r === "Object" && e.constructor && (r = e.constructor.name), r === "Map" || r === "Set") return Array.from(e);
      if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return i_(e, t);
    }
  }
  s(XG, "_unsupportedIterableToArray");
  function i_(e, t) {
    (t == null || t > e.length) && (t = e.length);
    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];
    return n;
  }
  s(i_, "_arrayLikeToArray");
  function s_(e, t, r, n, i, o, a) {
    try {
      var u = e[o](a), l = u.value;
    } catch (c) {
      r(c);
      return;
    }
    u.done ? t(l) : Promise.resolve(l).then(n, i);
  }
  s(s_, "asyncGeneratorStep");
  function o_(e) {
    return function() {
      var t = this, r = arguments;
      return new Promise(function(n, i) {
        var o = e.apply(t, r);
        function a(l) {
          s_(o, n, i, a, u, "next", l);
        }
        s(a, "_next");
        function u(l) {
          s_(o, n, i, a, u, "throw", l);
        }
        s(u, "_throw"), a(void 0);
      });
    };
  }
  s(o_, "_asyncToGenerator");
  var xg = t_(), KG = ["suggest", "format", "onState", "validate", "onRender", "type"], a_ = /* @__PURE__ */ s(() => {
  }, "noop");
  function Kn() {
    return bg.apply(this, arguments);
  }
  s(Kn, "prompt");
  function bg() {
    return bg = o_(function* (e = [], {
      onSubmit: t = a_,
      onCancel: r = a_
    } = {}) {
      let n = {}, i = Kn._override || {};
      e = [].concat(e);
      let o, a, u, l, c, p, h = /* @__PURE__ */ function() {
        var b = o_(function* (y, E, A = !1) {
          if (!(!A && y.validate && y.validate(E) !== !0))
            return y.format ? yield y.format(E, n) : E;
        });
        return /* @__PURE__ */ s(function(E, A) {
          return b.apply(this, arguments);
        }, "getFormattedAnswer");
      }();
      var f = ZG(e), d;
      try {
        for (f.s(); !(d = f.n()).done; ) {
          a = d.value;
          var m = a;
          if (l = m.name, c = m.type, typeof c == "function" && (c = yield c(o, n_({}, n), a), a.type = c), !!c) {
            for (let b in a) {
              if (KG.includes(b)) continue;
              let y = a[b];
              a[b] = typeof y == "function" ? yield y(o, n_({}, n), p) : y;
            }
            if (p = a, typeof a.message != "string")
              throw new Error("prompt message is required");
            var g = a;
            if (l = g.name, c = g.type, xg[c] === void 0)
              throw new Error(`prompt type (${c}) is not defined`);
            if (i[a.name] !== void 0 && (o = yield h(a, i[a.name]), o !== void 0)) {
              n[l] = o;
              continue;
            }
            try {
              o = Kn._injected ? YG(Kn._injected, a.initial) : yield xg[c](a), n[l] = o = yield h(a, o, !0), u = yield t(a, o, n);
            } catch {
              u = !(yield r(a, n));
            }
            if (u) return n;
          }
        }
      } catch (b) {
        f.e(b);
      } finally {
        f.f();
      }
      return n;
    }), bg.apply(this, arguments);
  }
  s(bg, "_prompt");
  function YG(e, t) {
    let r = e.shift();
    if (r instanceof Error)
      throw r;
    return r === void 0 ? t : r;
  }
  s(YG, "getInjectedAnswer");
  function QG(e) {
    Kn._injected = (Kn._injected || []).concat(e);
  }
  s(QG, "inject");
  function eJ(e) {
    Kn._override = Object.assign({}, e);
  }
  s(eJ, "override");
  u_.exports = Object.assign(Kn, {
    prompt: Kn,
    prompts: xg,
    inject: QG,
    override: eJ
  });
});

// ../node_modules/prompts/lib/util/action.js
var p_ = I((Cge, c_) => {
  "use strict";
  c_.exports = (e, t) => {
    if (!(e.meta && e.name !== "escape")) {
      if (e.ctrl) {
        if (e.name === "a") return "first";
        if (e.name === "c" || e.name === "d") return "abort";
        if (e.name === "e") return "last";
        if (e.name === "g") return "reset";
      }
      if (t) {
        if (e.name === "j") return "down";
        if (e.name === "k") return "up";
      }
      return e.name === "return" || e.name === "enter" ? "submit" : e.name === "backspace" ? "delete" : e.name === "delete" ? "deleteForward" :
      e.name === "abort" ? "abort" : e.name === "escape" ? "exit" : e.name === "tab" ? "next" : e.name === "pagedown" ? "nextPage" : e.name ===
      "pageup" ? "prevPage" : e.name === "home" ? "home" : e.name === "end" ? "end" : e.name === "up" ? "up" : e.name === "down" ? "down" : e.
      name === "right" ? "right" : e.name === "left" ? "left" : !1;
    }
  };
});

// ../node_modules/prompts/lib/util/strip.js
var Gl = I((wge, h_) => {
  "use strict";
  h_.exports = (e) => {
    let t = [
      "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
      "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PRZcf-ntqry=><~]))"
    ].join("|"), r = new RegExp(t, "g");
    return typeof e == "string" ? e.replace(r, "") : e;
  };
});

// ../node_modules/prompts/lib/util/clear.js
var m_ = I((Sge, d_) => {
  "use strict";
  var tJ = Gl(), { erase: f_, cursor: rJ } = ut(), nJ = /* @__PURE__ */ s((e) => [...tJ(e)].length, "width");
  d_.exports = function(e, t) {
    if (!t) return f_.line + rJ.to(0);
    let r = 0, n = e.split(/\r?\n/);
    for (let i of n)
      r += 1 + Math.floor(Math.max(nJ(i) - 1, 0) / t);
    return f_.lines(r);
  };
});

// ../node_modules/prompts/lib/util/figures.js
var vg = I((Fge, g_) => {
  "use strict";
  var fa = {
    arrowUp: "\u2191",
    arrowDown: "\u2193",
    arrowLeft: "\u2190",
    arrowRight: "\u2192",
    radioOn: "\u25C9",
    radioOff: "\u25EF",
    tick: "\u2714",
    cross: "\u2716",
    ellipsis: "\u2026",
    pointerSmall: "\u203A",
    line: "\u2500",
    pointer: "\u276F"
  }, iJ = {
    arrowUp: fa.arrowUp,
    arrowDown: fa.arrowDown,
    arrowLeft: fa.arrowLeft,
    arrowRight: fa.arrowRight,
    radioOn: "(*)",
    radioOff: "( )",
    tick: "\u221A",
    cross: "\xD7",
    ellipsis: "...",
    pointerSmall: "\xBB",
    line: "\u2500",
    pointer: ">"
  }, sJ = process.platform === "win32" ? iJ : fa;
  g_.exports = sJ;
});

// ../node_modules/prompts/lib/util/style.js
var D_ = I((_ge, y_) => {
  "use strict";
  var qs = ot(), Si = vg(), Eg = Object.freeze({
    password: { scale: 1, render: /* @__PURE__ */ s((e) => "*".repeat(e.length), "render") },
    emoji: { scale: 2, render: /* @__PURE__ */ s((e) => "\u{1F603}".repeat(e.length), "render") },
    invisible: { scale: 0, render: /* @__PURE__ */ s((e) => "", "render") },
    default: { scale: 1, render: /* @__PURE__ */ s((e) => `${e}`, "render") }
  }), oJ = /* @__PURE__ */ s((e) => Eg[e] || Eg.default, "render"), da = Object.freeze({
    aborted: qs.red(Si.cross),
    done: qs.green(Si.tick),
    exited: qs.yellow(Si.cross),
    default: qs.cyan("?")
  }), aJ = /* @__PURE__ */ s((e, t, r) => t ? da.aborted : r ? da.exited : e ? da.done : da.default, "symbol"), uJ = /* @__PURE__ */ s((e) => qs.
  gray(e ? Si.ellipsis : Si.pointerSmall), "delimiter"), lJ = /* @__PURE__ */ s((e, t) => qs.gray(e ? t ? Si.pointerSmall : "+" : Si.line), "\
item");
  y_.exports = {
    styles: Eg,
    render: oJ,
    symbols: da,
    symbol: aJ,
    delimiter: uJ,
    item: lJ
  };
});

// ../node_modules/prompts/lib/util/lines.js
var b_ = I((Tge, x_) => {
  "use strict";
  var cJ = Gl();
  x_.exports = function(e, t) {
    let r = String(cJ(e) || "").split(/\r?\n/);
    return t ? r.map((n) => Math.ceil(n.length / t)).reduce((n, i) => n + i) : r.length;
  };
});

// ../node_modules/prompts/lib/util/wrap.js
var E_ = I((Ige, v_) => {
  "use strict";
  v_.exports = (e, t = {}) => {
    let r = Number.isSafeInteger(parseInt(t.margin)) ? new Array(parseInt(t.margin)).fill(" ").join("") : t.margin || "", n = t.width;
    return (e || "").split(/\r?\n/g).map((i) => i.split(/\s+/g).reduce((o, a) => (a.length + r.length >= n || o[o.length - 1].length + a.length +
    1 < n ? o[o.length - 1] += ` ${a}` : o.push(`${r}${a}`), o), [r]).join(`
`)).join(`
`);
  };
});

// ../node_modules/prompts/lib/util/entriesToDisplay.js
var w_ = I((Pge, C_) => {
  "use strict";
  C_.exports = (e, t, r) => {
    r = r || t;
    let n = Math.min(t - r, e - Math.floor(r / 2));
    n < 0 && (n = 0);
    let i = Math.min(n + r, t);
    return { startIndex: n, endIndex: i };
  };
});

// ../node_modules/prompts/lib/util/index.js
var Nr = I((Bge, S_) => {
  "use strict";
  S_.exports = {
    action: p_(),
    clear: m_(),
    style: D_(),
    strip: Gl(),
    figures: vg(),
    lines: b_(),
    wrap: E_(),
    entriesToDisplay: w_()
  };
});

// ../node_modules/prompts/lib/elements/prompt.js
var An = I((Oge, F_) => {
  "use strict";
  var A_ = H("readline"), { action: pJ } = Nr(), hJ = H("events"), { beep: fJ, cursor: dJ } = ut(), mJ = ot(), Cg = class extends hJ {
    static {
      s(this, "Prompt");
    }
    constructor(t = {}) {
      super(), this.firstRender = !0, this.in = t.stdin || process.stdin, this.out = t.stdout || process.stdout, this.onRender = (t.onRender ||
      (() => {
      })).bind(this);
      let r = A_.createInterface({ input: this.in, escapeCodeTimeout: 50 });
      A_.emitKeypressEvents(this.in, r), this.in.isTTY && this.in.setRawMode(!0);
      let n = ["SelectPrompt", "MultiselectPrompt"].indexOf(this.constructor.name) > -1, i = /* @__PURE__ */ s((o, a) => {
        let u = pJ(a, n);
        u === !1 ? this._ && this._(o, a) : typeof this[u] == "function" ? this[u](a) : this.bell();
      }, "keypress");
      this.close = () => {
        this.out.write(dJ.show), this.in.removeListener("keypress", i), this.in.isTTY && this.in.setRawMode(!1), r.close(), this.emit(this.aborted ?
        "abort" : this.exited ? "exit" : "submit", this.value), this.closed = !0;
      }, this.in.on("keypress", i);
    }
    fire() {
      this.emit("state", {
        value: this.value,
        aborted: !!this.aborted,
        exited: !!this.exited
      });
    }
    bell() {
      this.out.write(fJ);
    }
    render() {
      this.onRender(mJ), this.firstRender && (this.firstRender = !1);
    }
  };
  F_.exports = Cg;
});

// ../node_modules/prompts/lib/elements/text.js
var k_ = I((Nge, __) => {
  var Jl = ot(), gJ = An(), { erase: yJ, cursor: ma } = ut(), { style: wg, clear: Sg, lines: DJ, figures: xJ } = Nr(), Ag = class extends gJ {
    static {
      s(this, "TextPrompt");
    }
    constructor(t = {}) {
      super(t), this.transform = wg.render(t.style), this.scale = this.transform.scale, this.msg = t.message, this.initial = t.initial || "",
      this.validator = t.validate || (() => !0), this.value = "", this.errorMsg = t.error || "Please Enter A Valid Value", this.cursor = +!!this.
      initial, this.cursorOffset = 0, this.clear = Sg("", this.out.columns), this.render();
    }
    set value(t) {
      !t && this.initial ? (this.placeholder = !0, this.rendered = Jl.gray(this.transform.render(this.initial))) : (this.placeholder = !1, this.
      rendered = this.transform.render(t)), this._value = t, this.fire();
    }
    get value() {
      return this._value;
    }
    reset() {
      this.value = "", this.cursor = +!!this.initial, this.cursorOffset = 0, this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.value = this.value || this.initial, this.done = this.aborted = !0, this.error = !1, this.red = !1, this.fire(), this.render(), this.
      out.write(`
`), this.close();
    }
    async validate() {
      let t = await this.validator(this.value);
      typeof t == "string" && (this.errorMsg = t, t = !1), this.error = !t;
    }
    async submit() {
      if (this.value = this.value || this.initial, this.cursorOffset = 0, this.cursor = this.rendered.length, await this.validate(), this.error) {
        this.red = !0, this.fire(), this.render();
        return;
      }
      this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    next() {
      if (!this.placeholder) return this.bell();
      this.value = this.initial, this.cursor = this.rendered.length, this.fire(), this.render();
    }
    moveCursor(t) {
      this.placeholder || (this.cursor = this.cursor + t, this.cursorOffset += t);
    }
    _(t, r) {
      let n = this.value.slice(0, this.cursor), i = this.value.slice(this.cursor);
      this.value = `${n}${t}${i}`, this.red = !1, this.cursor = this.placeholder ? 0 : n.length + 1, this.render();
    }
    delete() {
      if (this.isCursorAtStart()) return this.bell();
      let t = this.value.slice(0, this.cursor - 1), r = this.value.slice(this.cursor);
      this.value = `${t}${r}`, this.red = !1, this.isCursorAtStart() ? this.cursorOffset = 0 : (this.cursorOffset++, this.moveCursor(-1)), this.
      render();
    }
    deleteForward() {
      if (this.cursor * this.scale >= this.rendered.length || this.placeholder) return this.bell();
      let t = this.value.slice(0, this.cursor), r = this.value.slice(this.cursor + 1);
      this.value = `${t}${r}`, this.red = !1, this.isCursorAtEnd() ? this.cursorOffset = 0 : this.cursorOffset++, this.render();
    }
    first() {
      this.cursor = 0, this.render();
    }
    last() {
      this.cursor = this.value.length, this.render();
    }
    left() {
      if (this.cursor <= 0 || this.placeholder) return this.bell();
      this.moveCursor(-1), this.render();
    }
    right() {
      if (this.cursor * this.scale >= this.rendered.length || this.placeholder) return this.bell();
      this.moveCursor(1), this.render();
    }
    isCursorAtStart() {
      return this.cursor === 0 || this.placeholder && this.cursor === 1;
    }
    isCursorAtEnd() {
      return this.cursor === this.rendered.length || this.placeholder && this.cursor === this.rendered.length + 1;
    }
    render() {
      this.closed || (this.firstRender || (this.outputError && this.out.write(ma.down(DJ(this.outputError, this.out.columns) - 1) + Sg(this.
      outputError, this.out.columns)), this.out.write(Sg(this.outputText, this.out.columns))), super.render(), this.outputError = "", this.outputText =
      [
        wg.symbol(this.done, this.aborted),
        Jl.bold(this.msg),
        wg.delimiter(this.done),
        this.red ? Jl.red(this.rendered) : this.rendered
      ].join(" "), this.error && (this.outputError += this.errorMsg.split(`
`).reduce((t, r, n) => t + `
${n ? " " : xJ.pointerSmall} ${Jl.red().italic(r)}`, "")), this.out.write(yJ.line + ma.to(0) + this.outputText + ma.save + this.outputError +
      ma.restore + ma.move(this.cursorOffset, 0)));
    }
  };
  __.exports = Ag;
});

// ../node_modules/prompts/lib/elements/select.js
var B_ = I((jge, P_) => {
  "use strict";
  var Fn = ot(), bJ = An(), { style: T_, clear: I_, figures: Zl, wrap: vJ, entriesToDisplay: EJ } = Nr(), { cursor: CJ } = ut(), Fg = class extends bJ {
    static {
      s(this, "SelectPrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.hint = t.hint || "- Use arrow-keys. Return to submit.", this.warn = t.warn || "- This option is d\
isabled", this.cursor = t.initial || 0, this.choices = t.choices.map((r, n) => (typeof r == "string" && (r = { title: r, value: n }), {
        title: r && (r.title || r.value || r),
        value: r && (r.value === void 0 ? n : r.value),
        description: r && r.description,
        selected: r && r.selected,
        disabled: r && r.disabled
      })), this.optionsPerPage = t.optionsPerPage || 10, this.value = (this.choices[this.cursor] || {}).value, this.clear = I_("", this.out.
      columns), this.render();
    }
    moveCursor(t) {
      this.cursor = t, this.value = this.choices[t].value, this.fire();
    }
    reset() {
      this.moveCursor(0), this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.selection.disabled ? this.bell() : (this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close());
    }
    first() {
      this.moveCursor(0), this.render();
    }
    last() {
      this.moveCursor(this.choices.length - 1), this.render();
    }
    up() {
      this.cursor === 0 ? this.moveCursor(this.choices.length - 1) : this.moveCursor(this.cursor - 1), this.render();
    }
    down() {
      this.cursor === this.choices.length - 1 ? this.moveCursor(0) : this.moveCursor(this.cursor + 1), this.render();
    }
    next() {
      this.moveCursor((this.cursor + 1) % this.choices.length), this.render();
    }
    _(t, r) {
      if (t === " ") return this.submit();
    }
    get selection() {
      return this.choices[this.cursor];
    }
    render() {
      if (this.closed) return;
      this.firstRender ? this.out.write(CJ.hide) : this.out.write(I_(this.outputText, this.out.columns)), super.render();
      let { startIndex: t, endIndex: r } = EJ(this.cursor, this.choices.length, this.optionsPerPage);
      if (this.outputText = [
        T_.symbol(this.done, this.aborted),
        Fn.bold(this.msg),
        T_.delimiter(!1),
        this.done ? this.selection.title : this.selection.disabled ? Fn.yellow(this.warn) : Fn.gray(this.hint)
      ].join(" "), !this.done) {
        this.outputText += `
`;
        for (let n = t; n < r; n++) {
          let i, o, a = "", u = this.choices[n];
          n === t && t > 0 ? o = Zl.arrowUp : n === r - 1 && r < this.choices.length ? o = Zl.arrowDown : o = " ", u.disabled ? (i = this.cursor ===
          n ? Fn.gray().underline(u.title) : Fn.strikethrough().gray(u.title), o = (this.cursor === n ? Fn.bold().gray(Zl.pointer) + " " : "\
  ") + o) : (i = this.cursor === n ? Fn.cyan().underline(u.title) : u.title, o = (this.cursor === n ? Fn.cyan(Zl.pointer) + " " : "  ") + o,
          u.description && this.cursor === n && (a = ` - ${u.description}`, (o.length + i.length + a.length >= this.out.columns || u.description.
          split(/\r?\n/).length > 1) && (a = `
` + vJ(u.description, { margin: 3, width: this.out.columns })))), this.outputText += `${o} ${i}${Fn.gray(a)}
`;
        }
      }
      this.out.write(this.outputText);
    }
  };
  P_.exports = Fg;
});

// ../node_modules/prompts/lib/elements/toggle.js
var L_ = I((qge, N_) => {
  var Xl = ot(), wJ = An(), { style: O_, clear: SJ } = Nr(), { cursor: R_, erase: AJ } = ut(), _g = class extends wJ {
    static {
      s(this, "TogglePrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.value = !!t.initial, this.active = t.active || "on", this.inactive = t.inactive || "off", this.initialValue =
      this.value, this.render();
    }
    reset() {
      this.value = this.initialValue, this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    deactivate() {
      if (this.value === !1) return this.bell();
      this.value = !1, this.render();
    }
    activate() {
      if (this.value === !0) return this.bell();
      this.value = !0, this.render();
    }
    delete() {
      this.deactivate();
    }
    left() {
      this.deactivate();
    }
    right() {
      this.activate();
    }
    down() {
      this.deactivate();
    }
    up() {
      this.activate();
    }
    next() {
      this.value = !this.value, this.fire(), this.render();
    }
    _(t, r) {
      if (t === " ")
        this.value = !this.value;
      else if (t === "1")
        this.value = !0;
      else if (t === "0")
        this.value = !1;
      else return this.bell();
      this.render();
    }
    render() {
      this.closed || (this.firstRender ? this.out.write(R_.hide) : this.out.write(SJ(this.outputText, this.out.columns)), super.render(), this.
      outputText = [
        O_.symbol(this.done, this.aborted),
        Xl.bold(this.msg),
        O_.delimiter(this.done),
        this.value ? this.inactive : Xl.cyan().underline(this.inactive),
        Xl.gray("/"),
        this.value ? Xl.cyan().underline(this.active) : this.active
      ].join(" "), this.out.write(AJ.line + R_.to(0) + this.outputText));
    }
  };
  N_.exports = _g;
});

// ../node_modules/prompts/lib/dateparts/datepart.js
var en = I((Vge, j_) => {
  "use strict";
  var kg = class e {
    static {
      s(this, "DatePart");
    }
    constructor({ token: t, date: r, parts: n, locales: i }) {
      this.token = t, this.date = r || /* @__PURE__ */ new Date(), this.parts = n || [this], this.locales = i || {};
    }
    up() {
    }
    down() {
    }
    next() {
      let t = this.parts.indexOf(this);
      return this.parts.find((r, n) => n > t && r instanceof e);
    }
    setTo(t) {
    }
    prev() {
      let t = [].concat(this.parts).reverse(), r = t.indexOf(this);
      return t.find((n, i) => i > r && n instanceof e);
    }
    toString() {
      return String(this.date);
    }
  };
  j_.exports = kg;
});

// ../node_modules/prompts/lib/dateparts/meridiem.js
var q_ = I((Wge, M_) => {
  "use strict";
  var FJ = en(), Tg = class extends FJ {
    static {
      s(this, "Meridiem");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setHours((this.date.getHours() + 12) % 24);
    }
    down() {
      this.up();
    }
    toString() {
      let t = this.date.getHours() > 12 ? "pm" : "am";
      return /\A/.test(this.token) ? t.toUpperCase() : t;
    }
  };
  M_.exports = Tg;
});

// ../node_modules/prompts/lib/dateparts/day.js
var V_ = I((Hge, $_) => {
  "use strict";
  var _J = en(), kJ = /* @__PURE__ */ s((e) => (e = e % 10, e === 1 ? "st" : e === 2 ? "nd" : e === 3 ? "rd" : "th"), "pos"), Ig = class extends _J {
    static {
      s(this, "Day");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setDate(this.date.getDate() + 1);
    }
    down() {
      this.date.setDate(this.date.getDate() - 1);
    }
    setTo(t) {
      this.date.setDate(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getDate(), r = this.date.getDay();
      return this.token === "DD" ? String(t).padStart(2, "0") : this.token === "Do" ? t + kJ(t) : this.token === "d" ? r + 1 : this.token ===
      "ddd" ? this.locales.weekdaysShort[r] : this.token === "dddd" ? this.locales.weekdays[r] : t;
    }
  };
  $_.exports = Ig;
});

// ../node_modules/prompts/lib/dateparts/hours.js
var W_ = I((Jge, U_) => {
  "use strict";
  var TJ = en(), Pg = class extends TJ {
    static {
      s(this, "Hours");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setHours(this.date.getHours() + 1);
    }
    down() {
      this.date.setHours(this.date.getHours() - 1);
    }
    setTo(t) {
      this.date.setHours(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getHours();
      return /h/.test(this.token) && (t = t % 12 || 12), this.token.length > 1 ? String(t).padStart(2, "0") : t;
    }
  };
  U_.exports = Pg;
});

// ../node_modules/prompts/lib/dateparts/milliseconds.js
var H_ = I((Xge, z_) => {
  "use strict";
  var IJ = en(), Bg = class extends IJ {
    static {
      s(this, "Milliseconds");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setMilliseconds(this.date.getMilliseconds() + 1);
    }
    down() {
      this.date.setMilliseconds(this.date.getMilliseconds() - 1);
    }
    setTo(t) {
      this.date.setMilliseconds(parseInt(t.substr(-this.token.length)));
    }
    toString() {
      return String(this.date.getMilliseconds()).padStart(4, "0").substr(0, this.token.length);
    }
  };
  z_.exports = Bg;
});

// ../node_modules/prompts/lib/dateparts/minutes.js
var J_ = I((Yge, G_) => {
  "use strict";
  var PJ = en(), Og = class extends PJ {
    static {
      s(this, "Minutes");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setMinutes(this.date.getMinutes() + 1);
    }
    down() {
      this.date.setMinutes(this.date.getMinutes() - 1);
    }
    setTo(t) {
      this.date.setMinutes(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getMinutes();
      return this.token.length > 1 ? String(t).padStart(2, "0") : t;
    }
  };
  G_.exports = Og;
});

// ../node_modules/prompts/lib/dateparts/month.js
var X_ = I((e0e, Z_) => {
  "use strict";
  var BJ = en(), Rg = class extends BJ {
    static {
      s(this, "Month");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setMonth(this.date.getMonth() + 1);
    }
    down() {
      this.date.setMonth(this.date.getMonth() - 1);
    }
    setTo(t) {
      t = parseInt(t.substr(-2)) - 1, this.date.setMonth(t < 0 ? 0 : t);
    }
    toString() {
      let t = this.date.getMonth(), r = this.token.length;
      return r === 2 ? String(t + 1).padStart(2, "0") : r === 3 ? this.locales.monthsShort[t] : r === 4 ? this.locales.months[t] : String(t +
      1);
    }
  };
  Z_.exports = Rg;
});

// ../node_modules/prompts/lib/dateparts/seconds.js
var Y_ = I((r0e, K_) => {
  "use strict";
  var OJ = en(), Ng = class extends OJ {
    static {
      s(this, "Seconds");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setSeconds(this.date.getSeconds() + 1);
    }
    down() {
      this.date.setSeconds(this.date.getSeconds() - 1);
    }
    setTo(t) {
      this.date.setSeconds(parseInt(t.substr(-2)));
    }
    toString() {
      let t = this.date.getSeconds();
      return this.token.length > 1 ? String(t).padStart(2, "0") : t;
    }
  };
  K_.exports = Ng;
});

// ../node_modules/prompts/lib/dateparts/year.js
var e3 = I((i0e, Q_) => {
  "use strict";
  var RJ = en(), Lg = class extends RJ {
    static {
      s(this, "Year");
    }
    constructor(t = {}) {
      super(t);
    }
    up() {
      this.date.setFullYear(this.date.getFullYear() + 1);
    }
    down() {
      this.date.setFullYear(this.date.getFullYear() - 1);
    }
    setTo(t) {
      this.date.setFullYear(t.substr(-4));
    }
    toString() {
      let t = String(this.date.getFullYear()).padStart(4, "0");
      return this.token.length === 2 ? t.substr(-2) : t;
    }
  };
  Q_.exports = Lg;
});

// ../node_modules/prompts/lib/dateparts/index.js
var r3 = I((o0e, t3) => {
  "use strict";
  t3.exports = {
    DatePart: en(),
    Meridiem: q_(),
    Day: V_(),
    Hours: W_(),
    Milliseconds: H_(),
    Minutes: J_(),
    Month: X_(),
    Seconds: Y_(),
    Year: e3()
  };
});

// ../node_modules/prompts/lib/elements/date.js
var l3 = I((a0e, u3) => {
  "use strict";
  var jg = ot(), NJ = An(), { style: n3, clear: i3, figures: LJ } = Nr(), { erase: jJ, cursor: s3 } = ut(), { DatePart: o3, Meridiem: MJ, Day: qJ,
  Hours: $J, Milliseconds: VJ, Minutes: UJ, Month: WJ, Seconds: zJ, Year: HJ } = r3(), GJ = /\\(.)|"((?:\\["\\]|[^"])+)"|(D[Do]?|d{3,4}|d)|(M{1,4})|(YY(?:YY)?)|([aA])|([Hh]{1,2})|(m{1,2})|(s{1,2})|(S{1,4})|./g,
  a3 = {
    1: ({ token: e }) => e.replace(/\\(.)/g, "$1"),
    2: (e) => new qJ(e),
    // Day // TODO
    3: (e) => new WJ(e),
    // Month
    4: (e) => new HJ(e),
    // Year
    5: (e) => new MJ(e),
    // AM/PM // TODO (special)
    6: (e) => new $J(e),
    // Hours
    7: (e) => new UJ(e),
    // Minutes
    8: (e) => new zJ(e),
    // Seconds
    9: (e) => new VJ(e)
    // Fractional seconds
  }, JJ = {
    months: "January,February,March,April,May,June,July,August,September,October,November,December".split(","),
    monthsShort: "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec".split(","),
    weekdays: "Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday".split(","),
    weekdaysShort: "Sun,Mon,Tue,Wed,Thu,Fri,Sat".split(",")
  }, Mg = class extends NJ {
    static {
      s(this, "DatePrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.cursor = 0, this.typed = "", this.locales = Object.assign(JJ, t.locales), this._date = t.initial ||
      /* @__PURE__ */ new Date(), this.errorMsg = t.error || "Please Enter A Valid Value", this.validator = t.validate || (() => !0), this.mask =
      t.mask || "YYYY-MM-DD HH:mm:ss", this.clear = i3("", this.out.columns), this.render();
    }
    get value() {
      return this.date;
    }
    get date() {
      return this._date;
    }
    set date(t) {
      t && this._date.setTime(t.getTime());
    }
    set mask(t) {
      let r;
      for (this.parts = []; r = GJ.exec(t); ) {
        let i = r.shift(), o = r.findIndex((a) => a != null);
        this.parts.push(o in a3 ? a3[o]({ token: r[o] || i, date: this.date, parts: this.parts, locales: this.locales }) : r[o] || i);
      }
      let n = this.parts.reduce((i, o) => (typeof o == "string" && typeof i[i.length - 1] == "string" ? i[i.length - 1] += o : i.push(o), i),
      []);
      this.parts.splice(0), this.parts.push(...n), this.reset();
    }
    moveCursor(t) {
      this.typed = "", this.cursor = t, this.fire();
    }
    reset() {
      this.moveCursor(this.parts.findIndex((t) => t instanceof o3)), this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.error = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    async validate() {
      let t = await this.validator(this.value);
      typeof t == "string" && (this.errorMsg = t, t = !1), this.error = !t;
    }
    async submit() {
      if (await this.validate(), this.error) {
        this.color = "red", this.fire(), this.render();
        return;
      }
      this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    up() {
      this.typed = "", this.parts[this.cursor].up(), this.render();
    }
    down() {
      this.typed = "", this.parts[this.cursor].down(), this.render();
    }
    left() {
      let t = this.parts[this.cursor].prev();
      if (t == null) return this.bell();
      this.moveCursor(this.parts.indexOf(t)), this.render();
    }
    right() {
      let t = this.parts[this.cursor].next();
      if (t == null) return this.bell();
      this.moveCursor(this.parts.indexOf(t)), this.render();
    }
    next() {
      let t = this.parts[this.cursor].next();
      this.moveCursor(t ? this.parts.indexOf(t) : this.parts.findIndex((r) => r instanceof o3)), this.render();
    }
    _(t) {
      /\d/.test(t) && (this.typed += t, this.parts[this.cursor].setTo(this.typed), this.render());
    }
    render() {
      this.closed || (this.firstRender ? this.out.write(s3.hide) : this.out.write(i3(this.outputText, this.out.columns)), super.render(), this.
      outputText = [
        n3.symbol(this.done, this.aborted),
        jg.bold(this.msg),
        n3.delimiter(!1),
        this.parts.reduce((t, r, n) => t.concat(n === this.cursor && !this.done ? jg.cyan().underline(r.toString()) : r), []).join("")
      ].join(" "), this.error && (this.outputText += this.errorMsg.split(`
`).reduce(
        (t, r, n) => t + `
${n ? " " : LJ.pointerSmall} ${jg.red().italic(r)}`,
        ""
      )), this.out.write(jJ.line + s3.to(0) + this.outputText));
    }
  };
  u3.exports = Mg;
});

// ../node_modules/prompts/lib/elements/number.js
var f3 = I((l0e, h3) => {
  var Kl = ot(), ZJ = An(), { cursor: Yl, erase: XJ } = ut(), { style: qg, figures: KJ, clear: c3, lines: YJ } = Nr(), QJ = /[0-9]/, $g = /* @__PURE__ */ s(
  (e) => e !== void 0, "isDef"), p3 = /* @__PURE__ */ s((e, t) => {
    let r = Math.pow(10, t);
    return Math.round(e * r) / r;
  }, "round"), Vg = class extends ZJ {
    static {
      s(this, "NumberPrompt");
    }
    constructor(t = {}) {
      super(t), this.transform = qg.render(t.style), this.msg = t.message, this.initial = $g(t.initial) ? t.initial : "", this.float = !!t.float,
      this.round = t.round || 2, this.inc = t.increment || 1, this.min = $g(t.min) ? t.min : -1 / 0, this.max = $g(t.max) ? t.max : 1 / 0, this.
      errorMsg = t.error || "Please Enter A Valid Value", this.validator = t.validate || (() => !0), this.color = "cyan", this.value = "", this.
      typed = "", this.lastHit = 0, this.render();
    }
    set value(t) {
      !t && t !== 0 ? (this.placeholder = !0, this.rendered = Kl.gray(this.transform.render(`${this.initial}`)), this._value = "") : (this.placeholder =
      !1, this.rendered = this.transform.render(`${p3(t, this.round)}`), this._value = p3(t, this.round)), this.fire();
    }
    get value() {
      return this._value;
    }
    parse(t) {
      return this.float ? parseFloat(t) : parseInt(t);
    }
    valid(t) {
      return t === "-" || t === "." && this.float || QJ.test(t);
    }
    reset() {
      this.typed = "", this.value = "", this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      let t = this.value;
      this.value = t !== "" ? t : this.initial, this.done = this.aborted = !0, this.error = !1, this.fire(), this.render(), this.out.write(`\

`), this.close();
    }
    async validate() {
      let t = await this.validator(this.value);
      typeof t == "string" && (this.errorMsg = t, t = !1), this.error = !t;
    }
    async submit() {
      if (await this.validate(), this.error) {
        this.color = "red", this.fire(), this.render();
        return;
      }
      let t = this.value;
      this.value = t !== "" ? t : this.initial, this.done = !0, this.aborted = !1, this.error = !1, this.fire(), this.render(), this.out.write(
      `
`), this.close();
    }
    up() {
      if (this.typed = "", this.value === "" && (this.value = this.min - this.inc), this.value >= this.max) return this.bell();
      this.value += this.inc, this.color = "cyan", this.fire(), this.render();
    }
    down() {
      if (this.typed = "", this.value === "" && (this.value = this.min + this.inc), this.value <= this.min) return this.bell();
      this.value -= this.inc, this.color = "cyan", this.fire(), this.render();
    }
    delete() {
      let t = this.value.toString();
      if (t.length === 0) return this.bell();
      this.value = this.parse(t = t.slice(0, -1)) || "", this.value !== "" && this.value < this.min && (this.value = this.min), this.color =
      "cyan", this.fire(), this.render();
    }
    next() {
      this.value = this.initial, this.fire(), this.render();
    }
    _(t, r) {
      if (!this.valid(t)) return this.bell();
      let n = Date.now();
      if (n - this.lastHit > 1e3 && (this.typed = ""), this.typed += t, this.lastHit = n, this.color = "cyan", t === ".") return this.fire();
      this.value = Math.min(this.parse(this.typed), this.max), this.value > this.max && (this.value = this.max), this.value < this.min && (this.
      value = this.min), this.fire(), this.render();
    }
    render() {
      this.closed || (this.firstRender || (this.outputError && this.out.write(Yl.down(YJ(this.outputError, this.out.columns) - 1) + c3(this.
      outputError, this.out.columns)), this.out.write(c3(this.outputText, this.out.columns))), super.render(), this.outputError = "", this.outputText =
      [
        qg.symbol(this.done, this.aborted),
        Kl.bold(this.msg),
        qg.delimiter(this.done),
        !this.done || !this.done && !this.placeholder ? Kl[this.color]().underline(this.rendered) : this.rendered
      ].join(" "), this.error && (this.outputError += this.errorMsg.split(`
`).reduce((t, r, n) => t + `
${n ? " " : KJ.pointerSmall} ${Kl.red().italic(r)}`, "")), this.out.write(XJ.line + Yl.to(0) + this.outputText + Yl.save + this.outputError +
      Yl.restore));
    }
  };
  h3.exports = Vg;
});

// ../node_modules/prompts/lib/elements/multiselect.js
var Wg = I((p0e, g3) => {
  "use strict";
  var tn = ot(), { cursor: eZ } = ut(), tZ = An(), { clear: d3, figures: Yn, style: m3, wrap: rZ, entriesToDisplay: nZ } = Nr(), Ug = class extends tZ {
    static {
      s(this, "MultiselectPrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.cursor = t.cursor || 0, this.scrollIndex = t.cursor || 0, this.hint = t.hint || "", this.warn = t.
      warn || "- This option is disabled -", this.minSelected = t.min, this.showMinError = !1, this.maxChoices = t.max, this.instructions = t.
      instructions, this.optionsPerPage = t.optionsPerPage || 10, this.value = t.choices.map((r, n) => (typeof r == "string" && (r = { title: r,
      value: n }), {
        title: r && (r.title || r.value || r),
        description: r && r.description,
        value: r && (r.value === void 0 ? n : r.value),
        selected: r && r.selected,
        disabled: r && r.disabled
      })), this.clear = d3("", this.out.columns), t.overrideRender || this.render();
    }
    reset() {
      this.value.map((t) => !t.selected), this.cursor = 0, this.fire(), this.render();
    }
    selected() {
      return this.value.filter((t) => t.selected);
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      let t = this.value.filter((r) => r.selected);
      this.minSelected && t.length < this.minSelected ? (this.showMinError = !0, this.render()) : (this.done = !0, this.aborted = !1, this.fire(),
      this.render(), this.out.write(`
`), this.close());
    }
    first() {
      this.cursor = 0, this.render();
    }
    last() {
      this.cursor = this.value.length - 1, this.render();
    }
    next() {
      this.cursor = (this.cursor + 1) % this.value.length, this.render();
    }
    up() {
      this.cursor === 0 ? this.cursor = this.value.length - 1 : this.cursor--, this.render();
    }
    down() {
      this.cursor === this.value.length - 1 ? this.cursor = 0 : this.cursor++, this.render();
    }
    left() {
      this.value[this.cursor].selected = !1, this.render();
    }
    right() {
      if (this.value.filter((t) => t.selected).length >= this.maxChoices) return this.bell();
      this.value[this.cursor].selected = !0, this.render();
    }
    handleSpaceToggle() {
      let t = this.value[this.cursor];
      if (t.selected)
        t.selected = !1, this.render();
      else {
        if (t.disabled || this.value.filter((r) => r.selected).length >= this.maxChoices)
          return this.bell();
        t.selected = !0, this.render();
      }
    }
    toggleAll() {
      if (this.maxChoices !== void 0 || this.value[this.cursor].disabled)
        return this.bell();
      let t = !this.value[this.cursor].selected;
      this.value.filter((r) => !r.disabled).forEach((r) => r.selected = t), this.render();
    }
    _(t, r) {
      if (t === " ")
        this.handleSpaceToggle();
      else if (t === "a")
        this.toggleAll();
      else
        return this.bell();
    }
    renderInstructions() {
      return this.instructions === void 0 || this.instructions ? typeof this.instructions == "string" ? this.instructions : `
Instructions:
    ${Yn.arrowUp}/${Yn.arrowDown}: Highlight option
    ${Yn.arrowLeft}/${Yn.arrowRight}/[space]: Toggle selection
` + (this.maxChoices === void 0 ? `    a: Toggle all
` : "") + "    enter/return: Complete answer" : "";
    }
    renderOption(t, r, n, i) {
      let o = (r.selected ? tn.green(Yn.radioOn) : Yn.radioOff) + " " + i + " ", a, u;
      return r.disabled ? a = t === n ? tn.gray().underline(r.title) : tn.strikethrough().gray(r.title) : (a = t === n ? tn.cyan().underline(
      r.title) : r.title, t === n && r.description && (u = ` - ${r.description}`, (o.length + a.length + u.length >= this.out.columns || r.description.
      split(/\r?\n/).length > 1) && (u = `
` + rZ(r.description, { margin: o.length, width: this.out.columns })))), o + a + tn.gray(u || "");
    }
    // shared with autocompleteMultiselect
    paginateOptions(t) {
      if (t.length === 0)
        return tn.red("No matches for this query.");
      let { startIndex: r, endIndex: n } = nZ(this.cursor, t.length, this.optionsPerPage), i, o = [];
      for (let a = r; a < n; a++)
        a === r && r > 0 ? i = Yn.arrowUp : a === n - 1 && n < t.length ? i = Yn.arrowDown : i = " ", o.push(this.renderOption(this.cursor, t[a],
        a, i));
      return `
` + o.join(`
`);
    }
    // shared with autocomleteMultiselect
    renderOptions(t) {
      return this.done ? "" : this.paginateOptions(t);
    }
    renderDoneOrInstructions() {
      if (this.done)
        return this.value.filter((r) => r.selected).map((r) => r.title).join(", ");
      let t = [tn.gray(this.hint), this.renderInstructions()];
      return this.value[this.cursor].disabled && t.push(tn.yellow(this.warn)), t.join(" ");
    }
    render() {
      if (this.closed) return;
      this.firstRender && this.out.write(eZ.hide), super.render();
      let t = [
        m3.symbol(this.done, this.aborted),
        tn.bold(this.msg),
        m3.delimiter(!1),
        this.renderDoneOrInstructions()
      ].join(" ");
      this.showMinError && (t += tn.red(`You must select a minimum of ${this.minSelected} choices.`), this.showMinError = !1), t += this.renderOptions(
      this.value), this.out.write(this.clear + t), this.clear = d3(t, this.out.columns);
    }
  };
  g3.exports = Ug;
});

// ../node_modules/prompts/lib/elements/autocomplete.js
var v3 = I((f0e, b3) => {
  "use strict";
  var ga = ot(), iZ = An(), { erase: sZ, cursor: y3 } = ut(), { style: zg, clear: D3, figures: Hg, wrap: oZ, entriesToDisplay: aZ } = Nr(), x3 = /* @__PURE__ */ s(
  (e, t) => e[t] && (e[t].value || e[t].title || e[t]), "getVal"), uZ = /* @__PURE__ */ s((e, t) => e[t] && (e[t].title || e[t].value || e[t]),
  "getTitle"), lZ = /* @__PURE__ */ s((e, t) => {
    let r = e.findIndex((n) => n.value === t || n.title === t);
    return r > -1 ? r : void 0;
  }, "getIndex"), Gg = class extends iZ {
    static {
      s(this, "AutocompletePrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.suggest = t.suggest, this.choices = t.choices, this.initial = typeof t.initial == "number" ? t.initial :
      lZ(t.choices, t.initial), this.select = this.initial || t.cursor || 0, this.i18n = { noMatches: t.noMatches || "no matches found" }, this.
      fallback = t.fallback || this.initial, this.clearFirst = t.clearFirst || !1, this.suggestions = [], this.input = "", this.limit = t.limit ||
      10, this.cursor = 0, this.transform = zg.render(t.style), this.scale = this.transform.scale, this.render = this.render.bind(this), this.
      complete = this.complete.bind(this), this.clear = D3("", this.out.columns), this.complete(this.render), this.render();
    }
    set fallback(t) {
      this._fb = Number.isSafeInteger(parseInt(t)) ? parseInt(t) : t;
    }
    get fallback() {
      let t;
      return typeof this._fb == "number" ? t = this.choices[this._fb] : typeof this._fb == "string" && (t = { title: this._fb }), t || this.
      _fb || { title: this.i18n.noMatches };
    }
    moveSelect(t) {
      this.select = t, this.suggestions.length > 0 ? this.value = x3(this.suggestions, t) : this.value = this.fallback.value, this.fire();
    }
    async complete(t) {
      let r = this.completing = this.suggest(this.input, this.choices), n = await r;
      if (this.completing !== r) return;
      this.suggestions = n.map((o, a, u) => ({ title: uZ(u, a), value: x3(u, a), description: o.description })), this.completing = !1;
      let i = Math.max(n.length - 1, 0);
      this.moveSelect(Math.min(i, this.select)), t && t();
    }
    reset() {
      this.input = "", this.complete(() => {
        this.moveSelect(this.initial !== void 0 ? this.initial : 0), this.render();
      }), this.render();
    }
    exit() {
      this.clearFirst && this.input.length > 0 ? this.reset() : (this.done = this.exited = !0, this.aborted = !1, this.fire(), this.render(),
      this.out.write(`
`), this.close());
    }
    abort() {
      this.done = this.aborted = !0, this.exited = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.done = !0, this.aborted = this.exited = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    _(t, r) {
      let n = this.input.slice(0, this.cursor), i = this.input.slice(this.cursor);
      this.input = `${n}${t}${i}`, this.cursor = n.length + 1, this.complete(this.render), this.render();
    }
    delete() {
      if (this.cursor === 0) return this.bell();
      let t = this.input.slice(0, this.cursor - 1), r = this.input.slice(this.cursor);
      this.input = `${t}${r}`, this.complete(this.render), this.cursor = this.cursor - 1, this.render();
    }
    deleteForward() {
      if (this.cursor * this.scale >= this.rendered.length) return this.bell();
      let t = this.input.slice(0, this.cursor), r = this.input.slice(this.cursor + 1);
      this.input = `${t}${r}`, this.complete(this.render), this.render();
    }
    first() {
      this.moveSelect(0), this.render();
    }
    last() {
      this.moveSelect(this.suggestions.length - 1), this.render();
    }
    up() {
      this.select === 0 ? this.moveSelect(this.suggestions.length - 1) : this.moveSelect(this.select - 1), this.render();
    }
    down() {
      this.select === this.suggestions.length - 1 ? this.moveSelect(0) : this.moveSelect(this.select + 1), this.render();
    }
    next() {
      this.select === this.suggestions.length - 1 ? this.moveSelect(0) : this.moveSelect(this.select + 1), this.render();
    }
    nextPage() {
      this.moveSelect(Math.min(this.select + this.limit, this.suggestions.length - 1)), this.render();
    }
    prevPage() {
      this.moveSelect(Math.max(this.select - this.limit, 0)), this.render();
    }
    left() {
      if (this.cursor <= 0) return this.bell();
      this.cursor = this.cursor - 1, this.render();
    }
    right() {
      if (this.cursor * this.scale >= this.rendered.length) return this.bell();
      this.cursor = this.cursor + 1, this.render();
    }
    renderOption(t, r, n, i) {
      let o, a = n ? Hg.arrowUp : i ? Hg.arrowDown : " ", u = r ? ga.cyan().underline(t.title) : t.title;
      return a = (r ? ga.cyan(Hg.pointer) + " " : "  ") + a, t.description && (o = ` - ${t.description}`, (a.length + u.length + o.length >=
      this.out.columns || t.description.split(/\r?\n/).length > 1) && (o = `
` + oZ(t.description, { margin: 3, width: this.out.columns }))), a + " " + u + ga.gray(o || "");
    }
    render() {
      if (this.closed) return;
      this.firstRender ? this.out.write(y3.hide) : this.out.write(D3(this.outputText, this.out.columns)), super.render();
      let { startIndex: t, endIndex: r } = aZ(this.select, this.choices.length, this.limit);
      if (this.outputText = [
        zg.symbol(this.done, this.aborted, this.exited),
        ga.bold(this.msg),
        zg.delimiter(this.completing),
        this.done && this.suggestions[this.select] ? this.suggestions[this.select].title : this.rendered = this.transform.render(this.input)
      ].join(" "), !this.done) {
        let n = this.suggestions.slice(t, r).map((i, o) => this.renderOption(
          i,
          this.select === o + t,
          o === 0 && t > 0,
          o + t === r - 1 && r < this.choices.length
        )).join(`
`);
        this.outputText += `
` + (n || ga.gray(this.fallback.title));
      }
      this.out.write(sZ.line + y3.to(0) + this.outputText);
    }
  };
  b3.exports = Gg;
});

// ../node_modules/prompts/lib/elements/autocompleteMultiselect.js
var S3 = I((m0e, w3) => {
  "use strict";
  var _n = ot(), { cursor: cZ } = ut(), pZ = Wg(), { clear: E3, style: C3, figures: $s } = Nr(), Jg = class extends pZ {
    static {
      s(this, "AutocompleteMultiselectPrompt");
    }
    constructor(t = {}) {
      t.overrideRender = !0, super(t), this.inputValue = "", this.clear = E3("", this.out.columns), this.filteredOptions = this.value, this.
      render();
    }
    last() {
      this.cursor = this.filteredOptions.length - 1, this.render();
    }
    next() {
      this.cursor = (this.cursor + 1) % this.filteredOptions.length, this.render();
    }
    up() {
      this.cursor === 0 ? this.cursor = this.filteredOptions.length - 1 : this.cursor--, this.render();
    }
    down() {
      this.cursor === this.filteredOptions.length - 1 ? this.cursor = 0 : this.cursor++, this.render();
    }
    left() {
      this.filteredOptions[this.cursor].selected = !1, this.render();
    }
    right() {
      if (this.value.filter((t) => t.selected).length >= this.maxChoices) return this.bell();
      this.filteredOptions[this.cursor].selected = !0, this.render();
    }
    delete() {
      this.inputValue.length && (this.inputValue = this.inputValue.substr(0, this.inputValue.length - 1), this.updateFilteredOptions());
    }
    updateFilteredOptions() {
      let t = this.filteredOptions[this.cursor];
      this.filteredOptions = this.value.filter((n) => this.inputValue ? !!(typeof n.title == "string" && n.title.toLowerCase().includes(this.
      inputValue.toLowerCase()) || typeof n.value == "string" && n.value.toLowerCase().includes(this.inputValue.toLowerCase())) : !0);
      let r = this.filteredOptions.findIndex((n) => n === t);
      this.cursor = r < 0 ? 0 : r, this.render();
    }
    handleSpaceToggle() {
      let t = this.filteredOptions[this.cursor];
      if (t.selected)
        t.selected = !1, this.render();
      else {
        if (t.disabled || this.value.filter((r) => r.selected).length >= this.maxChoices)
          return this.bell();
        t.selected = !0, this.render();
      }
    }
    handleInputChange(t) {
      this.inputValue = this.inputValue + t, this.updateFilteredOptions();
    }
    _(t, r) {
      t === " " ? this.handleSpaceToggle() : this.handleInputChange(t);
    }
    renderInstructions() {
      return this.instructions === void 0 || this.instructions ? typeof this.instructions == "string" ? this.instructions : `
Instructions:
    ${$s.arrowUp}/${$s.arrowDown}: Highlight option
    ${$s.arrowLeft}/${$s.arrowRight}/[space]: Toggle selection
    [a,b,c]/delete: Filter choices
    enter/return: Complete answer
` : "";
    }
    renderCurrentInput() {
      return `
Filtered results for: ${this.inputValue ? this.inputValue : _n.gray("Enter something to filter")}
`;
    }
    renderOption(t, r, n) {
      let i;
      return r.disabled ? i = t === n ? _n.gray().underline(r.title) : _n.strikethrough().gray(r.title) : i = t === n ? _n.cyan().underline(
      r.title) : r.title, (r.selected ? _n.green($s.radioOn) : $s.radioOff) + "  " + i;
    }
    renderDoneOrInstructions() {
      if (this.done)
        return this.value.filter((r) => r.selected).map((r) => r.title).join(", ");
      let t = [_n.gray(this.hint), this.renderInstructions(), this.renderCurrentInput()];
      return this.filteredOptions.length && this.filteredOptions[this.cursor].disabled && t.push(_n.yellow(this.warn)), t.join(" ");
    }
    render() {
      if (this.closed) return;
      this.firstRender && this.out.write(cZ.hide), super.render();
      let t = [
        C3.symbol(this.done, this.aborted),
        _n.bold(this.msg),
        C3.delimiter(!1),
        this.renderDoneOrInstructions()
      ].join(" ");
      this.showMinError && (t += _n.red(`You must select a minimum of ${this.minSelected} choices.`), this.showMinError = !1), t += this.renderOptions(
      this.filteredOptions), this.out.write(this.clear + t), this.clear = E3(t, this.out.columns);
    }
  };
  w3.exports = Jg;
});

// ../node_modules/prompts/lib/elements/confirm.js
var T3 = I((y0e, k3) => {
  var A3 = ot(), hZ = An(), { style: F3, clear: fZ } = Nr(), { erase: dZ, cursor: _3 } = ut(), Zg = class extends hZ {
    static {
      s(this, "ConfirmPrompt");
    }
    constructor(t = {}) {
      super(t), this.msg = t.message, this.value = t.initial, this.initialValue = !!t.initial, this.yesMsg = t.yes || "yes", this.yesOption =
      t.yesOption || "(Y/n)", this.noMsg = t.no || "no", this.noOption = t.noOption || "(y/N)", this.render();
    }
    reset() {
      this.value = this.initialValue, this.fire(), this.render();
    }
    exit() {
      this.abort();
    }
    abort() {
      this.done = this.aborted = !0, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    submit() {
      this.value = this.value || !1, this.done = !0, this.aborted = !1, this.fire(), this.render(), this.out.write(`
`), this.close();
    }
    _(t, r) {
      return t.toLowerCase() === "y" ? (this.value = !0, this.submit()) : t.toLowerCase() === "n" ? (this.value = !1, this.submit()) : this.
      bell();
    }
    render() {
      this.closed || (this.firstRender ? this.out.write(_3.hide) : this.out.write(fZ(this.outputText, this.out.columns)), super.render(), this.
      outputText = [
        F3.symbol(this.done, this.aborted),
        A3.bold(this.msg),
        F3.delimiter(this.done),
        this.done ? this.value ? this.yesMsg : this.noMsg : A3.gray(this.initialValue ? this.yesOption : this.noOption)
      ].join(" "), this.out.write(dZ.line + _3.to(0) + this.outputText));
    }
  };
  k3.exports = Zg;
});

// ../node_modules/prompts/lib/elements/index.js
var P3 = I((x0e, I3) => {
  "use strict";
  I3.exports = {
    TextPrompt: k_(),
    SelectPrompt: B_(),
    TogglePrompt: L_(),
    DatePrompt: l3(),
    NumberPrompt: f3(),
    MultiselectPrompt: Wg(),
    AutocompletePrompt: v3(),
    AutocompleteMultiselectPrompt: S3(),
    ConfirmPrompt: T3()
  };
});

// ../node_modules/prompts/lib/prompts.js
var O3 = I((B3) => {
  "use strict";
  var Wt = B3, mZ = P3(), Ql = /* @__PURE__ */ s((e) => e, "noop");
  function rn(e, t, r = {}) {
    return new Promise((n, i) => {
      let o = new mZ[e](t), a = r.onAbort || Ql, u = r.onSubmit || Ql, l = r.onExit || Ql;
      o.on("state", t.onState || Ql), o.on("submit", (c) => n(u(c))), o.on("exit", (c) => n(l(c))), o.on("abort", (c) => i(a(c)));
    });
  }
  s(rn, "toPrompt");
  Wt.text = (e) => rn("TextPrompt", e);
  Wt.password = (e) => (e.style = "password", Wt.text(e));
  Wt.invisible = (e) => (e.style = "invisible", Wt.text(e));
  Wt.number = (e) => rn("NumberPrompt", e);
  Wt.date = (e) => rn("DatePrompt", e);
  Wt.confirm = (e) => rn("ConfirmPrompt", e);
  Wt.list = (e) => {
    let t = e.separator || ",";
    return rn("TextPrompt", e, {
      onSubmit: /* @__PURE__ */ s((r) => r.split(t).map((n) => n.trim()), "onSubmit")
    });
  };
  Wt.toggle = (e) => rn("TogglePrompt", e);
  Wt.select = (e) => rn("SelectPrompt", e);
  Wt.multiselect = (e) => {
    e.choices = [].concat(e.choices || []);
    let t = /* @__PURE__ */ s((r) => r.filter((n) => n.selected).map((n) => n.value), "toSelected");
    return rn("MultiselectPrompt", e, {
      onAbort: t,
      onSubmit: t
    });
  };
  Wt.autocompleteMultiselect = (e) => {
    e.choices = [].concat(e.choices || []);
    let t = /* @__PURE__ */ s((r) => r.filter((n) => n.selected).map((n) => n.value), "toSelected");
    return rn("AutocompleteMultiselectPrompt", e, {
      onAbort: t,
      onSubmit: t
    });
  };
  var gZ = /* @__PURE__ */ s((e, t) => Promise.resolve(
    t.filter((r) => r.title.slice(0, e.length).toLowerCase() === e.toLowerCase())
  ), "byTitle");
  Wt.autocomplete = (e) => (e.suggest = e.suggest || gZ, e.choices = [].concat(e.choices || []), rn("AutocompletePrompt", e));
});

// ../node_modules/prompts/lib/index.js
var L3 = I((E0e, N3) => {
  "use strict";
  var Xg = O3(), yZ = ["suggest", "format", "onState", "validate", "onRender", "type"], R3 = /* @__PURE__ */ s(() => {
  }, "noop");
  async function Qn(e = [], { onSubmit: t = R3, onCancel: r = R3 } = {}) {
    let n = {}, i = Qn._override || {};
    e = [].concat(e);
    let o, a, u, l, c, p, h = /* @__PURE__ */ s(async (f, d, m = !1) => {
      if (!(!m && f.validate && f.validate(d) !== !0))
        return f.format ? await f.format(d, n) : d;
    }, "getFormattedAnswer");
    for (a of e)
      if ({ name: l, type: c } = a, typeof c == "function" && (c = await c(o, { ...n }, a), a.type = c), !!c) {
        for (let f in a) {
          if (yZ.includes(f)) continue;
          let d = a[f];
          a[f] = typeof d == "function" ? await d(o, { ...n }, p) : d;
        }
        if (p = a, typeof a.message != "string")
          throw new Error("prompt message is required");
        if ({ name: l, type: c } = a, Xg[c] === void 0)
          throw new Error(`prompt type (${c}) is not defined`);
        if (i[a.name] !== void 0 && (o = await h(a, i[a.name]), o !== void 0)) {
          n[l] = o;
          continue;
        }
        try {
          o = Qn._injected ? DZ(Qn._injected, a.initial) : await Xg[c](a), n[l] = o = await h(a, o, !0), u = await t(a, o, n);
        } catch {
          u = !await r(a, n);
        }
        if (u) return n;
      }
    return n;
  }
  s(Qn, "prompt");
  function DZ(e, t) {
    let r = e.shift();
    if (r instanceof Error)
      throw r;
    return r === void 0 ? t : r;
  }
  s(DZ, "getInjectedAnswer");
  function xZ(e) {
    Qn._injected = (Qn._injected || []).concat(e);
  }
  s(xZ, "inject");
  function bZ(e) {
    Qn._override = Object.assign({}, e);
  }
  s(bZ, "override");
  N3.exports = Object.assign(Qn, { prompt: Qn, prompts: Xg, inject: xZ, override: bZ });
});

// ../node_modules/prompts/index.js
var Kg = I((w0e, j3) => {
  function vZ(e) {
    e = (Array.isArray(e) ? e : e.split(".")).map(Number);
    let t = 0, r = process.versions.node.split(".").map(Number);
    for (; t < e.length; t++) {
      if (r[t] > e[t]) return !1;
      if (e[t] > r[t]) return !0;
    }
    return !1;
  }
  s(vZ, "isNodeLT");
  j3.exports = vZ("8.6.0") ? l_() : L3();
});

// ../node_modules/walk-up-path/dist/cjs/index.js
var Z3 = I((ic) => {
  "use strict";
  Object.defineProperty(ic, "__esModule", { value: !0 });
  ic.walkUp = void 0;
  var J3 = H("path"), FZ = /* @__PURE__ */ s(function* (e) {
    for (e = (0, J3.resolve)(e); e; ) {
      yield e;
      let t = (0, J3.dirname)(e);
      if (t === e)
        break;
      e = t;
    }
  }, "walkUp");
  ic.walkUp = FZ;
});

// ../node_modules/zod/lib/helpers/util.js
var xa = I((Ge) => {
  "use strict";
  Object.defineProperty(Ge, "__esModule", { value: !0 });
  Ge.getParsedType = Ge.ZodParsedType = Ge.objectUtil = Ge.util = void 0;
  var i0;
  (function(e) {
    e.assertEqual = (i) => i;
    function t(i) {
    }
    s(t, "assertIs"), e.assertIs = t;
    function r(i) {
      throw new Error();
    }
    s(r, "assertNever"), e.assertNever = r, e.arrayToEnum = (i) => {
      let o = {};
      for (let a of i)
        o[a] = a;
      return o;
    }, e.getValidEnumValues = (i) => {
      let o = e.objectKeys(i).filter((u) => typeof i[i[u]] != "number"), a = {};
      for (let u of o)
        a[u] = i[u];
      return e.objectValues(a);
    }, e.objectValues = (i) => e.objectKeys(i).map(function(o) {
      return i[o];
    }), e.objectKeys = typeof Object.keys == "function" ? (i) => Object.keys(i) : (i) => {
      let o = [];
      for (let a in i)
        Object.prototype.hasOwnProperty.call(i, a) && o.push(a);
      return o;
    }, e.find = (i, o) => {
      for (let a of i)
        if (o(a))
          return a;
    }, e.isInteger = typeof Number.isInteger == "function" ? (i) => Number.isInteger(i) : (i) => typeof i == "number" && isFinite(i) && Math.
    floor(i) === i;
    function n(i, o = " | ") {
      return i.map((a) => typeof a == "string" ? `'${a}'` : a).join(o);
    }
    s(n, "joinValues"), e.joinValues = n, e.jsonStringifyReplacer = (i, o) => typeof o == "bigint" ? o.toString() : o;
  })(i0 || (Ge.util = i0 = {}));
  var Y3;
  (function(e) {
    e.mergeShapes = (t, r) => ({
      ...t,
      ...r
      // second overwrites first
    });
  })(Y3 || (Ge.objectUtil = Y3 = {}));
  Ge.ZodParsedType = i0.arrayToEnum([
    "string",
    "nan",
    "number",
    "integer",
    "float",
    "boolean",
    "date",
    "bigint",
    "symbol",
    "function",
    "undefined",
    "null",
    "array",
    "object",
    "unknown",
    "promise",
    "void",
    "never",
    "map",
    "set"
  ]);
  var BZ = /* @__PURE__ */ s((e) => {
    switch (typeof e) {
      case "undefined":
        return Ge.ZodParsedType.undefined;
      case "string":
        return Ge.ZodParsedType.string;
      case "number":
        return isNaN(e) ? Ge.ZodParsedType.nan : Ge.ZodParsedType.number;
      case "boolean":
        return Ge.ZodParsedType.boolean;
      case "function":
        return Ge.ZodParsedType.function;
      case "bigint":
        return Ge.ZodParsedType.bigint;
      case "symbol":
        return Ge.ZodParsedType.symbol;
      case "object":
        return Array.isArray(e) ? Ge.ZodParsedType.array : e === null ? Ge.ZodParsedType.null : e.then && typeof e.then == "function" && e.catch &&
        typeof e.catch == "function" ? Ge.ZodParsedType.promise : typeof Map < "u" && e instanceof Map ? Ge.ZodParsedType.map : typeof Set <
        "u" && e instanceof Set ? Ge.ZodParsedType.set : typeof Date < "u" && e instanceof Date ? Ge.ZodParsedType.date : Ge.ZodParsedType.object;
      default:
        return Ge.ZodParsedType.unknown;
    }
  }, "getParsedType");
  Ge.getParsedType = BZ;
});

// ../node_modules/zod/lib/ZodError.js
var oc = I((ei) => {
  "use strict";
  Object.defineProperty(ei, "__esModule", { value: !0 });
  ei.ZodError = ei.quotelessJson = ei.ZodIssueCode = void 0;
  var Q3 = xa();
  ei.ZodIssueCode = Q3.util.arrayToEnum([
    "invalid_type",
    "invalid_literal",
    "custom",
    "invalid_union",
    "invalid_union_discriminator",
    "invalid_enum_value",
    "unrecognized_keys",
    "invalid_arguments",
    "invalid_return_type",
    "invalid_date",
    "invalid_string",
    "too_small",
    "too_big",
    "invalid_intersection_types",
    "not_multiple_of",
    "not_finite"
  ]);
  var OZ = /* @__PURE__ */ s((e) => JSON.stringify(e, null, 2).replace(/"([^"]+)":/g, "$1:"), "quotelessJson");
  ei.quotelessJson = OZ;
  var ba = class e extends Error {
    static {
      s(this, "ZodError");
    }
    get errors() {
      return this.issues;
    }
    constructor(t) {
      super(), this.issues = [], this.addIssue = (n) => {
        this.issues = [...this.issues, n];
      }, this.addIssues = (n = []) => {
        this.issues = [...this.issues, ...n];
      };
      let r = new.target.prototype;
      Object.setPrototypeOf ? Object.setPrototypeOf(this, r) : this.__proto__ = r, this.name = "ZodError", this.issues = t;
    }
    format(t) {
      let r = t || function(o) {
        return o.message;
      }, n = { _errors: [] }, i = /* @__PURE__ */ s((o) => {
        for (let a of o.issues)
          if (a.code === "invalid_union")
            a.unionErrors.map(i);
          else if (a.code === "invalid_return_type")
            i(a.returnTypeError);
          else if (a.code === "invalid_arguments")
            i(a.argumentsError);
          else if (a.path.length === 0)
            n._errors.push(r(a));
          else {
            let u = n, l = 0;
            for (; l < a.path.length; ) {
              let c = a.path[l];
              l === a.path.length - 1 ? (u[c] = u[c] || { _errors: [] }, u[c]._errors.push(r(a))) : u[c] = u[c] || { _errors: [] }, u = u[c],
              l++;
            }
          }
      }, "processError");
      return i(this), n;
    }
    static assert(t) {
      if (!(t instanceof e))
        throw new Error(`Not a ZodError: ${t}`);
    }
    toString() {
      return this.message;
    }
    get message() {
      return JSON.stringify(this.issues, Q3.util.jsonStringifyReplacer, 2);
    }
    get isEmpty() {
      return this.issues.length === 0;
    }
    flatten(t = (r) => r.message) {
      let r = {}, n = [];
      for (let i of this.issues)
        i.path.length > 0 ? (r[i.path[0]] = r[i.path[0]] || [], r[i.path[0]].push(t(i))) : n.push(t(i));
      return { formErrors: n, fieldErrors: r };
    }
    get formErrors() {
      return this.flatten();
    }
  };
  ei.ZodError = ba;
  ba.create = (e) => new ba(e);
});

// ../node_modules/zod/lib/locales/en.js
var o0 = I((s0) => {
  "use strict";
  Object.defineProperty(s0, "__esModule", { value: !0 });
  var Ai = xa(), At = oc(), RZ = /* @__PURE__ */ s((e, t) => {
    let r;
    switch (e.code) {
      case At.ZodIssueCode.invalid_type:
        e.received === Ai.ZodParsedType.undefined ? r = "Required" : r = `Expected ${e.expected}, received ${e.received}`;
        break;
      case At.ZodIssueCode.invalid_literal:
        r = `Invalid literal value, expected ${JSON.stringify(e.expected, Ai.util.jsonStringifyReplacer)}`;
        break;
      case At.ZodIssueCode.unrecognized_keys:
        r = `Unrecognized key(s) in object: ${Ai.util.joinValues(e.keys, ", ")}`;
        break;
      case At.ZodIssueCode.invalid_union:
        r = "Invalid input";
        break;
      case At.ZodIssueCode.invalid_union_discriminator:
        r = `Invalid discriminator value. Expected ${Ai.util.joinValues(e.options)}`;
        break;
      case At.ZodIssueCode.invalid_enum_value:
        r = `Invalid enum value. Expected ${Ai.util.joinValues(e.options)}, received '${e.received}'`;
        break;
      case At.ZodIssueCode.invalid_arguments:
        r = "Invalid function arguments";
        break;
      case At.ZodIssueCode.invalid_return_type:
        r = "Invalid function return type";
        break;
      case At.ZodIssueCode.invalid_date:
        r = "Invalid date";
        break;
      case At.ZodIssueCode.invalid_string:
        typeof e.validation == "object" ? "includes" in e.validation ? (r = `Invalid input: must include "${e.validation.includes}"`, typeof e.
        validation.position == "number" && (r = `${r} at one or more positions greater than or equal to ${e.validation.position}`)) : "start\
sWith" in e.validation ? r = `Invalid input: must start with "${e.validation.startsWith}"` : "endsWith" in e.validation ? r = `Invalid input\
: must end with "${e.validation.endsWith}"` : Ai.util.assertNever(e.validation) : e.validation !== "regex" ? r = `Invalid ${e.validation}` :
        r = "Invalid";
        break;
      case At.ZodIssueCode.too_small:
        e.type === "array" ? r = `Array must contain ${e.exact ? "exactly" : e.inclusive ? "at least" : "more than"} ${e.minimum} element(s)` :
        e.type === "string" ? r = `String must contain ${e.exact ? "exactly" : e.inclusive ? "at least" : "over"} ${e.minimum} character(s)` :
        e.type === "number" ? r = `Number must be ${e.exact ? "exactly equal to " : e.inclusive ? "greater than or equal to " : "greater tha\
n "}${e.minimum}` : e.type === "date" ? r = `Date must be ${e.exact ? "exactly equal to " : e.inclusive ? "greater than or equal to " : "gre\
ater than "}${new Date(Number(e.minimum))}` : r = "Invalid input";
        break;
      case At.ZodIssueCode.too_big:
        e.type === "array" ? r = `Array must contain ${e.exact ? "exactly" : e.inclusive ? "at most" : "less than"} ${e.maximum} element(s)` :
        e.type === "string" ? r = `String must contain ${e.exact ? "exactly" : e.inclusive ? "at most" : "under"} ${e.maximum} character(s)` :
        e.type === "number" ? r = `Number must be ${e.exact ? "exactly" : e.inclusive ? "less than or equal to" : "less than"} ${e.maximum}` :
        e.type === "bigint" ? r = `BigInt must be ${e.exact ? "exactly" : e.inclusive ? "less than or equal to" : "less than"} ${e.maximum}` :
        e.type === "date" ? r = `Date must be ${e.exact ? "exactly" : e.inclusive ? "smaller than or equal to" : "smaller than"} ${new Date(
        Number(e.maximum))}` : r = "Invalid input";
        break;
      case At.ZodIssueCode.custom:
        r = "Invalid input";
        break;
      case At.ZodIssueCode.invalid_intersection_types:
        r = "Intersection results could not be merged";
        break;
      case At.ZodIssueCode.not_multiple_of:
        r = `Number must be a multiple of ${e.multipleOf}`;
        break;
      case At.ZodIssueCode.not_finite:
        r = "Number must be finite";
        break;
      default:
        r = t.defaultError, Ai.util.assertNever(e);
    }
    return { message: r };
  }, "errorMap");
  s0.default = RZ;
});

// ../node_modules/zod/lib/errors.js
var ac = I((nn) => {
  "use strict";
  var NZ = nn && nn.__importDefault || function(e) {
    return e && e.__esModule ? e : { default: e };
  };
  Object.defineProperty(nn, "__esModule", { value: !0 });
  nn.getErrorMap = nn.setErrorMap = nn.defaultErrorMap = void 0;
  var ek = NZ(o0());
  nn.defaultErrorMap = ek.default;
  var tk = ek.default;
  function LZ(e) {
    tk = e;
  }
  s(LZ, "setErrorMap");
  nn.setErrorMap = LZ;
  function jZ() {
    return tk;
  }
  s(jZ, "getErrorMap");
  nn.getErrorMap = jZ;
});

// ../node_modules/zod/lib/helpers/parseUtil.js
var u0 = I((je) => {
  "use strict";
  var MZ = je && je.__importDefault || function(e) {
    return e && e.__esModule ? e : { default: e };
  };
  Object.defineProperty(je, "__esModule", { value: !0 });
  je.isAsync = je.isValid = je.isDirty = je.isAborted = je.OK = je.DIRTY = je.INVALID = je.ParseStatus = je.addIssueToContext = je.EMPTY_PATH =
  je.makeIssue = void 0;
  var qZ = ac(), rk = MZ(o0()), $Z = /* @__PURE__ */ s((e) => {
    let { data: t, path: r, errorMaps: n, issueData: i } = e, o = [...r, ...i.path || []], a = {
      ...i,
      path: o
    };
    if (i.message !== void 0)
      return {
        ...i,
        path: o,
        message: i.message
      };
    let u = "", l = n.filter((c) => !!c).slice().reverse();
    for (let c of l)
      u = c(a, { data: t, defaultError: u }).message;
    return {
      ...i,
      path: o,
      message: u
    };
  }, "makeIssue");
  je.makeIssue = $Z;
  je.EMPTY_PATH = [];
  function VZ(e, t) {
    let r = (0, qZ.getErrorMap)(), n = (0, je.makeIssue)({
      issueData: t,
      data: e.data,
      path: e.path,
      errorMaps: [
        e.common.contextualErrorMap,
        // contextual error map is first priority
        e.schemaErrorMap,
        // then schema-bound map if available
        r,
        // then global override map
        r === rk.default ? void 0 : rk.default
        // then global default map
      ].filter((i) => !!i)
    });
    e.common.issues.push(n);
  }
  s(VZ, "addIssueToContext");
  je.addIssueToContext = VZ;
  var a0 = class e {
    static {
      s(this, "ParseStatus");
    }
    constructor() {
      this.value = "valid";
    }
    dirty() {
      this.value === "valid" && (this.value = "dirty");
    }
    abort() {
      this.value !== "aborted" && (this.value = "aborted");
    }
    static mergeArray(t, r) {
      let n = [];
      for (let i of r) {
        if (i.status === "aborted")
          return je.INVALID;
        i.status === "dirty" && t.dirty(), n.push(i.value);
      }
      return { status: t.value, value: n };
    }
    static async mergeObjectAsync(t, r) {
      let n = [];
      for (let i of r) {
        let o = await i.key, a = await i.value;
        n.push({
          key: o,
          value: a
        });
      }
      return e.mergeObjectSync(t, n);
    }
    static mergeObjectSync(t, r) {
      let n = {};
      for (let i of r) {
        let { key: o, value: a } = i;
        if (o.status === "aborted" || a.status === "aborted")
          return je.INVALID;
        o.status === "dirty" && t.dirty(), a.status === "dirty" && t.dirty(), o.value !== "__proto__" && (typeof a.value < "u" || i.alwaysSet) &&
        (n[o.value] = a.value);
      }
      return { status: t.value, value: n };
    }
  };
  je.ParseStatus = a0;
  je.INVALID = Object.freeze({
    status: "aborted"
  });
  var UZ = /* @__PURE__ */ s((e) => ({ status: "dirty", value: e }), "DIRTY");
  je.DIRTY = UZ;
  var WZ = /* @__PURE__ */ s((e) => ({ status: "valid", value: e }), "OK");
  je.OK = WZ;
  var zZ = /* @__PURE__ */ s((e) => e.status === "aborted", "isAborted");
  je.isAborted = zZ;
  var HZ = /* @__PURE__ */ s((e) => e.status === "dirty", "isDirty");
  je.isDirty = HZ;
  var GZ = /* @__PURE__ */ s((e) => e.status === "valid", "isValid");
  je.isValid = GZ;
  var JZ = /* @__PURE__ */ s((e) => typeof Promise < "u" && e instanceof Promise, "isAsync");
  je.isAsync = JZ;
});

// ../node_modules/zod/lib/helpers/typeAliases.js
var ik = I((nk) => {
  "use strict";
  Object.defineProperty(nk, "__esModule", { value: !0 });
});

// ../node_modules/zod/lib/helpers/errorUtil.js
var ok = I((uc) => {
  "use strict";
  Object.defineProperty(uc, "__esModule", { value: !0 });
  uc.errorUtil = void 0;
  var sk;
  (function(e) {
    e.errToObj = (t) => typeof t == "string" ? { message: t } : t || {}, e.toString = (t) => typeof t == "string" ? t : t?.message;
  })(sk || (uc.errorUtil = sk = {}));
});

// ../node_modules/zod/lib/types.js
var xk = I((q) => {
  "use strict";
  var cc = q && q.__classPrivateFieldGet || function(e, t, r, n) {
    if (r === "a" && !n) throw new TypeError("Private accessor was defined without a getter");
    if (typeof t == "function" ? e !== t || !n : !t.has(e)) throw new TypeError("Cannot read private member from an object whose class did n\
ot declare it");
    return r === "m" ? n : r === "a" ? n.call(e) : n ? n.value : t.get(e);
  }, lk = q && q.__classPrivateFieldSet || function(e, t, r, n, i) {
    if (n === "m") throw new TypeError("Private method is not writable");
    if (n === "a" && !i) throw new TypeError("Private accessor was defined without a setter");
    if (typeof t == "function" ? e !== t || !i : !t.has(e)) throw new TypeError("Cannot write private member to an object whose class did no\
t declare it");
    return n === "a" ? i.call(e, r) : i ? i.value = r : t.set(e, r), r;
  }, va, Ea;
  Object.defineProperty(q, "__esModule", { value: !0 });
  q.boolean = q.bigint = q.array = q.any = q.coerce = q.ZodFirstPartyTypeKind = q.late = q.ZodSchema = q.Schema = q.custom = q.ZodReadonly =
  q.ZodPipeline = q.ZodBranded = q.BRAND = q.ZodNaN = q.ZodCatch = q.ZodDefault = q.ZodNullable = q.ZodOptional = q.ZodTransformer = q.ZodEffects =
  q.ZodPromise = q.ZodNativeEnum = q.ZodEnum = q.ZodLiteral = q.ZodLazy = q.ZodFunction = q.ZodSet = q.ZodMap = q.ZodRecord = q.ZodTuple = q.
  ZodIntersection = q.ZodDiscriminatedUnion = q.ZodUnion = q.ZodObject = q.ZodArray = q.ZodVoid = q.ZodNever = q.ZodUnknown = q.ZodAny = q.ZodNull =
  q.ZodUndefined = q.ZodSymbol = q.ZodDate = q.ZodBoolean = q.ZodBigInt = q.ZodNumber = q.ZodString = q.datetimeRegex = q.ZodType = void 0;
  q.NEVER = q.void = q.unknown = q.union = q.undefined = q.tuple = q.transformer = q.symbol = q.string = q.strictObject = q.set = q.record =
  q.promise = q.preprocess = q.pipeline = q.ostring = q.optional = q.onumber = q.oboolean = q.object = q.number = q.nullable = q.null = q.never =
  q.nativeEnum = q.nan = q.map = q.literal = q.lazy = q.intersection = q.instanceof = q.function = q.enum = q.effect = q.discriminatedUnion =
  q.date = void 0;
  var lc = ac(), ue = ok(), V = u0(), ne = xa(), te = oc(), xr = class {
    static {
      s(this, "ParseInputLazyPath");
    }
    constructor(t, r, n, i) {
      this._cachedPath = [], this.parent = t, this.data = r, this._path = n, this._key = i;
    }
    get path() {
      return this._cachedPath.length || (this._key instanceof Array ? this._cachedPath.push(...this._path, ...this._key) : this._cachedPath.
      push(...this._path, this._key)), this._cachedPath;
    }
  }, ak = /* @__PURE__ */ s((e, t) => {
    if ((0, V.isValid)(t))
      return { success: !0, data: t.value };
    if (!e.common.issues.length)
      throw new Error("Validation failed but no issues detected.");
    return {
      success: !1,
      get error() {
        if (this._error)
          return this._error;
        let r = new te.ZodError(e.common.issues);
        return this._error = r, this._error;
      }
    };
  }, "handleResult");
  function Se(e) {
    if (!e)
      return {};
    let { errorMap: t, invalid_type_error: r, required_error: n, description: i } = e;
    if (t && (r || n))
      throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);
    return t ? { errorMap: t, description: i } : { errorMap: /* @__PURE__ */ s((a, u) => {
      var l, c;
      let { message: p } = e;
      return a.code === "invalid_enum_value" ? { message: p ?? u.defaultError } : typeof u.data > "u" ? { message: (l = p ?? n) !== null && l !==
      void 0 ? l : u.defaultError } : a.code !== "invalid_type" ? { message: u.defaultError } : { message: (c = p ?? r) !== null && c !== void 0 ?
      c : u.defaultError };
    }, "customMap"), description: i };
  }
  s(Se, "processCreateParams");
  var Ae = class {
    static {
      s(this, "ZodType");
    }
    get description() {
      return this._def.description;
    }
    _getType(t) {
      return (0, ne.getParsedType)(t.data);
    }
    _getOrReturnCtx(t, r) {
      return r || {
        common: t.parent.common,
        data: t.data,
        parsedType: (0, ne.getParsedType)(t.data),
        schemaErrorMap: this._def.errorMap,
        path: t.path,
        parent: t.parent
      };
    }
    _processInputParams(t) {
      return {
        status: new V.ParseStatus(),
        ctx: {
          common: t.parent.common,
          data: t.data,
          parsedType: (0, ne.getParsedType)(t.data),
          schemaErrorMap: this._def.errorMap,
          path: t.path,
          parent: t.parent
        }
      };
    }
    _parseSync(t) {
      let r = this._parse(t);
      if ((0, V.isAsync)(r))
        throw new Error("Synchronous parse encountered promise.");
      return r;
    }
    _parseAsync(t) {
      let r = this._parse(t);
      return Promise.resolve(r);
    }
    parse(t, r) {
      let n = this.safeParse(t, r);
      if (n.success)
        return n.data;
      throw n.error;
    }
    safeParse(t, r) {
      var n;
      let i = {
        common: {
          issues: [],
          async: (n = r?.async) !== null && n !== void 0 ? n : !1,
          contextualErrorMap: r?.errorMap
        },
        path: r?.path || [],
        schemaErrorMap: this._def.errorMap,
        parent: null,
        data: t,
        parsedType: (0, ne.getParsedType)(t)
      }, o = this._parseSync({ data: t, path: i.path, parent: i });
      return ak(i, o);
    }
    "~validate"(t) {
      var r, n;
      let i = {
        common: {
          issues: [],
          async: !!this["~standard"].async
        },
        path: [],
        schemaErrorMap: this._def.errorMap,
        parent: null,
        data: t,
        parsedType: (0, ne.getParsedType)(t)
      };
      if (!this["~standard"].async)
        try {
          let o = this._parseSync({ data: t, path: [], parent: i });
          return (0, V.isValid)(o) ? {
            value: o.value
          } : {
            issues: i.common.issues
          };
        } catch (o) {
          !((n = (r = o?.message) === null || r === void 0 ? void 0 : r.toLowerCase()) === null || n === void 0) && n.includes("encountered") &&
          (this["~standard"].async = !0), i.common = {
            issues: [],
            async: !0
          };
        }
      return this._parseAsync({ data: t, path: [], parent: i }).then((o) => (0, V.isValid)(o) ? {
        value: o.value
      } : {
        issues: i.common.issues
      });
    }
    async parseAsync(t, r) {
      let n = await this.safeParseAsync(t, r);
      if (n.success)
        return n.data;
      throw n.error;
    }
    async safeParseAsync(t, r) {
      let n = {
        common: {
          issues: [],
          contextualErrorMap: r?.errorMap,
          async: !0
        },
        path: r?.path || [],
        schemaErrorMap: this._def.errorMap,
        parent: null,
        data: t,
        parsedType: (0, ne.getParsedType)(t)
      }, i = this._parse({ data: t, path: n.path, parent: n }), o = await ((0, V.isAsync)(i) ? i : Promise.resolve(i));
      return ak(n, o);
    }
    refine(t, r) {
      let n = /* @__PURE__ */ s((i) => typeof r == "string" || typeof r > "u" ? { message: r } : typeof r == "function" ? r(i) : r, "getIssu\
eProperties");
      return this._refinement((i, o) => {
        let a = t(i), u = /* @__PURE__ */ s(() => o.addIssue({
          code: te.ZodIssueCode.custom,
          ...n(i)
        }), "setError");
        return typeof Promise < "u" && a instanceof Promise ? a.then((l) => l ? !0 : (u(), !1)) : a ? !0 : (u(), !1);
      });
    }
    refinement(t, r) {
      return this._refinement((n, i) => t(n) ? !0 : (i.addIssue(typeof r == "function" ? r(n, i) : r), !1));
    }
    _refinement(t) {
      return new Qt({
        schema: this,
        typeName: De.ZodEffects,
        effect: { type: "refinement", refinement: t }
      });
    }
    superRefine(t) {
      return this._refinement(t);
    }
    constructor(t) {
      this.spa = this.safeParseAsync, this._def = t, this.parse = this.parse.bind(this), this.safeParse = this.safeParse.bind(this), this.parseAsync =
      this.parseAsync.bind(this), this.safeParseAsync = this.safeParseAsync.bind(this), this.spa = this.spa.bind(this), this.refine = this.refine.
      bind(this), this.refinement = this.refinement.bind(this), this.superRefine = this.superRefine.bind(this), this.optional = this.optional.
      bind(this), this.nullable = this.nullable.bind(this), this.nullish = this.nullish.bind(this), this.array = this.array.bind(this), this.
      promise = this.promise.bind(this), this.or = this.or.bind(this), this.and = this.and.bind(this), this.transform = this.transform.bind(
      this), this.brand = this.brand.bind(this), this.default = this.default.bind(this), this.catch = this.catch.bind(this), this.describe =
      this.describe.bind(this), this.pipe = this.pipe.bind(this), this.readonly = this.readonly.bind(this), this.isNullable = this.isNullable.
      bind(this), this.isOptional = this.isOptional.bind(this), this["~standard"] = {
        version: 1,
        vendor: "zod",
        validate: /* @__PURE__ */ s((r) => this["~validate"](r), "validate")
      };
    }
    optional() {
      return Dr.create(this, this._def);
    }
    nullable() {
      return on.create(this, this._def);
    }
    nullish() {
      return this.nullable().optional();
    }
    array() {
      return In.create(this);
    }
    promise() {
      return ni.create(this, this._def);
    }
    or(t) {
      return Bi.create([this, t], this._def);
    }
    and(t) {
      return Oi.create(this, t, this._def);
    }
    transform(t) {
      return new Qt({
        ...Se(this._def),
        schema: this,
        typeName: De.ZodEffects,
        effect: { type: "transform", transform: t }
      });
    }
    default(t) {
      let r = typeof t == "function" ? t : () => t;
      return new Mi({
        ...Se(this._def),
        innerType: this,
        defaultValue: r,
        typeName: De.ZodDefault
      });
    }
    brand() {
      return new Ca({
        typeName: De.ZodBranded,
        type: this,
        ...Se(this._def)
      });
    }
    catch(t) {
      let r = typeof t == "function" ? t : () => t;
      return new qi({
        ...Se(this._def),
        innerType: this,
        catchValue: r,
        typeName: De.ZodCatch
      });
    }
    describe(t) {
      let r = this.constructor;
      return new r({
        ...this._def,
        description: t
      });
    }
    pipe(t) {
      return wa.create(this, t);
    }
    readonly() {
      return $i.create(this);
    }
    isOptional() {
      return this.safeParse(void 0).success;
    }
    isNullable() {
      return this.safeParse(null).success;
    }
  };
  q.ZodType = Ae;
  q.Schema = Ae;
  q.ZodSchema = Ae;
  var ZZ = /^c[^\s-]{8,}$/i, XZ = /^[0-9a-z]+$/, KZ = /^[0-9A-HJKMNP-TV-Z]{26}$/i, YZ = /^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,
  QZ = /^[a-z0-9_-]{21}$/i, eX = /^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/, tX = /^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,
  rX = /^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i, nX = "^(\\p{Extended_Pictographic}|\\p{Emoji_Comp\
onent})+$", l0, iX = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/, sX = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/,
  oX = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/,
  aX = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,
  uX = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/, lX = /^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,
  ck = "((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469\
]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))", cX = new RegExp(`^${ck}$`);
  function pk(e) {
    let t = "([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";
    return e.precision ? t = `${t}\\.\\d{${e.precision}}` : e.precision == null && (t = `${t}(\\.\\d+)?`), t;
  }
  s(pk, "timeRegexSource");
  function pX(e) {
    return new RegExp(`^${pk(e)}$`);
  }
  s(pX, "timeRegex");
  function hk(e) {
    let t = `${ck}T${pk(e)}`, r = [];
    return r.push(e.local ? "Z?" : "Z"), e.offset && r.push("([+-]\\d{2}:?\\d{2})"), t = `${t}(${r.join("|")})`, new RegExp(`^${t}$`);
  }
  s(hk, "datetimeRegex");
  q.datetimeRegex = hk;
  function hX(e, t) {
    return !!((t === "v4" || !t) && iX.test(e) || (t === "v6" || !t) && oX.test(e));
  }
  s(hX, "isValidIP");
  function fX(e, t) {
    if (!eX.test(e))
      return !1;
    try {
      let [r] = e.split("."), n = r.replace(/-/g, "+").replace(/_/g, "/").padEnd(r.length + (4 - r.length % 4) % 4, "="), i = JSON.parse(atob(
      n));
      return !(typeof i != "object" || i === null || !i.typ || !i.alg || t && i.alg !== t);
    } catch {
      return !1;
    }
  }
  s(fX, "isValidJWT");
  function dX(e, t) {
    return !!((t === "v4" || !t) && sX.test(e) || (t === "v6" || !t) && aX.test(e));
  }
  s(dX, "isValidCidr");
  var ti = class e extends Ae {
    static {
      s(this, "ZodString");
    }
    _parse(t) {
      if (this._def.coerce && (t.data = String(t.data)), this._getType(t) !== ne.ZodParsedType.string) {
        let o = this._getOrReturnCtx(t);
        return (0, V.addIssueToContext)(o, {
          code: te.ZodIssueCode.invalid_type,
          expected: ne.ZodParsedType.string,
          received: o.parsedType
        }), V.INVALID;
      }
      let n = new V.ParseStatus(), i;
      for (let o of this._def.checks)
        if (o.kind === "min")
          t.data.length < o.value && (i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
            code: te.ZodIssueCode.too_small,
            minimum: o.value,
            type: "string",
            inclusive: !0,
            exact: !1,
            message: o.message
          }), n.dirty());
        else if (o.kind === "max")
          t.data.length > o.value && (i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
            code: te.ZodIssueCode.too_big,
            maximum: o.value,
            type: "string",
            inclusive: !0,
            exact: !1,
            message: o.message
          }), n.dirty());
        else if (o.kind === "length") {
          let a = t.data.length > o.value, u = t.data.length < o.value;
          (a || u) && (i = this._getOrReturnCtx(t, i), a ? (0, V.addIssueToContext)(i, {
            code: te.ZodIssueCode.too_big,
            maximum: o.value,
            type: "string",
            inclusive: !0,
            exact: !0,
            message: o.message
          }) : u && (0, V.addIssueToContext)(i, {
            code: te.ZodIssueCode.too_small,
            minimum: o.value,
            type: "string",
            inclusive: !0,
            exact: !0,
            message: o.message
          }), n.dirty());
        } else if (o.kind === "email")
          rX.test(t.data) || (i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
            validation: "email",
            code: te.ZodIssueCode.invalid_string,
            message: o.message
          }), n.dirty());
        else if (o.kind === "emoji")
          l0 || (l0 = new RegExp(nX, "u")), l0.test(t.data) || (i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
            validation: "emoji",
            code: te.ZodIssueCode.invalid_string,
            message: o.message
          }), n.dirty());
        else if (o.kind === "uuid")
          YZ.test(t.data) || (i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
            validation: "uuid",
            code: te.ZodIssueCode.invalid_string,
            message: o.message
          }), n.dirty());
        else if (o.kind === "nanoid")
          QZ.test(t.data) || (i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
            validation: "nanoid",
            code: te.ZodIssueCode.invalid_string,
            message: o.message
          }), n.dirty());
        else if (o.kind === "cuid")
          ZZ.test(t.data) || (i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
            validation: "cuid",
            code: te.ZodIssueCode.invalid_string,
            message: o.message
          }), n.dirty());
        else if (o.kind === "cuid2")
          XZ.test(t.data) || (i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
            validation: "cuid2",
            code: te.ZodIssueCode.invalid_string,
            message: o.message
          }), n.dirty());
        else if (o.kind === "ulid")
          KZ.test(t.data) || (i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
            validation: "ulid",
            code: te.ZodIssueCode.invalid_string,
            message: o.message
          }), n.dirty());
        else if (o.kind === "url")
          try {
            new URL(t.data);
          } catch {
            i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
              validation: "url",
              code: te.ZodIssueCode.invalid_string,
              message: o.message
            }), n.dirty();
          }
        else o.kind === "regex" ? (o.regex.lastIndex = 0, o.regex.test(t.data) || (i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(
        i, {
          validation: "regex",
          code: te.ZodIssueCode.invalid_string,
          message: o.message
        }), n.dirty())) : o.kind === "trim" ? t.data = t.data.trim() : o.kind === "includes" ? t.data.includes(o.value, o.position) || (i = this.
        _getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
          code: te.ZodIssueCode.invalid_string,
          validation: { includes: o.value, position: o.position },
          message: o.message
        }), n.dirty()) : o.kind === "toLowerCase" ? t.data = t.data.toLowerCase() : o.kind === "toUpperCase" ? t.data = t.data.toUpperCase() :
        o.kind === "startsWith" ? t.data.startsWith(o.value) || (i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
          code: te.ZodIssueCode.invalid_string,
          validation: { startsWith: o.value },
          message: o.message
        }), n.dirty()) : o.kind === "endsWith" ? t.data.endsWith(o.value) || (i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
          code: te.ZodIssueCode.invalid_string,
          validation: { endsWith: o.value },
          message: o.message
        }), n.dirty()) : o.kind === "datetime" ? hk(o).test(t.data) || (i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
          code: te.ZodIssueCode.invalid_string,
          validation: "datetime",
          message: o.message
        }), n.dirty()) : o.kind === "date" ? cX.test(t.data) || (i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
          code: te.ZodIssueCode.invalid_string,
          validation: "date",
          message: o.message
        }), n.dirty()) : o.kind === "time" ? pX(o).test(t.data) || (i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
          code: te.ZodIssueCode.invalid_string,
          validation: "time",
          message: o.message
        }), n.dirty()) : o.kind === "duration" ? tX.test(t.data) || (i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
          validation: "duration",
          code: te.ZodIssueCode.invalid_string,
          message: o.message
        }), n.dirty()) : o.kind === "ip" ? hX(t.data, o.version) || (i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
          validation: "ip",
          code: te.ZodIssueCode.invalid_string,
          message: o.message
        }), n.dirty()) : o.kind === "jwt" ? fX(t.data, o.alg) || (i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
          validation: "jwt",
          code: te.ZodIssueCode.invalid_string,
          message: o.message
        }), n.dirty()) : o.kind === "cidr" ? dX(t.data, o.version) || (i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
          validation: "cidr",
          code: te.ZodIssueCode.invalid_string,
          message: o.message
        }), n.dirty()) : o.kind === "base64" ? uX.test(t.data) || (i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
          validation: "base64",
          code: te.ZodIssueCode.invalid_string,
          message: o.message
        }), n.dirty()) : o.kind === "base64url" ? lX.test(t.data) || (i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
          validation: "base64url",
          code: te.ZodIssueCode.invalid_string,
          message: o.message
        }), n.dirty()) : ne.util.assertNever(o);
      return { status: n.value, value: t.data };
    }
    _regex(t, r, n) {
      return this.refinement((i) => t.test(i), {
        validation: r,
        code: te.ZodIssueCode.invalid_string,
        ...ue.errorUtil.errToObj(n)
      });
    }
    _addCheck(t) {
      return new e({
        ...this._def,
        checks: [...this._def.checks, t]
      });
    }
    email(t) {
      return this._addCheck({ kind: "email", ...ue.errorUtil.errToObj(t) });
    }
    url(t) {
      return this._addCheck({ kind: "url", ...ue.errorUtil.errToObj(t) });
    }
    emoji(t) {
      return this._addCheck({ kind: "emoji", ...ue.errorUtil.errToObj(t) });
    }
    uuid(t) {
      return this._addCheck({ kind: "uuid", ...ue.errorUtil.errToObj(t) });
    }
    nanoid(t) {
      return this._addCheck({ kind: "nanoid", ...ue.errorUtil.errToObj(t) });
    }
    cuid(t) {
      return this._addCheck({ kind: "cuid", ...ue.errorUtil.errToObj(t) });
    }
    cuid2(t) {
      return this._addCheck({ kind: "cuid2", ...ue.errorUtil.errToObj(t) });
    }
    ulid(t) {
      return this._addCheck({ kind: "ulid", ...ue.errorUtil.errToObj(t) });
    }
    base64(t) {
      return this._addCheck({ kind: "base64", ...ue.errorUtil.errToObj(t) });
    }
    base64url(t) {
      return this._addCheck({
        kind: "base64url",
        ...ue.errorUtil.errToObj(t)
      });
    }
    jwt(t) {
      return this._addCheck({ kind: "jwt", ...ue.errorUtil.errToObj(t) });
    }
    ip(t) {
      return this._addCheck({ kind: "ip", ...ue.errorUtil.errToObj(t) });
    }
    cidr(t) {
      return this._addCheck({ kind: "cidr", ...ue.errorUtil.errToObj(t) });
    }
    datetime(t) {
      var r, n;
      return typeof t == "string" ? this._addCheck({
        kind: "datetime",
        precision: null,
        offset: !1,
        local: !1,
        message: t
      }) : this._addCheck({
        kind: "datetime",
        precision: typeof t?.precision > "u" ? null : t?.precision,
        offset: (r = t?.offset) !== null && r !== void 0 ? r : !1,
        local: (n = t?.local) !== null && n !== void 0 ? n : !1,
        ...ue.errorUtil.errToObj(t?.message)
      });
    }
    date(t) {
      return this._addCheck({ kind: "date", message: t });
    }
    time(t) {
      return typeof t == "string" ? this._addCheck({
        kind: "time",
        precision: null,
        message: t
      }) : this._addCheck({
        kind: "time",
        precision: typeof t?.precision > "u" ? null : t?.precision,
        ...ue.errorUtil.errToObj(t?.message)
      });
    }
    duration(t) {
      return this._addCheck({ kind: "duration", ...ue.errorUtil.errToObj(t) });
    }
    regex(t, r) {
      return this._addCheck({
        kind: "regex",
        regex: t,
        ...ue.errorUtil.errToObj(r)
      });
    }
    includes(t, r) {
      return this._addCheck({
        kind: "includes",
        value: t,
        position: r?.position,
        ...ue.errorUtil.errToObj(r?.message)
      });
    }
    startsWith(t, r) {
      return this._addCheck({
        kind: "startsWith",
        value: t,
        ...ue.errorUtil.errToObj(r)
      });
    }
    endsWith(t, r) {
      return this._addCheck({
        kind: "endsWith",
        value: t,
        ...ue.errorUtil.errToObj(r)
      });
    }
    min(t, r) {
      return this._addCheck({
        kind: "min",
        value: t,
        ...ue.errorUtil.errToObj(r)
      });
    }
    max(t, r) {
      return this._addCheck({
        kind: "max",
        value: t,
        ...ue.errorUtil.errToObj(r)
      });
    }
    length(t, r) {
      return this._addCheck({
        kind: "length",
        value: t,
        ...ue.errorUtil.errToObj(r)
      });
    }
    /**
     * Equivalent to `.min(1)`
     */
    nonempty(t) {
      return this.min(1, ue.errorUtil.errToObj(t));
    }
    trim() {
      return new e({
        ...this._def,
        checks: [...this._def.checks, { kind: "trim" }]
      });
    }
    toLowerCase() {
      return new e({
        ...this._def,
        checks: [...this._def.checks, { kind: "toLowerCase" }]
      });
    }
    toUpperCase() {
      return new e({
        ...this._def,
        checks: [...this._def.checks, { kind: "toUpperCase" }]
      });
    }
    get isDatetime() {
      return !!this._def.checks.find((t) => t.kind === "datetime");
    }
    get isDate() {
      return !!this._def.checks.find((t) => t.kind === "date");
    }
    get isTime() {
      return !!this._def.checks.find((t) => t.kind === "time");
    }
    get isDuration() {
      return !!this._def.checks.find((t) => t.kind === "duration");
    }
    get isEmail() {
      return !!this._def.checks.find((t) => t.kind === "email");
    }
    get isURL() {
      return !!this._def.checks.find((t) => t.kind === "url");
    }
    get isEmoji() {
      return !!this._def.checks.find((t) => t.kind === "emoji");
    }
    get isUUID() {
      return !!this._def.checks.find((t) => t.kind === "uuid");
    }
    get isNANOID() {
      return !!this._def.checks.find((t) => t.kind === "nanoid");
    }
    get isCUID() {
      return !!this._def.checks.find((t) => t.kind === "cuid");
    }
    get isCUID2() {
      return !!this._def.checks.find((t) => t.kind === "cuid2");
    }
    get isULID() {
      return !!this._def.checks.find((t) => t.kind === "ulid");
    }
    get isIP() {
      return !!this._def.checks.find((t) => t.kind === "ip");
    }
    get isCIDR() {
      return !!this._def.checks.find((t) => t.kind === "cidr");
    }
    get isBase64() {
      return !!this._def.checks.find((t) => t.kind === "base64");
    }
    get isBase64url() {
      return !!this._def.checks.find((t) => t.kind === "base64url");
    }
    get minLength() {
      let t = null;
      for (let r of this._def.checks)
        r.kind === "min" && (t === null || r.value > t) && (t = r.value);
      return t;
    }
    get maxLength() {
      let t = null;
      for (let r of this._def.checks)
        r.kind === "max" && (t === null || r.value < t) && (t = r.value);
      return t;
    }
  };
  q.ZodString = ti;
  ti.create = (e) => {
    var t;
    return new ti({
      checks: [],
      typeName: De.ZodString,
      coerce: (t = e?.coerce) !== null && t !== void 0 ? t : !1,
      ...Se(e)
    });
  };
  function mX(e, t) {
    let r = (e.toString().split(".")[1] || "").length, n = (t.toString().split(".")[1] || "").length, i = r > n ? r : n, o = parseInt(e.toFixed(
    i).replace(".", "")), a = parseInt(t.toFixed(i).replace(".", ""));
    return o % a / Math.pow(10, i);
  }
  s(mX, "floatSafeRemainder");
  var Fi = class e extends Ae {
    static {
      s(this, "ZodNumber");
    }
    constructor() {
      super(...arguments), this.min = this.gte, this.max = this.lte, this.step = this.multipleOf;
    }
    _parse(t) {
      if (this._def.coerce && (t.data = Number(t.data)), this._getType(t) !== ne.ZodParsedType.number) {
        let o = this._getOrReturnCtx(t);
        return (0, V.addIssueToContext)(o, {
          code: te.ZodIssueCode.invalid_type,
          expected: ne.ZodParsedType.number,
          received: o.parsedType
        }), V.INVALID;
      }
      let n, i = new V.ParseStatus();
      for (let o of this._def.checks)
        o.kind === "int" ? ne.util.isInteger(t.data) || (n = this._getOrReturnCtx(t, n), (0, V.addIssueToContext)(n, {
          code: te.ZodIssueCode.invalid_type,
          expected: "integer",
          received: "float",
          message: o.message
        }), i.dirty()) : o.kind === "min" ? (o.inclusive ? t.data < o.value : t.data <= o.value) && (n = this._getOrReturnCtx(t, n), (0, V.addIssueToContext)(
        n, {
          code: te.ZodIssueCode.too_small,
          minimum: o.value,
          type: "number",
          inclusive: o.inclusive,
          exact: !1,
          message: o.message
        }), i.dirty()) : o.kind === "max" ? (o.inclusive ? t.data > o.value : t.data >= o.value) && (n = this._getOrReturnCtx(t, n), (0, V.addIssueToContext)(
        n, {
          code: te.ZodIssueCode.too_big,
          maximum: o.value,
          type: "number",
          inclusive: o.inclusive,
          exact: !1,
          message: o.message
        }), i.dirty()) : o.kind === "multipleOf" ? mX(t.data, o.value) !== 0 && (n = this._getOrReturnCtx(t, n), (0, V.addIssueToContext)(n,
        {
          code: te.ZodIssueCode.not_multiple_of,
          multipleOf: o.value,
          message: o.message
        }), i.dirty()) : o.kind === "finite" ? Number.isFinite(t.data) || (n = this._getOrReturnCtx(t, n), (0, V.addIssueToContext)(n, {
          code: te.ZodIssueCode.not_finite,
          message: o.message
        }), i.dirty()) : ne.util.assertNever(o);
      return { status: i.value, value: t.data };
    }
    gte(t, r) {
      return this.setLimit("min", t, !0, ue.errorUtil.toString(r));
    }
    gt(t, r) {
      return this.setLimit("min", t, !1, ue.errorUtil.toString(r));
    }
    lte(t, r) {
      return this.setLimit("max", t, !0, ue.errorUtil.toString(r));
    }
    lt(t, r) {
      return this.setLimit("max", t, !1, ue.errorUtil.toString(r));
    }
    setLimit(t, r, n, i) {
      return new e({
        ...this._def,
        checks: [
          ...this._def.checks,
          {
            kind: t,
            value: r,
            inclusive: n,
            message: ue.errorUtil.toString(i)
          }
        ]
      });
    }
    _addCheck(t) {
      return new e({
        ...this._def,
        checks: [...this._def.checks, t]
      });
    }
    int(t) {
      return this._addCheck({
        kind: "int",
        message: ue.errorUtil.toString(t)
      });
    }
    positive(t) {
      return this._addCheck({
        kind: "min",
        value: 0,
        inclusive: !1,
        message: ue.errorUtil.toString(t)
      });
    }
    negative(t) {
      return this._addCheck({
        kind: "max",
        value: 0,
        inclusive: !1,
        message: ue.errorUtil.toString(t)
      });
    }
    nonpositive(t) {
      return this._addCheck({
        kind: "max",
        value: 0,
        inclusive: !0,
        message: ue.errorUtil.toString(t)
      });
    }
    nonnegative(t) {
      return this._addCheck({
        kind: "min",
        value: 0,
        inclusive: !0,
        message: ue.errorUtil.toString(t)
      });
    }
    multipleOf(t, r) {
      return this._addCheck({
        kind: "multipleOf",
        value: t,
        message: ue.errorUtil.toString(r)
      });
    }
    finite(t) {
      return this._addCheck({
        kind: "finite",
        message: ue.errorUtil.toString(t)
      });
    }
    safe(t) {
      return this._addCheck({
        kind: "min",
        inclusive: !0,
        value: Number.MIN_SAFE_INTEGER,
        message: ue.errorUtil.toString(t)
      })._addCheck({
        kind: "max",
        inclusive: !0,
        value: Number.MAX_SAFE_INTEGER,
        message: ue.errorUtil.toString(t)
      });
    }
    get minValue() {
      let t = null;
      for (let r of this._def.checks)
        r.kind === "min" && (t === null || r.value > t) && (t = r.value);
      return t;
    }
    get maxValue() {
      let t = null;
      for (let r of this._def.checks)
        r.kind === "max" && (t === null || r.value < t) && (t = r.value);
      return t;
    }
    get isInt() {
      return !!this._def.checks.find((t) => t.kind === "int" || t.kind === "multipleOf" && ne.util.isInteger(t.value));
    }
    get isFinite() {
      let t = null, r = null;
      for (let n of this._def.checks) {
        if (n.kind === "finite" || n.kind === "int" || n.kind === "multipleOf")
          return !0;
        n.kind === "min" ? (r === null || n.value > r) && (r = n.value) : n.kind === "max" && (t === null || n.value < t) && (t = n.value);
      }
      return Number.isFinite(r) && Number.isFinite(t);
    }
  };
  q.ZodNumber = Fi;
  Fi.create = (e) => new Fi({
    checks: [],
    typeName: De.ZodNumber,
    coerce: e?.coerce || !1,
    ...Se(e)
  });
  var _i = class e extends Ae {
    static {
      s(this, "ZodBigInt");
    }
    constructor() {
      super(...arguments), this.min = this.gte, this.max = this.lte;
    }
    _parse(t) {
      if (this._def.coerce)
        try {
          t.data = BigInt(t.data);
        } catch {
          return this._getInvalidInput(t);
        }
      if (this._getType(t) !== ne.ZodParsedType.bigint)
        return this._getInvalidInput(t);
      let n, i = new V.ParseStatus();
      for (let o of this._def.checks)
        o.kind === "min" ? (o.inclusive ? t.data < o.value : t.data <= o.value) && (n = this._getOrReturnCtx(t, n), (0, V.addIssueToContext)(
        n, {
          code: te.ZodIssueCode.too_small,
          type: "bigint",
          minimum: o.value,
          inclusive: o.inclusive,
          message: o.message
        }), i.dirty()) : o.kind === "max" ? (o.inclusive ? t.data > o.value : t.data >= o.value) && (n = this._getOrReturnCtx(t, n), (0, V.addIssueToContext)(
        n, {
          code: te.ZodIssueCode.too_big,
          type: "bigint",
          maximum: o.value,
          inclusive: o.inclusive,
          message: o.message
        }), i.dirty()) : o.kind === "multipleOf" ? t.data % o.value !== BigInt(0) && (n = this._getOrReturnCtx(t, n), (0, V.addIssueToContext)(
        n, {
          code: te.ZodIssueCode.not_multiple_of,
          multipleOf: o.value,
          message: o.message
        }), i.dirty()) : ne.util.assertNever(o);
      return { status: i.value, value: t.data };
    }
    _getInvalidInput(t) {
      let r = this._getOrReturnCtx(t);
      return (0, V.addIssueToContext)(r, {
        code: te.ZodIssueCode.invalid_type,
        expected: ne.ZodParsedType.bigint,
        received: r.parsedType
      }), V.INVALID;
    }
    gte(t, r) {
      return this.setLimit("min", t, !0, ue.errorUtil.toString(r));
    }
    gt(t, r) {
      return this.setLimit("min", t, !1, ue.errorUtil.toString(r));
    }
    lte(t, r) {
      return this.setLimit("max", t, !0, ue.errorUtil.toString(r));
    }
    lt(t, r) {
      return this.setLimit("max", t, !1, ue.errorUtil.toString(r));
    }
    setLimit(t, r, n, i) {
      return new e({
        ...this._def,
        checks: [
          ...this._def.checks,
          {
            kind: t,
            value: r,
            inclusive: n,
            message: ue.errorUtil.toString(i)
          }
        ]
      });
    }
    _addCheck(t) {
      return new e({
        ...this._def,
        checks: [...this._def.checks, t]
      });
    }
    positive(t) {
      return this._addCheck({
        kind: "min",
        value: BigInt(0),
        inclusive: !1,
        message: ue.errorUtil.toString(t)
      });
    }
    negative(t) {
      return this._addCheck({
        kind: "max",
        value: BigInt(0),
        inclusive: !1,
        message: ue.errorUtil.toString(t)
      });
    }
    nonpositive(t) {
      return this._addCheck({
        kind: "max",
        value: BigInt(0),
        inclusive: !0,
        message: ue.errorUtil.toString(t)
      });
    }
    nonnegative(t) {
      return this._addCheck({
        kind: "min",
        value: BigInt(0),
        inclusive: !0,
        message: ue.errorUtil.toString(t)
      });
    }
    multipleOf(t, r) {
      return this._addCheck({
        kind: "multipleOf",
        value: t,
        message: ue.errorUtil.toString(r)
      });
    }
    get minValue() {
      let t = null;
      for (let r of this._def.checks)
        r.kind === "min" && (t === null || r.value > t) && (t = r.value);
      return t;
    }
    get maxValue() {
      let t = null;
      for (let r of this._def.checks)
        r.kind === "max" && (t === null || r.value < t) && (t = r.value);
      return t;
    }
  };
  q.ZodBigInt = _i;
  _i.create = (e) => {
    var t;
    return new _i({
      checks: [],
      typeName: De.ZodBigInt,
      coerce: (t = e?.coerce) !== null && t !== void 0 ? t : !1,
      ...Se(e)
    });
  };
  var ki = class extends Ae {
    static {
      s(this, "ZodBoolean");
    }
    _parse(t) {
      if (this._def.coerce && (t.data = !!t.data), this._getType(t) !== ne.ZodParsedType.boolean) {
        let n = this._getOrReturnCtx(t);
        return (0, V.addIssueToContext)(n, {
          code: te.ZodIssueCode.invalid_type,
          expected: ne.ZodParsedType.boolean,
          received: n.parsedType
        }), V.INVALID;
      }
      return (0, V.OK)(t.data);
    }
  };
  q.ZodBoolean = ki;
  ki.create = (e) => new ki({
    typeName: De.ZodBoolean,
    coerce: e?.coerce || !1,
    ...Se(e)
  });
  var Ti = class e extends Ae {
    static {
      s(this, "ZodDate");
    }
    _parse(t) {
      if (this._def.coerce && (t.data = new Date(t.data)), this._getType(t) !== ne.ZodParsedType.date) {
        let o = this._getOrReturnCtx(t);
        return (0, V.addIssueToContext)(o, {
          code: te.ZodIssueCode.invalid_type,
          expected: ne.ZodParsedType.date,
          received: o.parsedType
        }), V.INVALID;
      }
      if (isNaN(t.data.getTime())) {
        let o = this._getOrReturnCtx(t);
        return (0, V.addIssueToContext)(o, {
          code: te.ZodIssueCode.invalid_date
        }), V.INVALID;
      }
      let n = new V.ParseStatus(), i;
      for (let o of this._def.checks)
        o.kind === "min" ? t.data.getTime() < o.value && (i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
          code: te.ZodIssueCode.too_small,
          message: o.message,
          inclusive: !0,
          exact: !1,
          minimum: o.value,
          type: "date"
        }), n.dirty()) : o.kind === "max" ? t.data.getTime() > o.value && (i = this._getOrReturnCtx(t, i), (0, V.addIssueToContext)(i, {
          code: te.ZodIssueCode.too_big,
          message: o.message,
          inclusive: !0,
          exact: !1,
          maximum: o.value,
          type: "date"
        }), n.dirty()) : ne.util.assertNever(o);
      return {
        status: n.value,
        value: new Date(t.data.getTime())
      };
    }
    _addCheck(t) {
      return new e({
        ...this._def,
        checks: [...this._def.checks, t]
      });
    }
    min(t, r) {
      return this._addCheck({
        kind: "min",
        value: t.getTime(),
        message: ue.errorUtil.toString(r)
      });
    }
    max(t, r) {
      return this._addCheck({
        kind: "max",
        value: t.getTime(),
        message: ue.errorUtil.toString(r)
      });
    }
    get minDate() {
      let t = null;
      for (let r of this._def.checks)
        r.kind === "min" && (t === null || r.value > t) && (t = r.value);
      return t != null ? new Date(t) : null;
    }
    get maxDate() {
      let t = null;
      for (let r of this._def.checks)
        r.kind === "max" && (t === null || r.value < t) && (t = r.value);
      return t != null ? new Date(t) : null;
    }
  };
  q.ZodDate = Ti;
  Ti.create = (e) => new Ti({
    checks: [],
    coerce: e?.coerce || !1,
    typeName: De.ZodDate,
    ...Se(e)
  });
  var Us = class extends Ae {
    static {
      s(this, "ZodSymbol");
    }
    _parse(t) {
      if (this._getType(t) !== ne.ZodParsedType.symbol) {
        let n = this._getOrReturnCtx(t);
        return (0, V.addIssueToContext)(n, {
          code: te.ZodIssueCode.invalid_type,
          expected: ne.ZodParsedType.symbol,
          received: n.parsedType
        }), V.INVALID;
      }
      return (0, V.OK)(t.data);
    }
  };
  q.ZodSymbol = Us;
  Us.create = (e) => new Us({
    typeName: De.ZodSymbol,
    ...Se(e)
  });
  var Ii = class extends Ae {
    static {
      s(this, "ZodUndefined");
    }
    _parse(t) {
      if (this._getType(t) !== ne.ZodParsedType.undefined) {
        let n = this._getOrReturnCtx(t);
        return (0, V.addIssueToContext)(n, {
          code: te.ZodIssueCode.invalid_type,
          expected: ne.ZodParsedType.undefined,
          received: n.parsedType
        }), V.INVALID;
      }
      return (0, V.OK)(t.data);
    }
  };
  q.ZodUndefined = Ii;
  Ii.create = (e) => new Ii({
    typeName: De.ZodUndefined,
    ...Se(e)
  });
  var Pi = class extends Ae {
    static {
      s(this, "ZodNull");
    }
    _parse(t) {
      if (this._getType(t) !== ne.ZodParsedType.null) {
        let n = this._getOrReturnCtx(t);
        return (0, V.addIssueToContext)(n, {
          code: te.ZodIssueCode.invalid_type,
          expected: ne.ZodParsedType.null,
          received: n.parsedType
        }), V.INVALID;
      }
      return (0, V.OK)(t.data);
    }
  };
  q.ZodNull = Pi;
  Pi.create = (e) => new Pi({
    typeName: De.ZodNull,
    ...Se(e)
  });
  var ri = class extends Ae {
    static {
      s(this, "ZodAny");
    }
    constructor() {
      super(...arguments), this._any = !0;
    }
    _parse(t) {
      return (0, V.OK)(t.data);
    }
  };
  q.ZodAny = ri;
  ri.create = (e) => new ri({
    typeName: De.ZodAny,
    ...Se(e)
  });
  var Tn = class extends Ae {
    static {
      s(this, "ZodUnknown");
    }
    constructor() {
      super(...arguments), this._unknown = !0;
    }
    _parse(t) {
      return (0, V.OK)(t.data);
    }
  };
  q.ZodUnknown = Tn;
  Tn.create = (e) => new Tn({
    typeName: De.ZodUnknown,
    ...Se(e)
  });
  var Lr = class extends Ae {
    static {
      s(this, "ZodNever");
    }
    _parse(t) {
      let r = this._getOrReturnCtx(t);
      return (0, V.addIssueToContext)(r, {
        code: te.ZodIssueCode.invalid_type,
        expected: ne.ZodParsedType.never,
        received: r.parsedType
      }), V.INVALID;
    }
  };
  q.ZodNever = Lr;
  Lr.create = (e) => new Lr({
    typeName: De.ZodNever,
    ...Se(e)
  });
  var Ws = class extends Ae {
    static {
      s(this, "ZodVoid");
    }
    _parse(t) {
      if (this._getType(t) !== ne.ZodParsedType.undefined) {
        let n = this._getOrReturnCtx(t);
        return (0, V.addIssueToContext)(n, {
          code: te.ZodIssueCode.invalid_type,
          expected: ne.ZodParsedType.void,
          received: n.parsedType
        }), V.INVALID;
      }
      return (0, V.OK)(t.data);
    }
  };
  q.ZodVoid = Ws;
  Ws.create = (e) => new Ws({
    typeName: De.ZodVoid,
    ...Se(e)
  });
  var In = class e extends Ae {
    static {
      s(this, "ZodArray");
    }
    _parse(t) {
      let { ctx: r, status: n } = this._processInputParams(t), i = this._def;
      if (r.parsedType !== ne.ZodParsedType.array)
        return (0, V.addIssueToContext)(r, {
          code: te.ZodIssueCode.invalid_type,
          expected: ne.ZodParsedType.array,
          received: r.parsedType
        }), V.INVALID;
      if (i.exactLength !== null) {
        let a = r.data.length > i.exactLength.value, u = r.data.length < i.exactLength.value;
        (a || u) && ((0, V.addIssueToContext)(r, {
          code: a ? te.ZodIssueCode.too_big : te.ZodIssueCode.too_small,
          minimum: u ? i.exactLength.value : void 0,
          maximum: a ? i.exactLength.value : void 0,
          type: "array",
          inclusive: !0,
          exact: !0,
          message: i.exactLength.message
        }), n.dirty());
      }
      if (i.minLength !== null && r.data.length < i.minLength.value && ((0, V.addIssueToContext)(r, {
        code: te.ZodIssueCode.too_small,
        minimum: i.minLength.value,
        type: "array",
        inclusive: !0,
        exact: !1,
        message: i.minLength.message
      }), n.dirty()), i.maxLength !== null && r.data.length > i.maxLength.value && ((0, V.addIssueToContext)(r, {
        code: te.ZodIssueCode.too_big,
        maximum: i.maxLength.value,
        type: "array",
        inclusive: !0,
        exact: !1,
        message: i.maxLength.message
      }), n.dirty()), r.common.async)
        return Promise.all([...r.data].map((a, u) => i.type._parseAsync(new xr(r, a, r.path, u)))).then((a) => V.ParseStatus.mergeArray(n, a));
      let o = [...r.data].map((a, u) => i.type._parseSync(new xr(r, a, r.path, u)));
      return V.ParseStatus.mergeArray(n, o);
    }
    get element() {
      return this._def.type;
    }
    min(t, r) {
      return new e({
        ...this._def,
        minLength: { value: t, message: ue.errorUtil.toString(r) }
      });
    }
    max(t, r) {
      return new e({
        ...this._def,
        maxLength: { value: t, message: ue.errorUtil.toString(r) }
      });
    }
    length(t, r) {
      return new e({
        ...this._def,
        exactLength: { value: t, message: ue.errorUtil.toString(r) }
      });
    }
    nonempty(t) {
      return this.min(1, t);
    }
  };
  q.ZodArray = In;
  In.create = (e, t) => new In({
    type: e,
    minLength: null,
    maxLength: null,
    exactLength: null,
    typeName: De.ZodArray,
    ...Se(t)
  });
  function Vs(e) {
    if (e instanceof zt) {
      let t = {};
      for (let r in e.shape) {
        let n = e.shape[r];
        t[r] = Dr.create(Vs(n));
      }
      return new zt({
        ...e._def,
        shape: /* @__PURE__ */ s(() => t, "shape")
      });
    } else return e instanceof In ? new In({
      ...e._def,
      type: Vs(e.element)
    }) : e instanceof Dr ? Dr.create(Vs(e.unwrap())) : e instanceof on ? on.create(Vs(e.unwrap())) : e instanceof sn ? sn.create(e.items.map(
    (t) => Vs(t))) : e;
  }
  s(Vs, "deepPartialify");
  var zt = class e extends Ae {
    static {
      s(this, "ZodObject");
    }
    constructor() {
      super(...arguments), this._cached = null, this.nonstrict = this.passthrough, this.augment = this.extend;
    }
    _getCached() {
      if (this._cached !== null)
        return this._cached;
      let t = this._def.shape(), r = ne.util.objectKeys(t);
      return this._cached = { shape: t, keys: r };
    }
    _parse(t) {
      if (this._getType(t) !== ne.ZodParsedType.object) {
        let c = this._getOrReturnCtx(t);
        return (0, V.addIssueToContext)(c, {
          code: te.ZodIssueCode.invalid_type,
          expected: ne.ZodParsedType.object,
          received: c.parsedType
        }), V.INVALID;
      }
      let { status: n, ctx: i } = this._processInputParams(t), { shape: o, keys: a } = this._getCached(), u = [];
      if (!(this._def.catchall instanceof Lr && this._def.unknownKeys === "strip"))
        for (let c in i.data)
          a.includes(c) || u.push(c);
      let l = [];
      for (let c of a) {
        let p = o[c], h = i.data[c];
        l.push({
          key: { status: "valid", value: c },
          value: p._parse(new xr(i, h, i.path, c)),
          alwaysSet: c in i.data
        });
      }
      if (this._def.catchall instanceof Lr) {
        let c = this._def.unknownKeys;
        if (c === "passthrough")
          for (let p of u)
            l.push({
              key: { status: "valid", value: p },
              value: { status: "valid", value: i.data[p] }
            });
        else if (c === "strict")
          u.length > 0 && ((0, V.addIssueToContext)(i, {
            code: te.ZodIssueCode.unrecognized_keys,
            keys: u
          }), n.dirty());
        else if (c !== "strip")
          throw new Error("Internal ZodObject error: invalid unknownKeys value.");
      } else {
        let c = this._def.catchall;
        for (let p of u) {
          let h = i.data[p];
          l.push({
            key: { status: "valid", value: p },
            value: c._parse(
              new xr(i, h, i.path, p)
              //, ctx.child(key), value, getParsedType(value)
            ),
            alwaysSet: p in i.data
          });
        }
      }
      return i.common.async ? Promise.resolve().then(async () => {
        let c = [];
        for (let p of l) {
          let h = await p.key, f = await p.value;
          c.push({
            key: h,
            value: f,
            alwaysSet: p.alwaysSet
          });
        }
        return c;
      }).then((c) => V.ParseStatus.mergeObjectSync(n, c)) : V.ParseStatus.mergeObjectSync(n, l);
    }
    get shape() {
      return this._def.shape();
    }
    strict(t) {
      return ue.errorUtil.errToObj, new e({
        ...this._def,
        unknownKeys: "strict",
        ...t !== void 0 ? {
          errorMap: /* @__PURE__ */ s((r, n) => {
            var i, o, a, u;
            let l = (a = (o = (i = this._def).errorMap) === null || o === void 0 ? void 0 : o.call(i, r, n).message) !== null && a !== void 0 ?
            a : n.defaultError;
            return r.code === "unrecognized_keys" ? {
              message: (u = ue.errorUtil.errToObj(t).message) !== null && u !== void 0 ? u : l
            } : {
              message: l
            };
          }, "errorMap")
        } : {}
      });
    }
    strip() {
      return new e({
        ...this._def,
        unknownKeys: "strip"
      });
    }
    passthrough() {
      return new e({
        ...this._def,
        unknownKeys: "passthrough"
      });
    }
    // const AugmentFactory =
    //   <Def extends ZodObjectDef>(def: Def) =>
    //   <Augmentation extends ZodRawShape>(
    //     augmentation: Augmentation
    //   ): ZodObject<
    //     extendShape<ReturnType<Def["shape"]>, Augmentation>,
    //     Def["unknownKeys"],
    //     Def["catchall"]
    //   > => {
    //     return new ZodObject({
    //       ...def,
    //       shape: () => ({
    //         ...def.shape(),
    //         ...augmentation,
    //       }),
    //     }) as any;
    //   };
    extend(t) {
      return new e({
        ...this._def,
        shape: /* @__PURE__ */ s(() => ({
          ...this._def.shape(),
          ...t
        }), "shape")
      });
    }
    /**
     * Prior to zod@1.0.12 there was a bug in the
     * inferred type of merged objects. Please
     * upgrade if you are experiencing issues.
     */
    merge(t) {
      return new e({
        unknownKeys: t._def.unknownKeys,
        catchall: t._def.catchall,
        shape: /* @__PURE__ */ s(() => ({
          ...this._def.shape(),
          ...t._def.shape()
        }), "shape"),
        typeName: De.ZodObject
      });
    }
    // merge<
    //   Incoming extends AnyZodObject,
    //   Augmentation extends Incoming["shape"],
    //   NewOutput extends {
    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation
    //       ? Augmentation[k]["_output"]
    //       : k extends keyof Output
    //       ? Output[k]
    //       : never;
    //   },
    //   NewInput extends {
    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation
    //       ? Augmentation[k]["_input"]
    //       : k extends keyof Input
    //       ? Input[k]
    //       : never;
    //   }
    // >(
    //   merging: Incoming
    // ): ZodObject<
    //   extendShape<T, ReturnType<Incoming["_def"]["shape"]>>,
    //   Incoming["_def"]["unknownKeys"],
    //   Incoming["_def"]["catchall"],
    //   NewOutput,
    //   NewInput
    // > {
    //   const merged: any = new ZodObject({
    //     unknownKeys: merging._def.unknownKeys,
    //     catchall: merging._def.catchall,
    //     shape: () =>
    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),
    //     typeName: ZodFirstPartyTypeKind.ZodObject,
    //   }) as any;
    //   return merged;
    // }
    setKey(t, r) {
      return this.augment({ [t]: r });
    }
    // merge<Incoming extends AnyZodObject>(
    //   merging: Incoming
    // ): //ZodObject<T & Incoming["_shape"], UnknownKeys, Catchall> = (merging) => {
    // ZodObject<
    //   extendShape<T, ReturnType<Incoming["_def"]["shape"]>>,
    //   Incoming["_def"]["unknownKeys"],
    //   Incoming["_def"]["catchall"]
    // > {
    //   // const mergedShape = objectUtil.mergeShapes(
    //   //   this._def.shape(),
    //   //   merging._def.shape()
    //   // );
    //   const merged: any = new ZodObject({
    //     unknownKeys: merging._def.unknownKeys,
    //     catchall: merging._def.catchall,
    //     shape: () =>
    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),
    //     typeName: ZodFirstPartyTypeKind.ZodObject,
    //   }) as any;
    //   return merged;
    // }
    catchall(t) {
      return new e({
        ...this._def,
        catchall: t
      });
    }
    pick(t) {
      let r = {};
      return ne.util.objectKeys(t).forEach((n) => {
        t[n] && this.shape[n] && (r[n] = this.shape[n]);
      }), new e({
        ...this._def,
        shape: /* @__PURE__ */ s(() => r, "shape")
      });
    }
    omit(t) {
      let r = {};
      return ne.util.objectKeys(this.shape).forEach((n) => {
        t[n] || (r[n] = this.shape[n]);
      }), new e({
        ...this._def,
        shape: /* @__PURE__ */ s(() => r, "shape")
      });
    }
    /**
     * @deprecated
     */
    deepPartial() {
      return Vs(this);
    }
    partial(t) {
      let r = {};
      return ne.util.objectKeys(this.shape).forEach((n) => {
        let i = this.shape[n];
        t && !t[n] ? r[n] = i : r[n] = i.optional();
      }), new e({
        ...this._def,
        shape: /* @__PURE__ */ s(() => r, "shape")
      });
    }
    required(t) {
      let r = {};
      return ne.util.objectKeys(this.shape).forEach((n) => {
        if (t && !t[n])
          r[n] = this.shape[n];
        else {
          let o = this.shape[n];
          for (; o instanceof Dr; )
            o = o._def.innerType;
          r[n] = o;
        }
      }), new e({
        ...this._def,
        shape: /* @__PURE__ */ s(() => r, "shape")
      });
    }
    keyof() {
      return fk(ne.util.objectKeys(this.shape));
    }
  };
  q.ZodObject = zt;
  zt.create = (e, t) => new zt({
    shape: /* @__PURE__ */ s(() => e, "shape"),
    unknownKeys: "strip",
    catchall: Lr.create(),
    typeName: De.ZodObject,
    ...Se(t)
  });
  zt.strictCreate = (e, t) => new zt({
    shape: /* @__PURE__ */ s(() => e, "shape"),
    unknownKeys: "strict",
    catchall: Lr.create(),
    typeName: De.ZodObject,
    ...Se(t)
  });
  zt.lazycreate = (e, t) => new zt({
    shape: e,
    unknownKeys: "strip",
    catchall: Lr.create(),
    typeName: De.ZodObject,
    ...Se(t)
  });
  var Bi = class extends Ae {
    static {
      s(this, "ZodUnion");
    }
    _parse(t) {
      let { ctx: r } = this._processInputParams(t), n = this._def.options;
      function i(o) {
        for (let u of o)
          if (u.result.status === "valid")
            return u.result;
        for (let u of o)
          if (u.result.status === "dirty")
            return r.common.issues.push(...u.ctx.common.issues), u.result;
        let a = o.map((u) => new te.ZodError(u.ctx.common.issues));
        return (0, V.addIssueToContext)(r, {
          code: te.ZodIssueCode.invalid_union,
          unionErrors: a
        }), V.INVALID;
      }
      if (s(i, "handleResults"), r.common.async)
        return Promise.all(n.map(async (o) => {
          let a = {
            ...r,
            common: {
              ...r.common,
              issues: []
            },
            parent: null
          };
          return {
            result: await o._parseAsync({
              data: r.data,
              path: r.path,
              parent: a
            }),
            ctx: a
          };
        })).then(i);
      {
        let o, a = [];
        for (let l of n) {
          let c = {
            ...r,
            common: {
              ...r.common,
              issues: []
            },
            parent: null
          }, p = l._parseSync({
            data: r.data,
            path: r.path,
            parent: c
          });
          if (p.status === "valid")
            return p;
          p.status === "dirty" && !o && (o = { result: p, ctx: c }), c.common.issues.length && a.push(c.common.issues);
        }
        if (o)
          return r.common.issues.push(...o.ctx.common.issues), o.result;
        let u = a.map((l) => new te.ZodError(l));
        return (0, V.addIssueToContext)(r, {
          code: te.ZodIssueCode.invalid_union,
          unionErrors: u
        }), V.INVALID;
      }
    }
    get options() {
      return this._def.options;
    }
  };
  q.ZodUnion = Bi;
  Bi.create = (e, t) => new Bi({
    options: e,
    typeName: De.ZodUnion,
    ...Se(t)
  });
  var kn = /* @__PURE__ */ s((e) => e instanceof Ri ? kn(e.schema) : e instanceof Qt ? kn(e.innerType()) : e instanceof Ni ? [e.value] : e instanceof
  Li ? e.options : e instanceof ji ? ne.util.objectValues(e.enum) : e instanceof Mi ? kn(e._def.innerType) : e instanceof Ii ? [void 0] : e instanceof
  Pi ? [null] : e instanceof Dr ? [void 0, ...kn(e.unwrap())] : e instanceof on ? [null, ...kn(e.unwrap())] : e instanceof Ca || e instanceof
  $i ? kn(e.unwrap()) : e instanceof qi ? kn(e._def.innerType) : [], "getDiscriminator"), pc = class e extends Ae {
    static {
      s(this, "ZodDiscriminatedUnion");
    }
    _parse(t) {
      let { ctx: r } = this._processInputParams(t);
      if (r.parsedType !== ne.ZodParsedType.object)
        return (0, V.addIssueToContext)(r, {
          code: te.ZodIssueCode.invalid_type,
          expected: ne.ZodParsedType.object,
          received: r.parsedType
        }), V.INVALID;
      let n = this.discriminator, i = r.data[n], o = this.optionsMap.get(i);
      return o ? r.common.async ? o._parseAsync({
        data: r.data,
        path: r.path,
        parent: r
      }) : o._parseSync({
        data: r.data,
        path: r.path,
        parent: r
      }) : ((0, V.addIssueToContext)(r, {
        code: te.ZodIssueCode.invalid_union_discriminator,
        options: Array.from(this.optionsMap.keys()),
        path: [n]
      }), V.INVALID);
    }
    get discriminator() {
      return this._def.discriminator;
    }
    get options() {
      return this._def.options;
    }
    get optionsMap() {
      return this._def.optionsMap;
    }
    /**
     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.
     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must
     * have a different value for each object in the union.
     * @param discriminator the name of the discriminator property
     * @param types an array of object schemas
     * @param params
     */
    static create(t, r, n) {
      let i = /* @__PURE__ */ new Map();
      for (let o of r) {
        let a = kn(o.shape[t]);
        if (!a.length)
          throw new Error(`A discriminator value for key \`${t}\` could not be extracted from all schema options`);
        for (let u of a) {
          if (i.has(u))
            throw new Error(`Discriminator property ${String(t)} has duplicate value ${String(u)}`);
          i.set(u, o);
        }
      }
      return new e({
        typeName: De.ZodDiscriminatedUnion,
        discriminator: t,
        options: r,
        optionsMap: i,
        ...Se(n)
      });
    }
  };
  q.ZodDiscriminatedUnion = pc;
  function c0(e, t) {
    let r = (0, ne.getParsedType)(e), n = (0, ne.getParsedType)(t);
    if (e === t)
      return { valid: !0, data: e };
    if (r === ne.ZodParsedType.object && n === ne.ZodParsedType.object) {
      let i = ne.util.objectKeys(t), o = ne.util.objectKeys(e).filter((u) => i.indexOf(u) !== -1), a = { ...e, ...t };
      for (let u of o) {
        let l = c0(e[u], t[u]);
        if (!l.valid)
          return { valid: !1 };
        a[u] = l.data;
      }
      return { valid: !0, data: a };
    } else if (r === ne.ZodParsedType.array && n === ne.ZodParsedType.array) {
      if (e.length !== t.length)
        return { valid: !1 };
      let i = [];
      for (let o = 0; o < e.length; o++) {
        let a = e[o], u = t[o], l = c0(a, u);
        if (!l.valid)
          return { valid: !1 };
        i.push(l.data);
      }
      return { valid: !0, data: i };
    } else return r === ne.ZodParsedType.date && n === ne.ZodParsedType.date && +e == +t ? { valid: !0, data: e } : { valid: !1 };
  }
  s(c0, "mergeValues");
  var Oi = class extends Ae {
    static {
      s(this, "ZodIntersection");
    }
    _parse(t) {
      let { status: r, ctx: n } = this._processInputParams(t), i = /* @__PURE__ */ s((o, a) => {
        if ((0, V.isAborted)(o) || (0, V.isAborted)(a))
          return V.INVALID;
        let u = c0(o.value, a.value);
        return u.valid ? (((0, V.isDirty)(o) || (0, V.isDirty)(a)) && r.dirty(), { status: r.value, value: u.data }) : ((0, V.addIssueToContext)(
        n, {
          code: te.ZodIssueCode.invalid_intersection_types
        }), V.INVALID);
      }, "handleParsed");
      return n.common.async ? Promise.all([
        this._def.left._parseAsync({
          data: n.data,
          path: n.path,
          parent: n
        }),
        this._def.right._parseAsync({
          data: n.data,
          path: n.path,
          parent: n
        })
      ]).then(([o, a]) => i(o, a)) : i(this._def.left._parseSync({
        data: n.data,
        path: n.path,
        parent: n
      }), this._def.right._parseSync({
        data: n.data,
        path: n.path,
        parent: n
      }));
    }
  };
  q.ZodIntersection = Oi;
  Oi.create = (e, t, r) => new Oi({
    left: e,
    right: t,
    typeName: De.ZodIntersection,
    ...Se(r)
  });
  var sn = class e extends Ae {
    static {
      s(this, "ZodTuple");
    }
    _parse(t) {
      let { status: r, ctx: n } = this._processInputParams(t);
      if (n.parsedType !== ne.ZodParsedType.array)
        return (0, V.addIssueToContext)(n, {
          code: te.ZodIssueCode.invalid_type,
          expected: ne.ZodParsedType.array,
          received: n.parsedType
        }), V.INVALID;
      if (n.data.length < this._def.items.length)
        return (0, V.addIssueToContext)(n, {
          code: te.ZodIssueCode.too_small,
          minimum: this._def.items.length,
          inclusive: !0,
          exact: !1,
          type: "array"
        }), V.INVALID;
      !this._def.rest && n.data.length > this._def.items.length && ((0, V.addIssueToContext)(n, {
        code: te.ZodIssueCode.too_big,
        maximum: this._def.items.length,
        inclusive: !0,
        exact: !1,
        type: "array"
      }), r.dirty());
      let o = [...n.data].map((a, u) => {
        let l = this._def.items[u] || this._def.rest;
        return l ? l._parse(new xr(n, a, n.path, u)) : null;
      }).filter((a) => !!a);
      return n.common.async ? Promise.all(o).then((a) => V.ParseStatus.mergeArray(r, a)) : V.ParseStatus.mergeArray(r, o);
    }
    get items() {
      return this._def.items;
    }
    rest(t) {
      return new e({
        ...this._def,
        rest: t
      });
    }
  };
  q.ZodTuple = sn;
  sn.create = (e, t) => {
    if (!Array.isArray(e))
      throw new Error("You must pass an array of schemas to z.tuple([ ... ])");
    return new sn({
      items: e,
      typeName: De.ZodTuple,
      rest: null,
      ...Se(t)
    });
  };
  var hc = class e extends Ae {
    static {
      s(this, "ZodRecord");
    }
    get keySchema() {
      return this._def.keyType;
    }
    get valueSchema() {
      return this._def.valueType;
    }
    _parse(t) {
      let { status: r, ctx: n } = this._processInputParams(t);
      if (n.parsedType !== ne.ZodParsedType.object)
        return (0, V.addIssueToContext)(n, {
          code: te.ZodIssueCode.invalid_type,
          expected: ne.ZodParsedType.object,
          received: n.parsedType
        }), V.INVALID;
      let i = [], o = this._def.keyType, a = this._def.valueType;
      for (let u in n.data)
        i.push({
          key: o._parse(new xr(n, u, n.path, u)),
          value: a._parse(new xr(n, n.data[u], n.path, u)),
          alwaysSet: u in n.data
        });
      return n.common.async ? V.ParseStatus.mergeObjectAsync(r, i) : V.ParseStatus.mergeObjectSync(r, i);
    }
    get element() {
      return this._def.valueType;
    }
    static create(t, r, n) {
      return r instanceof Ae ? new e({
        keyType: t,
        valueType: r,
        typeName: De.ZodRecord,
        ...Se(n)
      }) : new e({
        keyType: ti.create(),
        valueType: t,
        typeName: De.ZodRecord,
        ...Se(r)
      });
    }
  };
  q.ZodRecord = hc;
  var zs = class extends Ae {
    static {
      s(this, "ZodMap");
    }
    get keySchema() {
      return this._def.keyType;
    }
    get valueSchema() {
      return this._def.valueType;
    }
    _parse(t) {
      let { status: r, ctx: n } = this._processInputParams(t);
      if (n.parsedType !== ne.ZodParsedType.map)
        return (0, V.addIssueToContext)(n, {
          code: te.ZodIssueCode.invalid_type,
          expected: ne.ZodParsedType.map,
          received: n.parsedType
        }), V.INVALID;
      let i = this._def.keyType, o = this._def.valueType, a = [...n.data.entries()].map(([u, l], c) => ({
        key: i._parse(new xr(n, u, n.path, [c, "key"])),
        value: o._parse(new xr(n, l, n.path, [c, "value"]))
      }));
      if (n.common.async) {
        let u = /* @__PURE__ */ new Map();
        return Promise.resolve().then(async () => {
          for (let l of a) {
            let c = await l.key, p = await l.value;
            if (c.status === "aborted" || p.status === "aborted")
              return V.INVALID;
            (c.status === "dirty" || p.status === "dirty") && r.dirty(), u.set(c.value, p.value);
          }
          return { status: r.value, value: u };
        });
      } else {
        let u = /* @__PURE__ */ new Map();
        for (let l of a) {
          let c = l.key, p = l.value;
          if (c.status === "aborted" || p.status === "aborted")
            return V.INVALID;
          (c.status === "dirty" || p.status === "dirty") && r.dirty(), u.set(c.value, p.value);
        }
        return { status: r.value, value: u };
      }
    }
  };
  q.ZodMap = zs;
  zs.create = (e, t, r) => new zs({
    valueType: t,
    keyType: e,
    typeName: De.ZodMap,
    ...Se(r)
  });
  var Hs = class e extends Ae {
    static {
      s(this, "ZodSet");
    }
    _parse(t) {
      let { status: r, ctx: n } = this._processInputParams(t);
      if (n.parsedType !== ne.ZodParsedType.set)
        return (0, V.addIssueToContext)(n, {
          code: te.ZodIssueCode.invalid_type,
          expected: ne.ZodParsedType.set,
          received: n.parsedType
        }), V.INVALID;
      let i = this._def;
      i.minSize !== null && n.data.size < i.minSize.value && ((0, V.addIssueToContext)(n, {
        code: te.ZodIssueCode.too_small,
        minimum: i.minSize.value,
        type: "set",
        inclusive: !0,
        exact: !1,
        message: i.minSize.message
      }), r.dirty()), i.maxSize !== null && n.data.size > i.maxSize.value && ((0, V.addIssueToContext)(n, {
        code: te.ZodIssueCode.too_big,
        maximum: i.maxSize.value,
        type: "set",
        inclusive: !0,
        exact: !1,
        message: i.maxSize.message
      }), r.dirty());
      let o = this._def.valueType;
      function a(l) {
        let c = /* @__PURE__ */ new Set();
        for (let p of l) {
          if (p.status === "aborted")
            return V.INVALID;
          p.status === "dirty" && r.dirty(), c.add(p.value);
        }
        return { status: r.value, value: c };
      }
      s(a, "finalizeSet");
      let u = [...n.data.values()].map((l, c) => o._parse(new xr(n, l, n.path, c)));
      return n.common.async ? Promise.all(u).then((l) => a(l)) : a(u);
    }
    min(t, r) {
      return new e({
        ...this._def,
        minSize: { value: t, message: ue.errorUtil.toString(r) }
      });
    }
    max(t, r) {
      return new e({
        ...this._def,
        maxSize: { value: t, message: ue.errorUtil.toString(r) }
      });
    }
    size(t, r) {
      return this.min(t, r).max(t, r);
    }
    nonempty(t) {
      return this.min(1, t);
    }
  };
  q.ZodSet = Hs;
  Hs.create = (e, t) => new Hs({
    valueType: e,
    minSize: null,
    maxSize: null,
    typeName: De.ZodSet,
    ...Se(t)
  });
  var fc = class e extends Ae {
    static {
      s(this, "ZodFunction");
    }
    constructor() {
      super(...arguments), this.validate = this.implement;
    }
    _parse(t) {
      let { ctx: r } = this._processInputParams(t);
      if (r.parsedType !== ne.ZodParsedType.function)
        return (0, V.addIssueToContext)(r, {
          code: te.ZodIssueCode.invalid_type,
          expected: ne.ZodParsedType.function,
          received: r.parsedType
        }), V.INVALID;
      function n(u, l) {
        return (0, V.makeIssue)({
          data: u,
          path: r.path,
          errorMaps: [
            r.common.contextualErrorMap,
            r.schemaErrorMap,
            (0, lc.getErrorMap)(),
            lc.defaultErrorMap
          ].filter((c) => !!c),
          issueData: {
            code: te.ZodIssueCode.invalid_arguments,
            argumentsError: l
          }
        });
      }
      s(n, "makeArgsIssue");
      function i(u, l) {
        return (0, V.makeIssue)({
          data: u,
          path: r.path,
          errorMaps: [
            r.common.contextualErrorMap,
            r.schemaErrorMap,
            (0, lc.getErrorMap)(),
            lc.defaultErrorMap
          ].filter((c) => !!c),
          issueData: {
            code: te.ZodIssueCode.invalid_return_type,
            returnTypeError: l
          }
        });
      }
      s(i, "makeReturnsIssue");
      let o = { errorMap: r.common.contextualErrorMap }, a = r.data;
      if (this._def.returns instanceof ni) {
        let u = this;
        return (0, V.OK)(async function(...l) {
          let c = new te.ZodError([]), p = await u._def.args.parseAsync(l, o).catch((d) => {
            throw c.addIssue(n(l, d)), c;
          }), h = await Reflect.apply(a, this, p);
          return await u._def.returns._def.type.parseAsync(h, o).catch((d) => {
            throw c.addIssue(i(h, d)), c;
          });
        });
      } else {
        let u = this;
        return (0, V.OK)(function(...l) {
          let c = u._def.args.safeParse(l, o);
          if (!c.success)
            throw new te.ZodError([n(l, c.error)]);
          let p = Reflect.apply(a, this, c.data), h = u._def.returns.safeParse(p, o);
          if (!h.success)
            throw new te.ZodError([i(p, h.error)]);
          return h.data;
        });
      }
    }
    parameters() {
      return this._def.args;
    }
    returnType() {
      return this._def.returns;
    }
    args(...t) {
      return new e({
        ...this._def,
        args: sn.create(t).rest(Tn.create())
      });
    }
    returns(t) {
      return new e({
        ...this._def,
        returns: t
      });
    }
    implement(t) {
      return this.parse(t);
    }
    strictImplement(t) {
      return this.parse(t);
    }
    static create(t, r, n) {
      return new e({
        args: t || sn.create([]).rest(Tn.create()),
        returns: r || Tn.create(),
        typeName: De.ZodFunction,
        ...Se(n)
      });
    }
  };
  q.ZodFunction = fc;
  var Ri = class extends Ae {
    static {
      s(this, "ZodLazy");
    }
    get schema() {
      return this._def.getter();
    }
    _parse(t) {
      let { ctx: r } = this._processInputParams(t);
      return this._def.getter()._parse({ data: r.data, path: r.path, parent: r });
    }
  };
  q.ZodLazy = Ri;
  Ri.create = (e, t) => new Ri({
    getter: e,
    typeName: De.ZodLazy,
    ...Se(t)
  });
  var Ni = class extends Ae {
    static {
      s(this, "ZodLiteral");
    }
    _parse(t) {
      if (t.data !== this._def.value) {
        let r = this._getOrReturnCtx(t);
        return (0, V.addIssueToContext)(r, {
          received: r.data,
          code: te.ZodIssueCode.invalid_literal,
          expected: this._def.value
        }), V.INVALID;
      }
      return { status: "valid", value: t.data };
    }
    get value() {
      return this._def.value;
    }
  };
  q.ZodLiteral = Ni;
  Ni.create = (e, t) => new Ni({
    value: e,
    typeName: De.ZodLiteral,
    ...Se(t)
  });
  function fk(e, t) {
    return new Li({
      values: e,
      typeName: De.ZodEnum,
      ...Se(t)
    });
  }
  s(fk, "createZodEnum");
  var Li = class e extends Ae {
    static {
      s(this, "ZodEnum");
    }
    constructor() {
      super(...arguments), va.set(this, void 0);
    }
    _parse(t) {
      if (typeof t.data != "string") {
        let r = this._getOrReturnCtx(t), n = this._def.values;
        return (0, V.addIssueToContext)(r, {
          expected: ne.util.joinValues(n),
          received: r.parsedType,
          code: te.ZodIssueCode.invalid_type
        }), V.INVALID;
      }
      if (cc(this, va, "f") || lk(this, va, new Set(this._def.values), "f"), !cc(this, va, "f").has(t.data)) {
        let r = this._getOrReturnCtx(t), n = this._def.values;
        return (0, V.addIssueToContext)(r, {
          received: r.data,
          code: te.ZodIssueCode.invalid_enum_value,
          options: n
        }), V.INVALID;
      }
      return (0, V.OK)(t.data);
    }
    get options() {
      return this._def.values;
    }
    get enum() {
      let t = {};
      for (let r of this._def.values)
        t[r] = r;
      return t;
    }
    get Values() {
      let t = {};
      for (let r of this._def.values)
        t[r] = r;
      return t;
    }
    get Enum() {
      let t = {};
      for (let r of this._def.values)
        t[r] = r;
      return t;
    }
    extract(t, r = this._def) {
      return e.create(t, {
        ...this._def,
        ...r
      });
    }
    exclude(t, r = this._def) {
      return e.create(this.options.filter((n) => !t.includes(n)), {
        ...this._def,
        ...r
      });
    }
  };
  q.ZodEnum = Li;
  va = /* @__PURE__ */ new WeakMap();
  Li.create = fk;
  var ji = class extends Ae {
    static {
      s(this, "ZodNativeEnum");
    }
    constructor() {
      super(...arguments), Ea.set(this, void 0);
    }
    _parse(t) {
      let r = ne.util.getValidEnumValues(this._def.values), n = this._getOrReturnCtx(t);
      if (n.parsedType !== ne.ZodParsedType.string && n.parsedType !== ne.ZodParsedType.number) {
        let i = ne.util.objectValues(r);
        return (0, V.addIssueToContext)(n, {
          expected: ne.util.joinValues(i),
          received: n.parsedType,
          code: te.ZodIssueCode.invalid_type
        }), V.INVALID;
      }
      if (cc(this, Ea, "f") || lk(this, Ea, new Set(ne.util.getValidEnumValues(this._def.values)), "f"), !cc(this, Ea, "f").has(t.data)) {
        let i = ne.util.objectValues(r);
        return (0, V.addIssueToContext)(n, {
          received: n.data,
          code: te.ZodIssueCode.invalid_enum_value,
          options: i
        }), V.INVALID;
      }
      return (0, V.OK)(t.data);
    }
    get enum() {
      return this._def.values;
    }
  };
  q.ZodNativeEnum = ji;
  Ea = /* @__PURE__ */ new WeakMap();
  ji.create = (e, t) => new ji({
    values: e,
    typeName: De.ZodNativeEnum,
    ...Se(t)
  });
  var ni = class extends Ae {
    static {
      s(this, "ZodPromise");
    }
    unwrap() {
      return this._def.type;
    }
    _parse(t) {
      let { ctx: r } = this._processInputParams(t);
      if (r.parsedType !== ne.ZodParsedType.promise && r.common.async === !1)
        return (0, V.addIssueToContext)(r, {
          code: te.ZodIssueCode.invalid_type,
          expected: ne.ZodParsedType.promise,
          received: r.parsedType
        }), V.INVALID;
      let n = r.parsedType === ne.ZodParsedType.promise ? r.data : Promise.resolve(r.data);
      return (0, V.OK)(n.then((i) => this._def.type.parseAsync(i, {
        path: r.path,
        errorMap: r.common.contextualErrorMap
      })));
    }
  };
  q.ZodPromise = ni;
  ni.create = (e, t) => new ni({
    type: e,
    typeName: De.ZodPromise,
    ...Se(t)
  });
  var Qt = class extends Ae {
    static {
      s(this, "ZodEffects");
    }
    innerType() {
      return this._def.schema;
    }
    sourceType() {
      return this._def.schema._def.typeName === De.ZodEffects ? this._def.schema.sourceType() : this._def.schema;
    }
    _parse(t) {
      let { status: r, ctx: n } = this._processInputParams(t), i = this._def.effect || null, o = {
        addIssue: /* @__PURE__ */ s((a) => {
          (0, V.addIssueToContext)(n, a), a.fatal ? r.abort() : r.dirty();
        }, "addIssue"),
        get path() {
          return n.path;
        }
      };
      if (o.addIssue = o.addIssue.bind(o), i.type === "preprocess") {
        let a = i.transform(n.data, o);
        if (n.common.async)
          return Promise.resolve(a).then(async (u) => {
            if (r.value === "aborted")
              return V.INVALID;
            let l = await this._def.schema._parseAsync({
              data: u,
              path: n.path,
              parent: n
            });
            return l.status === "aborted" ? V.INVALID : l.status === "dirty" || r.value === "dirty" ? (0, V.DIRTY)(l.value) : l;
          });
        {
          if (r.value === "aborted")
            return V.INVALID;
          let u = this._def.schema._parseSync({
            data: a,
            path: n.path,
            parent: n
          });
          return u.status === "aborted" ? V.INVALID : u.status === "dirty" || r.value === "dirty" ? (0, V.DIRTY)(u.value) : u;
        }
      }
      if (i.type === "refinement") {
        let a = /* @__PURE__ */ s((u) => {
          let l = i.refinement(u, o);
          if (n.common.async)
            return Promise.resolve(l);
          if (l instanceof Promise)
            throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");
          return u;
        }, "executeRefinement");
        if (n.common.async === !1) {
          let u = this._def.schema._parseSync({
            data: n.data,
            path: n.path,
            parent: n
          });
          return u.status === "aborted" ? V.INVALID : (u.status === "dirty" && r.dirty(), a(u.value), { status: r.value, value: u.value });
        } else
          return this._def.schema._parseAsync({ data: n.data, path: n.path, parent: n }).then((u) => u.status === "aborted" ? V.INVALID : (u.
          status === "dirty" && r.dirty(), a(u.value).then(() => ({ status: r.value, value: u.value }))));
      }
      if (i.type === "transform")
        if (n.common.async === !1) {
          let a = this._def.schema._parseSync({
            data: n.data,
            path: n.path,
            parent: n
          });
          if (!(0, V.isValid)(a))
            return a;
          let u = i.transform(a.value, o);
          if (u instanceof Promise)
            throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");
          return { status: r.value, value: u };
        } else
          return this._def.schema._parseAsync({ data: n.data, path: n.path, parent: n }).then((a) => (0, V.isValid)(a) ? Promise.resolve(i.transform(
          a.value, o)).then((u) => ({ status: r.value, value: u })) : a);
      ne.util.assertNever(i);
    }
  };
  q.ZodEffects = Qt;
  q.ZodTransformer = Qt;
  Qt.create = (e, t, r) => new Qt({
    schema: e,
    typeName: De.ZodEffects,
    effect: t,
    ...Se(r)
  });
  Qt.createWithPreprocess = (e, t, r) => new Qt({
    schema: t,
    effect: { type: "preprocess", transform: e },
    typeName: De.ZodEffects,
    ...Se(r)
  });
  var Dr = class extends Ae {
    static {
      s(this, "ZodOptional");
    }
    _parse(t) {
      return this._getType(t) === ne.ZodParsedType.undefined ? (0, V.OK)(void 0) : this._def.innerType._parse(t);
    }
    unwrap() {
      return this._def.innerType;
    }
  };
  q.ZodOptional = Dr;
  Dr.create = (e, t) => new Dr({
    innerType: e,
    typeName: De.ZodOptional,
    ...Se(t)
  });
  var on = class extends Ae {
    static {
      s(this, "ZodNullable");
    }
    _parse(t) {
      return this._getType(t) === ne.ZodParsedType.null ? (0, V.OK)(null) : this._def.innerType._parse(t);
    }
    unwrap() {
      return this._def.innerType;
    }
  };
  q.ZodNullable = on;
  on.create = (e, t) => new on({
    innerType: e,
    typeName: De.ZodNullable,
    ...Se(t)
  });
  var Mi = class extends Ae {
    static {
      s(this, "ZodDefault");
    }
    _parse(t) {
      let { ctx: r } = this._processInputParams(t), n = r.data;
      return r.parsedType === ne.ZodParsedType.undefined && (n = this._def.defaultValue()), this._def.innerType._parse({
        data: n,
        path: r.path,
        parent: r
      });
    }
    removeDefault() {
      return this._def.innerType;
    }
  };
  q.ZodDefault = Mi;
  Mi.create = (e, t) => new Mi({
    innerType: e,
    typeName: De.ZodDefault,
    defaultValue: typeof t.default == "function" ? t.default : () => t.default,
    ...Se(t)
  });
  var qi = class extends Ae {
    static {
      s(this, "ZodCatch");
    }
    _parse(t) {
      let { ctx: r } = this._processInputParams(t), n = {
        ...r,
        common: {
          ...r.common,
          issues: []
        }
      }, i = this._def.innerType._parse({
        data: n.data,
        path: n.path,
        parent: {
          ...n
        }
      });
      return (0, V.isAsync)(i) ? i.then((o) => ({
        status: "valid",
        value: o.status === "valid" ? o.value : this._def.catchValue({
          get error() {
            return new te.ZodError(n.common.issues);
          },
          input: n.data
        })
      })) : {
        status: "valid",
        value: i.status === "valid" ? i.value : this._def.catchValue({
          get error() {
            return new te.ZodError(n.common.issues);
          },
          input: n.data
        })
      };
    }
    removeCatch() {
      return this._def.innerType;
    }
  };
  q.ZodCatch = qi;
  qi.create = (e, t) => new qi({
    innerType: e,
    typeName: De.ZodCatch,
    catchValue: typeof t.catch == "function" ? t.catch : () => t.catch,
    ...Se(t)
  });
  var Gs = class extends Ae {
    static {
      s(this, "ZodNaN");
    }
    _parse(t) {
      if (this._getType(t) !== ne.ZodParsedType.nan) {
        let n = this._getOrReturnCtx(t);
        return (0, V.addIssueToContext)(n, {
          code: te.ZodIssueCode.invalid_type,
          expected: ne.ZodParsedType.nan,
          received: n.parsedType
        }), V.INVALID;
      }
      return { status: "valid", value: t.data };
    }
  };
  q.ZodNaN = Gs;
  Gs.create = (e) => new Gs({
    typeName: De.ZodNaN,
    ...Se(e)
  });
  q.BRAND = Symbol("zod_brand");
  var Ca = class extends Ae {
    static {
      s(this, "ZodBranded");
    }
    _parse(t) {
      let { ctx: r } = this._processInputParams(t), n = r.data;
      return this._def.type._parse({
        data: n,
        path: r.path,
        parent: r
      });
    }
    unwrap() {
      return this._def.type;
    }
  };
  q.ZodBranded = Ca;
  var wa = class e extends Ae {
    static {
      s(this, "ZodPipeline");
    }
    _parse(t) {
      let { status: r, ctx: n } = this._processInputParams(t);
      if (n.common.async)
        return (/* @__PURE__ */ s(async () => {
          let o = await this._def.in._parseAsync({
            data: n.data,
            path: n.path,
            parent: n
          });
          return o.status === "aborted" ? V.INVALID : o.status === "dirty" ? (r.dirty(), (0, V.DIRTY)(o.value)) : this._def.out._parseAsync(
          {
            data: o.value,
            path: n.path,
            parent: n
          });
        }, "handleAsync"))();
      {
        let i = this._def.in._parseSync({
          data: n.data,
          path: n.path,
          parent: n
        });
        return i.status === "aborted" ? V.INVALID : i.status === "dirty" ? (r.dirty(), {
          status: "dirty",
          value: i.value
        }) : this._def.out._parseSync({
          data: i.value,
          path: n.path,
          parent: n
        });
      }
    }
    static create(t, r) {
      return new e({
        in: t,
        out: r,
        typeName: De.ZodPipeline
      });
    }
  };
  q.ZodPipeline = wa;
  var $i = class extends Ae {
    static {
      s(this, "ZodReadonly");
    }
    _parse(t) {
      let r = this._def.innerType._parse(t), n = /* @__PURE__ */ s((i) => ((0, V.isValid)(i) && (i.value = Object.freeze(i.value)), i), "fre\
eze");
      return (0, V.isAsync)(r) ? r.then((i) => n(i)) : n(r);
    }
    unwrap() {
      return this._def.innerType;
    }
  };
  q.ZodReadonly = $i;
  $i.create = (e, t) => new $i({
    innerType: e,
    typeName: De.ZodReadonly,
    ...Se(t)
  });
  function uk(e, t) {
    let r = typeof e == "function" ? e(t) : typeof e == "string" ? { message: e } : e;
    return typeof r == "string" ? { message: r } : r;
  }
  s(uk, "cleanParams");
  function dk(e, t = {}, r) {
    return e ? ri.create().superRefine((n, i) => {
      var o, a;
      let u = e(n);
      if (u instanceof Promise)
        return u.then((l) => {
          var c, p;
          if (!l) {
            let h = uk(t, n), f = (p = (c = h.fatal) !== null && c !== void 0 ? c : r) !== null && p !== void 0 ? p : !0;
            i.addIssue({ code: "custom", ...h, fatal: f });
          }
        });
      if (!u) {
        let l = uk(t, n), c = (a = (o = l.fatal) !== null && o !== void 0 ? o : r) !== null && a !== void 0 ? a : !0;
        i.addIssue({ code: "custom", ...l, fatal: c });
      }
    }) : ri.create();
  }
  s(dk, "custom");
  q.custom = dk;
  q.late = {
    object: zt.lazycreate
  };
  var De;
  (function(e) {
    e.ZodString = "ZodString", e.ZodNumber = "ZodNumber", e.ZodNaN = "ZodNaN", e.ZodBigInt = "ZodBigInt", e.ZodBoolean = "ZodBoolean", e.ZodDate =
    "ZodDate", e.ZodSymbol = "ZodSymbol", e.ZodUndefined = "ZodUndefined", e.ZodNull = "ZodNull", e.ZodAny = "ZodAny", e.ZodUnknown = "ZodUn\
known", e.ZodNever = "ZodNever", e.ZodVoid = "ZodVoid", e.ZodArray = "ZodArray", e.ZodObject = "ZodObject", e.ZodUnion = "ZodUnion", e.ZodDiscriminatedUnion =
    "ZodDiscriminatedUnion", e.ZodIntersection = "ZodIntersection", e.ZodTuple = "ZodTuple", e.ZodRecord = "ZodRecord", e.ZodMap = "ZodMap",
    e.ZodSet = "ZodSet", e.ZodFunction = "ZodFunction", e.ZodLazy = "ZodLazy", e.ZodLiteral = "ZodLiteral", e.ZodEnum = "ZodEnum", e.ZodEffects =
    "ZodEffects", e.ZodNativeEnum = "ZodNativeEnum", e.ZodOptional = "ZodOptional", e.ZodNullable = "ZodNullable", e.ZodDefault = "ZodDefaul\
t", e.ZodCatch = "ZodCatch", e.ZodPromise = "ZodPromise", e.ZodBranded = "ZodBranded", e.ZodPipeline = "ZodPipeline", e.ZodReadonly = "ZodRe\
adonly";
  })(De || (q.ZodFirstPartyTypeKind = De = {}));
  var gX = /* @__PURE__ */ s((e, t = {
    message: `Input not instance of ${e.name}`
  }) => dk((r) => r instanceof e, t), "instanceOfType");
  q.instanceof = gX;
  var mk = ti.create;
  q.string = mk;
  var gk = Fi.create;
  q.number = gk;
  var yX = Gs.create;
  q.nan = yX;
  var DX = _i.create;
  q.bigint = DX;
  var yk = ki.create;
  q.boolean = yk;
  var xX = Ti.create;
  q.date = xX;
  var bX = Us.create;
  q.symbol = bX;
  var vX = Ii.create;
  q.undefined = vX;
  var EX = Pi.create;
  q.null = EX;
  var CX = ri.create;
  q.any = CX;
  var wX = Tn.create;
  q.unknown = wX;
  var SX = Lr.create;
  q.never = SX;
  var AX = Ws.create;
  q.void = AX;
  var FX = In.create;
  q.array = FX;
  var _X = zt.create;
  q.object = _X;
  var kX = zt.strictCreate;
  q.strictObject = kX;
  var TX = Bi.create;
  q.union = TX;
  var IX = pc.create;
  q.discriminatedUnion = IX;
  var PX = Oi.create;
  q.intersection = PX;
  var BX = sn.create;
  q.tuple = BX;
  var OX = hc.create;
  q.record = OX;
  var RX = zs.create;
  q.map = RX;
  var NX = Hs.create;
  q.set = NX;
  var LX = fc.create;
  q.function = LX;
  var jX = Ri.create;
  q.lazy = jX;
  var MX = Ni.create;
  q.literal = MX;
  var qX = Li.create;
  q.enum = qX;
  var $X = ji.create;
  q.nativeEnum = $X;
  var VX = ni.create;
  q.promise = VX;
  var Dk = Qt.create;
  q.effect = Dk;
  q.transformer = Dk;
  var UX = Dr.create;
  q.optional = UX;
  var WX = on.create;
  q.nullable = WX;
  var zX = Qt.createWithPreprocess;
  q.preprocess = zX;
  var HX = wa.create;
  q.pipeline = HX;
  var GX = /* @__PURE__ */ s(() => mk().optional(), "ostring");
  q.ostring = GX;
  var JX = /* @__PURE__ */ s(() => gk().optional(), "onumber");
  q.onumber = JX;
  var ZX = /* @__PURE__ */ s(() => yk().optional(), "oboolean");
  q.oboolean = ZX;
  q.coerce = {
    string: /* @__PURE__ */ s((e) => ti.create({ ...e, coerce: !0 }), "string"),
    number: /* @__PURE__ */ s((e) => Fi.create({ ...e, coerce: !0 }), "number"),
    boolean: /* @__PURE__ */ s((e) => ki.create({
      ...e,
      coerce: !0
    }), "boolean"),
    bigint: /* @__PURE__ */ s((e) => _i.create({ ...e, coerce: !0 }), "bigint"),
    date: /* @__PURE__ */ s((e) => Ti.create({ ...e, coerce: !0 }), "date")
  };
  q.NEVER = V.INVALID;
});

// ../node_modules/zod/lib/external.js
var p0 = I((br) => {
  "use strict";
  var XX = br && br.__createBinding || (Object.create ? function(e, t, r, n) {
    n === void 0 && (n = r);
    var i = Object.getOwnPropertyDescriptor(t, r);
    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = { enumerable: !0, get: /* @__PURE__ */ s(function() {
      return t[r];
    }, "get") }), Object.defineProperty(e, n, i);
  } : function(e, t, r, n) {
    n === void 0 && (n = r), e[n] = t[r];
  }), Js = br && br.__exportStar || function(e, t) {
    for (var r in e) r !== "default" && !Object.prototype.hasOwnProperty.call(t, r) && XX(t, e, r);
  };
  Object.defineProperty(br, "__esModule", { value: !0 });
  Js(ac(), br);
  Js(u0(), br);
  Js(ik(), br);
  Js(xa(), br);
  Js(xk(), br);
  Js(oc(), br);
});

// ../node_modules/zod/lib/index.js
var Ek = I((Ht) => {
  "use strict";
  var bk = Ht && Ht.__createBinding || (Object.create ? function(e, t, r, n) {
    n === void 0 && (n = r);
    var i = Object.getOwnPropertyDescriptor(t, r);
    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = { enumerable: !0, get: /* @__PURE__ */ s(function() {
      return t[r];
    }, "get") }), Object.defineProperty(e, n, i);
  } : function(e, t, r, n) {
    n === void 0 && (n = r), e[n] = t[r];
  }), KX = Ht && Ht.__setModuleDefault || (Object.create ? function(e, t) {
    Object.defineProperty(e, "default", { enumerable: !0, value: t });
  } : function(e, t) {
    e.default = t;
  }), YX = Ht && Ht.__importStar || function(e) {
    if (e && e.__esModule) return e;
    var t = {};
    if (e != null) for (var r in e) r !== "default" && Object.prototype.hasOwnProperty.call(e, r) && bk(t, e, r);
    return KX(t, e), t;
  }, QX = Ht && Ht.__exportStar || function(e, t) {
    for (var r in e) r !== "default" && !Object.prototype.hasOwnProperty.call(t, r) && bk(t, e, r);
  };
  Object.defineProperty(Ht, "__esModule", { value: !0 });
  Ht.z = void 0;
  var vk = YX(p0());
  Ht.z = vk;
  QX(p0(), Ht);
  Ht.default = vk;
});

// ../node_modules/isexe/windows.js
var kk = I((Aye, _k) => {
  _k.exports = Fk;
  Fk.sync = aK;
  var Sk = H("fs");
  function oK(e, t) {
    var r = t.pathExt !== void 0 ? t.pathExt : process.env.PATHEXT;
    if (!r || (r = r.split(";"), r.indexOf("") !== -1))
      return !0;
    for (var n = 0; n < r.length; n++) {
      var i = r[n].toLowerCase();
      if (i && e.substr(-i.length).toLowerCase() === i)
        return !0;
    }
    return !1;
  }
  s(oK, "checkPathExt");
  function Ak(e, t, r) {
    return !e.isSymbolicLink() && !e.isFile() ? !1 : oK(t, r);
  }
  s(Ak, "checkStat");
  function Fk(e, t, r) {
    Sk.stat(e, function(n, i) {
      r(n, n ? !1 : Ak(i, e, t));
    });
  }
  s(Fk, "isexe");
  function aK(e, t) {
    return Ak(Sk.statSync(e), e, t);
  }
  s(aK, "sync");
});

// ../node_modules/isexe/mode.js
var Ok = I((_ye, Bk) => {
  Bk.exports = Ik;
  Ik.sync = uK;
  var Tk = H("fs");
  function Ik(e, t, r) {
    Tk.stat(e, function(n, i) {
      r(n, n ? !1 : Pk(i, t));
    });
  }
  s(Ik, "isexe");
  function uK(e, t) {
    return Pk(Tk.statSync(e), t);
  }
  s(uK, "sync");
  function Pk(e, t) {
    return e.isFile() && lK(e, t);
  }
  s(Pk, "checkStat");
  function lK(e, t) {
    var r = e.mode, n = e.uid, i = e.gid, o = t.uid !== void 0 ? t.uid : process.getuid && process.getuid(), a = t.gid !== void 0 ? t.gid : process.
    getgid && process.getgid(), u = parseInt("100", 8), l = parseInt("010", 8), c = parseInt("001", 8), p = u | l, h = r & c || r & l && i ===
    a || r & u && n === o || r & p && o === 0;
    return h;
  }
  s(lK, "checkMode");
});

// ../node_modules/isexe/index.js
var Nk = I((Iye, Rk) => {
  var Tye = H("fs"), mc;
  process.platform === "win32" || global.TESTING_WINDOWS ? mc = kk() : mc = Ok();
  Rk.exports = f0;
  f0.sync = cK;
  function f0(e, t, r) {
    if (typeof t == "function" && (r = t, t = {}), !r) {
      if (typeof Promise != "function")
        throw new TypeError("callback not provided");
      return new Promise(function(n, i) {
        f0(e, t || {}, function(o, a) {
          o ? i(o) : n(a);
        });
      });
    }
    mc(e, t || {}, function(n, i) {
      n && (n.code === "EACCES" || t && t.ignoreErrors) && (n = null, i = !1), r(n, i);
    });
  }
  s(f0, "isexe");
  function cK(e, t) {
    try {
      return mc.sync(e, t || {});
    } catch (r) {
      if (t && t.ignoreErrors || r.code === "EACCES")
        return !1;
      throw r;
    }
  }
  s(cK, "sync");
});

// ../node_modules/which/which.js
var Uk = I((Bye, Vk) => {
  var Ks = process.platform === "win32" || process.env.OSTYPE === "cygwin" || process.env.OSTYPE === "msys", Lk = H("path"), pK = Ks ? ";" :
  ":", jk = Nk(), Mk = /* @__PURE__ */ s((e) => Object.assign(new Error(`not found: ${e}`), { code: "ENOENT" }), "getNotFoundError"), qk = /* @__PURE__ */ s(
  (e, t) => {
    let r = t.colon || pK, n = e.match(/\//) || Ks && e.match(/\\/) ? [""] : [
      // windows always checks the cwd first
      ...Ks ? [process.cwd()] : [],
      ...(t.path || process.env.PATH || /* istanbul ignore next: very unusual */
      "").split(r)
    ], i = Ks ? t.pathExt || process.env.PATHEXT || ".EXE;.CMD;.BAT;.COM" : "", o = Ks ? i.split(r) : [""];
    return Ks && e.indexOf(".") !== -1 && o[0] !== "" && o.unshift(""), {
      pathEnv: n,
      pathExt: o,
      pathExtExe: i
    };
  }, "getPathInfo"), $k = /* @__PURE__ */ s((e, t, r) => {
    typeof t == "function" && (r = t, t = {}), t || (t = {});
    let { pathEnv: n, pathExt: i, pathExtExe: o } = qk(e, t), a = [], u = /* @__PURE__ */ s((c) => new Promise((p, h) => {
      if (c === n.length)
        return t.all && a.length ? p(a) : h(Mk(e));
      let f = n[c], d = /^".*"$/.test(f) ? f.slice(1, -1) : f, m = Lk.join(d, e), g = !d && /^\.[\\\/]/.test(e) ? e.slice(0, 2) + m : m;
      p(l(g, c, 0));
    }), "step"), l = /* @__PURE__ */ s((c, p, h) => new Promise((f, d) => {
      if (h === i.length)
        return f(u(p + 1));
      let m = i[h];
      jk(c + m, { pathExt: o }, (g, b) => {
        if (!g && b)
          if (t.all)
            a.push(c + m);
          else
            return f(c + m);
        return f(l(c, p, h + 1));
      });
    }), "subStep");
    return r ? u(0).then((c) => r(null, c), r) : u(0);
  }, "which"), hK = /* @__PURE__ */ s((e, t) => {
    t = t || {};
    let { pathEnv: r, pathExt: n, pathExtExe: i } = qk(e, t), o = [];
    for (let a = 0; a < r.length; a++) {
      let u = r[a], l = /^".*"$/.test(u) ? u.slice(1, -1) : u, c = Lk.join(l, e), p = !l && /^\.[\\\/]/.test(e) ? e.slice(0, 2) + c : c;
      for (let h = 0; h < n.length; h++) {
        let f = p + n[h];
        try {
          if (jk.sync(f, { pathExt: i }))
            if (t.all)
              o.push(f);
            else
              return f;
        } catch {
        }
      }
    }
    if (t.all && o.length)
      return o;
    if (t.nothrow)
      return null;
    throw Mk(e);
  }, "whichSync");
  Vk.exports = $k;
  $k.sync = hK;
});

// ../node_modules/path-key/index.js
var zk = I((Rye, d0) => {
  "use strict";
  var Wk = /* @__PURE__ */ s((e = {}) => {
    let t = e.env || process.env;
    return (e.platform || process.platform) !== "win32" ? "PATH" : Object.keys(t).reverse().find((n) => n.toUpperCase() === "PATH") || "Path";
  }, "pathKey");
  d0.exports = Wk;
  d0.exports.default = Wk;
});

// ../node_modules/cross-spawn/lib/util/resolveCommand.js
var Zk = I((Lye, Jk) => {
  "use strict";
  var Hk = H("path"), fK = Uk(), dK = zk();
  function Gk(e, t) {
    let r = e.options.env || process.env, n = process.cwd(), i = e.options.cwd != null, o = i && process.chdir !== void 0 && !process.chdir.
    disabled;
    if (o)
      try {
        process.chdir(e.options.cwd);
      } catch {
      }
    let a;
    try {
      a = fK.sync(e.command, {
        path: r[dK({ env: r })],
        pathExt: t ? Hk.delimiter : void 0
      });
    } catch {
    } finally {
      o && process.chdir(n);
    }
    return a && (a = Hk.resolve(i ? e.options.cwd : "", a)), a;
  }
  s(Gk, "resolveCommandAttempt");
  function mK(e) {
    return Gk(e) || Gk(e, !0);
  }
  s(mK, "resolveCommand");
  Jk.exports = mK;
});

// ../node_modules/cross-spawn/lib/util/escape.js
var Xk = I((Mye, g0) => {
  "use strict";
  var m0 = /([()\][%!^"`<>&|;, *?])/g;
  function gK(e) {
    return e = e.replace(m0, "^$1"), e;
  }
  s(gK, "escapeCommand");
  function yK(e, t) {
    return e = `${e}`, e = e.replace(/(?=(\\+?)?)\1"/g, '$1$1\\"'), e = e.replace(/(?=(\\+?)?)\1$/, "$1$1"), e = `"${e}"`, e = e.replace(m0,
    "^$1"), t && (e = e.replace(m0, "^$1")), e;
  }
  s(yK, "escapeArgument");
  g0.exports.command = gK;
  g0.exports.argument = yK;
});

// ../node_modules/shebang-regex/index.js
var Yk = I(($ye, Kk) => {
  "use strict";
  Kk.exports = /^#!(.*)/;
});

// ../node_modules/shebang-command/index.js
var eT = I((Vye, Qk) => {
  "use strict";
  var DK = Yk();
  Qk.exports = (e = "") => {
    let t = e.match(DK);
    if (!t)
      return null;
    let [r, n] = t[0].replace(/#! ?/, "").split(" "), i = r.split("/").pop();
    return i === "env" ? n : n ? `${i} ${n}` : i;
  };
});

// ../node_modules/cross-spawn/lib/util/readShebang.js
var rT = I((Uye, tT) => {
  "use strict";
  var y0 = H("fs"), xK = eT();
  function bK(e) {
    let r = Buffer.alloc(150), n;
    try {
      n = y0.openSync(e, "r"), y0.readSync(n, r, 0, 150, 0), y0.closeSync(n);
    } catch {
    }
    return xK(r.toString());
  }
  s(bK, "readShebang");
  tT.exports = bK;
});

// ../node_modules/cross-spawn/lib/parse.js
var oT = I((zye, sT) => {
  "use strict";
  var vK = H("path"), nT = Zk(), iT = Xk(), EK = rT(), CK = process.platform === "win32", wK = /\.(?:com|exe)$/i, SK = /node_modules[\\/].bin[\\/][^\\/]+\.cmd$/i;
  function AK(e) {
    e.file = nT(e);
    let t = e.file && EK(e.file);
    return t ? (e.args.unshift(e.file), e.command = t, nT(e)) : e.file;
  }
  s(AK, "detectShebang");
  function FK(e) {
    if (!CK)
      return e;
    let t = AK(e), r = !wK.test(t);
    if (e.options.forceShell || r) {
      let n = SK.test(t);
      e.command = vK.normalize(e.command), e.command = iT.command(e.command), e.args = e.args.map((o) => iT.argument(o, n));
      let i = [e.command].concat(e.args).join(" ");
      e.args = ["/d", "/s", "/c", `"${i}"`], e.command = process.env.comspec || "cmd.exe", e.options.windowsVerbatimArguments = !0;
    }
    return e;
  }
  s(FK, "parseNonShell");
  function _K(e, t, r) {
    t && !Array.isArray(t) && (r = t, t = null), t = t ? t.slice(0) : [], r = Object.assign({}, r);
    let n = {
      command: e,
      args: t,
      options: r,
      file: void 0,
      original: {
        command: e,
        args: t
      }
    };
    return r.shell ? n : FK(n);
  }
  s(_K, "parse");
  sT.exports = _K;
});

// ../node_modules/cross-spawn/lib/enoent.js
var lT = I((Gye, uT) => {
  "use strict";
  var D0 = process.platform === "win32";
  function x0(e, t) {
    return Object.assign(new Error(`${t} ${e.command} ENOENT`), {
      code: "ENOENT",
      errno: "ENOENT",
      syscall: `${t} ${e.command}`,
      path: e.command,
      spawnargs: e.args
    });
  }
  s(x0, "notFoundError");
  function kK(e, t) {
    if (!D0)
      return;
    let r = e.emit;
    e.emit = function(n, i) {
      if (n === "exit") {
        let o = aT(i, t);
        if (o)
          return r.call(e, "error", o);
      }
      return r.apply(e, arguments);
    };
  }
  s(kK, "hookChildProcess");
  function aT(e, t) {
    return D0 && e === 1 && !t.file ? x0(t.original, "spawn") : null;
  }
  s(aT, "verifyENOENT");
  function TK(e, t) {
    return D0 && e === 1 && !t.file ? x0(t.original, "spawnSync") : null;
  }
  s(TK, "verifyENOENTSync");
  uT.exports = {
    hookChildProcess: kK,
    verifyENOENT: aT,
    verifyENOENTSync: TK,
    notFoundError: x0
  };
});

// ../node_modules/cross-spawn/index.js
var hT = I((Zye, Ys) => {
  "use strict";
  var cT = H("child_process"), b0 = oT(), v0 = lT();
  function pT(e, t, r) {
    let n = b0(e, t, r), i = cT.spawn(n.command, n.args, n.options);
    return v0.hookChildProcess(i, n), i;
  }
  s(pT, "spawn");
  function IK(e, t, r) {
    let n = b0(e, t, r), i = cT.spawnSync(n.command, n.args, n.options);
    return i.error = i.error || v0.verifyENOENTSync(i.status, n), i;
  }
  s(IK, "spawnSync");
  Ys.exports = pT;
  Ys.exports.spawn = pT;
  Ys.exports.sync = IK;
  Ys.exports._parse = b0;
  Ys.exports._enoent = v0;
});

// ../node_modules/merge-stream/index.js
var MT = I((vxe, jT) => {
  "use strict";
  var { PassThrough: kY } = H("stream");
  jT.exports = function() {
    var e = [], t = new kY({ objectMode: !0 });
    return t.setMaxListeners(0), t.add = r, t.isEmpty = n, t.on("unpipe", i), Array.prototype.slice.call(arguments).forEach(r), t;
    function r(o) {
      return Array.isArray(o) ? (o.forEach(r), this) : (e.push(o), o.once("end", i.bind(null, o)), o.once("error", t.emit.bind(t, "error")),
      o.pipe(t, { end: !1 }), this);
    }
    s(r, "add");
    function n() {
      return e.length == 0;
    }
    s(n, "isEmpty");
    function i(o) {
      e = e.filter(function(a) {
        return a !== o;
      }), !e.length && t.readable && t.end();
    }
    s(i, "remove");
  };
});

// ../node_modules/common-path-prefix/index.js
var cI = I((mbe, lI) => {
  "use strict";
  var { sep: sQ } = H("path"), oQ = /* @__PURE__ */ s((e) => {
    for (let t of e) {
      let r = /(\/|\\)/.exec(t);
      if (r !== null) return r[0];
    }
    return sQ;
  }, "determineSeparator");
  lI.exports = /* @__PURE__ */ s(function(t, r = oQ(t)) {
    let [n = "", ...i] = t;
    if (n === "" || i.length === 0) return "";
    let o = n.split(r), a = o.length;
    for (let l of i) {
      let c = l.split(r);
      for (let p = 0; p < a; p++)
        c[p] !== o[p] && (a = p);
      if (a === 0) return "";
    }
    let u = o.slice(0, a).join(r);
    return u.endsWith(r) ? u : u + r;
  }, "commonPathPrefix");
});

// ../node_modules/fetch-retry/index.js
var jI = I((i1e, LI) => {
  "use strict";
  LI.exports = function(e, t) {
    if (t = t || {}, typeof e != "function")
      throw new ii("fetch must be a function");
    if (typeof t != "object")
      throw new ii("defaults must be an object");
    if (t.retries !== void 0 && !qc(t.retries))
      throw new ii("retries must be a positive integer");
    if (t.retryDelay !== void 0 && !qc(t.retryDelay) && typeof t.retryDelay != "function")
      throw new ii("retryDelay must be a positive integer or a function returning a positive integer");
    if (t.retryOn !== void 0 && !Array.isArray(t.retryOn) && typeof t.retryOn != "function")
      throw new ii("retryOn property expects an array or function");
    var r = {
      retries: 3,
      retryDelay: 1e3,
      retryOn: []
    };
    return t = Object.assign(r, t), /* @__PURE__ */ s(function(i, o) {
      var a = t.retries, u = t.retryDelay, l = t.retryOn;
      if (o && o.retries !== void 0)
        if (qc(o.retries))
          a = o.retries;
        else
          throw new ii("retries must be a positive integer");
      if (o && o.retryDelay !== void 0)
        if (qc(o.retryDelay) || typeof o.retryDelay == "function")
          u = o.retryDelay;
        else
          throw new ii("retryDelay must be a positive integer or a function returning a positive integer");
      if (o && o.retryOn)
        if (Array.isArray(o.retryOn) || typeof o.retryOn == "function")
          l = o.retryOn;
        else
          throw new ii("retryOn property expects an array or function");
      return new Promise(function(c, p) {
        var h = /* @__PURE__ */ s(function(d) {
          var m = typeof Request < "u" && i instanceof Request ? i.clone() : i;
          e(m, o).then(function(g) {
            if (Array.isArray(l) && l.indexOf(g.status) === -1)
              c(g);
            else if (typeof l == "function")
              try {
                return Promise.resolve(l(d, null, g)).then(function(b) {
                  b ? f(d, null, g) : c(g);
                }).catch(p);
              } catch (b) {
                p(b);
              }
            else
              d < a ? f(d, null, g) : c(g);
          }).catch(function(g) {
            if (typeof l == "function")
              try {
                Promise.resolve(l(d, g, null)).then(function(b) {
                  b ? f(d, g, null) : p(g);
                }).catch(function(b) {
                  p(b);
                });
              } catch (b) {
                p(b);
              }
            else d < a ? f(d, g, null) : p(g);
          });
        }, "wrappedFetch");
        function f(d, m, g) {
          var b = typeof u == "function" ? u(d, m, g) : u;
          setTimeout(function() {
            h(++d);
          }, b);
        }
        s(f, "retry"), h(0);
      });
    }, "fetchRetry");
  };
  function qc(e) {
    return Number.isInteger(e) && e >= 0;
  }
  s(qc, "isPositiveInteger");
  function ii(e) {
    this.name = "ArgumentError", this.message = e;
  }
  s(ii, "ArgumentError");
});

// ../node_modules/telejson/dist/index.js
var PP = I((hCe, IP) => {
  "use strict";
  var bee = Object.create, Uc = Object.defineProperty, vee = Object.getOwnPropertyDescriptor, uP = Object.getOwnPropertyNames, Eee = Object.
  getPrototypeOf, Cee = Object.prototype.hasOwnProperty, ke = /* @__PURE__ */ s((e, t) => /* @__PURE__ */ s(function() {
    return t || (0, e[uP(e)[0]])((t = { exports: {} }).exports, t), t.exports;
  }, "__require"), "__commonJS"), wee = /* @__PURE__ */ s((e, t) => {
    for (var r in t)
      Uc(e, r, { get: t[r], enumerable: !0 });
  }, "__export"), lP = /* @__PURE__ */ s((e, t, r, n) => {
    if (t && typeof t == "object" || typeof t == "function")
      for (let i of uP(t))
        !Cee.call(e, i) && i !== r && Uc(e, i, { get: /* @__PURE__ */ s(() => t[i], "get"), enumerable: !(n = vee(t, i)) || n.enumerable });
    return e;
  }, "__copyProps"), py = /* @__PURE__ */ s((e, t, r) => (r = e != null ? bee(Eee(e)) : {}, lP(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    t || !e || !e.__esModule ? Uc(r, "default", { value: e, enumerable: !0 }) : r,
    e
  )), "__toESM"), See = /* @__PURE__ */ s((e) => lP(Uc({}, "__esModule", { value: !0 }), e), "__toCommonJS"), cP = ke({
    "node_modules/.pnpm/es-object-atoms@1.1.1/node_modules/es-object-atoms/index.js"(e, t) {
      "use strict";
      t.exports = Object;
    }
  }), Aee = ke({
    "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/index.js"(e, t) {
      "use strict";
      t.exports = Error;
    }
  }), Fee = ke({
    "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/eval.js"(e, t) {
      "use strict";
      t.exports = EvalError;
    }
  }), _ee = ke({
    "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/range.js"(e, t) {
      "use strict";
      t.exports = RangeError;
    }
  }), kee = ke({
    "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/ref.js"(e, t) {
      "use strict";
      t.exports = ReferenceError;
    }
  }), Tee = ke({
    "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/syntax.js"(e, t) {
      "use strict";
      t.exports = SyntaxError;
    }
  }), hy = ke({
    "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/type.js"(e, t) {
      "use strict";
      t.exports = TypeError;
    }
  }), Iee = ke({
    "node_modules/.pnpm/es-errors@1.3.0/node_modules/es-errors/uri.js"(e, t) {
      "use strict";
      t.exports = URIError;
    }
  }), Pee = ke({
    "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/abs.js"(e, t) {
      "use strict";
      t.exports = Math.abs;
    }
  }), Bee = ke({
    "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/floor.js"(e, t) {
      "use strict";
      t.exports = Math.floor;
    }
  }), Oee = ke({
    "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/max.js"(e, t) {
      "use strict";
      t.exports = Math.max;
    }
  }), Ree = ke({
    "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/min.js"(e, t) {
      "use strict";
      t.exports = Math.min;
    }
  }), Nee = ke({
    "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/pow.js"(e, t) {
      "use strict";
      t.exports = Math.pow;
    }
  }), Lee = ke({
    "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/round.js"(e, t) {
      "use strict";
      t.exports = Math.round;
    }
  }), jee = ke({
    "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/isNaN.js"(e, t) {
      "use strict";
      t.exports = Number.isNaN || /* @__PURE__ */ s(function(n) {
        return n !== n;
      }, "isNaN2");
    }
  }), Mee = ke({
    "node_modules/.pnpm/math-intrinsics@1.1.0/node_modules/math-intrinsics/sign.js"(e, t) {
      "use strict";
      var r = jee();
      t.exports = /* @__PURE__ */ s(function(i) {
        return r(i) || i === 0 ? i : i < 0 ? -1 : 1;
      }, "sign");
    }
  }), qee = ke({
    "node_modules/.pnpm/gopd@1.2.0/node_modules/gopd/gOPD.js"(e, t) {
      "use strict";
      t.exports = Object.getOwnPropertyDescriptor;
    }
  }), fy = ke({
    "node_modules/.pnpm/gopd@1.2.0/node_modules/gopd/index.js"(e, t) {
      "use strict";
      var r = qee();
      if (r)
        try {
          r([], "length");
        } catch {
          r = null;
        }
      t.exports = r;
    }
  }), $ee = ke({
    "node_modules/.pnpm/es-define-property@1.0.1/node_modules/es-define-property/index.js"(e, t) {
      "use strict";
      var r = Object.defineProperty || !1;
      if (r)
        try {
          r({}, "a", { value: 1 });
        } catch {
          r = !1;
        }
      t.exports = r;
    }
  }), pP = ke({
    "node_modules/.pnpm/has-symbols@1.1.0/node_modules/has-symbols/shams.js"(e, t) {
      "use strict";
      t.exports = /* @__PURE__ */ s(function() {
        if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function")
          return !1;
        if (typeof Symbol.iterator == "symbol")
          return !0;
        var n = {}, i = Symbol("test"), o = Object(i);
        if (typeof i == "string" || Object.prototype.toString.call(i) !== "[object Symbol]" || Object.prototype.toString.call(o) !== "[objec\
t Symbol]")
          return !1;
        var a = 42;
        n[i] = a;
        for (var u in n)
          return !1;
        if (typeof Object.keys == "function" && Object.keys(n).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(
        n).length !== 0)
          return !1;
        var l = Object.getOwnPropertySymbols(n);
        if (l.length !== 1 || l[0] !== i || !Object.prototype.propertyIsEnumerable.call(n, i))
          return !1;
        if (typeof Object.getOwnPropertyDescriptor == "function") {
          var c = (
            /** @type {PropertyDescriptor} */
            Object.getOwnPropertyDescriptor(n, i)
          );
          if (c.value !== a || c.enumerable !== !0)
            return !1;
        }
        return !0;
      }, "hasSymbols");
    }
  }), hP = ke({
    "node_modules/.pnpm/has-symbols@1.1.0/node_modules/has-symbols/index.js"(e, t) {
      "use strict";
      var r = typeof Symbol < "u" && Symbol, n = pP();
      t.exports = /* @__PURE__ */ s(function() {
        return typeof r != "function" || typeof Symbol != "function" || typeof r("foo") != "symbol" || typeof Symbol("bar") != "symbol" ? !1 :
        n();
      }, "hasNativeSymbols");
    }
  }), fP = ke({
    "node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/Reflect.getPrototypeOf.js"(e, t) {
      "use strict";
      t.exports = typeof Reflect < "u" && Reflect.getPrototypeOf || null;
    }
  }), dP = ke({
    "node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/Object.getPrototypeOf.js"(e, t) {
      "use strict";
      var r = cP();
      t.exports = r.getPrototypeOf || null;
    }
  }), Vee = ke({
    "node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/implementation.js"(e, t) {
      "use strict";
      var r = "Function.prototype.bind called on incompatible ", n = Object.prototype.toString, i = Math.max, o = "[object Function]", a = /* @__PURE__ */ s(
      function(p, h) {
        for (var f = [], d = 0; d < p.length; d += 1)
          f[d] = p[d];
        for (var m = 0; m < h.length; m += 1)
          f[m + p.length] = h[m];
        return f;
      }, "concatty2"), u = /* @__PURE__ */ s(function(p, h) {
        for (var f = [], d = h || 0, m = 0; d < p.length; d += 1, m += 1)
          f[m] = p[d];
        return f;
      }, "slicy2"), l = /* @__PURE__ */ s(function(c, p) {
        for (var h = "", f = 0; f < c.length; f += 1)
          h += c[f], f + 1 < c.length && (h += p);
        return h;
      }, "joiny");
      t.exports = /* @__PURE__ */ s(function(p) {
        var h = this;
        if (typeof h != "function" || n.apply(h) !== o)
          throw new TypeError(r + h);
        for (var f = u(arguments, 1), d, m = /* @__PURE__ */ s(function() {
          if (this instanceof d) {
            var A = h.apply(
              this,
              a(f, arguments)
            );
            return Object(A) === A ? A : this;
          }
          return h.apply(
            p,
            a(f, arguments)
          );
        }, "binder"), g = i(0, h.length - f.length), b = [], y = 0; y < g; y++)
          b[y] = "$" + y;
        if (d = Function("binder", "return function (" + l(b, ",") + "){ return binder.apply(this,arguments); }")(m), h.prototype) {
          var E = /* @__PURE__ */ s(function() {
          }, "Empty2");
          E.prototype = h.prototype, d.prototype = new E(), E.prototype = null;
        }
        return d;
      }, "bind");
    }
  }), Wc = ke({
    "node_modules/.pnpm/function-bind@1.1.2/node_modules/function-bind/index.js"(e, t) {
      "use strict";
      var r = Vee();
      t.exports = Function.prototype.bind || r;
    }
  }), dy = ke({
    "node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/functionCall.js"(e, t) {
      "use strict";
      t.exports = Function.prototype.call;
    }
  }), mP = ke({
    "node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/functionApply.js"(e, t) {
      "use strict";
      t.exports = Function.prototype.apply;
    }
  }), Uee = ke({
    "node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/reflectApply.js"(e, t) {
      "use strict";
      t.exports = typeof Reflect < "u" && Reflect && Reflect.apply;
    }
  }), Wee = ke({
    "node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/actualApply.js"(e, t) {
      "use strict";
      var r = Wc(), n = mP(), i = dy(), o = Uee();
      t.exports = o || r.call(i, n);
    }
  }), gP = ke({
    "node_modules/.pnpm/call-bind-apply-helpers@1.0.2/node_modules/call-bind-apply-helpers/index.js"(e, t) {
      "use strict";
      var r = Wc(), n = hy(), i = dy(), o = Wee();
      t.exports = /* @__PURE__ */ s(function(u) {
        if (u.length < 1 || typeof u[0] != "function")
          throw new n("a function is required");
        return o(r, i, u);
      }, "callBindBasic");
    }
  }), zee = ke({
    "node_modules/.pnpm/dunder-proto@1.0.1/node_modules/dunder-proto/get.js"(e, t) {
      "use strict";
      var r = gP(), n = fy(), i;
      try {
        i = /** @type {{ __proto__?: typeof Array.prototype }} */
        [].__proto__ === Array.prototype;
      } catch (l) {
        if (!l || typeof l != "object" || !("code" in l) || l.code !== "ERR_PROTO_ACCESS")
          throw l;
      }
      var o = !!i && n && n(
        Object.prototype,
        /** @type {keyof typeof Object.prototype} */
        "__proto__"
      ), a = Object, u = a.getPrototypeOf;
      t.exports = o && typeof o.get == "function" ? r([o.get]) : typeof u == "function" ? (
        /** @type {import('./get')} */
        /* @__PURE__ */ s(function(c) {
          return u(c == null ? c : a(c));
        }, "getDunder")
      ) : !1;
    }
  }), Hee = ke({
    "node_modules/.pnpm/get-proto@1.0.1/node_modules/get-proto/index.js"(e, t) {
      "use strict";
      var r = fP(), n = dP(), i = zee();
      t.exports = r ? /* @__PURE__ */ s(function(a) {
        return r(a);
      }, "getProto") : n ? /* @__PURE__ */ s(function(a) {
        if (!a || typeof a != "object" && typeof a != "function")
          throw new TypeError("getProto: not an object");
        return n(a);
      }, "getProto") : i ? /* @__PURE__ */ s(function(a) {
        return i(a);
      }, "getProto") : null;
    }
  }), yP = ke({
    "node_modules/.pnpm/hasown@2.0.2/node_modules/hasown/index.js"(e, t) {
      "use strict";
      var r = Function.prototype.call, n = Object.prototype.hasOwnProperty, i = Wc();
      t.exports = i.call(r, n);
    }
  }), Gee = ke({
    "node_modules/.pnpm/get-intrinsic@1.3.0/node_modules/get-intrinsic/index.js"(e, t) {
      "use strict";
      var r, n = cP(), i = Aee(), o = Fee(), a = _ee(), u = kee(), l = Tee(), c = hy(), p = Iee(), h = Pee(), f = Bee(), d = Oee(), m = Ree(),
      g = Nee(), b = Lee(), y = Mee(), E = Function, A = /* @__PURE__ */ s(function(K) {
        try {
          return E('"use strict"; return (' + K + ").constructor;")();
        } catch {
        }
      }, "getEvalledConstructor"), k = fy(), O = $ee(), w = /* @__PURE__ */ s(function() {
        throw new c();
      }, "throwTypeError"), C = k ? function() {
        try {
          return arguments.callee, w;
        } catch {
          try {
            return k(arguments, "callee").get;
          } catch {
            return w;
          }
        }
      }() : w, T = hP()(), F = Hee(), $ = dP(), R = fP(), U = mP(), W = dy(), Y = {}, j = typeof Uint8Array > "u" || !F ? r : F(Uint8Array),
      N = {
        __proto__: null,
        "%AggregateError%": typeof AggregateError > "u" ? r : AggregateError,
        "%Array%": Array,
        "%ArrayBuffer%": typeof ArrayBuffer > "u" ? r : ArrayBuffer,
        "%ArrayIteratorPrototype%": T && F ? F([][Symbol.iterator]()) : r,
        "%AsyncFromSyncIteratorPrototype%": r,
        "%AsyncFunction%": Y,
        "%AsyncGenerator%": Y,
        "%AsyncGeneratorFunction%": Y,
        "%AsyncIteratorPrototype%": Y,
        "%Atomics%": typeof Atomics > "u" ? r : Atomics,
        "%BigInt%": typeof BigInt > "u" ? r : BigInt,
        "%BigInt64Array%": typeof BigInt64Array > "u" ? r : BigInt64Array,
        "%BigUint64Array%": typeof BigUint64Array > "u" ? r : BigUint64Array,
        "%Boolean%": Boolean,
        "%DataView%": typeof DataView > "u" ? r : DataView,
        "%Date%": Date,
        "%decodeURI%": decodeURI,
        "%decodeURIComponent%": decodeURIComponent,
        "%encodeURI%": encodeURI,
        "%encodeURIComponent%": encodeURIComponent,
        "%Error%": i,
        "%eval%": eval,
        // eslint-disable-line no-eval
        "%EvalError%": o,
        "%Float16Array%": typeof Float16Array > "u" ? r : Float16Array,
        "%Float32Array%": typeof Float32Array > "u" ? r : Float32Array,
        "%Float64Array%": typeof Float64Array > "u" ? r : Float64Array,
        "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? r : FinalizationRegistry,
        "%Function%": E,
        "%GeneratorFunction%": Y,
        "%Int8Array%": typeof Int8Array > "u" ? r : Int8Array,
        "%Int16Array%": typeof Int16Array > "u" ? r : Int16Array,
        "%Int32Array%": typeof Int32Array > "u" ? r : Int32Array,
        "%isFinite%": isFinite,
        "%isNaN%": isNaN,
        "%IteratorPrototype%": T && F ? F(F([][Symbol.iterator]())) : r,
        "%JSON%": typeof JSON == "object" ? JSON : r,
        "%Map%": typeof Map > "u" ? r : Map,
        "%MapIteratorPrototype%": typeof Map > "u" || !T || !F ? r : F((/* @__PURE__ */ new Map())[Symbol.iterator]()),
        "%Math%": Math,
        "%Number%": Number,
        "%Object%": n,
        "%Object.getOwnPropertyDescriptor%": k,
        "%parseFloat%": parseFloat,
        "%parseInt%": parseInt,
        "%Promise%": typeof Promise > "u" ? r : Promise,
        "%Proxy%": typeof Proxy > "u" ? r : Proxy,
        "%RangeError%": a,
        "%ReferenceError%": u,
        "%Reflect%": typeof Reflect > "u" ? r : Reflect,
        "%RegExp%": RegExp,
        "%Set%": typeof Set > "u" ? r : Set,
        "%SetIteratorPrototype%": typeof Set > "u" || !T || !F ? r : F((/* @__PURE__ */ new Set())[Symbol.iterator]()),
        "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? r : SharedArrayBuffer,
        "%String%": String,
        "%StringIteratorPrototype%": T && F ? F(""[Symbol.iterator]()) : r,
        "%Symbol%": T ? Symbol : r,
        "%SyntaxError%": l,
        "%ThrowTypeError%": C,
        "%TypedArray%": j,
        "%TypeError%": c,
        "%Uint8Array%": typeof Uint8Array > "u" ? r : Uint8Array,
        "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? r : Uint8ClampedArray,
        "%Uint16Array%": typeof Uint16Array > "u" ? r : Uint16Array,
        "%Uint32Array%": typeof Uint32Array > "u" ? r : Uint32Array,
        "%URIError%": p,
        "%WeakMap%": typeof WeakMap > "u" ? r : WeakMap,
        "%WeakRef%": typeof WeakRef > "u" ? r : WeakRef,
        "%WeakSet%": typeof WeakSet > "u" ? r : WeakSet,
        "%Function.prototype.call%": W,
        "%Function.prototype.apply%": U,
        "%Object.defineProperty%": O,
        "%Object.getPrototypeOf%": $,
        "%Math.abs%": h,
        "%Math.floor%": f,
        "%Math.max%": d,
        "%Math.min%": m,
        "%Math.pow%": g,
        "%Math.round%": b,
        "%Math.sign%": y,
        "%Reflect.getPrototypeOf%": R
      };
      if (F)
        try {
          null.error;
        } catch (K) {
          z = F(F(K)), N["%Error.prototype%"] = z;
        }
      var z, Q = /* @__PURE__ */ s(function K(se) {
        var ye;
        if (se === "%AsyncFunction%")
          ye = A("async function () {}");
        else if (se === "%GeneratorFunction%")
          ye = A("function* () {}");
        else if (se === "%AsyncGeneratorFunction%")
          ye = A("async function* () {}");
        else if (se === "%AsyncGenerator%") {
          var ve = K("%AsyncGeneratorFunction%");
          ve && (ye = ve.prototype);
        } else if (se === "%AsyncIteratorPrototype%") {
          var Ce = K("%AsyncGenerator%");
          Ce && F && (ye = F(Ce.prototype));
        }
        return N[se] = ye, ye;
      }, "doEval2"), ie = {
        __proto__: null,
        "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
        "%ArrayPrototype%": ["Array", "prototype"],
        "%ArrayProto_entries%": ["Array", "prototype", "entries"],
        "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
        "%ArrayProto_keys%": ["Array", "prototype", "keys"],
        "%ArrayProto_values%": ["Array", "prototype", "values"],
        "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
        "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
        "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
        "%BooleanPrototype%": ["Boolean", "prototype"],
        "%DataViewPrototype%": ["DataView", "prototype"],
        "%DatePrototype%": ["Date", "prototype"],
        "%ErrorPrototype%": ["Error", "prototype"],
        "%EvalErrorPrototype%": ["EvalError", "prototype"],
        "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
        "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
        "%FunctionPrototype%": ["Function", "prototype"],
        "%Generator%": ["GeneratorFunction", "prototype"],
        "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
        "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
        "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
        "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
        "%JSONParse%": ["JSON", "parse"],
        "%JSONStringify%": ["JSON", "stringify"],
        "%MapPrototype%": ["Map", "prototype"],
        "%NumberPrototype%": ["Number", "prototype"],
        "%ObjectPrototype%": ["Object", "prototype"],
        "%ObjProto_toString%": ["Object", "prototype", "toString"],
        "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
        "%PromisePrototype%": ["Promise", "prototype"],
        "%PromiseProto_then%": ["Promise", "prototype", "then"],
        "%Promise_all%": ["Promise", "all"],
        "%Promise_reject%": ["Promise", "reject"],
        "%Promise_resolve%": ["Promise", "resolve"],
        "%RangeErrorPrototype%": ["RangeError", "prototype"],
        "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
        "%RegExpPrototype%": ["RegExp", "prototype"],
        "%SetPrototype%": ["Set", "prototype"],
        "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
        "%StringPrototype%": ["String", "prototype"],
        "%SymbolPrototype%": ["Symbol", "prototype"],
        "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
        "%TypedArrayPrototype%": ["TypedArray", "prototype"],
        "%TypeErrorPrototype%": ["TypeError", "prototype"],
        "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
        "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
        "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
        "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
        "%URIErrorPrototype%": ["URIError", "prototype"],
        "%WeakMapPrototype%": ["WeakMap", "prototype"],
        "%WeakSetPrototype%": ["WeakSet", "prototype"]
      }, B = Wc(), ce = yP(), Je = B.call(W, Array.prototype.concat), L = B.call(U, Array.prototype.splice), Ue = B.call(W, String.prototype.
      replace), Ve = B.call(W, String.prototype.slice), ge = B.call(W, RegExp.prototype.exec), _t = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,
      qe = /\\(\\)?/g, re = /* @__PURE__ */ s(function(se) {
        var ye = Ve(se, 0, 1), ve = Ve(se, -1);
        if (ye === "%" && ve !== "%")
          throw new l("invalid intrinsic syntax, expected closing `%`");
        if (ve === "%" && ye !== "%")
          throw new l("invalid intrinsic syntax, expected opening `%`");
        var Ce = [];
        return Ue(se, _t, function(rt, vt, We, rr) {
          Ce[Ce.length] = We ? Ue(rr, qe, "$1") : vt || rt;
        }), Ce;
      }, "stringToPath3"), be = /* @__PURE__ */ s(function(se, ye) {
        var ve = se, Ce;
        if (ce(ie, ve) && (Ce = ie[ve], ve = "%" + Ce[0] + "%"), ce(N, ve)) {
          var rt = N[ve];
          if (rt === Y && (rt = Q(ve)), typeof rt > "u" && !ye)
            throw new c("intrinsic " + se + " exists, but is not available. Please file an issue!");
          return {
            alias: Ce,
            name: ve,
            value: rt
          };
        }
        throw new l("intrinsic " + se + " does not exist!");
      }, "getBaseIntrinsic2");
      t.exports = /* @__PURE__ */ s(function(se, ye) {
        if (typeof se != "string" || se.length === 0)
          throw new c("intrinsic name must be a non-empty string");
        if (arguments.length > 1 && typeof ye != "boolean")
          throw new c('"allowMissing" argument must be a boolean');
        if (ge(/^%?[^%]*%?$/, se) === null)
          throw new l("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
        var ve = re(se), Ce = ve.length > 0 ? ve[0] : "", rt = be("%" + Ce + "%", ye), vt = rt.name, We = rt.value, rr = !1, nr = rt.alias;
        nr && (Ce = nr[0], L(ve, Je([0, 1], nr)));
        for (var Sr = 1, pe = !0; Sr < ve.length; Sr += 1) {
          var Ye = ve[Sr], x = Ve(Ye, 0, 1), D = Ve(Ye, -1);
          if ((x === '"' || x === "'" || x === "`" || D === '"' || D === "'" || D === "`") && x !== D)
            throw new l("property names with quotes must have matching quotes");
          if ((Ye === "constructor" || !pe) && (rr = !0), Ce += "." + Ye, vt = "%" + Ce + "%", ce(N, vt))
            We = N[vt];
          else if (We != null) {
            if (!(Ye in We)) {
              if (!ye)
                throw new c("base intrinsic for " + se + " exists, but the property is not available.");
              return;
            }
            if (k && Sr + 1 >= ve.length) {
              var _ = k(We, Ye);
              pe = !!_, pe && "get" in _ && !("originalValue" in _.get) ? We = _.get : We = We[Ye];
            } else
              pe = ce(We, Ye), We = We[Ye];
            pe && !rr && (N[vt] = We);
          }
        }
        return We;
      }, "GetIntrinsic");
    }
  }), my = ke({
    "node_modules/.pnpm/call-bound@1.0.4/node_modules/call-bound/index.js"(e, t) {
      "use strict";
      var r = Gee(), n = gP(), i = n([r("%String.prototype.indexOf%")]);
      t.exports = /* @__PURE__ */ s(function(a, u) {
        var l = (
          /** @type {(this: unknown, ...args: unknown[]) => unknown} */
          r(a, !!u)
        );
        return typeof l == "function" && i(a, ".prototype.") > -1 ? n(
          /** @type {const} */
          [l]
        ) : l;
      }, "callBoundIntrinsic");
    }
  }), Jee = ke({
    "node_modules/.pnpm/has-tostringtag@1.0.2/node_modules/has-tostringtag/shams.js"(e, t) {
      "use strict";
      var r = pP();
      t.exports = /* @__PURE__ */ s(function() {
        return r() && !!Symbol.toStringTag;
      }, "hasToStringTagShams");
    }
  }), DP = ke({
    "node_modules/.pnpm/is-regex@1.2.1/node_modules/is-regex/index.js"(e, t) {
      "use strict";
      var r = my(), n = Jee()(), i = yP(), o = fy(), a;
      n ? (u = r("RegExp.prototype.exec"), l = {}, c = /* @__PURE__ */ s(function() {
        throw l;
      }, "throwRegexMarker"), p = {
        toString: c,
        valueOf: c
      }, typeof Symbol.toPrimitive == "symbol" && (p[Symbol.toPrimitive] = c), a = /* @__PURE__ */ s(function(m) {
        if (!m || typeof m != "object")
          return !1;
        var g = (
          /** @type {NonNullable<typeof gOPD>} */
          o(
            /** @type {{ lastIndex?: unknown }} */
            m,
            "lastIndex"
          )
        ), b = g && i(g, "value");
        if (!b)
          return !1;
        try {
          u(
            m,
            /** @type {string} */
            /** @type {unknown} */
            p
          );
        } catch (y) {
          return y === l;
        }
      }, "isRegex")) : (h = r("Object.prototype.toString"), f = "[object RegExp]", a = /* @__PURE__ */ s(function(m) {
        return !m || typeof m != "object" && typeof m != "function" ? !1 : h(m) === f;
      }, "isRegex"));
      var u, l, c, p, h, f;
      t.exports = a;
    }
  }), Zee = ke({
    "node_modules/.pnpm/is-function@1.0.2/node_modules/is-function/index.js"(e, t) {
      t.exports = n;
      var r = Object.prototype.toString;
      function n(i) {
        if (!i)
          return !1;
        var o = r.call(i);
        return o === "[object Function]" || typeof i == "function" && o !== "[object RegExp]" || typeof window < "u" && // IE8 and below
        (i === window.setTimeout || i === window.alert || i === window.confirm || i === window.prompt);
      }
      s(n, "isFunction3");
    }
  }), Xee = ke({
    "node_modules/.pnpm/safe-regex-test@1.1.0/node_modules/safe-regex-test/index.js"(e, t) {
      "use strict";
      var r = my(), n = DP(), i = r("RegExp.prototype.exec"), o = hy();
      t.exports = /* @__PURE__ */ s(function(u) {
        if (!n(u))
          throw new o("`regex` must be a RegExp");
        return /* @__PURE__ */ s(function(c) {
          return i(u, c) !== null;
        }, "test");
      }, "regexTester");
    }
  }), Kee = ke({
    "node_modules/.pnpm/is-symbol@1.1.1/node_modules/is-symbol/index.js"(e, t) {
      "use strict";
      var r = my(), n = r("Object.prototype.toString"), i = hP()(), o = Xee();
      i ? (a = r("Symbol.prototype.toString"), u = o(/^Symbol\(.*\)$/), l = /* @__PURE__ */ s(function(p) {
        return typeof p.valueOf() != "symbol" ? !1 : u(a(p));
      }, "isRealSymbolObject"), t.exports = /* @__PURE__ */ s(function(p) {
        if (typeof p == "symbol")
          return !0;
        if (!p || typeof p != "object" || n(p) !== "[object Symbol]")
          return !1;
        try {
          return l(p);
        } catch {
          return !1;
        }
      }, "isSymbol3")) : t.exports = /* @__PURE__ */ s(function(p) {
        return !1;
      }, "isSymbol3");
      var a, u, l;
    }
  }), xP = {};
  wee(xP, {
    isJSON: /* @__PURE__ */ s(() => AP, "isJSON"),
    parse: /* @__PURE__ */ s(() => Cne, "parse"),
    replacer: /* @__PURE__ */ s(() => _P, "replacer"),
    reviver: /* @__PURE__ */ s(() => kP, "reviver"),
    stringify: /* @__PURE__ */ s(() => vne, "stringify")
  });
  IP.exports = See(xP);
  var Yee = py(DP()), Qee = py(Zee()), ete = py(Kee());
  function tte(e) {
    return e != null && typeof e == "object" && Array.isArray(e) === !1;
  }
  s(tte, "isObject");
  var rte = typeof global == "object" && global && global.Object === Object && global, nte = rte, ite = typeof self == "object" && self && self.
  Object === Object && self, ste = nte || ite || Function("return this")(), gy = ste, ote = gy.Symbol, eo = ote, bP = Object.prototype, ate = bP.
  hasOwnProperty, ute = bP.toString, Oa = eo ? eo.toStringTag : void 0;
  function lte(e) {
    var t = ate.call(e, Oa), r = e[Oa];
    try {
      e[Oa] = void 0;
      var n = !0;
    } catch {
    }
    var i = ute.call(e);
    return n && (t ? e[Oa] = r : delete e[Oa]), i;
  }
  s(lte, "getRawTag");
  var cte = lte, pte = Object.prototype, hte = pte.toString;
  function fte(e) {
    return hte.call(e);
  }
  s(fte, "objectToString");
  var dte = fte, mte = "[object Null]", gte = "[object Undefined]", nP = eo ? eo.toStringTag : void 0;
  function yte(e) {
    return e == null ? e === void 0 ? gte : mte : nP && nP in Object(e) ? cte(e) : dte(e);
  }
  s(yte, "baseGetTag");
  var vP = yte;
  function Dte(e) {
    return e != null && typeof e == "object";
  }
  s(Dte, "isObjectLike");
  var xte = Dte, bte = "[object Symbol]";
  function vte(e) {
    return typeof e == "symbol" || xte(e) && vP(e) == bte;
  }
  s(vte, "isSymbol");
  var yy = vte;
  function Ete(e, t) {
    for (var r = -1, n = e == null ? 0 : e.length, i = Array(n); ++r < n; )
      i[r] = t(e[r], r, e);
    return i;
  }
  s(Ete, "arrayMap");
  var Cte = Ete, wte = Array.isArray, Dy = wte, Ste = 1 / 0, iP = eo ? eo.prototype : void 0, sP = iP ? iP.toString : void 0;
  function EP(e) {
    if (typeof e == "string")
      return e;
    if (Dy(e))
      return Cte(e, EP) + "";
    if (yy(e))
      return sP ? sP.call(e) : "";
    var t = e + "";
    return t == "0" && 1 / e == -Ste ? "-0" : t;
  }
  s(EP, "baseToString");
  var Ate = EP;
  function Fte(e) {
    var t = typeof e;
    return e != null && (t == "object" || t == "function");
  }
  s(Fte, "isObject2");
  var CP = Fte, _te = "[object AsyncFunction]", kte = "[object Function]", Tte = "[object GeneratorFunction]", Ite = "[object Proxy]";
  function Pte(e) {
    if (!CP(e))
      return !1;
    var t = vP(e);
    return t == kte || t == Tte || t == _te || t == Ite;
  }
  s(Pte, "isFunction");
  var Bte = Pte, Ote = gy["__core-js_shared__"], cy = Ote, oP = function() {
    var e = /[^.]+$/.exec(cy && cy.keys && cy.keys.IE_PROTO || "");
    return e ? "Symbol(src)_1." + e : "";
  }();
  function Rte(e) {
    return !!oP && oP in e;
  }
  s(Rte, "isMasked");
  var Nte = Rte, Lte = Function.prototype, jte = Lte.toString;
  function Mte(e) {
    if (e != null) {
      try {
        return jte.call(e);
      } catch {
      }
      try {
        return e + "";
      } catch {
      }
    }
    return "";
  }
  s(Mte, "toSource");
  var qte = Mte, $te = /[\\^$.*+?()[\]{}|]/g, Vte = /^\[object .+?Constructor\]$/, Ute = Function.prototype, Wte = Object.prototype, zte = Ute.
  toString, Hte = Wte.hasOwnProperty, Gte = RegExp(
    "^" + zte.call(Hte).replace($te, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
  );
  function Jte(e) {
    if (!CP(e) || Nte(e))
      return !1;
    var t = Bte(e) ? Gte : Vte;
    return t.test(qte(e));
  }
  s(Jte, "baseIsNative");
  var Zte = Jte;
  function Xte(e, t) {
    return e?.[t];
  }
  s(Xte, "getValue");
  var Kte = Xte;
  function Yte(e, t) {
    var r = Kte(e, t);
    return Zte(r) ? r : void 0;
  }
  s(Yte, "getNative");
  var wP = Yte;
  function Qte(e, t) {
    return e === t || e !== e && t !== t;
  }
  s(Qte, "eq");
  var ere = Qte, tre = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, rre = /^\w*$/;
  function nre(e, t) {
    if (Dy(e))
      return !1;
    var r = typeof e;
    return r == "number" || r == "symbol" || r == "boolean" || e == null || yy(e) ? !0 : rre.test(e) || !tre.test(e) || t != null && e in Object(
    t);
  }
  s(nre, "isKey");
  var ire = nre, sre = wP(Object, "create"), Ra = sre;
  function ore() {
    this.__data__ = Ra ? Ra(null) : {}, this.size = 0;
  }
  s(ore, "hashClear");
  var are = ore;
  function ure(e) {
    var t = this.has(e) && delete this.__data__[e];
    return this.size -= t ? 1 : 0, t;
  }
  s(ure, "hashDelete");
  var lre = ure, cre = "__lodash_hash_undefined__", pre = Object.prototype, hre = pre.hasOwnProperty;
  function fre(e) {
    var t = this.__data__;
    if (Ra) {
      var r = t[e];
      return r === cre ? void 0 : r;
    }
    return hre.call(t, e) ? t[e] : void 0;
  }
  s(fre, "hashGet");
  var dre = fre, mre = Object.prototype, gre = mre.hasOwnProperty;
  function yre(e) {
    var t = this.__data__;
    return Ra ? t[e] !== void 0 : gre.call(t, e);
  }
  s(yre, "hashHas");
  var Dre = yre, xre = "__lodash_hash_undefined__";
  function bre(e, t) {
    var r = this.__data__;
    return this.size += this.has(e) ? 0 : 1, r[e] = Ra && t === void 0 ? xre : t, this;
  }
  s(bre, "hashSet");
  var vre = bre;
  function to(e) {
    var t = -1, r = e == null ? 0 : e.length;
    for (this.clear(); ++t < r; ) {
      var n = e[t];
      this.set(n[0], n[1]);
    }
  }
  s(to, "Hash");
  to.prototype.clear = are;
  to.prototype.delete = lre;
  to.prototype.get = dre;
  to.prototype.has = Dre;
  to.prototype.set = vre;
  var aP = to;
  function Ere() {
    this.__data__ = [], this.size = 0;
  }
  s(Ere, "listCacheClear");
  var Cre = Ere;
  function wre(e, t) {
    for (var r = e.length; r--; )
      if (ere(e[r][0], t))
        return r;
    return -1;
  }
  s(wre, "assocIndexOf");
  var zc = wre, Sre = Array.prototype, Are = Sre.splice;
  function Fre(e) {
    var t = this.__data__, r = zc(t, e);
    if (r < 0)
      return !1;
    var n = t.length - 1;
    return r == n ? t.pop() : Are.call(t, r, 1), --this.size, !0;
  }
  s(Fre, "listCacheDelete");
  var _re = Fre;
  function kre(e) {
    var t = this.__data__, r = zc(t, e);
    return r < 0 ? void 0 : t[r][1];
  }
  s(kre, "listCacheGet");
  var Tre = kre;
  function Ire(e) {
    return zc(this.__data__, e) > -1;
  }
  s(Ire, "listCacheHas");
  var Pre = Ire;
  function Bre(e, t) {
    var r = this.__data__, n = zc(r, e);
    return n < 0 ? (++this.size, r.push([e, t])) : r[n][1] = t, this;
  }
  s(Bre, "listCacheSet");
  var Ore = Bre;
  function ro(e) {
    var t = -1, r = e == null ? 0 : e.length;
    for (this.clear(); ++t < r; ) {
      var n = e[t];
      this.set(n[0], n[1]);
    }
  }
  s(ro, "ListCache");
  ro.prototype.clear = Cre;
  ro.prototype.delete = _re;
  ro.prototype.get = Tre;
  ro.prototype.has = Pre;
  ro.prototype.set = Ore;
  var Rre = ro, Nre = wP(gy, "Map"), Lre = Nre;
  function jre() {
    this.size = 0, this.__data__ = {
      hash: new aP(),
      map: new (Lre || Rre)(),
      string: new aP()
    };
  }
  s(jre, "mapCacheClear");
  var Mre = jre;
  function qre(e) {
    var t = typeof e;
    return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? e !== "__proto__" : e === null;
  }
  s(qre, "isKeyable");
  var $re = qre;
  function Vre(e, t) {
    var r = e.__data__;
    return $re(t) ? r[typeof t == "string" ? "string" : "hash"] : r.map;
  }
  s(Vre, "getMapData");
  var Hc = Vre;
  function Ure(e) {
    var t = Hc(this, e).delete(e);
    return this.size -= t ? 1 : 0, t;
  }
  s(Ure, "mapCacheDelete");
  var Wre = Ure;
  function zre(e) {
    return Hc(this, e).get(e);
  }
  s(zre, "mapCacheGet");
  var Hre = zre;
  function Gre(e) {
    return Hc(this, e).has(e);
  }
  s(Gre, "mapCacheHas");
  var Jre = Gre;
  function Zre(e, t) {
    var r = Hc(this, e), n = r.size;
    return r.set(e, t), this.size += r.size == n ? 0 : 1, this;
  }
  s(Zre, "mapCacheSet");
  var Xre = Zre;
  function no(e) {
    var t = -1, r = e == null ? 0 : e.length;
    for (this.clear(); ++t < r; ) {
      var n = e[t];
      this.set(n[0], n[1]);
    }
  }
  s(no, "MapCache");
  no.prototype.clear = Mre;
  no.prototype.delete = Wre;
  no.prototype.get = Hre;
  no.prototype.has = Jre;
  no.prototype.set = Xre;
  var SP = no, Kre = "Expected a function";
  function xy(e, t) {
    if (typeof e != "function" || t != null && typeof t != "function")
      throw new TypeError(Kre);
    var r = /* @__PURE__ */ s(function() {
      var n = arguments, i = t ? t.apply(this, n) : n[0], o = r.cache;
      if (o.has(i))
        return o.get(i);
      var a = e.apply(this, n);
      return r.cache = o.set(i, a) || o, a;
    }, "memoized");
    return r.cache = new (xy.Cache || SP)(), r;
  }
  s(xy, "memoize");
  xy.Cache = SP;
  var Yre = xy, Qre = 500;
  function ene(e) {
    var t = Yre(e, function(n) {
      return r.size === Qre && r.clear(), n;
    }), r = t.cache;
    return t;
  }
  s(ene, "memoizeCapped");
  var tne = ene, rne = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, nne = /\\(\\)?/g,
  ine = tne(function(e) {
    var t = [];
    return e.charCodeAt(0) === 46 && t.push(""), e.replace(rne, function(r, n, i, o) {
      t.push(i ? o.replace(nne, "$1") : n || r);
    }), t;
  }), sne = ine;
  function one(e) {
    return e == null ? "" : Ate(e);
  }
  s(one, "toString");
  var ane = one;
  function une(e, t) {
    return Dy(e) ? e : ire(e, t) ? [e] : sne(ane(e));
  }
  s(une, "castPath");
  var lne = une, cne = 1 / 0;
  function pne(e) {
    if (typeof e == "string" || yy(e))
      return e;
    var t = e + "";
    return t == "0" && 1 / e == -cne ? "-0" : t;
  }
  s(pne, "toKey");
  var hne = pne;
  function fne(e, t) {
    t = lne(t, e);
    for (var r = 0, n = t.length; e != null && r < n; )
      e = e[hne(t[r++])];
    return r && r == n ? e : void 0;
  }
  s(fne, "baseGet");
  var dne = fne;
  function mne(e, t, r) {
    var n = e == null ? void 0 : dne(e, t);
    return n === void 0 ? r : n;
  }
  s(mne, "get");
  var gne = mne, yne = [
    "bubbles",
    "cancelBubble",
    "cancelable",
    "composed",
    "currentTarget",
    "defaultPrevented",
    "eventPhase",
    "isTrusted",
    "returnValue",
    "srcElement",
    "target",
    "timeStamp",
    "type"
  ], Dne = ["detail"];
  function xne(e) {
    let t = yne.filter((r) => e[r] !== void 0).reduce((r, n) => (r[n] = e[n], r), {});
    if (e instanceof CustomEvent)
      for (let r of Dne.filter(
        (n) => e[n] !== void 0
      ))
        t[r] = e[r];
    return t;
  }
  s(xne, "extractEventHiddenProperties");
  var by = tte, bne = /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d{3})?Z$/, AP = /* @__PURE__ */ s((e) => e.match(/^[\[\{\"\}].*[\]\}\"]$/), "\
isJSON");
  function FP(e) {
    if (!by(e))
      return e;
    let t = e, r = !1;
    return typeof Event < "u" && e instanceof Event && (t = xne(t), r = !0), t = Object.keys(t).reduce((n, i) => {
      try {
        t[i] && t[i].toJSON, n[i] = t[i];
      } catch {
        r = !0;
      }
      return n;
    }, {}), r ? t : e;
  }
  s(FP, "convertUnconventionalData");
  var _P = /* @__PURE__ */ s(function(t) {
    let r, n, i, o;
    return /* @__PURE__ */ s(function(u, l) {
      try {
        if (u === "")
          return o = [], r = /* @__PURE__ */ new Map([[l, "[]"]]), n = /* @__PURE__ */ new Map(), i = [], l;
        let c = n.get(this) || this;
        for (; i.length && c !== i[0]; )
          i.shift(), o.pop();
        if (typeof l == "boolean")
          return l;
        if (l === void 0)
          return t.allowUndefined ? "_undefined_" : void 0;
        if (l === null)
          return null;
        if (typeof l == "number")
          return l === Number.NEGATIVE_INFINITY ? "_-Infinity_" : l === Number.POSITIVE_INFINITY ? "_Infinity_" : Number.isNaN(l) ? "_NaN_" :
          l;
        if (typeof l == "bigint")
          return `_bigint_${l.toString()}`;
        if (typeof l == "string")
          return bne.test(l) ? t.allowDate ? `_date_${l}` : void 0 : l;
        if ((0, Yee.default)(l))
          return t.allowRegExp ? `_regexp_${l.flags}|${l.source}` : void 0;
        if ((0, Qee.default)(l))
          return;
        if ((0, ete.default)(l)) {
          if (!t.allowSymbol)
            return;
          let h = Symbol.keyFor(l);
          return h !== void 0 ? `_gsymbol_${h}` : `_symbol_${l.toString().slice(7, -1)}`;
        }
        if (i.length >= t.maxDepth)
          return Array.isArray(l) ? `[Array(${l.length})]` : "[Object]";
        if (l === this)
          return `_duplicate_${JSON.stringify(o)}`;
        if (l instanceof Error && t.allowError)
          return {
            __isConvertedError__: !0,
            errorProperties: {
              // @ts-expect-error cause is not defined in the current tsconfig target(es2020)
              ...l.cause ? { cause: l.cause } : {},
              ...l,
              name: l.name,
              message: l.message,
              stack: l.stack,
              "_constructor-name_": l.constructor.name
            }
          };
        if (l?.constructor?.name && l.constructor.name !== "Object" && !Array.isArray(l)) {
          let h = r.get(l);
          if (!h) {
            let f = {
              __isClassInstance__: !0,
              __className__: l.constructor.name,
              ...Object.getOwnPropertyNames(l).reduce(
                (d, m) => {
                  try {
                    d[m] = l[m];
                  } catch {
                  }
                  return d;
                },
                {}
              )
            };
            return o.push(u), i.unshift(f), r.set(l, JSON.stringify(o)), l !== f && n.set(l, f), f;
          }
          return `_duplicate_${h}`;
        }
        let p = r.get(l);
        if (!p) {
          let h = Array.isArray(l) ? l : FP(l);
          return o.push(u), i.unshift(h), r.set(l, JSON.stringify(o)), l !== h && n.set(l, h), h;
        }
        return `_duplicate_${p}`;
      } catch {
        return;
      }
    }, "replace");
  }, "replacer2"), kP = /* @__PURE__ */ s(function(t) {
    let r = [], n;
    return /* @__PURE__ */ s(function(o, a) {
      if (o === "" && (n = a, r.forEach(({ target: u, container: l, replacement: c }) => {
        let p = AP(c) ? JSON.parse(c) : c.split(".");
        p.length === 0 ? l[u] = n : l[u] = gne(n, p);
      })), o === "_constructor-name_")
        return a;
      if (by(a) && a.__isConvertedError__) {
        let { message: u, ...l } = a.errorProperties, c = new Error(u);
        return Object.assign(c, l), c;
      }
      if (typeof a == "string" && a.startsWith("_regexp_") && t.allowRegExp) {
        let [, u, l] = a.match(/_regexp_([^|]*)\|(.*)/) || [];
        return new RegExp(l, u);
      }
      return typeof a == "string" && a.startsWith("_date_") && t.allowDate ? new Date(a.replace("_date_", "")) : typeof a == "string" && a.startsWith(
      "_duplicate_") ? (r.push({ target: o, container: this, replacement: a.replace(/^_duplicate_/, "") }), null) : typeof a == "string" && a.
      startsWith("_symbol_") && t.allowSymbol ? Symbol(a.replace("_symbol_", "")) : typeof a == "string" && a.startsWith("_gsymbol_") && t.allowSymbol ?
      Symbol.for(a.replace("_gsymbol_", "")) : typeof a == "string" && a === "_-Infinity_" ? Number.NEGATIVE_INFINITY : typeof a == "string" &&
      a === "_Infinity_" ? Number.POSITIVE_INFINITY : typeof a == "string" && a === "_NaN_" ? Number.NaN : typeof a == "string" && a.startsWith(
      "_bigint_") && typeof BigInt == "function" ? BigInt(a.replace("_bigint_", "")) : a;
    }, "revive");
  }, "reviver2"), TP = {
    maxDepth: 10,
    space: void 0,
    allowRegExp: !0,
    allowDate: !0,
    allowError: !0,
    allowUndefined: !0,
    allowSymbol: !0
  }, vne = /* @__PURE__ */ s((e, t = {}) => {
    let r = { ...TP, ...t };
    return JSON.stringify(FP(e), _P(r), t.space);
  }, "stringify"), Ene = /* @__PURE__ */ s(() => {
    let e = /* @__PURE__ */ new Map();
    return /* @__PURE__ */ s(function t(r) {
      by(r) && Object.entries(r).forEach(([n, i]) => {
        i === "_undefined_" ? r[n] = void 0 : e.get(i) || (e.set(i, !0), t(i));
      }), Array.isArray(r) && r.forEach((n, i) => {
        n === "_undefined_" ? (e.set(n, !0), r[i] = void 0) : e.get(n) || (e.set(n, !0), t(n));
      });
    }, "mutateUndefined");
  }, "mutator"), Cne = /* @__PURE__ */ s((e, t = {}) => {
    let r = { ...TP, ...t }, n = JSON.parse(e, kP(r));
    return Ene()(n), n;
  }, "parse");
});

// ../node_modules/@aw-web-design/x-default-browser/src/common-name.js
var Na = I((OCe, jP) => {
  jP.exports = function(e) {
    return e.isEdge ? "edge" : e.isIE ? "ie" : e.isFirefox ? "firefox" : e.isChrome ? "chrome" : e.isChromium ? "chromium" : e.isOpera ? "op\
era" : e.isSafari ? "safari" : "unknown";
  };
});

// ../node_modules/@aw-web-design/x-default-browser/src/detect-windows10.js
var qP = I((RCe, MP) => {
  var Pne = H("child_process").exec;
  MP.exports = function(e) {
    var t = "HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\Shell\\Associations\\URLAssociations\\http\\UserChoice", r = "reg query " + t +
    ' | findstr "ProgId"';
    Pne(r, function(n, i, o) {
      var a;
      if (n) {
        if (o.length > 0)
          return e("Unable to execute the query: " + n);
        a = "iexplore.exe";
      }
      if (!a) {
        i = i.trim().replace(/\s\s+/g, " ");
        var u = i.split(" ");
        a = u[2].toLowerCase();
      }
      var l = {
        isEdge: a.indexOf("app") > -1,
        // AppXq0fevzme2pys62n3e0fbqa7peapykr8v
        isIE: a.indexOf("ie.http") > -1,
        // IE.HTTP
        isSafari: a.indexOf("safari") > -1,
        // SafariURL
        isFirefox: a.indexOf("firefox") > -1,
        // FirefoxURL
        isChrome: a.indexOf("chrome") > -1,
        // ChromeHTML
        isChromium: a.indexOf("chromium") > -1,
        isOpera: a.indexOf("opera") > -1,
        // OperaHTML
        identity: a
      };
      l.isBlink = l.isChrome || l.isChromium || l.isOpera, l.isWebkit = l.isSafari || l.isBlink, l.commonName = Na()(l), e(null, l);
    });
  };
});

// ../node_modules/@aw-web-design/x-default-browser/src/detect-windows.js
var VP = I((NCe, $P) => {
  var Bne = H("child_process").exec;
  $P.exports = function(e) {
    var t = "HKCU\\Software\\Clients\\StartMenuInternet", r = "reg query " + t + ' | findstr "REG_SZ"';
    Bne(r, function(n, i, o) {
      var a;
      if (n) {
        if (o.length > 0)
          return e("Unable to execute the query: " + n);
        a = "iexplore.exe";
      }
      if (!a) {
        i = i.replace("NO NAME", "NONAME");
        var u = i.trim().split(/(\t| +)/);
        a = (u[4] + (u[5] || "") + (u[6] || "")).toLowerCase();
      }
      var l = {
        isIE: a.indexOf("iexplore") > -1,
        // IEXPLORE.EXE             / -
        isSafari: a.indexOf("safari") > -1,
        // Safari.exe
        // works also for nightly
        isFirefox: a.indexOf("firefox") > -1,
        // FIREFOX.EXE              / "C:\Program Files (x86)\Mozilla Firefox\firefox.exe" -osint -url "%1"
        // note that both chrome and chromium are chrome.exe! we can't look for 'chrome' hence
        isChrome: a.indexOf("google") > -1,
        // Google Chrome            / "C:\Program Files (x86)\Google\Chrome\Application\chrome.exe" -- "%1"
        isChromium: a.indexOf("chromium") > -1,
        // Chromium.<randomstring>  / "C:\Users\<username>\AppData\Local\Chromium\Application\chrome.exe" -- "%1"
        isOpera: a.indexOf("opera") > -1,
        // OperaStable              / "C:\Program Files (x86)\Opera\launcher.exe" -noautoupdate -- "%1"
        identity: a
      };
      l.isBlink = l.isChrome || l.isChromium || l.isOpera, l.isWebkit = l.isSafari || l.isBlink, l.commonName = Na()(l), e(null, l);
    });
  };
});

// ../node_modules/big-integer/BigInteger.js
var UP = I((LCe, Gc) => {
  var mt = function(e) {
    "use strict";
    var t = 1e7, r = 7, n = 9007199254740992, i = f(n), o = "0123456789abcdefghijklmnopqrstuvwxyz", a = typeof BigInt == "function";
    function u(x, D, _, P) {
      return typeof x > "u" ? u[0] : typeof D < "u" ? +D == 10 && !_ ? pe(x) : Ce(x, D, _, P) : pe(x);
    }
    s(u, "Integer");
    function l(x, D) {
      this.value = x, this.sign = D, this.isSmall = !1;
    }
    s(l, "BigInteger"), l.prototype = Object.create(u.prototype);
    function c(x) {
      this.value = x, this.sign = x < 0, this.isSmall = !0;
    }
    s(c, "SmallInteger"), c.prototype = Object.create(u.prototype);
    function p(x) {
      this.value = x;
    }
    s(p, "NativeBigInt"), p.prototype = Object.create(u.prototype);
    function h(x) {
      return -n < x && x < n;
    }
    s(h, "isPrecise");
    function f(x) {
      return x < 1e7 ? [x] : x < 1e14 ? [x % 1e7, Math.floor(x / 1e7)] : [x % 1e7, Math.floor(x / 1e7) % 1e7, Math.floor(x / 1e14)];
    }
    s(f, "smallToArray");
    function d(x) {
      m(x);
      var D = x.length;
      if (D < 4 && Q(x, i) < 0)
        switch (D) {
          case 0:
            return 0;
          case 1:
            return x[0];
          case 2:
            return x[0] + x[1] * t;
          default:
            return x[0] + (x[1] + x[2] * t) * t;
        }
      return x;
    }
    s(d, "arrayToSmall");
    function m(x) {
      for (var D = x.length; x[--D] === 0; ) ;
      x.length = D + 1;
    }
    s(m, "trim");
    function g(x) {
      for (var D = new Array(x), _ = -1; ++_ < x; )
        D[_] = 0;
      return D;
    }
    s(g, "createArray");
    function b(x) {
      return x > 0 ? Math.floor(x) : Math.ceil(x);
    }
    s(b, "truncate");
    function y(x, D) {
      var _ = x.length, P = D.length, v = new Array(_), M = 0, G = t, J, Z;
      for (Z = 0; Z < P; Z++)
        J = x[Z] + D[Z] + M, M = J >= G ? 1 : 0, v[Z] = J - M * G;
      for (; Z < _; )
        J = x[Z] + M, M = J === G ? 1 : 0, v[Z++] = J - M * G;
      return M > 0 && v.push(M), v;
    }
    s(y, "add");
    function E(x, D) {
      return x.length >= D.length ? y(x, D) : y(D, x);
    }
    s(E, "addAny");
    function A(x, D) {
      var _ = x.length, P = new Array(_), v = t, M, G;
      for (G = 0; G < _; G++)
        M = x[G] - v + D, D = Math.floor(M / v), P[G] = M - D * v, D += 1;
      for (; D > 0; )
        P[G++] = D % v, D = Math.floor(D / v);
      return P;
    }
    s(A, "addSmall"), l.prototype.add = function(x) {
      var D = pe(x);
      if (this.sign !== D.sign)
        return this.subtract(D.negate());
      var _ = this.value, P = D.value;
      return D.isSmall ? new l(A(_, Math.abs(P)), this.sign) : new l(E(_, P), this.sign);
    }, l.prototype.plus = l.prototype.add, c.prototype.add = function(x) {
      var D = pe(x), _ = this.value;
      if (_ < 0 !== D.sign)
        return this.subtract(D.negate());
      var P = D.value;
      if (D.isSmall) {
        if (h(_ + P)) return new c(_ + P);
        P = f(Math.abs(P));
      }
      return new l(A(P, Math.abs(_)), _ < 0);
    }, c.prototype.plus = c.prototype.add, p.prototype.add = function(x) {
      return new p(this.value + pe(x).value);
    }, p.prototype.plus = p.prototype.add;
    function k(x, D) {
      var _ = x.length, P = D.length, v = new Array(_), M = 0, G = t, J, Z;
      for (J = 0; J < P; J++)
        Z = x[J] - M - D[J], Z < 0 ? (Z += G, M = 1) : M = 0, v[J] = Z;
      for (J = P; J < _; J++) {
        if (Z = x[J] - M, Z < 0) Z += G;
        else {
          v[J++] = Z;
          break;
        }
        v[J] = Z;
      }
      for (; J < _; J++)
        v[J] = x[J];
      return m(v), v;
    }
    s(k, "subtract");
    function O(x, D, _) {
      var P;
      return Q(x, D) >= 0 ? P = k(x, D) : (P = k(D, x), _ = !_), P = d(P), typeof P == "number" ? (_ && (P = -P), new c(P)) : new l(P, _);
    }
    s(O, "subtractAny");
    function w(x, D, _) {
      var P = x.length, v = new Array(P), M = -D, G = t, J, Z;
      for (J = 0; J < P; J++)
        Z = x[J] + M, M = Math.floor(Z / G), Z %= G, v[J] = Z < 0 ? Z + G : Z;
      return v = d(v), typeof v == "number" ? (_ && (v = -v), new c(v)) : new l(v, _);
    }
    s(w, "subtractSmall"), l.prototype.subtract = function(x) {
      var D = pe(x);
      if (this.sign !== D.sign)
        return this.add(D.negate());
      var _ = this.value, P = D.value;
      return D.isSmall ? w(_, Math.abs(P), this.sign) : O(_, P, this.sign);
    }, l.prototype.minus = l.prototype.subtract, c.prototype.subtract = function(x) {
      var D = pe(x), _ = this.value;
      if (_ < 0 !== D.sign)
        return this.add(D.negate());
      var P = D.value;
      return D.isSmall ? new c(_ - P) : w(P, Math.abs(_), _ >= 0);
    }, c.prototype.minus = c.prototype.subtract, p.prototype.subtract = function(x) {
      return new p(this.value - pe(x).value);
    }, p.prototype.minus = p.prototype.subtract, l.prototype.negate = function() {
      return new l(this.value, !this.sign);
    }, c.prototype.negate = function() {
      var x = this.sign, D = new c(-this.value);
      return D.sign = !x, D;
    }, p.prototype.negate = function() {
      return new p(-this.value);
    }, l.prototype.abs = function() {
      return new l(this.value, !1);
    }, c.prototype.abs = function() {
      return new c(Math.abs(this.value));
    }, p.prototype.abs = function() {
      return new p(this.value >= 0 ? this.value : -this.value);
    };
    function C(x, D) {
      var _ = x.length, P = D.length, v = _ + P, M = g(v), G = t, J, Z, de, Fe, he;
      for (de = 0; de < _; ++de) {
        Fe = x[de];
        for (var Te = 0; Te < P; ++Te)
          he = D[Te], J = Fe * he + M[de + Te], Z = Math.floor(J / G), M[de + Te] = J - Z * G, M[de + Te + 1] += Z;
      }
      return m(M), M;
    }
    s(C, "multiplyLong");
    function T(x, D) {
      var _ = x.length, P = new Array(_), v = t, M = 0, G, J;
      for (J = 0; J < _; J++)
        G = x[J] * D + M, M = Math.floor(G / v), P[J] = G - M * v;
      for (; M > 0; )
        P[J++] = M % v, M = Math.floor(M / v);
      return P;
    }
    s(T, "multiplySmall");
    function F(x, D) {
      for (var _ = []; D-- > 0; ) _.push(0);
      return _.concat(x);
    }
    s(F, "shiftLeft");
    function $(x, D) {
      var _ = Math.max(x.length, D.length);
      if (_ <= 30) return C(x, D);
      _ = Math.ceil(_ / 2);
      var P = x.slice(_), v = x.slice(0, _), M = D.slice(_), G = D.slice(0, _), J = $(v, G), Z = $(P, M), de = $(E(v, P), E(G, M)), Fe = E(E(
      J, F(k(k(de, J), Z), _)), F(Z, 2 * _));
      return m(Fe), Fe;
    }
    s($, "multiplyKaratsuba");
    function R(x, D) {
      return -0.012 * x - 0.012 * D + 15e-6 * x * D > 0;
    }
    s(R, "useKaratsuba"), l.prototype.multiply = function(x) {
      var D = pe(x), _ = this.value, P = D.value, v = this.sign !== D.sign, M;
      if (D.isSmall) {
        if (P === 0) return u[0];
        if (P === 1) return this;
        if (P === -1) return this.negate();
        if (M = Math.abs(P), M < t)
          return new l(T(_, M), v);
        P = f(M);
      }
      return R(_.length, P.length) ? new l($(_, P), v) : new l(C(_, P), v);
    }, l.prototype.times = l.prototype.multiply;
    function U(x, D, _) {
      return x < t ? new l(T(D, x), _) : new l(C(D, f(x)), _);
    }
    s(U, "multiplySmallAndArray"), c.prototype._multiplyBySmall = function(x) {
      return h(x.value * this.value) ? new c(x.value * this.value) : U(Math.abs(x.value), f(Math.abs(this.value)), this.sign !== x.sign);
    }, l.prototype._multiplyBySmall = function(x) {
      return x.value === 0 ? u[0] : x.value === 1 ? this : x.value === -1 ? this.negate() : U(Math.abs(x.value), this.value, this.sign !== x.
      sign);
    }, c.prototype.multiply = function(x) {
      return pe(x)._multiplyBySmall(this);
    }, c.prototype.times = c.prototype.multiply, p.prototype.multiply = function(x) {
      return new p(this.value * pe(x).value);
    }, p.prototype.times = p.prototype.multiply;
    function W(x) {
      var D = x.length, _ = g(D + D), P = t, v, M, G, J, Z;
      for (G = 0; G < D; G++) {
        J = x[G], M = 0 - J * J;
        for (var de = G; de < D; de++)
          Z = x[de], v = 2 * (J * Z) + _[G + de] + M, M = Math.floor(v / P), _[G + de] = v - M * P;
        _[G + D] = M;
      }
      return m(_), _;
    }
    s(W, "square"), l.prototype.square = function() {
      return new l(W(this.value), !1);
    }, c.prototype.square = function() {
      var x = this.value * this.value;
      return h(x) ? new c(x) : new l(W(f(Math.abs(this.value))), !1);
    }, p.prototype.square = function(x) {
      return new p(this.value * this.value);
    };
    function Y(x, D) {
      var _ = x.length, P = D.length, v = t, M = g(D.length), G = D[P - 1], J = Math.ceil(v / (2 * G)), Z = T(x, J), de = T(D, J), Fe, he, Te,
      nt, jt, gp, yp;
      for (Z.length <= _ && Z.push(0), de.push(0), G = de[P - 1], he = _ - P; he >= 0; he--) {
        for (Fe = v - 1, Z[he + P] !== G && (Fe = Math.floor((Z[he + P] * v + Z[he + P - 1]) / G)), Te = 0, nt = 0, gp = de.length, jt = 0; jt <
        gp; jt++)
          Te += Fe * de[jt], yp = Math.floor(Te / v), nt += Z[he + jt] - (Te - yp * v), Te = yp, nt < 0 ? (Z[he + jt] = nt + v, nt = -1) : (Z[he +
          jt] = nt, nt = 0);
        for (; nt !== 0; ) {
          for (Fe -= 1, Te = 0, jt = 0; jt < gp; jt++)
            Te += Z[he + jt] - v + de[jt], Te < 0 ? (Z[he + jt] = Te + v, Te = 0) : (Z[he + jt] = Te, Te = 1);
          nt += Te;
        }
        M[he] = Fe;
      }
      return Z = N(Z, J)[0], [d(M), d(Z)];
    }
    s(Y, "divMod1");
    function j(x, D) {
      for (var _ = x.length, P = D.length, v = [], M = [], G = t, J, Z, de, Fe, he; _; ) {
        if (M.unshift(x[--_]), m(M), Q(M, D) < 0) {
          v.push(0);
          continue;
        }
        Z = M.length, de = M[Z - 1] * G + M[Z - 2], Fe = D[P - 1] * G + D[P - 2], Z > P && (de = (de + 1) * G), J = Math.ceil(de / Fe);
        do {
          if (he = T(D, J), Q(he, M) <= 0) break;
          J--;
        } while (J);
        v.push(J), M = k(M, he);
      }
      return v.reverse(), [d(v), d(M)];
    }
    s(j, "divMod2");
    function N(x, D) {
      var _ = x.length, P = g(_), v = t, M, G, J, Z;
      for (J = 0, M = _ - 1; M >= 0; --M)
        Z = J * v + x[M], G = b(Z / D), J = Z - G * D, P[M] = G | 0;
      return [P, J | 0];
    }
    s(N, "divModSmall");
    function z(x, D) {
      var _, P = pe(D);
      if (a)
        return [new p(x.value / P.value), new p(x.value % P.value)];
      var v = x.value, M = P.value, G;
      if (M === 0) throw new Error("Cannot divide by zero");
      if (x.isSmall)
        return P.isSmall ? [new c(b(v / M)), new c(v % M)] : [u[0], x];
      if (P.isSmall) {
        if (M === 1) return [x, u[0]];
        if (M == -1) return [x.negate(), u[0]];
        var J = Math.abs(M);
        if (J < t) {
          _ = N(v, J), G = d(_[0]);
          var Z = _[1];
          return x.sign && (Z = -Z), typeof G == "number" ? (x.sign !== P.sign && (G = -G), [new c(G), new c(Z)]) : [new l(G, x.sign !== P.sign),
          new c(Z)];
        }
        M = f(J);
      }
      var de = Q(v, M);
      if (de === -1) return [u[0], x];
      if (de === 0) return [u[x.sign === P.sign ? 1 : -1], u[0]];
      v.length + M.length <= 200 ? _ = Y(v, M) : _ = j(v, M), G = _[0];
      var Fe = x.sign !== P.sign, he = _[1], Te = x.sign;
      return typeof G == "number" ? (Fe && (G = -G), G = new c(G)) : G = new l(G, Fe), typeof he == "number" ? (Te && (he = -he), he = new c(
      he)) : he = new l(he, Te), [G, he];
    }
    s(z, "divModAny"), l.prototype.divmod = function(x) {
      var D = z(this, x);
      return {
        quotient: D[0],
        remainder: D[1]
      };
    }, p.prototype.divmod = c.prototype.divmod = l.prototype.divmod, l.prototype.divide = function(x) {
      return z(this, x)[0];
    }, p.prototype.over = p.prototype.divide = function(x) {
      return new p(this.value / pe(x).value);
    }, c.prototype.over = c.prototype.divide = l.prototype.over = l.prototype.divide, l.prototype.mod = function(x) {
      return z(this, x)[1];
    }, p.prototype.mod = p.prototype.remainder = function(x) {
      return new p(this.value % pe(x).value);
    }, c.prototype.remainder = c.prototype.mod = l.prototype.remainder = l.prototype.mod, l.prototype.pow = function(x) {
      var D = pe(x), _ = this.value, P = D.value, v, M, G;
      if (P === 0) return u[1];
      if (_ === 0) return u[0];
      if (_ === 1) return u[1];
      if (_ === -1) return D.isEven() ? u[1] : u[-1];
      if (D.sign)
        return u[0];
      if (!D.isSmall) throw new Error("The exponent " + D.toString() + " is too large.");
      if (this.isSmall && h(v = Math.pow(_, P)))
        return new c(b(v));
      for (M = this, G = u[1]; P & !0 && (G = G.times(M), --P), P !== 0; )
        P /= 2, M = M.square();
      return G;
    }, c.prototype.pow = l.prototype.pow, p.prototype.pow = function(x) {
      var D = pe(x), _ = this.value, P = D.value, v = BigInt(0), M = BigInt(1), G = BigInt(2);
      if (P === v) return u[1];
      if (_ === v) return u[0];
      if (_ === M) return u[1];
      if (_ === BigInt(-1)) return D.isEven() ? u[1] : u[-1];
      if (D.isNegative()) return new p(v);
      for (var J = this, Z = u[1]; (P & M) === M && (Z = Z.times(J), --P), P !== v; )
        P /= G, J = J.square();
      return Z;
    }, l.prototype.modPow = function(x, D) {
      if (x = pe(x), D = pe(D), D.isZero()) throw new Error("Cannot take modPow with modulus 0");
      var _ = u[1], P = this.mod(D);
      for (x.isNegative() && (x = x.multiply(u[-1]), P = P.modInv(D)); x.isPositive(); ) {
        if (P.isZero()) return u[0];
        x.isOdd() && (_ = _.multiply(P).mod(D)), x = x.divide(2), P = P.square().mod(D);
      }
      return _;
    }, p.prototype.modPow = c.prototype.modPow = l.prototype.modPow;
    function Q(x, D) {
      if (x.length !== D.length)
        return x.length > D.length ? 1 : -1;
      for (var _ = x.length - 1; _ >= 0; _--)
        if (x[_] !== D[_]) return x[_] > D[_] ? 1 : -1;
      return 0;
    }
    s(Q, "compareAbs"), l.prototype.compareAbs = function(x) {
      var D = pe(x), _ = this.value, P = D.value;
      return D.isSmall ? 1 : Q(_, P);
    }, c.prototype.compareAbs = function(x) {
      var D = pe(x), _ = Math.abs(this.value), P = D.value;
      return D.isSmall ? (P = Math.abs(P), _ === P ? 0 : _ > P ? 1 : -1) : -1;
    }, p.prototype.compareAbs = function(x) {
      var D = this.value, _ = pe(x).value;
      return D = D >= 0 ? D : -D, _ = _ >= 0 ? _ : -_, D === _ ? 0 : D > _ ? 1 : -1;
    }, l.prototype.compare = function(x) {
      if (x === 1 / 0)
        return -1;
      if (x === -1 / 0)
        return 1;
      var D = pe(x), _ = this.value, P = D.value;
      return this.sign !== D.sign ? D.sign ? 1 : -1 : D.isSmall ? this.sign ? -1 : 1 : Q(_, P) * (this.sign ? -1 : 1);
    }, l.prototype.compareTo = l.prototype.compare, c.prototype.compare = function(x) {
      if (x === 1 / 0)
        return -1;
      if (x === -1 / 0)
        return 1;
      var D = pe(x), _ = this.value, P = D.value;
      return D.isSmall ? _ == P ? 0 : _ > P ? 1 : -1 : _ < 0 !== D.sign ? _ < 0 ? -1 : 1 : _ < 0 ? 1 : -1;
    }, c.prototype.compareTo = c.prototype.compare, p.prototype.compare = function(x) {
      if (x === 1 / 0)
        return -1;
      if (x === -1 / 0)
        return 1;
      var D = this.value, _ = pe(x).value;
      return D === _ ? 0 : D > _ ? 1 : -1;
    }, p.prototype.compareTo = p.prototype.compare, l.prototype.equals = function(x) {
      return this.compare(x) === 0;
    }, p.prototype.eq = p.prototype.equals = c.prototype.eq = c.prototype.equals = l.prototype.eq = l.prototype.equals, l.prototype.notEquals =
    function(x) {
      return this.compare(x) !== 0;
    }, p.prototype.neq = p.prototype.notEquals = c.prototype.neq = c.prototype.notEquals = l.prototype.neq = l.prototype.notEquals, l.prototype.
    greater = function(x) {
      return this.compare(x) > 0;
    }, p.prototype.gt = p.prototype.greater = c.prototype.gt = c.prototype.greater = l.prototype.gt = l.prototype.greater, l.prototype.lesser =
    function(x) {
      return this.compare(x) < 0;
    }, p.prototype.lt = p.prototype.lesser = c.prototype.lt = c.prototype.lesser = l.prototype.lt = l.prototype.lesser, l.prototype.greaterOrEquals =
    function(x) {
      return this.compare(x) >= 0;
    }, p.prototype.geq = p.prototype.greaterOrEquals = c.prototype.geq = c.prototype.greaterOrEquals = l.prototype.geq = l.prototype.greaterOrEquals,
    l.prototype.lesserOrEquals = function(x) {
      return this.compare(x) <= 0;
    }, p.prototype.leq = p.prototype.lesserOrEquals = c.prototype.leq = c.prototype.lesserOrEquals = l.prototype.leq = l.prototype.lesserOrEquals,
    l.prototype.isEven = function() {
      return (this.value[0] & 1) === 0;
    }, c.prototype.isEven = function() {
      return (this.value & 1) === 0;
    }, p.prototype.isEven = function() {
      return (this.value & BigInt(1)) === BigInt(0);
    }, l.prototype.isOdd = function() {
      return (this.value[0] & 1) === 1;
    }, c.prototype.isOdd = function() {
      return (this.value & 1) === 1;
    }, p.prototype.isOdd = function() {
      return (this.value & BigInt(1)) === BigInt(1);
    }, l.prototype.isPositive = function() {
      return !this.sign;
    }, c.prototype.isPositive = function() {
      return this.value > 0;
    }, p.prototype.isPositive = c.prototype.isPositive, l.prototype.isNegative = function() {
      return this.sign;
    }, c.prototype.isNegative = function() {
      return this.value < 0;
    }, p.prototype.isNegative = c.prototype.isNegative, l.prototype.isUnit = function() {
      return !1;
    }, c.prototype.isUnit = function() {
      return Math.abs(this.value) === 1;
    }, p.prototype.isUnit = function() {
      return this.abs().value === BigInt(1);
    }, l.prototype.isZero = function() {
      return !1;
    }, c.prototype.isZero = function() {
      return this.value === 0;
    }, p.prototype.isZero = function() {
      return this.value === BigInt(0);
    }, l.prototype.isDivisibleBy = function(x) {
      var D = pe(x);
      return D.isZero() ? !1 : D.isUnit() ? !0 : D.compareAbs(2) === 0 ? this.isEven() : this.mod(D).isZero();
    }, p.prototype.isDivisibleBy = c.prototype.isDivisibleBy = l.prototype.isDivisibleBy;
    function ie(x) {
      var D = x.abs();
      if (D.isUnit()) return !1;
      if (D.equals(2) || D.equals(3) || D.equals(5)) return !0;
      if (D.isEven() || D.isDivisibleBy(3) || D.isDivisibleBy(5)) return !1;
      if (D.lesser(49)) return !0;
    }
    s(ie, "isBasicPrime");
    function B(x, D) {
      for (var _ = x.prev(), P = _, v = 0, M, G, J, Z; P.isEven(); ) P = P.divide(2), v++;
      e: for (J = 0; J < D.length; J++)
        if (!x.lesser(D[J]) && (Z = mt(D[J]).modPow(P, x), !(Z.isUnit() || Z.equals(_)))) {
          for (M = v - 1; M != 0; M--) {
            if (Z = Z.square().mod(x), Z.isUnit()) return !1;
            if (Z.equals(_)) continue e;
          }
          return !1;
        }
      return !0;
    }
    s(B, "millerRabinTest"), l.prototype.isPrime = function(x) {
      var D = ie(this);
      if (D !== e) return D;
      var _ = this.abs(), P = _.bitLength();
      if (P <= 64)
        return B(_, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);
      for (var v = Math.log(2) * P.toJSNumber(), M = Math.ceil(x === !0 ? 2 * Math.pow(v, 2) : v), G = [], J = 0; J < M; J++)
        G.push(mt(J + 2));
      return B(_, G);
    }, p.prototype.isPrime = c.prototype.isPrime = l.prototype.isPrime, l.prototype.isProbablePrime = function(x, D) {
      var _ = ie(this);
      if (_ !== e) return _;
      for (var P = this.abs(), v = x === e ? 5 : x, M = [], G = 0; G < v; G++)
        M.push(mt.randBetween(2, P.minus(2), D));
      return B(P, M);
    }, p.prototype.isProbablePrime = c.prototype.isProbablePrime = l.prototype.isProbablePrime, l.prototype.modInv = function(x) {
      for (var D = mt.zero, _ = mt.one, P = pe(x), v = this.abs(), M, G, J; !v.isZero(); )
        M = P.divide(v), G = D, J = P, D = _, P = v, _ = G.subtract(M.multiply(_)), v = J.subtract(M.multiply(v));
      if (!P.isUnit()) throw new Error(this.toString() + " and " + x.toString() + " are not co-prime");
      return D.compare(0) === -1 && (D = D.add(x)), this.isNegative() ? D.negate() : D;
    }, p.prototype.modInv = c.prototype.modInv = l.prototype.modInv, l.prototype.next = function() {
      var x = this.value;
      return this.sign ? w(x, 1, this.sign) : new l(A(x, 1), this.sign);
    }, c.prototype.next = function() {
      var x = this.value;
      return x + 1 < n ? new c(x + 1) : new l(i, !1);
    }, p.prototype.next = function() {
      return new p(this.value + BigInt(1));
    }, l.prototype.prev = function() {
      var x = this.value;
      return this.sign ? new l(A(x, 1), !0) : w(x, 1, this.sign);
    }, c.prototype.prev = function() {
      var x = this.value;
      return x - 1 > -n ? new c(x - 1) : new l(i, !0);
    }, p.prototype.prev = function() {
      return new p(this.value - BigInt(1));
    };
    for (var ce = [1]; 2 * ce[ce.length - 1] <= t; ) ce.push(2 * ce[ce.length - 1]);
    var Je = ce.length, L = ce[Je - 1];
    function Ue(x) {
      return Math.abs(x) <= t;
    }
    s(Ue, "shift_isSmall"), l.prototype.shiftLeft = function(x) {
      var D = pe(x).toJSNumber();
      if (!Ue(D))
        throw new Error(String(D) + " is too large for shifting.");
      if (D < 0) return this.shiftRight(-D);
      var _ = this;
      if (_.isZero()) return _;
      for (; D >= Je; )
        _ = _.multiply(L), D -= Je - 1;
      return _.multiply(ce[D]);
    }, p.prototype.shiftLeft = c.prototype.shiftLeft = l.prototype.shiftLeft, l.prototype.shiftRight = function(x) {
      var D, _ = pe(x).toJSNumber();
      if (!Ue(_))
        throw new Error(String(_) + " is too large for shifting.");
      if (_ < 0) return this.shiftLeft(-_);
      for (var P = this; _ >= Je; ) {
        if (P.isZero() || P.isNegative() && P.isUnit()) return P;
        D = z(P, L), P = D[1].isNegative() ? D[0].prev() : D[0], _ -= Je - 1;
      }
      return D = z(P, ce[_]), D[1].isNegative() ? D[0].prev() : D[0];
    }, p.prototype.shiftRight = c.prototype.shiftRight = l.prototype.shiftRight;
    function Ve(x, D, _) {
      D = pe(D);
      for (var P = x.isNegative(), v = D.isNegative(), M = P ? x.not() : x, G = v ? D.not() : D, J = 0, Z = 0, de = null, Fe = null, he = []; !M.
      isZero() || !G.isZero(); )
        de = z(M, L), J = de[1].toJSNumber(), P && (J = L - 1 - J), Fe = z(G, L), Z = Fe[1].toJSNumber(), v && (Z = L - 1 - Z), M = de[0], G =
        Fe[0], he.push(_(J, Z));
      for (var Te = _(P ? 1 : 0, v ? 1 : 0) !== 0 ? mt(-1) : mt(0), nt = he.length - 1; nt >= 0; nt -= 1)
        Te = Te.multiply(L).add(mt(he[nt]));
      return Te;
    }
    s(Ve, "bitwise"), l.prototype.not = function() {
      return this.negate().prev();
    }, p.prototype.not = c.prototype.not = l.prototype.not, l.prototype.and = function(x) {
      return Ve(this, x, function(D, _) {
        return D & _;
      });
    }, p.prototype.and = c.prototype.and = l.prototype.and, l.prototype.or = function(x) {
      return Ve(this, x, function(D, _) {
        return D | _;
      });
    }, p.prototype.or = c.prototype.or = l.prototype.or, l.prototype.xor = function(x) {
      return Ve(this, x, function(D, _) {
        return D ^ _;
      });
    }, p.prototype.xor = c.prototype.xor = l.prototype.xor;
    var ge = 1 << 30, _t = (t & -t) * (t & -t) | ge;
    function qe(x) {
      var D = x.value, _ = typeof D == "number" ? D | ge : typeof D == "bigint" ? D | BigInt(ge) : D[0] + D[1] * t | _t;
      return _ & -_;
    }
    s(qe, "roughLOB");
    function re(x, D) {
      if (D.compareTo(x) <= 0) {
        var _ = re(x, D.square(D)), P = _.p, v = _.e, M = P.multiply(D);
        return M.compareTo(x) <= 0 ? { p: M, e: v * 2 + 1 } : { p: P, e: v * 2 };
      }
      return { p: mt(1), e: 0 };
    }
    s(re, "integerLogarithm"), l.prototype.bitLength = function() {
      var x = this;
      return x.compareTo(mt(0)) < 0 && (x = x.negate().subtract(mt(1))), x.compareTo(mt(0)) === 0 ? mt(0) : mt(re(x, mt(2)).e).add(mt(1));
    }, p.prototype.bitLength = c.prototype.bitLength = l.prototype.bitLength;
    function be(x, D) {
      return x = pe(x), D = pe(D), x.greater(D) ? x : D;
    }
    s(be, "max");
    function K(x, D) {
      return x = pe(x), D = pe(D), x.lesser(D) ? x : D;
    }
    s(K, "min");
    function se(x, D) {
      if (x = pe(x).abs(), D = pe(D).abs(), x.equals(D)) return x;
      if (x.isZero()) return D;
      if (D.isZero()) return x;
      for (var _ = u[1], P, v; x.isEven() && D.isEven(); )
        P = K(qe(x), qe(D)), x = x.divide(P), D = D.divide(P), _ = _.multiply(P);
      for (; x.isEven(); )
        x = x.divide(qe(x));
      do {
        for (; D.isEven(); )
          D = D.divide(qe(D));
        x.greater(D) && (v = D, D = x, x = v), D = D.subtract(x);
      } while (!D.isZero());
      return _.isUnit() ? x : x.multiply(_);
    }
    s(se, "gcd");
    function ye(x, D) {
      return x = pe(x).abs(), D = pe(D).abs(), x.divide(se(x, D)).multiply(D);
    }
    s(ye, "lcm");
    function ve(x, D, _) {
      x = pe(x), D = pe(D);
      var P = _ || Math.random, v = K(x, D), M = be(x, D), G = M.subtract(v).add(1);
      if (G.isSmall) return v.add(Math.floor(P() * G));
      for (var J = We(G, t).value, Z = [], de = !0, Fe = 0; Fe < J.length; Fe++) {
        var he = de ? J[Fe] + (Fe + 1 < J.length ? J[Fe + 1] / t : 0) : t, Te = b(P() * he);
        Z.push(Te), Te < J[Fe] && (de = !1);
      }
      return v.add(u.fromArray(Z, t, !1));
    }
    s(ve, "randBetween");
    var Ce = /* @__PURE__ */ s(function(x, D, _, P) {
      _ = _ || o, x = String(x), P || (x = x.toLowerCase(), _ = _.toLowerCase());
      var v = x.length, M, G = Math.abs(D), J = {};
      for (M = 0; M < _.length; M++)
        J[_[M]] = M;
      for (M = 0; M < v; M++) {
        var Z = x[M];
        if (Z !== "-" && Z in J && J[Z] >= G) {
          if (Z === "1" && G === 1) continue;
          throw new Error(Z + " is not a valid digit in base " + D + ".");
        }
      }
      D = pe(D);
      var de = [], Fe = x[0] === "-";
      for (M = Fe ? 1 : 0; M < x.length; M++) {
        var Z = x[M];
        if (Z in J) de.push(pe(J[Z]));
        else if (Z === "<") {
          var he = M;
          do
            M++;
          while (x[M] !== ">" && M < x.length);
          de.push(pe(x.slice(he + 1, M)));
        } else throw new Error(Z + " is not a valid character");
      }
      return rt(de, D, Fe);
    }, "parseBase");
    function rt(x, D, _) {
      var P = u[0], v = u[1], M;
      for (M = x.length - 1; M >= 0; M--)
        P = P.add(x[M].times(v)), v = v.times(D);
      return _ ? P.negate() : P;
    }
    s(rt, "parseBaseFromArray");
    function vt(x, D) {
      return D = D || o, x < D.length ? D[x] : "<" + x + ">";
    }
    s(vt, "stringify");
    function We(x, D) {
      if (D = mt(D), D.isZero()) {
        if (x.isZero()) return { value: [0], isNegative: !1 };
        throw new Error("Cannot convert nonzero numbers to base 0.");
      }
      if (D.equals(-1)) {
        if (x.isZero()) return { value: [0], isNegative: !1 };
        if (x.isNegative())
          return {
            value: [].concat.apply(
              [],
              Array.apply(null, Array(-x.toJSNumber())).map(Array.prototype.valueOf, [1, 0])
            ),
            isNegative: !1
          };
        var _ = Array.apply(null, Array(x.toJSNumber() - 1)).map(Array.prototype.valueOf, [0, 1]);
        return _.unshift([1]), {
          value: [].concat.apply([], _),
          isNegative: !1
        };
      }
      var P = !1;
      if (x.isNegative() && D.isPositive() && (P = !0, x = x.abs()), D.isUnit())
        return x.isZero() ? { value: [0], isNegative: !1 } : {
          value: Array.apply(null, Array(x.toJSNumber())).map(Number.prototype.valueOf, 1),
          isNegative: P
        };
      for (var v = [], M = x, G; M.isNegative() || M.compareAbs(D) >= 0; ) {
        G = M.divmod(D), M = G.quotient;
        var J = G.remainder;
        J.isNegative() && (J = D.minus(J).abs(), M = M.next()), v.push(J.toJSNumber());
      }
      return v.push(M.toJSNumber()), { value: v.reverse(), isNegative: P };
    }
    s(We, "toBase");
    function rr(x, D, _) {
      var P = We(x, D);
      return (P.isNegative ? "-" : "") + P.value.map(function(v) {
        return vt(v, _);
      }).join("");
    }
    s(rr, "toBaseString"), l.prototype.toArray = function(x) {
      return We(this, x);
    }, c.prototype.toArray = function(x) {
      return We(this, x);
    }, p.prototype.toArray = function(x) {
      return We(this, x);
    }, l.prototype.toString = function(x, D) {
      if (x === e && (x = 10), x !== 10 || D) return rr(this, x, D);
      for (var _ = this.value, P = _.length, v = String(_[--P]), M = "0000000", G; --P >= 0; )
        G = String(_[P]), v += M.slice(G.length) + G;
      var J = this.sign ? "-" : "";
      return J + v;
    }, c.prototype.toString = function(x, D) {
      return x === e && (x = 10), x != 10 || D ? rr(this, x, D) : String(this.value);
    }, p.prototype.toString = c.prototype.toString, p.prototype.toJSON = l.prototype.toJSON = c.prototype.toJSON = function() {
      return this.toString();
    }, l.prototype.valueOf = function() {
      return parseInt(this.toString(), 10);
    }, l.prototype.toJSNumber = l.prototype.valueOf, c.prototype.valueOf = function() {
      return this.value;
    }, c.prototype.toJSNumber = c.prototype.valueOf, p.prototype.valueOf = p.prototype.toJSNumber = function() {
      return parseInt(this.toString(), 10);
    };
    function nr(x) {
      if (h(+x)) {
        var D = +x;
        if (D === b(D))
          return a ? new p(BigInt(D)) : new c(D);
        throw new Error("Invalid integer: " + x);
      }
      var _ = x[0] === "-";
      _ && (x = x.slice(1));
      var P = x.split(/e/i);
      if (P.length > 2) throw new Error("Invalid integer: " + P.join("e"));
      if (P.length === 2) {
        var v = P[1];
        if (v[0] === "+" && (v = v.slice(1)), v = +v, v !== b(v) || !h(v)) throw new Error("Invalid integer: " + v + " is not a valid expone\
nt.");
        var M = P[0], G = M.indexOf(".");
        if (G >= 0 && (v -= M.length - G - 1, M = M.slice(0, G) + M.slice(G + 1)), v < 0) throw new Error("Cannot include negative exponent \
part for integers");
        M += new Array(v + 1).join("0"), x = M;
      }
      var J = /^([0-9][0-9]*)$/.test(x);
      if (!J) throw new Error("Invalid integer: " + x);
      if (a)
        return new p(BigInt(_ ? "-" + x : x));
      for (var Z = [], de = x.length, Fe = r, he = de - Fe; de > 0; )
        Z.push(+x.slice(he, de)), he -= Fe, he < 0 && (he = 0), de -= Fe;
      return m(Z), new l(Z, _);
    }
    s(nr, "parseStringValue");
    function Sr(x) {
      if (a)
        return new p(BigInt(x));
      if (h(x)) {
        if (x !== b(x)) throw new Error(x + " is not an integer.");
        return new c(x);
      }
      return nr(x.toString());
    }
    s(Sr, "parseNumberValue");
    function pe(x) {
      return typeof x == "number" ? Sr(x) : typeof x == "string" ? nr(x) : typeof x == "bigint" ? new p(x) : x;
    }
    s(pe, "parseValue");
    for (var Ye = 0; Ye < 1e3; Ye++)
      u[Ye] = pe(Ye), Ye > 0 && (u[-Ye] = pe(-Ye));
    return u.one = u[1], u.zero = u[0], u.minusOne = u[-1], u.max = be, u.min = K, u.gcd = se, u.lcm = ye, u.isInstance = function(x) {
      return x instanceof l || x instanceof c || x instanceof p;
    }, u.randBetween = ve, u.fromArray = function(x, D, _) {
      return rt(x.map(pe), pe(D || 10), _);
    }, u;
  }();
  typeof Gc < "u" && Gc.hasOwnProperty("exports") && (Gc.exports = mt);
  typeof define == "function" && define.amd && define(function() {
    return mt;
  });
});

// ../node_modules/bplist-parser/bplistParser.js
var WP = I((gt) => {
  "use strict";
  var One = H("fs"), Rne = UP(), si = !1;
  gt.maxObjectSize = 100 * 1e3 * 1e3;
  gt.maxObjectCount = 32768;
  var Nne = 9783072e5, Lne = gt.UID = function(e) {
    this.UID = e;
  }, MCe = gt.parseFile = function(e, t) {
    return new Promise(function(r, n) {
      function i(o) {
        let a = null, u;
        try {
          u = jne(o), r(u);
        } catch (l) {
          a = l, n(a);
        } finally {
          t && t(a, u);
        }
      }
      if (s(i, "tryParseBuffer"), Buffer.isBuffer(e))
        return i(e);
      One.readFile(e, function(o, a) {
        if (o)
          return n(o), t(o);
        i(a);
      });
    });
  }, jne = gt.parseBuffer = function(e) {
    if (e.slice(0, 6).toString("utf8") !== "bplist")
      throw new Error("Invalid binary plist. Expected 'bplist' at offset 0.");
    let r = e.slice(e.length - 32, e.length), n = r.readUInt8(6);
    si && console.log("offsetSize: " + n);
    let i = r.readUInt8(7);
    si && console.log("objectRefSize: " + i);
    let o = Cy(r, 8);
    si && console.log("numObjects: " + o);
    let a = Cy(r, 16);
    si && console.log("topObject: " + a);
    let u = Cy(r, 24);
    if (si && console.log("offsetTableOffset: " + u), o > gt.maxObjectCount)
      throw new Error("maxObjectCount exceeded");
    let l = [];
    for (let p = 0; p < o; p++) {
      let h = e.slice(u + p * n, u + (p + 1) * n);
      l[p] = Gt(h, 0), si && console.log("Offset for Object #" + p + " is " + l[p] + " [" + l[p].toString(16) + "]");
    }
    function c(p) {
      let h = l[p], f = e[h], d = (f & 240) >> 4, m = f & 15;
      switch (d) {
        case 0:
          return g();
        case 1:
          return y();
        case 8:
          return E();
        case 2:
          return A();
        case 3:
          return k();
        case 4:
          return O();
        case 5:
          return w();
        case 6:
          return w(!0);
        case 10:
          return C();
        case 13:
          return T();
        default:
          throw new Error("Unhandled type 0x" + d.toString(16));
      }
      function g() {
        switch (m) {
          case 0:
            return null;
          case 8:
            return !1;
          case 9:
            return !0;
          case 15:
            return null;
          default:
            throw new Error("Unhandled simple type 0x" + d.toString(16));
        }
      }
      s(g, "parseSimple");
      function b(F) {
        let $ = "", R;
        for (R = 0; R < F.length && F[R] == 0; R++)
          ;
        for (; R < F.length; R++) {
          let U = "00" + F[R].toString(16);
          $ += U.substr(U.length - 2);
        }
        return $;
      }
      s(b, "bufferToHexString");
      function y() {
        let F = Math.pow(2, m);
        if (m == 4) {
          let $ = e.slice(h + 1, h + 1 + F), R = b($);
          return Rne(R, 16);
        }
        if (m == 3)
          return e.readInt32BE(h + 1);
        if (F < gt.maxObjectSize)
          return Gt(e.slice(h + 1, h + 1 + F));
        throw new Error("To little heap space available! Wanted to read " + F + " bytes, but only " + gt.maxObjectSize + " are available.");
      }
      s(y, "parseInteger");
      function E() {
        let F = m + 1;
        if (F < gt.maxObjectSize)
          return new Lne(Gt(e.slice(h + 1, h + 1 + F)));
        throw new Error("To little heap space available! Wanted to read " + F + " bytes, but only " + gt.maxObjectSize + " are available.");
      }
      s(E, "parseUID");
      function A() {
        let F = Math.pow(2, m);
        if (F < gt.maxObjectSize) {
          let $ = e.slice(h + 1, h + 1 + F);
          if (F === 4)
            return $.readFloatBE(0);
          if (F === 8)
            return $.readDoubleBE(0);
        } else
          throw new Error("To little heap space available! Wanted to read " + F + " bytes, but only " + gt.maxObjectSize + " are available.");
      }
      s(A, "parseReal");
      function k() {
        m != 3 && console.error("Unknown date type :" + m + ". Parsing anyway...");
        let F = e.slice(h + 1, h + 9);
        return new Date(Nne + 1e3 * F.readDoubleBE(0));
      }
      s(k, "parseDate");
      function O() {
        let F = 1, $ = m;
        if (m == 15) {
          let R = e[h + 1], U = (R & 240) / 16;
          U != 1 && console.error("0x4: UNEXPECTED LENGTH-INT TYPE! " + U);
          let W = R & 15, Y = Math.pow(2, W);
          F = 2 + Y, Y < 3, $ = Gt(e.slice(h + 2, h + 2 + Y));
        }
        if ($ < gt.maxObjectSize)
          return e.slice(h + F, h + F + $);
        throw new Error("To little heap space available! Wanted to read " + $ + " bytes, but only " + gt.maxObjectSize + " are available.");
      }
      s(O, "parseData");
      function w(F) {
        F = F || 0;
        let $ = "utf8", R = m, U = 1;
        if (m == 15) {
          let W = e[h + 1], Y = (W & 240) / 16;
          Y != 1 && console.err("UNEXPECTED LENGTH-INT TYPE! " + Y);
          let j = W & 15, N = Math.pow(2, j);
          U = 2 + N, N < 3, R = Gt(e.slice(h + 2, h + 2 + N));
        }
        if (R *= F + 1, R < gt.maxObjectSize) {
          let W = Buffer.from(e.slice(h + U, h + U + R));
          return F && (W = Mne(W), $ = "ucs2"), W.toString($);
        }
        throw new Error("To little heap space available! Wanted to read " + R + " bytes, but only " + gt.maxObjectSize + " are available.");
      }
      s(w, "parsePlistString");
      function C() {
        let F = m, $ = 1;
        if (m == 15) {
          let U = e[h + 1], W = (U & 240) / 16;
          W != 1 && console.error("0xa: UNEXPECTED LENGTH-INT TYPE! " + W);
          let Y = U & 15, j = Math.pow(2, Y);
          $ = 2 + j, j < 3, F = Gt(e.slice(h + 2, h + 2 + j));
        }
        if (F * i > gt.maxObjectSize)
          throw new Error("To little heap space available!");
        let R = [];
        for (let U = 0; U < F; U++) {
          let W = Gt(e.slice(h + $ + U * i, h + $ + (U + 1) * i));
          R[U] = c(W);
        }
        return R;
      }
      s(C, "parseArray");
      function T() {
        let F = m, $ = 1;
        if (m == 15) {
          let U = e[h + 1], W = (U & 240) / 16;
          W != 1 && console.error("0xD: UNEXPECTED LENGTH-INT TYPE! " + W);
          let Y = U & 15, j = Math.pow(2, Y);
          $ = 2 + j, j < 3, F = Gt(e.slice(h + 2, h + 2 + j));
        }
        if (F * 2 * i > gt.maxObjectSize)
          throw new Error("To little heap space available!");
        si && console.log("Parsing dictionary #" + p);
        let R = {};
        for (let U = 0; U < F; U++) {
          let W = Gt(e.slice(h + $ + U * i, h + $ + (U + 1) * i)), Y = Gt(e.slice(h + $ + F * i + U * i, h + $ + F * i + (U + 1) * i)), j = c(
          W), N = c(Y);
          si && console.log("  DICT #" + p + ": Mapped " + j + " to " + N), R[j] = N;
        }
        return R;
      }
      s(T, "parseDictionary");
    }
    return s(c, "parseObject"), [c(a)];
  };
  function Gt(e, t) {
    t = t || 0;
    let r = 0;
    for (let n = t; n < e.length; n++)
      r <<= 8, r |= e[n] & 255;
    return r;
  }
  s(Gt, "readUInt");
  function Cy(e, t) {
    return e.slice(t, t + 8).readUInt32BE(4, 8);
  }
  s(Cy, "readUInt64BE");
  function Mne(e) {
    let t = e.length;
    for (let r = 0; r < t; r += 2) {
      let n = e[r];
      e[r] = e[r + 1], e[r + 1] = n;
    }
    return e;
  }
  s(Mne, "swapBytes");
});

// ../node_modules/untildify/index.js
var GP = I((VCe, HP) => {
  "use strict";
  var qne = H("os"), zP = qne.homedir();
  HP.exports = (e) => {
    if (typeof e != "string")
      throw new TypeError(`Expected a string, got ${typeof e}`);
    return zP ? e.replace(/^~(?=$|\/|\\)/, zP) : e;
  };
});

// ../node_modules/@aw-web-design/x-default-browser/node_modules/default-browser-id/index.js
var KP = {};
pi(KP, {
  default: () => XP
});
import $ne from "os";
import { promises as Vne } from "fs";
async function XP() {
  if (process.platform !== "darwin")
    throw new Error("macOS only");
  let e = "com.apple.Safari", t;
  try {
    t = await Vne.readFile(Wne);
  } catch (i) {
    if (i.code === "ENOENT")
      return e;
    throw i;
  }
  let r = JP.default.parseBuffer(t), n = r && r[0].LSHandlers;
  if (!n || n.length === 0)
    return e;
  for (let i of n)
    if (i.LSHandlerURLScheme === "http" && i.LSHandlerRoleAll) {
      e = i.LSHandlerRoleAll;
      break;
    }
  return e;
}
var JP, ZP, Une, Wne, YP = Et(() => {
  JP = fe(WP(), 1), ZP = fe(GP(), 1), Une = Number($ne.release().split(".")[0]), Wne = (0, ZP.default)(Une >= 14 ? "~/Library/Preferences/co\
m.apple.LaunchServices/com.apple.launchservices.secure.plist" : "~/Library/Preferences/com.apple.LaunchServices.plist");
  s(XP, "defaultBrowserId");
});

// ../node_modules/@aw-web-design/x-default-browser/src/detect-mac.js
var eB = I((HCe, QP) => {
  var zne = Promise.resolve().then(() => (YP(), KP));
  QP.exports = async function(e) {
    let t = await zne.then((r) => r.default());
    if (t) {
      let r = t.toLowerCase(), n = {
        isIE: !1,
        isSafari: r.indexOf("safari") > -1,
        isFirefox: r.indexOf("firefox") > -1,
        isChrome: r.indexOf("google") > -1,
        isChromium: r.indexOf("chromium") > -1,
        // untested
        isOpera: r.indexOf("opera") > -1,
        identity: t
      };
      n.isBlink = n.isChrome || n.isChromium || n.isOpera, n.isWebkit = n.isSafari || n.isBlink, n.commonName = Na()(n), e(null, n);
    } else
      e("Unable to retrieve default browser");
  };
});

// ../node_modules/@aw-web-design/x-default-browser/src/detect-linux.js
var rB = I((GCe, tB) => {
  var Hne = H("child_process").exec;
  tB.exports = function(e) {
    var t = "xdg-mime query default x-scheme-handler/http";
    Hne(t, function(r, n, i) {
      if (r) {
        e("Unable to execute the query: " + r + `
` + i);
        return;
      }
      var o = n, a = {
        isIE: !1,
        isSafari: !1,
        isFirefox: o.indexOf("firefox") > -1,
        isChrome: o.indexOf("google") > -1,
        isChromium: o.indexOf("chromium") > -1,
        isOpera: o.indexOf("opera") > -1,
        identity: o
      };
      a.isWebkit = a.isBlink = a.isChrome || a.isChromium || a.isOpera, a.commonName = Na()(a), e(null, a);
    });
  };
});

// ../node_modules/@aw-web-design/x-default-browser/src/detect-stub.js
var iB = I((JCe, nB) => {
  nB.exports = function(e) {
    e("Your platform is not supported, sorry. Patches welcome.");
  };
});

// ../node_modules/@aw-web-design/x-default-browser/index.js
var oB = I((ZCe, sB) => {
  var so, La = H("os");
  La.platform() == "win32" ? La.release().indexOf("10.") == 0 ? so = qP() : so = VP() : La.platform() == "darwin" ? so = eB() : La.platform() ==
  "linux" || La.platform() == "freebsd" ? so = rB() : so = iB();
  sB.exports = so;
});

// ../node_modules/is-docker/index.js
var Sy = I((XCe, uB) => {
  "use strict";
  var aB = H("fs"), wy;
  function Gne() {
    try {
      return aB.statSync("/.dockerenv"), !0;
    } catch {
      return !1;
    }
  }
  s(Gne, "hasDockerEnv");
  function Jne() {
    try {
      return aB.readFileSync("/proc/self/cgroup", "utf8").includes("docker");
    } catch {
      return !1;
    }
  }
  s(Jne, "hasDockerCGroup");
  uB.exports = () => (wy === void 0 && (wy = Gne() || Jne()), wy);
});

// ../node_modules/open/node_modules/is-wsl/index.js
var pB = I((YCe, Ay) => {
  "use strict";
  var Zne = H("os"), Xne = H("fs"), lB = Sy(), cB = /* @__PURE__ */ s(() => {
    if (process.platform !== "linux")
      return !1;
    if (Zne.release().toLowerCase().includes("microsoft"))
      return !lB();
    try {
      return Xne.readFileSync("/proc/version", "utf8").toLowerCase().includes("microsoft") ? !lB() : !1;
    } catch {
      return !1;
    }
  }, "isWsl");
  process.env.__IS_WSL_TEST__ ? Ay.exports = cB : Ay.exports = cB();
});

// ../node_modules/open/node_modules/define-lazy-prop/index.js
var fB = I((ewe, hB) => {
  "use strict";
  hB.exports = (e, t, r) => {
    let n = /* @__PURE__ */ s((i) => Object.defineProperty(e, t, { value: i, enumerable: !0, writable: !0 }), "define");
    return Object.defineProperty(e, t, {
      configurable: !0,
      enumerable: !0,
      get() {
        let i = r();
        return n(i), i;
      },
      set(i) {
        n(i);
      }
    }), e;
  };
});

// ../node_modules/open/index.js
var bB = I((rwe, xB) => {
  var Kne = H("path"), Yne = H("child_process"), { promises: Zc, constants: DB } = H("fs"), Jc = pB(), Qne = Sy(), _y = fB(), dB = Kne.join(
  __dirname, "xdg-open"), { platform: oo, arch: mB } = process, eie = /* @__PURE__ */ s(() => {
    try {
      return Zc.statSync("/run/.containerenv"), !0;
    } catch {
      return !1;
    }
  }, "hasContainerEnv"), Fy;
  function tie() {
    return Fy === void 0 && (Fy = eie() || Qne()), Fy;
  }
  s(tie, "isInsideContainer");
  var rie = /* @__PURE__ */ (() => {
    let e = "/mnt/", t;
    return async function() {
      if (t)
        return t;
      let r = "/etc/wsl.conf", n = !1;
      try {
        await Zc.access(r, DB.F_OK), n = !0;
      } catch {
      }
      if (!n)
        return e;
      let i = await Zc.readFile(r, { encoding: "utf8" }), o = /(?<!#.*)root\s*=\s*(?<mountPoint>.*)/g.exec(i);
      return o ? (t = o.groups.mountPoint.trim(), t = t.endsWith("/") ? t : `${t}/`, t) : e;
    };
  })(), gB = /* @__PURE__ */ s(async (e, t) => {
    let r;
    for (let n of e)
      try {
        return await t(n);
      } catch (i) {
        r = i;
      }
    throw r;
  }, "pTryEach"), Xc = /* @__PURE__ */ s(async (e) => {
    if (e = {
      wait: !1,
      background: !1,
      newInstance: !1,
      allowNonzeroExitCode: !1,
      ...e
    }, Array.isArray(e.app))
      return gB(e.app, (u) => Xc({
        ...e,
        app: u
      }));
    let { name: t, arguments: r = [] } = e.app || {};
    if (r = [...r], Array.isArray(t))
      return gB(t, (u) => Xc({
        ...e,
        app: {
          name: u,
          arguments: r
        }
      }));
    let n, i = [], o = {};
    if (oo === "darwin")
      n = "open", e.wait && i.push("--wait-apps"), e.background && i.push("--background"), e.newInstance && i.push("--new"), t && i.push("-a",
      t);
    else if (oo === "win32" || Jc && !tie() && !t) {
      let u = await rie();
      n = Jc ? `${u}c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe` : `${process.env.SYSTEMROOT}\\System32\\WindowsPowerShell\\v1.0\\p\
owershell`, i.push(
        "-NoProfile",
        "-NonInteractive",
        "\u2013ExecutionPolicy",
        "Bypass",
        "-EncodedCommand"
      ), Jc || (o.windowsVerbatimArguments = !0);
      let l = ["Start"];
      e.wait && l.push("-Wait"), t ? (l.push(`"\`"${t}\`""`, "-ArgumentList"), e.target && r.unshift(e.target)) : e.target && l.push(`"${e.target}\
"`), r.length > 0 && (r = r.map((c) => `"\`"${c}\`""`), l.push(r.join(","))), e.target = Buffer.from(l.join(" "), "utf16le").toString("base6\
4");
    } else {
      if (t)
        n = t;
      else {
        let u = !__dirname || __dirname === "/", l = !1;
        try {
          await Zc.access(dB, DB.X_OK), l = !0;
        } catch {
        }
        n = process.versions.electron || oo === "android" || u || !l ? "xdg-open" : dB;
      }
      r.length > 0 && i.push(...r), e.wait || (o.stdio = "ignore", o.detached = !0);
    }
    e.target && i.push(e.target), oo === "darwin" && r.length > 0 && i.push("--args", ...r);
    let a = Yne.spawn(n, i, o);
    return e.wait ? new Promise((u, l) => {
      a.once("error", l), a.once("close", (c) => {
        if (!e.allowNonzeroExitCode && c > 0) {
          l(new Error(`Exited with code ${c}`));
          return;
        }
        u(a);
      });
    }) : (a.unref(), a);
  }, "baseOpen"), ky = /* @__PURE__ */ s((e, t) => {
    if (typeof e != "string")
      throw new TypeError("Expected a `target`");
    return Xc({
      ...t,
      target: e
    });
  }, "open"), nie = /* @__PURE__ */ s((e, t) => {
    if (typeof e != "string")
      throw new TypeError("Expected a `name`");
    let { arguments: r = [] } = t || {};
    if (r != null && !Array.isArray(r))
      throw new TypeError("Expected `appArguments` as Array type");
    return Xc({
      ...t,
      app: {
        name: e,
        arguments: r
      }
    });
  }, "openApp");
  function yB(e) {
    if (typeof e == "string" || Array.isArray(e))
      return e;
    let { [mB]: t } = e;
    if (!t)
      throw new Error(`${mB} is not supported`);
    return t;
  }
  s(yB, "detectArchBinary");
  function Ty({ [oo]: e }, { wsl: t }) {
    if (t && Jc)
      return yB(t);
    if (!e)
      throw new Error(`${oo} is not supported`);
    return yB(e);
  }
  s(Ty, "detectPlatformBinary");
  var Kc = {};
  _y(Kc, "chrome", () => Ty({
    darwin: "google chrome",
    win32: "chrome",
    linux: ["google-chrome", "google-chrome-stable", "chromium"]
  }, {
    wsl: {
      ia32: "/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe",
      x64: ["/mnt/c/Program Files/Google/Chrome/Application/chrome.exe", "/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe"]
    }
  }));
  _y(Kc, "firefox", () => Ty({
    darwin: "firefox",
    win32: "C:\\Program Files\\Mozilla Firefox\\firefox.exe",
    linux: "firefox"
  }, {
    wsl: "/mnt/c/Program Files/Mozilla Firefox/firefox.exe"
  }));
  _y(Kc, "edge", () => Ty({
    darwin: "microsoft edge",
    win32: "msedge",
    linux: ["microsoft-edge", "microsoft-edge-dev"]
  }, {
    wsl: "/mnt/c/Program Files (x86)/Microsoft/Edge/Application/msedge.exe"
  }));
  ky.apps = Kc;
  ky.openApp = nie;
  xB.exports = ky;
});

// ../node_modules/address/lib/address.js
var IB = I((uwe, TB) => {
  "use strict";
  var Iy = H("os"), oie = H("fs"), aie = H("child_process"), uie = "/etc/resolv.conf";
  function kB() {
    var e = "eth", t = Iy.platform();
    return t === "darwin" ? e = "en" : t === "win32" && (e = null), e;
  }
  s(kB, "getInterfaceName");
  function lie() {
    return Iy.platform() === "win32" ? "ipconfig/all" : "/sbin/ifconfig";
  }
  s(lie, "getIfconfigCMD");
  function SB(e, t) {
    return t === "IPv4" ? e === "IPv4" || e === 4 : t === "IPv6" ? e === "IPv6" || e === 6 : e === t;
  }
  s(SB, "matchName");
  function Jt(e, t) {
    typeof e == "function" && (t = e, e = null);
    var r = {
      ip: Jt.ip(e),
      ipv6: Jt.ipv6(e),
      mac: null
    };
    Jt.mac(e, function(n, i) {
      i && (r.mac = i), t(n, r);
    });
  }
  s(Jt, "address");
  Jt.interface = function(e, t) {
    var r = Iy.networkInterfaces(), n = !t;
    t = t || kB(), e = e || "IPv4";
    for (var i = -1; i < 8; i++) {
      var o = t + (i >= 0 ? i : ""), a = r[o];
      if (a)
        for (var u = 0; u < a.length; u++) {
          var l = a[u];
          if (SB(l.family, e))
            return l;
        }
    }
    if (n)
      for (var c in r)
        for (var a = r[c], i = 0; i < a.length; i++) {
          var l = a[i];
          if (SB(l.family, e) && !l.address.startsWith("127."))
            return l;
        }
  };
  Jt.ip = function(e) {
    var t = Jt.interface("IPv4", e);
    return t && t.address;
  };
  Jt.ipv6 = function(e) {
    var t = Jt.interface("IPv6", e);
    return t && t.address;
  };
  var AB = /^(\w+)\:\s+flags=/, FB = /^(\w+)\s{2,}link encap:\w+/i, _B = Jt.MAC_RE = /(?:ether|HWaddr)\s+((?:[a-z0-9]{2}\:){5}[a-z0-9]{2})/i,
  cie = Jt.MAC_IP_RE = /inet\s(?:addr\:)?(\d+\.\d+\.\d+\.\d+)/;
  function pie(e, t, r) {
    for (var n = e.split(`
`), i = 0; i < n.length; i++) {
      var o = n[i].trimRight(), a = AB.exec(o) || FB.exec(o);
      if (a) {
        var u = a[1];
        if (u.indexOf(t) === 0) {
          var l = null, c = null, p = _B.exec(o);
          for (p && (c = p[1]), i++; ; ) {
            if (o = n[i], !o || AB.exec(o) || FB.exec(o)) {
              i--;
              break;
            }
            c || (p = _B.exec(o), p && (c = p[1])), l || (p = cie.exec(o), p && (l = p[1])), i++;
          }
          if (l === r)
            return c;
        }
      }
    }
  }
  s(pie, "getMAC");
  Jt.mac = function(e, t) {
    typeof e == "function" && (t = e, e = null), e = e || kB();
    var r = Jt.interface("IPv4", e);
    if (!r)
      return t();
    if (!process.env.CI && (r.mac === "ff:00:00:00:00:00" || r.mac === "00:00:00:00:00:00") && (r.mac = ""), r.mac)
      return t(null, r.mac);
    aie.exec(lie(), { timeout: 5e3 }, function(n, i, o) {
      if (n || !i)
        return t(n);
      var a = pie(i || "", e, r.address);
      t(null, a);
    });
  };
  var hie = /^nameserver\s+(\d+\.\d+\.\d+\.\d+)$/i;
  Jt.dns = function(e, t) {
    typeof e == "function" && (t = e, e = null), e = e || uie, oie.readFile(e, "utf8", function(r, n) {
      if (r)
        return t(r);
      var i = [];
      n = n || "";
      for (var o = n.split(`
`), a = 0; a < o.length; a++) {
        var u = o[a].trim(), l = hie.exec(u);
        l && i.push(l[1]);
      }
      t(null, i);
    });
  };
  TB.exports = Jt;
});

// ../node_modules/ms/index.js
var BB = I((cwe, PB) => {
  var ao = 1e3, uo = ao * 60, lo = uo * 60, Hi = lo * 24, fie = Hi * 7, die = Hi * 365.25;
  PB.exports = function(e, t) {
    t = t || {};
    var r = typeof e;
    if (r === "string" && e.length > 0)
      return mie(e);
    if (r === "number" && isFinite(e))
      return t.long ? yie(e) : gie(e);
    throw new Error(
      "val is not a non-empty string or a valid number. val=" + JSON.stringify(e)
    );
  };
  function mie(e) {
    if (e = String(e), !(e.length > 100)) {
      var t = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.
      exec(
        e
      );
      if (t) {
        var r = parseFloat(t[1]), n = (t[2] || "ms").toLowerCase();
        switch (n) {
          case "years":
          case "year":
          case "yrs":
          case "yr":
          case "y":
            return r * die;
          case "weeks":
          case "week":
          case "w":
            return r * fie;
          case "days":
          case "day":
          case "d":
            return r * Hi;
          case "hours":
          case "hour":
          case "hrs":
          case "hr":
          case "h":
            return r * lo;
          case "minutes":
          case "minute":
          case "mins":
          case "min":
          case "m":
            return r * uo;
          case "seconds":
          case "second":
          case "secs":
          case "sec":
          case "s":
            return r * ao;
          case "milliseconds":
          case "millisecond":
          case "msecs":
          case "msec":
          case "ms":
            return r;
          default:
            return;
        }
      }
    }
  }
  s(mie, "parse");
  function gie(e) {
    var t = Math.abs(e);
    return t >= Hi ? Math.round(e / Hi) + "d" : t >= lo ? Math.round(e / lo) + "h" : t >= uo ? Math.round(e / uo) + "m" : t >= ao ? Math.round(
    e / ao) + "s" : e + "ms";
  }
  s(gie, "fmtShort");
  function yie(e) {
    var t = Math.abs(e);
    return t >= Hi ? Yc(e, t, Hi, "day") : t >= lo ? Yc(e, t, lo, "hour") : t >= uo ? Yc(e, t, uo, "minute") : t >= ao ? Yc(e, t, ao, "secon\
d") : e + " ms";
  }
  s(yie, "fmtLong");
  function Yc(e, t, r, n) {
    var i = t >= r * 1.5;
    return Math.round(e / r) + " " + n + (i ? "s" : "");
  }
  s(Yc, "plural");
});

// ../node_modules/debug/src/common.js
var Py = I((hwe, OB) => {
  function Die(e) {
    r.debug = r, r.default = r, r.coerce = l, r.disable = a, r.enable = i, r.enabled = u, r.humanize = BB(), r.destroy = c, Object.keys(e).forEach(
    (p) => {
      r[p] = e[p];
    }), r.names = [], r.skips = [], r.formatters = {};
    function t(p) {
      let h = 0;
      for (let f = 0; f < p.length; f++)
        h = (h << 5) - h + p.charCodeAt(f), h |= 0;
      return r.colors[Math.abs(h) % r.colors.length];
    }
    s(t, "selectColor"), r.selectColor = t;
    function r(p) {
      let h, f = null, d, m;
      function g(...b) {
        if (!g.enabled)
          return;
        let y = g, E = Number(/* @__PURE__ */ new Date()), A = E - (h || E);
        y.diff = A, y.prev = h, y.curr = E, h = E, b[0] = r.coerce(b[0]), typeof b[0] != "string" && b.unshift("%O");
        let k = 0;
        b[0] = b[0].replace(/%([a-zA-Z%])/g, (w, C) => {
          if (w === "%%")
            return "%";
          k++;
          let T = r.formatters[C];
          if (typeof T == "function") {
            let F = b[k];
            w = T.call(y, F), b.splice(k, 1), k--;
          }
          return w;
        }), r.formatArgs.call(y, b), (y.log || r.log).apply(y, b);
      }
      return s(g, "debug"), g.namespace = p, g.useColors = r.useColors(), g.color = r.selectColor(p), g.extend = n, g.destroy = r.destroy, Object.
      defineProperty(g, "enabled", {
        enumerable: !0,
        configurable: !1,
        get: /* @__PURE__ */ s(() => f !== null ? f : (d !== r.namespaces && (d = r.namespaces, m = r.enabled(p)), m), "get"),
        set: /* @__PURE__ */ s((b) => {
          f = b;
        }, "set")
      }), typeof r.init == "function" && r.init(g), g;
    }
    s(r, "createDebug");
    function n(p, h) {
      let f = r(this.namespace + (typeof h > "u" ? ":" : h) + p);
      return f.log = this.log, f;
    }
    s(n, "extend");
    function i(p) {
      r.save(p), r.namespaces = p, r.names = [], r.skips = [];
      let h = (typeof p == "string" ? p : "").trim().replace(" ", ",").split(",").filter(Boolean);
      for (let f of h)
        f[0] === "-" ? r.skips.push(f.slice(1)) : r.names.push(f);
    }
    s(i, "enable");
    function o(p, h) {
      let f = 0, d = 0, m = -1, g = 0;
      for (; f < p.length; )
        if (d < h.length && (h[d] === p[f] || h[d] === "*"))
          h[d] === "*" ? (m = d, g = f, d++) : (f++, d++);
        else if (m !== -1)
          d = m + 1, g++, f = g;
        else
          return !1;
      for (; d < h.length && h[d] === "*"; )
        d++;
      return d === h.length;
    }
    s(o, "matchesTemplate");
    function a() {
      let p = [
        ...r.names,
        ...r.skips.map((h) => "-" + h)
      ].join(",");
      return r.enable(""), p;
    }
    s(a, "disable");
    function u(p) {
      for (let h of r.skips)
        if (o(p, h))
          return !1;
      for (let h of r.names)
        if (o(p, h))
          return !0;
      return !1;
    }
    s(u, "enabled");
    function l(p) {
      return p instanceof Error ? p.stack || p.message : p;
    }
    s(l, "coerce");
    function c() {
      console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major versio\
n of `debug`.");
    }
    return s(c, "destroy"), r.enable(r.load()), r;
  }
  s(Die, "setup");
  OB.exports = Die;
});

// ../node_modules/debug/src/browser.js
var RB = I((er, Qc) => {
  er.formatArgs = bie;
  er.save = vie;
  er.load = Eie;
  er.useColors = xie;
  er.storage = Cie();
  er.destroy = /* @__PURE__ */ (() => {
    let e = !1;
    return () => {
      e || (e = !0, console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the nex\
t major version of `debug`."));
    };
  })();
  er.colors = [
    "#0000CC",
    "#0000FF",
    "#0033CC",
    "#0033FF",
    "#0066CC",
    "#0066FF",
    "#0099CC",
    "#0099FF",
    "#00CC00",
    "#00CC33",
    "#00CC66",
    "#00CC99",
    "#00CCCC",
    "#00CCFF",
    "#3300CC",
    "#3300FF",
    "#3333CC",
    "#3333FF",
    "#3366CC",
    "#3366FF",
    "#3399CC",
    "#3399FF",
    "#33CC00",
    "#33CC33",
    "#33CC66",
    "#33CC99",
    "#33CCCC",
    "#33CCFF",
    "#6600CC",
    "#6600FF",
    "#6633CC",
    "#6633FF",
    "#66CC00",
    "#66CC33",
    "#9900CC",
    "#9900FF",
    "#9933CC",
    "#9933FF",
    "#99CC00",
    "#99CC33",
    "#CC0000",
    "#CC0033",
    "#CC0066",
    "#CC0099",
    "#CC00CC",
    "#CC00FF",
    "#CC3300",
    "#CC3333",
    "#CC3366",
    "#CC3399",
    "#CC33CC",
    "#CC33FF",
    "#CC6600",
    "#CC6633",
    "#CC9900",
    "#CC9933",
    "#CCCC00",
    "#CCCC33",
    "#FF0000",
    "#FF0033",
    "#FF0066",
    "#FF0099",
    "#FF00CC",
    "#FF00FF",
    "#FF3300",
    "#FF3333",
    "#FF3366",
    "#FF3399",
    "#FF33CC",
    "#FF33FF",
    "#FF6600",
    "#FF6633",
    "#FF9900",
    "#FF9933",
    "#FFCC00",
    "#FFCC33"
  ];
  function xie() {
    if (typeof window < "u" && window.process && (window.process.type === "renderer" || window.process.__nwjs))
      return !0;
    if (typeof navigator < "u" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))
      return !1;
    let e;
    return typeof document < "u" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance ||
    // Is firebug? http://stackoverflow.com/a/398120/376773
    typeof window < "u" && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    typeof navigator < "u" && navigator.userAgent && (e = navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)) && parseInt(e[1], 10) >=
    31 || // Double check webkit in userAgent just in case we are in a worker
    typeof navigator < "u" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
  }
  s(xie, "useColors");
  function bie(e) {
    if (e[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + e[0] + (this.useColors ? "%c " : " ") + "+" +
    Qc.exports.humanize(this.diff), !this.useColors)
      return;
    let t = "color: " + this.color;
    e.splice(1, 0, t, "color: inherit");
    let r = 0, n = 0;
    e[0].replace(/%[a-zA-Z%]/g, (i) => {
      i !== "%%" && (r++, i === "%c" && (n = r));
    }), e.splice(n, 0, t);
  }
  s(bie, "formatArgs");
  er.log = console.debug || console.log || (() => {
  });
  function vie(e) {
    try {
      e ? er.storage.setItem("debug", e) : er.storage.removeItem("debug");
    } catch {
    }
  }
  s(vie, "save");
  function Eie() {
    let e;
    try {
      e = er.storage.getItem("debug");
    } catch {
    }
    return !e && typeof process < "u" && "env" in process && (e = process.env.DEBUG), e;
  }
  s(Eie, "load");
  function Cie() {
    try {
      return localStorage;
    } catch {
    }
  }
  s(Cie, "localstorage");
  Qc.exports = Py()(er);
  var { formatters: wie } = Qc.exports;
  wie.j = function(e) {
    try {
      return JSON.stringify(e);
    } catch (t) {
      return "[UnexpectedJSONParseError]: " + t.message;
    }
  };
});

// ../node_modules/has-flag/index.js
var LB = I((mwe, NB) => {
  "use strict";
  NB.exports = (e, t = process.argv) => {
    let r = e.startsWith("-") ? "" : e.length === 1 ? "-" : "--", n = t.indexOf(r + e), i = t.indexOf("--");
    return n !== -1 && (i === -1 || n < i);
  };
});

// ../node_modules/supports-color/index.js
var qB = I((gwe, MB) => {
  "use strict";
  var Sie = H("os"), jB = H("tty"), Er = LB(), { env: xt } = process, oi;
  Er("no-color") || Er("no-colors") || Er("color=false") || Er("color=never") ? oi = 0 : (Er("color") || Er("colors") || Er("color=true") ||
  Er("color=always")) && (oi = 1);
  "FORCE_COLOR" in xt && (xt.FORCE_COLOR === "true" ? oi = 1 : xt.FORCE_COLOR === "false" ? oi = 0 : oi = xt.FORCE_COLOR.length === 0 ? 1 : Math.
  min(parseInt(xt.FORCE_COLOR, 10), 3));
  function By(e) {
    return e === 0 ? !1 : {
      level: e,
      hasBasic: !0,
      has256: e >= 2,
      has16m: e >= 3
    };
  }
  s(By, "translateLevel");
  function Oy(e, t) {
    if (oi === 0)
      return 0;
    if (Er("color=16m") || Er("color=full") || Er("color=truecolor"))
      return 3;
    if (Er("color=256"))
      return 2;
    if (e && !t && oi === void 0)
      return 0;
    let r = oi || 0;
    if (xt.TERM === "dumb")
      return r;
    if (process.platform === "win32") {
      let n = Sie.release().split(".");
      return Number(n[0]) >= 10 && Number(n[2]) >= 10586 ? Number(n[2]) >= 14931 ? 3 : 2 : 1;
    }
    if ("CI" in xt)
      return ["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI", "GITHUB_ACTIONS", "BUILDKITE"].some((n) => n in xt) || xt.CI_NAME === "codeship" ?
      1 : r;
    if ("TEAMCITY_VERSION" in xt)
      return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(xt.TEAMCITY_VERSION) ? 1 : 0;
    if (xt.COLORTERM === "truecolor")
      return 3;
    if ("TERM_PROGRAM" in xt) {
      let n = parseInt((xt.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
      switch (xt.TERM_PROGRAM) {
        case "iTerm.app":
          return n >= 3 ? 3 : 2;
        case "Apple_Terminal":
          return 2;
      }
    }
    return /-256(color)?$/i.test(xt.TERM) ? 2 : /^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(xt.TERM) || "COLORTERM" in
    xt ? 1 : r;
  }
  s(Oy, "supportsColor");
  function Aie(e) {
    let t = Oy(e, e && e.isTTY);
    return By(t);
  }
  s(Aie, "getSupportLevel");
  MB.exports = {
    supportsColor: Aie,
    stdout: By(Oy(!0, jB.isatty(1))),
    stderr: By(Oy(!0, jB.isatty(2)))
  };
});

// ../node_modules/debug/src/node.js
var VB = I((bt, tp) => {
  var Fie = H("tty"), ep = H("util");
  bt.init = Oie;
  bt.log = Iie;
  bt.formatArgs = kie;
  bt.save = Pie;
  bt.load = Bie;
  bt.useColors = _ie;
  bt.destroy = ep.deprecate(
    () => {
    },
    "Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."
  );
  bt.colors = [6, 2, 3, 4, 5, 1];
  try {
    let e = qB();
    e && (e.stderr || e).level >= 2 && (bt.colors = [
      20,
      21,
      26,
      27,
      32,
      33,
      38,
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      56,
      57,
      62,
      63,
      68,
      69,
      74,
      75,
      76,
      77,
      78,
      79,
      80,
      81,
      92,
      93,
      98,
      99,
      112,
      113,
      128,
      129,
      134,
      135,
      148,
      149,
      160,
      161,
      162,
      163,
      164,
      165,
      166,
      167,
      168,
      169,
      170,
      171,
      172,
      173,
      178,
      179,
      184,
      185,
      196,
      197,
      198,
      199,
      200,
      201,
      202,
      203,
      204,
      205,
      206,
      207,
      208,
      209,
      214,
      215,
      220,
      221
    ]);
  } catch {
  }
  bt.inspectOpts = Object.keys(process.env).filter((e) => /^debug_/i.test(e)).reduce((e, t) => {
    let r = t.substring(6).toLowerCase().replace(/_([a-z])/g, (i, o) => o.toUpperCase()), n = process.env[t];
    return /^(yes|on|true|enabled)$/i.test(n) ? n = !0 : /^(no|off|false|disabled)$/i.test(n) ? n = !1 : n === "null" ? n = null : n = Number(
    n), e[r] = n, e;
  }, {});
  function _ie() {
    return "colors" in bt.inspectOpts ? !!bt.inspectOpts.colors : Fie.isatty(process.stderr.fd);
  }
  s(_ie, "useColors");
  function kie(e) {
    let { namespace: t, useColors: r } = this;
    if (r) {
      let n = this.color, i = "\x1B[3" + (n < 8 ? n : "8;5;" + n), o = `  ${i};1m${t} \x1B[0m`;
      e[0] = o + e[0].split(`
`).join(`
` + o), e.push(i + "m+" + tp.exports.humanize(this.diff) + "\x1B[0m");
    } else
      e[0] = Tie() + t + " " + e[0];
  }
  s(kie, "formatArgs");
  function Tie() {
    return bt.inspectOpts.hideDate ? "" : (/* @__PURE__ */ new Date()).toISOString() + " ";
  }
  s(Tie, "getDate");
  function Iie(...e) {
    return process.stderr.write(ep.formatWithOptions(bt.inspectOpts, ...e) + `
`);
  }
  s(Iie, "log");
  function Pie(e) {
    e ? process.env.DEBUG = e : delete process.env.DEBUG;
  }
  s(Pie, "save");
  function Bie() {
    return process.env.DEBUG;
  }
  s(Bie, "load");
  function Oie(e) {
    e.inspectOpts = {};
    let t = Object.keys(bt.inspectOpts);
    for (let r = 0; r < t.length; r++)
      e.inspectOpts[t[r]] = bt.inspectOpts[t[r]];
  }
  s(Oie, "init");
  tp.exports = Py()(bt);
  var { formatters: $B } = tp.exports;
  $B.o = function(e) {
    return this.inspectOpts.colors = this.useColors, ep.inspect(e, this.inspectOpts).split(`
`).map((t) => t.trim()).join(" ");
  };
  $B.O = function(e) {
    return this.inspectOpts.colors = this.useColors, ep.inspect(e, this.inspectOpts);
  };
});

// ../node_modules/debug/src/index.js
var Ny = I((xwe, Ry) => {
  typeof process > "u" || process.type === "renderer" || process.browser === !0 || process.__nwjs ? Ry.exports = RB() : Ry.exports = VB();
});

// ../node_modules/detect-port/lib/detect-port.js
var jy = I((bwe, UB) => {
  "use strict";
  var Rie = H("net"), Nie = IB(), Ma = Ny()("detect-port");
  UB.exports = (e, t) => {
    let r = "";
    typeof e == "object" && e ? (r = e.hostname, t = e.callback, e = e.port) : typeof e == "function" && (t = e, e = null), e = parseInt(e) ||
    0;
    let n = e + 10;
    return n > 65535 && (n = 65535), Ma("detect free port between [%s, %s)", e, n), typeof t == "function" ? Ly(e, n, r, t) : new Promise((i) => {
      Ly(e, n, r, (o, a) => {
        i(a);
      });
    });
  };
  function Ly(e, t, r, n) {
    function i() {
      e++, e >= t && (Ma("port: %s >= maxPort: %s, give up and use random port", e, t), e = 0, t = 0), Ly(e, t, r, n);
    }
    s(i, "handleError"), r ? ja(e, r, (o, a) => {
      if (o)
        return o.code === "EADDRNOTAVAIL" ? n(new Error("the ip that is not unknown on the machine")) : i();
      n(null, a);
    }) : ja(e, null, (o, a) => {
      if (e === 0)
        return n(o, a);
      if (o)
        return i(o);
      ja(e, "0.0.0.0", (u) => {
        if (u)
          return i(u);
        ja(e, "localhost", (l) => {
          if (l && l.code !== "EADDRNOTAVAIL")
            return i(l);
          ja(e, Nie.ip(), (c, p) => {
            if (c)
              return i(c);
            n(null, p);
          });
        });
      });
    });
  }
  s(Ly, "tryListen");
  function ja(e, t, r) {
    let n = new Rie.Server();
    n.on("error", (i) => (Ma("listen %s:%s error: %s", t, e, i), n.close(), i.code === "ENOTFOUND" ? (Ma("ignore dns ENOTFOUND error, get fr\
ee %s:%s", t, e), r(null, e)) : r(i))), n.listen(e, t, () => (e = n.address().port, n.close(), Ma("get free %s:%s", t, e), r(null, e)));
  }
  s(ja, "listen");
});

// ../node_modules/detect-port/lib/wait-port.js
var zB = I((Ewe, WB) => {
  "use strict";
  var Lie = Ny()("wait-port"), jie = jy(), Mie = /* @__PURE__ */ s((e) => new Promise((t) => setTimeout(t, e)), "sleep");
  async function qie(e, t = {}) {
    let { retryInterval: r = 1e3, retries: n = 1 / 0 } = t, i = 1;
    async function o() {
      if (Lie("retries", n, "count", i), i > n) {
        let u = new Error("retries exceeded");
        throw u.retries = n, u.count = i, u;
      }
      return i++, await jie(e) === e ? (await Mie(r), o()) : !0;
    }
    return s(o, "loop"), await o();
  }
  s(qie, "waitPort");
  WB.exports = qie;
});

// ../node_modules/detect-port/index.js
var HB = I((wwe, My) => {
  "use strict";
  My.exports = jy();
  My.exports.waitPort = zB();
});

// ../node_modules/eastasianwidth/eastasianwidth.js
var Uy = I((a2e, Vy) => {
  var ai = {};
  typeof Vy > "u" ? window.eastasianwidth = ai : Vy.exports = ai;
  ai.eastAsianWidth = function(e) {
    var t = e.charCodeAt(0), r = e.length == 2 ? e.charCodeAt(1) : 0, n = t;
    return 55296 <= t && t <= 56319 && 56320 <= r && r <= 57343 && (t &= 1023, r &= 1023, n = t << 10 | r, n += 65536), n == 12288 || 65281 <=
    n && n <= 65376 || 65504 <= n && n <= 65510 ? "F" : n == 8361 || 65377 <= n && n <= 65470 || 65474 <= n && n <= 65479 || 65482 <= n && n <=
    65487 || 65490 <= n && n <= 65495 || 65498 <= n && n <= 65500 || 65512 <= n && n <= 65518 ? "H" : 4352 <= n && n <= 4447 || 4515 <= n &&
    n <= 4519 || 4602 <= n && n <= 4607 || 9001 <= n && n <= 9002 || 11904 <= n && n <= 11929 || 11931 <= n && n <= 12019 || 12032 <= n && n <=
    12245 || 12272 <= n && n <= 12283 || 12289 <= n && n <= 12350 || 12353 <= n && n <= 12438 || 12441 <= n && n <= 12543 || 12549 <= n && n <=
    12589 || 12593 <= n && n <= 12686 || 12688 <= n && n <= 12730 || 12736 <= n && n <= 12771 || 12784 <= n && n <= 12830 || 12832 <= n && n <=
    12871 || 12880 <= n && n <= 13054 || 13056 <= n && n <= 19903 || 19968 <= n && n <= 42124 || 42128 <= n && n <= 42182 || 43360 <= n && n <=
    43388 || 44032 <= n && n <= 55203 || 55216 <= n && n <= 55238 || 55243 <= n && n <= 55291 || 63744 <= n && n <= 64255 || 65040 <= n && n <=
    65049 || 65072 <= n && n <= 65106 || 65108 <= n && n <= 65126 || 65128 <= n && n <= 65131 || 110592 <= n && n <= 110593 || 127488 <= n &&
    n <= 127490 || 127504 <= n && n <= 127546 || 127552 <= n && n <= 127560 || 127568 <= n && n <= 127569 || 131072 <= n && n <= 194367 || 177984 <=
    n && n <= 196605 || 196608 <= n && n <= 262141 ? "W" : 32 <= n && n <= 126 || 162 <= n && n <= 163 || 165 <= n && n <= 166 || n == 172 ||
    n == 175 || 10214 <= n && n <= 10221 || 10629 <= n && n <= 10630 ? "Na" : n == 161 || n == 164 || 167 <= n && n <= 168 || n == 170 || 173 <=
    n && n <= 174 || 176 <= n && n <= 180 || 182 <= n && n <= 186 || 188 <= n && n <= 191 || n == 198 || n == 208 || 215 <= n && n <= 216 ||
    222 <= n && n <= 225 || n == 230 || 232 <= n && n <= 234 || 236 <= n && n <= 237 || n == 240 || 242 <= n && n <= 243 || 247 <= n && n <=
    250 || n == 252 || n == 254 || n == 257 || n == 273 || n == 275 || n == 283 || 294 <= n && n <= 295 || n == 299 || 305 <= n && n <= 307 ||
    n == 312 || 319 <= n && n <= 322 || n == 324 || 328 <= n && n <= 331 || n == 333 || 338 <= n && n <= 339 || 358 <= n && n <= 359 || n ==
    363 || n == 462 || n == 464 || n == 466 || n == 468 || n == 470 || n == 472 || n == 474 || n == 476 || n == 593 || n == 609 || n == 708 ||
    n == 711 || 713 <= n && n <= 715 || n == 717 || n == 720 || 728 <= n && n <= 731 || n == 733 || n == 735 || 768 <= n && n <= 879 || 913 <=
    n && n <= 929 || 931 <= n && n <= 937 || 945 <= n && n <= 961 || 963 <= n && n <= 969 || n == 1025 || 1040 <= n && n <= 1103 || n == 1105 ||
    n == 8208 || 8211 <= n && n <= 8214 || 8216 <= n && n <= 8217 || 8220 <= n && n <= 8221 || 8224 <= n && n <= 8226 || 8228 <= n && n <= 8231 ||
    n == 8240 || 8242 <= n && n <= 8243 || n == 8245 || n == 8251 || n == 8254 || n == 8308 || n == 8319 || 8321 <= n && n <= 8324 || n == 8364 ||
    n == 8451 || n == 8453 || n == 8457 || n == 8467 || n == 8470 || 8481 <= n && n <= 8482 || n == 8486 || n == 8491 || 8531 <= n && n <= 8532 ||
    8539 <= n && n <= 8542 || 8544 <= n && n <= 8555 || 8560 <= n && n <= 8569 || n == 8585 || 8592 <= n && n <= 8601 || 8632 <= n && n <= 8633 ||
    n == 8658 || n == 8660 || n == 8679 || n == 8704 || 8706 <= n && n <= 8707 || 8711 <= n && n <= 8712 || n == 8715 || n == 8719 || n == 8721 ||
    n == 8725 || n == 8730 || 8733 <= n && n <= 8736 || n == 8739 || n == 8741 || 8743 <= n && n <= 8748 || n == 8750 || 8756 <= n && n <= 8759 ||
    8764 <= n && n <= 8765 || n == 8776 || n == 8780 || n == 8786 || 8800 <= n && n <= 8801 || 8804 <= n && n <= 8807 || 8810 <= n && n <= 8811 ||
    8814 <= n && n <= 8815 || 8834 <= n && n <= 8835 || 8838 <= n && n <= 8839 || n == 8853 || n == 8857 || n == 8869 || n == 8895 || n == 8978 ||
    9312 <= n && n <= 9449 || 9451 <= n && n <= 9547 || 9552 <= n && n <= 9587 || 9600 <= n && n <= 9615 || 9618 <= n && n <= 9621 || 9632 <=
    n && n <= 9633 || 9635 <= n && n <= 9641 || 9650 <= n && n <= 9651 || 9654 <= n && n <= 9655 || 9660 <= n && n <= 9661 || 9664 <= n && n <=
    9665 || 9670 <= n && n <= 9672 || n == 9675 || 9678 <= n && n <= 9681 || 9698 <= n && n <= 9701 || n == 9711 || 9733 <= n && n <= 9734 ||
    n == 9737 || 9742 <= n && n <= 9743 || 9748 <= n && n <= 9749 || n == 9756 || n == 9758 || n == 9792 || n == 9794 || 9824 <= n && n <= 9825 ||
    9827 <= n && n <= 9829 || 9831 <= n && n <= 9834 || 9836 <= n && n <= 9837 || n == 9839 || 9886 <= n && n <= 9887 || 9918 <= n && n <= 9919 ||
    9924 <= n && n <= 9933 || 9935 <= n && n <= 9953 || n == 9955 || 9960 <= n && n <= 9983 || n == 10045 || n == 10071 || 10102 <= n && n <=
    10111 || 11093 <= n && n <= 11097 || 12872 <= n && n <= 12879 || 57344 <= n && n <= 63743 || 65024 <= n && n <= 65039 || n == 65533 || 127232 <=
    n && n <= 127242 || 127248 <= n && n <= 127277 || 127280 <= n && n <= 127337 || 127344 <= n && n <= 127386 || 917760 <= n && n <= 917999 ||
    983040 <= n && n <= 1048573 || 1048576 <= n && n <= 1114109 ? "A" : "N";
  };
  ai.characterLength = function(e) {
    var t = this.eastAsianWidth(e);
    return t == "F" || t == "W" || t == "A" ? 2 : 1;
  };
  function tO(e) {
    return e.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]|[^\uD800-\uDFFF]/g) || [];
  }
  s(tO, "stringToArray");
  ai.length = function(e) {
    for (var t = tO(e), r = 0, n = 0; n < t.length; n++)
      r = r + this.characterLength(t[n]);
    return r;
  };
  ai.slice = function(e, t, r) {
    textLen = ai.length(e), t = t || 0, r = r || 1, t < 0 && (t = textLen + t), r < 0 && (r = textLen + r);
    for (var n = "", i = 0, o = tO(e), a = 0; a < o.length; a++) {
      var u = o[a], l = ai.length(u);
      if (i >= t - (l == 2 ? 1 : 0))
        if (i + l <= r)
          n += u;
        else
          break;
      i += l;
    }
    return n;
  };
});

// ../node_modules/emoji-regex/index.js
var Wy = I((l2e, rO) => {
  "use strict";
  rO.exports = function() {
    return /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67)\uDB40\uDC7F|(?:\uD83E\uDDD1\uD83C\uDFFF\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFC-\uDFFF])|\uD83D\uDC68(?:\uD83C\uDFFB(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|[\u2695\u2696\u2708]\uFE0F|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))?|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])\uFE0F|\u200D(?:(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D[\uDC66\uDC67])|\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC)?|(?:\uD83D\uDC69(?:\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69]))|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC69(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83E\uDDD1(?:\u200D(?:\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDE36\u200D\uD83C\uDF2B|\uD83C\uDFF3\uFE0F\u200D\u26A7|\uD83D\uDC3B\u200D\u2744|(?:(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\uD83C\uDFF4\u200D\u2620|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])\u200D[\u2640\u2642]|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u2600-\u2604\u260E\u2611\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26B0\u26B1\u26C8\u26CF\u26D1\u26D3\u26E9\u26F0\u26F1\u26F4\u26F7\u26F8\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u3030\u303D\u3297\u3299]|\uD83C[\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]|\uD83D[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3])\uFE0F|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDE35\u200D\uD83D\uDCAB|\uD83D\uDE2E\u200D\uD83D\uDCA8|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83E\uDDD1(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83D\uDC69(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF6\uD83C\uDDE6|\uD83C\uDDF4\uD83C\uDDF2|\uD83D\uDC08\u200D\u2B1B|\u2764\uFE0F\u200D(?:\uD83D\uDD25|\uD83E\uDE79)|\uD83D\uDC41\uFE0F|\uD83C\uDFF3\uFE0F|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|[#\*0-9]\uFE0F\u20E3|\u2764\uFE0F|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|\uD83C\uDFF4|(?:[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270C\u270D]|\uD83D[\uDD74\uDD90])(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC08\uDC15\uDC3B\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE2E\uDE35\uDE36\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5]|\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD]|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF]|[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0D\uDD0E\uDD10-\uDD17\uDD1D\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78\uDD7A-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCB\uDDD0\uDDE0-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6]|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26A7\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5-\uDED7\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDD77\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g;
  };
});

// ../node_modules/cli-boxes/boxes.json
var gO = I((B2e, cse) => {
  cse.exports = {
    single: {
      topLeft: "\u250C",
      top: "\u2500",
      topRight: "\u2510",
      right: "\u2502",
      bottomRight: "\u2518",
      bottom: "\u2500",
      bottomLeft: "\u2514",
      left: "\u2502"
    },
    double: {
      topLeft: "\u2554",
      top: "\u2550",
      topRight: "\u2557",
      right: "\u2551",
      bottomRight: "\u255D",
      bottom: "\u2550",
      bottomLeft: "\u255A",
      left: "\u2551"
    },
    round: {
      topLeft: "\u256D",
      top: "\u2500",
      topRight: "\u256E",
      right: "\u2502",
      bottomRight: "\u256F",
      bottom: "\u2500",
      bottomLeft: "\u2570",
      left: "\u2502"
    },
    bold: {
      topLeft: "\u250F",
      top: "\u2501",
      topRight: "\u2513",
      right: "\u2503",
      bottomRight: "\u251B",
      bottom: "\u2501",
      bottomLeft: "\u2517",
      left: "\u2503"
    },
    singleDouble: {
      topLeft: "\u2553",
      top: "\u2500",
      topRight: "\u2556",
      right: "\u2551",
      bottomRight: "\u255C",
      bottom: "\u2500",
      bottomLeft: "\u2559",
      left: "\u2551"
    },
    doubleSingle: {
      topLeft: "\u2552",
      top: "\u2550",
      topRight: "\u2555",
      right: "\u2502",
      bottomRight: "\u255B",
      bottom: "\u2550",
      bottomLeft: "\u2558",
      left: "\u2502"
    },
    classic: {
      topLeft: "+",
      top: "-",
      topRight: "+",
      right: "|",
      bottomRight: "+",
      bottom: "-",
      bottomLeft: "+",
      left: "|"
    },
    arrow: {
      topLeft: "\u2198",
      top: "\u2193",
      topRight: "\u2199",
      right: "\u2190",
      bottomRight: "\u2196",
      bottom: "\u2191",
      bottomLeft: "\u2197",
      left: "\u2192"
    }
  };
});

// ../node_modules/cli-boxes/index.js
var Xy = I((O2e, Zy) => {
  "use strict";
  var yO = gO();
  Zy.exports = yO;
  Zy.exports.default = yO;
});

// ../node_modules/string-width/node_modules/ansi-regex/index.js
var CO = I((L2e, EO) => {
  "use strict";
  EO.exports = ({ onlyFirst: e = !1 } = {}) => {
    let t = [
      "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)",
      "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"
    ].join("|");
    return new RegExp(t, e ? void 0 : "g");
  };
});

// ../node_modules/string-width/node_modules/strip-ansi/index.js
var SO = I((j2e, wO) => {
  "use strict";
  var yse = CO();
  wO.exports = (e) => typeof e == "string" ? e.replace(yse(), "") : e;
});

// ../node_modules/is-fullwidth-code-point/index.js
var FO = I((M2e, Qy) => {
  "use strict";
  var AO = /* @__PURE__ */ s((e) => Number.isNaN(e) ? !1 : e >= 4352 && (e <= 4447 || // Hangul Jamo
  e === 9001 || // LEFT-POINTING ANGLE BRACKET
  e === 9002 || // RIGHT-POINTING ANGLE BRACKET
  // CJK Radicals Supplement .. Enclosed CJK Letters and Months
  11904 <= e && e <= 12871 && e !== 12351 || // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A
  12880 <= e && e <= 19903 || // CJK Unified Ideographs .. Yi Radicals
  19968 <= e && e <= 42182 || // Hangul Jamo Extended-A
  43360 <= e && e <= 43388 || // Hangul Syllables
  44032 <= e && e <= 55203 || // CJK Compatibility Ideographs
  63744 <= e && e <= 64255 || // Vertical Forms
  65040 <= e && e <= 65049 || // CJK Compatibility Forms .. Small Form Variants
  65072 <= e && e <= 65131 || // Halfwidth and Fullwidth Forms
  65281 <= e && e <= 65376 || 65504 <= e && e <= 65510 || // Kana Supplement
  110592 <= e && e <= 110593 || // Enclosed Ideographic Supplement
  127488 <= e && e <= 127569 || // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane
  131072 <= e && e <= 262141), "isFullwidthCodePoint");
  Qy.exports = AO;
  Qy.exports.default = AO;
});

// ../node_modules/string-width/node_modules/emoji-regex/index.js
var kO = I(($2e, _O) => {
  "use strict";
  _O.exports = function() {
    return /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F|\uD83D\uDC68(?:\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83D[\uDC66\uDC67]|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708])\uFE0F|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C[\uDFFB-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)\uD83C\uDFFB|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB\uDFFC])|\uD83D\uDC69(?:\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB-\uDFFD])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620)\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDF6\uD83C\uDDE6|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDB5\uDDB6\uDDBB\uDDD2-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5\uDEEB\uDEEC\uDEF4-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g;
  };
});

// ../node_modules/string-width/index.js
var tD = I((V2e, eD) => {
  "use strict";
  var Dse = SO(), xse = FO(), bse = kO(), TO = /* @__PURE__ */ s((e) => {
    if (typeof e != "string" || e.length === 0 || (e = Dse(e), e.length === 0))
      return 0;
    e = e.replace(bse(), "  ");
    let t = 0;
    for (let r = 0; r < e.length; r++) {
      let n = e.codePointAt(r);
      n <= 31 || n >= 127 && n <= 159 || n >= 768 && n <= 879 || (n > 65535 && r++, t += xse(n) ? 2 : 1);
    }
    return t;
  }, "stringWidth");
  eD.exports = TO;
  eD.exports.default = TO;
});

// ../node_modules/ansi-align/index.js
var PO = I((W2e, IO) => {
  "use strict";
  var vse = tD();
  function Zi(e, t) {
    if (!e) return e;
    t = t || {};
    let r = t.align || "center";
    if (r === "left") return e;
    let n = t.split || `
`, i = t.pad || " ", o = r !== "right" ? Ese : Cse, a = !1;
    Array.isArray(e) || (a = !0, e = String(e).split(n));
    let u, l = 0;
    return e = e.map(function(c) {
      return c = String(c), u = vse(c), l = Math.max(u, l), {
        str: c,
        width: u
      };
    }).map(function(c) {
      return new Array(o(l, c.width) + 1).join(i) + c.str;
    }), a ? e.join(n) : e;
  }
  s(Zi, "ansiAlign");
  Zi.left = /* @__PURE__ */ s(function(t) {
    return Zi(t, { align: "left" });
  }, "left");
  Zi.center = /* @__PURE__ */ s(function(t) {
    return Zi(t, { align: "center" });
  }, "center");
  Zi.right = /* @__PURE__ */ s(function(t) {
    return Zi(t, { align: "right" });
  }, "right");
  IO.exports = Zi;
  function Ese(e, t) {
    return Math.floor((e - t) / 2);
  }
  s(Ese, "halfDiff");
  function Cse(e, t) {
    return e - t;
  }
  s(Cse, "fullDiff");
});

// ../node_modules/cli-table3/src/debug.js
var up = I((hSe, ZO) => {
  var uD = [], JO = 0, Ft = /* @__PURE__ */ s((e, t) => {
    JO >= t && uD.push(e);
  }, "debug");
  Ft.WARN = 1;
  Ft.INFO = 2;
  Ft.DEBUG = 3;
  Ft.reset = () => {
    uD = [];
  };
  Ft.setDebugLevel = (e) => {
    JO = e;
  };
  Ft.warn = (e) => Ft(e, Ft.WARN);
  Ft.info = (e) => Ft(e, Ft.INFO);
  Ft.debug = (e) => Ft(e, Ft.DEBUG);
  Ft.debugMessages = () => uD;
  ZO.exports = Ft;
});

// ../node_modules/cli-table3/src/utils.js
var lD = I((dSe, QO) => {
  var XO = tD();
  function lp(e) {
    return e ? /\u001b\[((?:\d*;){0,5}\d*)m/g : /\u001b\[(?:\d*;){0,5}\d*m/g;
  }
  s(lp, "codeRegex");
  function un(e) {
    let t = lp();
    return ("" + e).replace(t, "").split(`
`).reduce(function(i, o) {
      return XO(o) > i ? XO(o) : i;
    }, 0);
  }
  s(un, "strlen");
  function Wa(e, t) {
    return Array(t + 1).join(e);
  }
  s(Wa, "repeat");
  function Vse(e, t, r, n) {
    let i = un(e);
    if (t + 1 >= i) {
      let o = t - i;
      switch (n) {
        case "right": {
          e = Wa(r, o) + e;
          break;
        }
        case "center": {
          let a = Math.ceil(o / 2), u = o - a;
          e = Wa(r, u) + e + Wa(r, a);
          break;
        }
        default: {
          e = e + Wa(r, o);
          break;
        }
      }
    }
    return e;
  }
  s(Vse, "pad");
  var ho = {};
  function za(e, t, r) {
    t = "\x1B[" + t + "m", r = "\x1B[" + r + "m", ho[t] = { set: e, to: !0 }, ho[r] = { set: e, to: !1 }, ho[e] = { on: t, off: r };
  }
  s(za, "addToCodeCache");
  za("bold", 1, 22);
  za("italics", 3, 23);
  za("underline", 4, 24);
  za("inverse", 7, 27);
  za("strikethrough", 9, 29);
  function KO(e, t) {
    let r = t[1] ? parseInt(t[1].split(";")[0]) : 0;
    if (r >= 30 && r <= 39 || r >= 90 && r <= 97) {
      e.lastForegroundAdded = t[0];
      return;
    }
    if (r >= 40 && r <= 49 || r >= 100 && r <= 107) {
      e.lastBackgroundAdded = t[0];
      return;
    }
    if (r === 0) {
      for (let i in e)
        Object.prototype.hasOwnProperty.call(e, i) && delete e[i];
      return;
    }
    let n = ho[t[0]];
    n && (e[n.set] = n.to);
  }
  s(KO, "updateState");
  function Use(e) {
    let t = lp(!0), r = t.exec(e), n = {};
    for (; r !== null; )
      KO(n, r), r = t.exec(e);
    return n;
  }
  s(Use, "readState");
  function YO(e, t) {
    let r = e.lastBackgroundAdded, n = e.lastForegroundAdded;
    return delete e.lastBackgroundAdded, delete e.lastForegroundAdded, Object.keys(e).forEach(function(i) {
      e[i] && (t += ho[i].off);
    }), r && r != "\x1B[49m" && (t += "\x1B[49m"), n && n != "\x1B[39m" && (t += "\x1B[39m"), t;
  }
  s(YO, "unwindState");
  function Wse(e, t) {
    let r = e.lastBackgroundAdded, n = e.lastForegroundAdded;
    return delete e.lastBackgroundAdded, delete e.lastForegroundAdded, Object.keys(e).forEach(function(i) {
      e[i] && (t = ho[i].on + t);
    }), r && r != "\x1B[49m" && (t = r + t), n && n != "\x1B[39m" && (t = n + t), t;
  }
  s(Wse, "rewindState");
  function zse(e, t) {
    if (e.length === un(e))
      return e.substr(0, t);
    for (; un(e) > t; )
      e = e.slice(0, -1);
    return e;
  }
  s(zse, "truncateWidth");
  function Hse(e, t) {
    let r = lp(!0), n = e.split(lp()), i = 0, o = 0, a = "", u, l = {};
    for (; o < t; ) {
      u = r.exec(e);
      let c = n[i];
      if (i++, o + un(c) > t && (c = zse(c, t - o)), a += c, o += un(c), o < t) {
        if (!u)
          break;
        a += u[0], KO(l, u);
      }
    }
    return YO(l, a);
  }
  s(Hse, "truncateWidthWithAnsi");
  function Gse(e, t, r) {
    if (r = r || "\u2026", un(e) <= t)
      return e;
    t -= un(r);
    let i = Hse(e, t);
    i += r;
    let o = "\x1B]8;;\x07";
    return e.includes(o) && !i.includes(o) && (i += o), i;
  }
  s(Gse, "truncate");
  function Jse() {
    return {
      chars: {
        top: "\u2500",
        "top-mid": "\u252C",
        "top-left": "\u250C",
        "top-right": "\u2510",
        bottom: "\u2500",
        "bottom-mid": "\u2534",
        "bottom-left": "\u2514",
        "bottom-right": "\u2518",
        left: "\u2502",
        "left-mid": "\u251C",
        mid: "\u2500",
        "mid-mid": "\u253C",
        right: "\u2502",
        "right-mid": "\u2524",
        middle: "\u2502"
      },
      truncate: "\u2026",
      colWidths: [],
      rowHeights: [],
      colAligns: [],
      rowAligns: [],
      style: {
        "padding-left": 1,
        "padding-right": 1,
        head: ["red"],
        border: ["grey"],
        compact: !1
      },
      head: []
    };
  }
  s(Jse, "defaultOptions");
  function Zse(e, t) {
    e = e || {}, t = t || Jse();
    let r = Object.assign({}, t, e);
    return r.chars = Object.assign({}, t.chars, e.chars), r.style = Object.assign({}, t.style, e.style), r;
  }
  s(Zse, "mergeOptions");
  function Xse(e, t) {
    let r = [], n = t.split(/(\s+)/g), i = [], o = 0, a;
    for (let u = 0; u < n.length; u += 2) {
      let l = n[u], c = o + un(l);
      o > 0 && a && (c += a.length), c > e ? (o !== 0 && r.push(i.join("")), i = [l], o = un(l)) : (i.push(a || "", l), o = c), a = n[u + 1];
    }
    return o && r.push(i.join("")), r;
  }
  s(Xse, "wordWrap");
  function Kse(e, t) {
    let r = [], n = "";
    function i(a, u) {
      for (n.length && u && (n += u), n += a; n.length > e; )
        r.push(n.slice(0, e)), n = n.slice(e);
    }
    s(i, "pushLine");
    let o = t.split(/(\s+)/g);
    for (let a = 0; a < o.length; a += 2)
      i(o[a], a && o[a - 1]);
    return n.length && r.push(n), r;
  }
  s(Kse, "textWrap");
  function Yse(e, t, r = !0) {
    let n = [];
    t = t.split(`
`);
    let i = r ? Xse : Kse;
    for (let o = 0; o < t.length; o++)
      n.push.apply(n, i(e, t[o]));
    return n;
  }
  s(Yse, "multiLineWordWrap");
  function Qse(e) {
    let t = {}, r = [];
    for (let n = 0; n < e.length; n++) {
      let i = Wse(t, e[n]);
      t = Use(i);
      let o = Object.assign({}, t);
      r.push(YO(o, i));
    }
    return r;
  }
  s(Qse, "colorizeLines");
  function eoe(e, t) {
    let r = "\x1B]", n = "\x07", i = ";";
    return [r, "8", i, i, e || t, n, t, r, "8", i, i, n].join("");
  }
  s(eoe, "hyperlink");
  QO.exports = {
    strlen: un,
    repeat: Wa,
    pad: Vse,
    truncate: Gse,
    mergeOptions: Zse,
    wordWrap: Yse,
    colorizeLines: Qse,
    hyperlink: eoe
  };
});

// ../node_modules/@colors/colors/lib/styles.js
var n6 = I((gSe, r6) => {
  var t6 = {};
  r6.exports = t6;
  var e6 = {
    reset: [0, 0],
    bold: [1, 22],
    dim: [2, 22],
    italic: [3, 23],
    underline: [4, 24],
    inverse: [7, 27],
    hidden: [8, 28],
    strikethrough: [9, 29],
    black: [30, 39],
    red: [31, 39],
    green: [32, 39],
    yellow: [33, 39],
    blue: [34, 39],
    magenta: [35, 39],
    cyan: [36, 39],
    white: [37, 39],
    gray: [90, 39],
    grey: [90, 39],
    brightRed: [91, 39],
    brightGreen: [92, 39],
    brightYellow: [93, 39],
    brightBlue: [94, 39],
    brightMagenta: [95, 39],
    brightCyan: [96, 39],
    brightWhite: [97, 39],
    bgBlack: [40, 49],
    bgRed: [41, 49],
    bgGreen: [42, 49],
    bgYellow: [43, 49],
    bgBlue: [44, 49],
    bgMagenta: [45, 49],
    bgCyan: [46, 49],
    bgWhite: [47, 49],
    bgGray: [100, 49],
    bgGrey: [100, 49],
    bgBrightRed: [101, 49],
    bgBrightGreen: [102, 49],
    bgBrightYellow: [103, 49],
    bgBrightBlue: [104, 49],
    bgBrightMagenta: [105, 49],
    bgBrightCyan: [106, 49],
    bgBrightWhite: [107, 49],
    // legacy styles for colors pre v1.0.0
    blackBG: [40, 49],
    redBG: [41, 49],
    greenBG: [42, 49],
    yellowBG: [43, 49],
    blueBG: [44, 49],
    magentaBG: [45, 49],
    cyanBG: [46, 49],
    whiteBG: [47, 49]
  };
  Object.keys(e6).forEach(function(e) {
    var t = e6[e], r = t6[e] = [];
    r.open = "\x1B[" + t[0] + "m", r.close = "\x1B[" + t[1] + "m";
  });
});

// ../node_modules/@colors/colors/lib/system/has-flag.js
var s6 = I((ySe, i6) => {
  "use strict";
  i6.exports = function(e, t) {
    t = t || process.argv;
    var r = t.indexOf("--"), n = /^-{1,2}/.test(e) ? "" : "--", i = t.indexOf(n + e);
    return i !== -1 && (r === -1 ? !0 : i < r);
  };
});

// ../node_modules/@colors/colors/lib/system/supports-colors.js
var a6 = I((DSe, o6) => {
  "use strict";
  var toe = H("os"), Mr = s6(), Lt = process.env, fo = void 0;
  Mr("no-color") || Mr("no-colors") || Mr("color=false") ? fo = !1 : (Mr("color") || Mr("colors") || Mr("color=true") || Mr("color=always")) &&
  (fo = !0);
  "FORCE_COLOR" in Lt && (fo = Lt.FORCE_COLOR.length === 0 || parseInt(Lt.FORCE_COLOR, 10) !== 0);
  function roe(e) {
    return e === 0 ? !1 : {
      level: e,
      hasBasic: !0,
      has256: e >= 2,
      has16m: e >= 3
    };
  }
  s(roe, "translateLevel");
  function noe(e) {
    if (fo === !1)
      return 0;
    if (Mr("color=16m") || Mr("color=full") || Mr("color=truecolor"))
      return 3;
    if (Mr("color=256"))
      return 2;
    if (e && !e.isTTY && fo !== !0)
      return 0;
    var t = fo ? 1 : 0;
    if (process.platform === "win32") {
      var r = toe.release().split(".");
      return Number(process.versions.node.split(".")[0]) >= 8 && Number(r[0]) >= 10 && Number(r[2]) >= 10586 ? Number(r[2]) >= 14931 ? 3 : 2 :
      1;
    }
    if ("CI" in Lt)
      return ["TRAVIS", "CIRCLECI", "APPVEYOR", "GITLAB_CI"].some(function(i) {
        return i in Lt;
      }) || Lt.CI_NAME === "codeship" ? 1 : t;
    if ("TEAMCITY_VERSION" in Lt)
      return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(Lt.TEAMCITY_VERSION) ? 1 : 0;
    if ("TERM_PROGRAM" in Lt) {
      var n = parseInt((Lt.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
      switch (Lt.TERM_PROGRAM) {
        case "iTerm.app":
          return n >= 3 ? 3 : 2;
        case "Hyper":
          return 3;
        case "Apple_Terminal":
          return 2;
      }
    }
    return /-256(color)?$/i.test(Lt.TERM) ? 2 : /^screen|^xterm|^vt100|^rxvt|color|ansi|cygwin|linux/i.test(Lt.TERM) || "COLORTERM" in Lt ? 1 :
    (Lt.TERM === "dumb", t);
  }
  s(noe, "supportsColor");
  function cD(e) {
    var t = noe(e);
    return roe(t);
  }
  s(cD, "getSupportLevel");
  o6.exports = {
    supportsColor: cD,
    stdout: cD(process.stdout),
    stderr: cD(process.stderr)
  };
});

// ../node_modules/@colors/colors/lib/custom/trap.js
var l6 = I((bSe, u6) => {
  u6.exports = /* @__PURE__ */ s(function(t, r) {
    var n = "";
    t = t || "Run the trap, drop the bass", t = t.split("");
    var i = {
      a: ["@", "\u0104", "\u023A", "\u0245", "\u0394", "\u039B", "\u0414"],
      b: ["\xDF", "\u0181", "\u0243", "\u026E", "\u03B2", "\u0E3F"],
      c: ["\xA9", "\u023B", "\u03FE"],
      d: ["\xD0", "\u018A", "\u0500", "\u0501", "\u0502", "\u0503"],
      e: [
        "\xCB",
        "\u0115",
        "\u018E",
        "\u0258",
        "\u03A3",
        "\u03BE",
        "\u04BC",
        "\u0A6C"
      ],
      f: ["\u04FA"],
      g: ["\u0262"],
      h: ["\u0126", "\u0195", "\u04A2", "\u04BA", "\u04C7", "\u050A"],
      i: ["\u0F0F"],
      j: ["\u0134"],
      k: ["\u0138", "\u04A0", "\u04C3", "\u051E"],
      l: ["\u0139"],
      m: ["\u028D", "\u04CD", "\u04CE", "\u0520", "\u0521", "\u0D69"],
      n: ["\xD1", "\u014B", "\u019D", "\u0376", "\u03A0", "\u048A"],
      o: [
        "\xD8",
        "\xF5",
        "\xF8",
        "\u01FE",
        "\u0298",
        "\u047A",
        "\u05DD",
        "\u06DD",
        "\u0E4F"
      ],
      p: ["\u01F7", "\u048E"],
      q: ["\u09CD"],
      r: ["\xAE", "\u01A6", "\u0210", "\u024C", "\u0280", "\u042F"],
      s: ["\xA7", "\u03DE", "\u03DF", "\u03E8"],
      t: ["\u0141", "\u0166", "\u0373"],
      u: ["\u01B1", "\u054D"],
      v: ["\u05D8"],
      w: ["\u0428", "\u0460", "\u047C", "\u0D70"],
      x: ["\u04B2", "\u04FE", "\u04FC", "\u04FD"],
      y: ["\xA5", "\u04B0", "\u04CB"],
      z: ["\u01B5", "\u0240"]
    };
    return t.forEach(function(o) {
      o = o.toLowerCase();
      var a = i[o] || [" "], u = Math.floor(Math.random() * a.length);
      typeof i[o] < "u" ? n += i[o][u] : n += o;
    }), n;
  }, "runTheTrap");
});

// ../node_modules/@colors/colors/lib/custom/zalgo.js
var p6 = I((ESe, c6) => {
  c6.exports = /* @__PURE__ */ s(function(t, r) {
    t = t || "   he is here   ";
    var n = {
      up: [
        "\u030D",
        "\u030E",
        "\u0304",
        "\u0305",
        "\u033F",
        "\u0311",
        "\u0306",
        "\u0310",
        "\u0352",
        "\u0357",
        "\u0351",
        "\u0307",
        "\u0308",
        "\u030A",
        "\u0342",
        "\u0313",
        "\u0308",
        "\u034A",
        "\u034B",
        "\u034C",
        "\u0303",
        "\u0302",
        "\u030C",
        "\u0350",
        "\u0300",
        "\u0301",
        "\u030B",
        "\u030F",
        "\u0312",
        "\u0313",
        "\u0314",
        "\u033D",
        "\u0309",
        "\u0363",
        "\u0364",
        "\u0365",
        "\u0366",
        "\u0367",
        "\u0368",
        "\u0369",
        "\u036A",
        "\u036B",
        "\u036C",
        "\u036D",
        "\u036E",
        "\u036F",
        "\u033E",
        "\u035B",
        "\u0346",
        "\u031A"
      ],
      down: [
        "\u0316",
        "\u0317",
        "\u0318",
        "\u0319",
        "\u031C",
        "\u031D",
        "\u031E",
        "\u031F",
        "\u0320",
        "\u0324",
        "\u0325",
        "\u0326",
        "\u0329",
        "\u032A",
        "\u032B",
        "\u032C",
        "\u032D",
        "\u032E",
        "\u032F",
        "\u0330",
        "\u0331",
        "\u0332",
        "\u0333",
        "\u0339",
        "\u033A",
        "\u033B",
        "\u033C",
        "\u0345",
        "\u0347",
        "\u0348",
        "\u0349",
        "\u034D",
        "\u034E",
        "\u0353",
        "\u0354",
        "\u0355",
        "\u0356",
        "\u0359",
        "\u035A",
        "\u0323"
      ],
      mid: [
        "\u0315",
        "\u031B",
        "\u0300",
        "\u0301",
        "\u0358",
        "\u0321",
        "\u0322",
        "\u0327",
        "\u0328",
        "\u0334",
        "\u0335",
        "\u0336",
        "\u035C",
        "\u035D",
        "\u035E",
        "\u035F",
        "\u0360",
        "\u0362",
        "\u0338",
        "\u0337",
        "\u0361",
        " \u0489"
      ]
    }, i = [].concat(n.up, n.down, n.mid);
    function o(l) {
      var c = Math.floor(Math.random() * l);
      return c;
    }
    s(o, "randomNumber");
    function a(l) {
      var c = !1;
      return i.filter(function(p) {
        c = p === l;
      }), c;
    }
    s(a, "isChar");
    function u(l, c) {
      var p = "", h, f;
      c = c || {}, c.up = typeof c.up < "u" ? c.up : !0, c.mid = typeof c.mid < "u" ? c.mid : !0, c.down = typeof c.down < "u" ? c.down : !0,
      c.size = typeof c.size < "u" ? c.size : "maxi", l = l.split("");
      for (f in l)
        if (!a(f)) {
          switch (p = p + l[f], h = { up: 0, down: 0, mid: 0 }, c.size) {
            case "mini":
              h.up = o(8), h.mid = o(2), h.down = o(8);
              break;
            case "maxi":
              h.up = o(16) + 3, h.mid = o(4) + 1, h.down = o(64) + 3;
              break;
            default:
              h.up = o(8) + 1, h.mid = o(6) / 2, h.down = o(8) + 1;
              break;
          }
          var d = ["up", "mid", "down"];
          for (var m in d)
            for (var g = d[m], b = 0; b <= h[g]; b++)
              c[g] && (p = p + n[g][o(n[g].length)]);
        }
      return p;
    }
    return s(u, "heComes"), u(t, r);
  }, "zalgo");
});

// ../node_modules/@colors/colors/lib/maps/america.js
var f6 = I((wSe, h6) => {
  h6.exports = function(e) {
    return function(t, r, n) {
      if (t === " ") return t;
      switch (r % 3) {
        case 0:
          return e.red(t);
        case 1:
          return e.white(t);
        case 2:
          return e.blue(t);
      }
    };
  };
});

// ../node_modules/@colors/colors/lib/maps/zebra.js
var m6 = I((SSe, d6) => {
  d6.exports = function(e) {
    return function(t, r, n) {
      return r % 2 === 0 ? t : e.inverse(t);
    };
  };
});

// ../node_modules/@colors/colors/lib/maps/rainbow.js
var y6 = I((ASe, g6) => {
  g6.exports = function(e) {
    var t = ["red", "yellow", "green", "blue", "magenta"];
    return function(r, n, i) {
      return r === " " ? r : e[t[n++ % t.length]](r);
    };
  };
});

// ../node_modules/@colors/colors/lib/maps/random.js
var x6 = I((FSe, D6) => {
  D6.exports = function(e) {
    var t = [
      "underline",
      "inverse",
      "grey",
      "yellow",
      "red",
      "green",
      "blue",
      "white",
      "cyan",
      "magenta",
      "brightYellow",
      "brightRed",
      "brightGreen",
      "brightBlue",
      "brightWhite",
      "brightCyan",
      "brightMagenta"
    ];
    return function(r, n, i) {
      return r === " " ? r : e[t[Math.round(Math.random() * (t.length - 2))]](r);
    };
  };
});

// ../node_modules/@colors/colors/lib/colors.js
var S6 = I((kSe, w6) => {
  var Ie = {};
  w6.exports = Ie;
  Ie.themes = {};
  var ioe = H("util"), Ki = Ie.styles = n6(), v6 = Object.defineProperties, soe = new RegExp(/[\r\n]+/g);
  Ie.supportsColor = a6().supportsColor;
  typeof Ie.enabled > "u" && (Ie.enabled = Ie.supportsColor() !== !1);
  Ie.enable = function() {
    Ie.enabled = !0;
  };
  Ie.disable = function() {
    Ie.enabled = !1;
  };
  Ie.stripColors = Ie.strip = function(e) {
    return ("" + e).replace(/\x1B\[\d+m/g, "");
  };
  var _Se = Ie.stylize = /* @__PURE__ */ s(function(t, r) {
    if (!Ie.enabled)
      return t + "";
    var n = Ki[r];
    return !n && r in Ie ? Ie[r](t) : n.open + t + n.close;
  }, "stylize"), ooe = /[|\\{}()[\]^$+*?.]/g, aoe = /* @__PURE__ */ s(function(e) {
    if (typeof e != "string")
      throw new TypeError("Expected a string");
    return e.replace(ooe, "\\$&");
  }, "escapeStringRegexp");
  function E6(e) {
    var t = /* @__PURE__ */ s(function r() {
      return loe.apply(r, arguments);
    }, "builder");
    return t._styles = e, t.__proto__ = uoe, t;
  }
  s(E6, "build");
  var C6 = function() {
    var e = {};
    return Ki.grey = Ki.gray, Object.keys(Ki).forEach(function(t) {
      Ki[t].closeRe = new RegExp(aoe(Ki[t].close), "g"), e[t] = {
        get: /* @__PURE__ */ s(function() {
          return E6(this._styles.concat(t));
        }, "get")
      };
    }), e;
  }(), uoe = v6(/* @__PURE__ */ s(function() {
  }, "colors"), C6);
  function loe() {
    var e = Array.prototype.slice.call(arguments), t = e.map(function(a) {
      return a != null && a.constructor === String ? a : ioe.inspect(a);
    }).join(" ");
    if (!Ie.enabled || !t)
      return t;
    for (var r = t.indexOf(`
`) != -1, n = this._styles, i = n.length; i--; ) {
      var o = Ki[n[i]];
      t = o.open + t.replace(o.closeRe, o.open) + o.close, r && (t = t.replace(soe, function(a) {
        return o.close + a + o.open;
      }));
    }
    return t;
  }
  s(loe, "applyStyle");
  Ie.setTheme = function(e) {
    if (typeof e == "string") {
      console.log("colors.setTheme now only accepts an object, not a string.  If you are trying to set a theme from a file, it is now your (\
the caller's) responsibility to require the file.  The old syntax looked like colors.setTheme(__dirname + '/../themes/generic-logging.js'); \
The new syntax looks like colors.setTheme(require(__dirname + '/../themes/generic-logging.js'));");
      return;
    }
    for (var t in e)
      (function(r) {
        Ie[r] = function(n) {
          if (typeof e[r] == "object") {
            var i = n;
            for (var o in e[r])
              i = Ie[e[r][o]](i);
            return i;
          }
          return Ie[e[r]](n);
        };
      })(t);
  };
  function coe() {
    var e = {};
    return Object.keys(C6).forEach(function(t) {
      e[t] = {
        get: /* @__PURE__ */ s(function() {
          return E6([t]);
        }, "get")
      };
    }), e;
  }
  s(coe, "init");
  var poe = /* @__PURE__ */ s(function(t, r) {
    var n = r.split("");
    return n = n.map(t), n.join("");
  }, "sequencer");
  Ie.trap = l6();
  Ie.zalgo = p6();
  Ie.maps = {};
  Ie.maps.america = f6()(Ie);
  Ie.maps.zebra = m6()(Ie);
  Ie.maps.rainbow = y6()(Ie);
  Ie.maps.random = x6()(Ie);
  for (b6 in Ie.maps)
    (function(e) {
      Ie[e] = function(t) {
        return poe(Ie.maps[e], t);
      };
    })(b6);
  var b6;
  v6(Ie, coe());
});

// ../node_modules/@colors/colors/safe.js
var F6 = I((ISe, A6) => {
  var hoe = S6();
  A6.exports = hoe;
});

// ../node_modules/cli-table3/src/cell.js
var I6 = I((PSe, cp) => {
  var { info: foe, debug: T6 } = up(), tr = lD(), hD = class e {
    static {
      s(this, "Cell");
    }
    /**
     * A representation of a cell within the table.
     * Implementations must have `init` and `draw` methods,
     * as well as `colSpan`, `rowSpan`, `desiredHeight` and `desiredWidth` properties.
     * @param options
     * @constructor
     */
    constructor(t) {
      this.setOptions(t), this.x = null, this.y = null;
    }
    setOptions(t) {
      ["boolean", "number", "bigint", "string"].indexOf(typeof t) !== -1 && (t = { content: "" + t }), t = t || {}, this.options = t;
      let r = t.content;
      if (["boolean", "number", "bigint", "string"].indexOf(typeof r) !== -1)
        this.content = String(r);
      else if (!r)
        this.content = this.options.href || "";
      else
        throw new Error("Content needs to be a primitive, got: " + typeof r);
      this.colSpan = t.colSpan || 1, this.rowSpan = t.rowSpan || 1, this.options.href && Object.defineProperty(this, "href", {
        get() {
          return this.options.href;
        }
      });
    }
    mergeTableOptions(t, r) {
      this.cells = r;
      let n = this.options.chars || {}, i = t.chars, o = this.chars = {};
      moe.forEach(function(l) {
        pD(n, i, l, o);
      }), this.truncate = this.options.truncate || t.truncate;
      let a = this.options.style = this.options.style || {}, u = t.style;
      pD(a, u, "padding-left", this), pD(a, u, "padding-right", this), this.head = a.head || u.head, this.border = a.border || u.border, this.
      fixedWidth = t.colWidths[this.x], this.lines = this.computeLines(t), this.desiredWidth = tr.strlen(this.content) + this.paddingLeft + this.
      paddingRight, this.desiredHeight = this.lines.length;
    }
    computeLines(t) {
      let r = t.wordWrap || t.textWrap, { wordWrap: n = r } = this.options;
      if (this.fixedWidth && n) {
        if (this.fixedWidth -= this.paddingLeft + this.paddingRight, this.colSpan) {
          let a = 1;
          for (; a < this.colSpan; )
            this.fixedWidth += t.colWidths[this.x + a], a++;
        }
        let { wrapOnWordBoundary: i = !0 } = t, { wrapOnWordBoundary: o = i } = this.options;
        return this.wrapLines(tr.wordWrap(this.fixedWidth, this.content, o));
      }
      return this.wrapLines(this.content.split(`
`));
    }
    wrapLines(t) {
      let r = tr.colorizeLines(t);
      return this.href ? r.map((n) => tr.hyperlink(this.href, n)) : r;
    }
    /**
     * Initializes the Cells data structure.
     *
     * @param tableOptions - A fully populated set of tableOptions.
     * In addition to the standard default values, tableOptions must have fully populated the
     * `colWidths` and `rowWidths` arrays. Those arrays must have lengths equal to the number
     * of columns or rows (respectively) in this table, and each array item must be a Number.
     *
     */
    init(t) {
      let r = this.x, n = this.y;
      this.widths = t.colWidths.slice(r, r + this.colSpan), this.heights = t.rowHeights.slice(n, n + this.rowSpan), this.width = this.widths.
      reduce(k6, -1), this.height = this.heights.reduce(k6, -1), this.hAlign = this.options.hAlign || t.colAligns[r], this.vAlign = this.options.
      vAlign || t.rowAligns[n], this.drawRight = r + this.colSpan == t.colWidths.length;
    }
    /**
     * Draws the given line of the cell.
     * This default implementation defers to methods `drawTop`, `drawBottom`, `drawLine` and `drawEmpty`.
     * @param lineNum - can be `top`, `bottom` or a numerical line number.
     * @param spanningCell - will be a number if being called from a RowSpanCell, and will represent how
     * many rows below it's being called from. Otherwise it's undefined.
     * @returns {String} The representation of this line.
     */
    draw(t, r) {
      if (t == "top") return this.drawTop(this.drawRight);
      if (t == "bottom") return this.drawBottom(this.drawRight);
      let n = tr.truncate(this.content, 10, this.truncate);
      t || foe(`${this.y}-${this.x}: ${this.rowSpan - t}x${this.colSpan} Cell ${n}`);
      let i = Math.max(this.height - this.lines.length, 0), o;
      switch (this.vAlign) {
        case "center":
          o = Math.ceil(i / 2);
          break;
        case "bottom":
          o = i;
          break;
        default:
          o = 0;
      }
      if (t < o || t >= o + this.lines.length)
        return this.drawEmpty(this.drawRight, r);
      let a = this.lines.length > this.height && t + 1 >= this.height;
      return this.drawLine(t - o, this.drawRight, a, r);
    }
    /**
     * Renders the top line of the cell.
     * @param drawRight - true if this method should render the right edge of the cell.
     * @returns {String}
     */
    drawTop(t) {
      let r = [];
      return this.cells ? this.widths.forEach(function(n, i) {
        r.push(this._topLeftChar(i)), r.push(tr.repeat(this.chars[this.y == 0 ? "top" : "mid"], n));
      }, this) : (r.push(this._topLeftChar(0)), r.push(tr.repeat(this.chars[this.y == 0 ? "top" : "mid"], this.width))), t && r.push(this.chars[this.
      y == 0 ? "topRight" : "rightMid"]), this.wrapWithStyleColors("border", r.join(""));
    }
    _topLeftChar(t) {
      let r = this.x + t, n;
      if (this.y == 0)
        n = r == 0 ? "topLeft" : t == 0 ? "topMid" : "top";
      else if (r == 0)
        n = "leftMid";
      else if (n = t == 0 ? "midMid" : "bottomMid", this.cells && (this.cells[this.y - 1][r] instanceof e.ColSpanCell && (n = t == 0 ? "topM\
id" : "mid"), t == 0)) {
        let o = 1;
        for (; this.cells[this.y][r - o] instanceof e.ColSpanCell; )
          o++;
        this.cells[this.y][r - o] instanceof e.RowSpanCell && (n = "leftMid");
      }
      return this.chars[n];
    }
    wrapWithStyleColors(t, r) {
      if (this[t] && this[t].length)
        try {
          let n = F6();
          for (let i = this[t].length - 1; i >= 0; i--)
            n = n[this[t][i]];
          return n(r);
        } catch {
          return r;
        }
      else
        return r;
    }
    /**
     * Renders a line of text.
     * @param lineNum - Which line of text to render. This is not necessarily the line within the cell.
     * There may be top-padding above the first line of text.
     * @param drawRight - true if this method should render the right edge of the cell.
     * @param forceTruncationSymbol - `true` if the rendered text should end with the truncation symbol even
     * if the text fits. This is used when the cell is vertically truncated. If `false` the text should
     * only include the truncation symbol if the text will not fit horizontally within the cell width.
     * @param spanningCell - a number of if being called from a RowSpanCell. (how many rows below). otherwise undefined.
     * @returns {String}
     */
    drawLine(t, r, n, i) {
      let o = this.chars[this.x == 0 ? "left" : "middle"];
      if (this.x && i && this.cells) {
        let f = this.cells[this.y + i][this.x - 1];
        for (; f instanceof Ha; )
          f = this.cells[f.y][f.x - 1];
        f instanceof Ga || (o = this.chars.rightMid);
      }
      let a = tr.repeat(" ", this.paddingLeft), u = r ? this.chars.right : "", l = tr.repeat(" ", this.paddingRight), c = this.lines[t], p = this.
      width - (this.paddingLeft + this.paddingRight);
      n && (c += this.truncate || "\u2026");
      let h = tr.truncate(c, p, this.truncate);
      return h = tr.pad(h, p, " ", this.hAlign), h = a + h + l, this.stylizeLine(o, h, u);
    }
    stylizeLine(t, r, n) {
      return t = this.wrapWithStyleColors("border", t), n = this.wrapWithStyleColors("border", n), this.y === 0 && (r = this.wrapWithStyleColors(
      "head", r)), t + r + n;
    }
    /**
     * Renders the bottom line of the cell.
     * @param drawRight - true if this method should render the right edge of the cell.
     * @returns {String}
     */
    drawBottom(t) {
      let r = this.chars[this.x == 0 ? "bottomLeft" : "bottomMid"], n = tr.repeat(this.chars.bottom, this.width), i = t ? this.chars.bottomRight :
      "";
      return this.wrapWithStyleColors("border", r + n + i);
    }
    /**
     * Renders a blank line of text within the cell. Used for top and/or bottom padding.
     * @param drawRight - true if this method should render the right edge of the cell.
     * @param spanningCell - a number of if being called from a RowSpanCell. (how many rows below). otherwise undefined.
     * @returns {String}
     */
    drawEmpty(t, r) {
      let n = this.chars[this.x == 0 ? "left" : "middle"];
      if (this.x && r && this.cells) {
        let a = this.cells[this.y + r][this.x - 1];
        for (; a instanceof Ha; )
          a = this.cells[a.y][a.x - 1];
        a instanceof Ga || (n = this.chars.rightMid);
      }
      let i = t ? this.chars.right : "", o = tr.repeat(" ", this.width);
      return this.stylizeLine(n, o, i);
    }
  }, Ha = class {
    static {
      s(this, "ColSpanCell");
    }
    /**
     * A Cell that doesn't do anything. It just draws empty lines.
     * Used as a placeholder in column spanning.
     * @constructor
     */
    constructor() {
    }
    draw(t) {
      return typeof t == "number" && T6(`${this.y}-${this.x}: 1x1 ColSpanCell`), "";
    }
    init() {
    }
    mergeTableOptions() {
    }
  }, Ga = class {
    static {
      s(this, "RowSpanCell");
    }
    /**
     * A placeholder Cell for a Cell that spans multiple rows.
     * It delegates rendering to the original cell, but adds the appropriate offset.
     * @param originalCell
     * @constructor
     */
    constructor(t) {
      this.originalCell = t;
    }
    init(t) {
      let r = this.y, n = this.originalCell.y;
      this.cellOffset = r - n, this.offset = doe(t.rowHeights, n, this.cellOffset);
    }
    draw(t) {
      return t == "top" ? this.originalCell.draw(this.offset, this.cellOffset) : t == "bottom" ? this.originalCell.draw("bottom") : (T6(`${this.
      y}-${this.x}: 1x${this.colSpan} RowSpanCell for ${this.originalCell.content}`), this.originalCell.draw(this.offset + 1 + t));
    }
    mergeTableOptions() {
    }
  };
  function _6(...e) {
    return e.filter((t) => t != null).shift();
  }
  s(_6, "firstDefined");
  function pD(e, t, r, n) {
    let i = r.split("-");
    i.length > 1 ? (i[1] = i[1].charAt(0).toUpperCase() + i[1].substr(1), i = i.join(""), n[i] = _6(e[i], e[r], t[i], t[r])) : n[r] = _6(e[r],
    t[r]);
  }
  s(pD, "setOption");
  function doe(e, t, r) {
    let n = e[t];
    for (let i = 1; i < r; i++)
      n += 1 + e[t + i];
    return n;
  }
  s(doe, "findDimension");
  function k6(e, t) {
    return e + t + 1;
  }
  s(k6, "sumPlusOne");
  var moe = [
    "top",
    "top-mid",
    "top-left",
    "top-right",
    "bottom",
    "bottom-mid",
    "bottom-left",
    "bottom-right",
    "left",
    "left-mid",
    "mid",
    "mid-mid",
    "right",
    "right-mid",
    "middle"
  ];
  cp.exports = hD;
  cp.exports.ColSpanCell = Ha;
  cp.exports.RowSpanCell = Ga;
});

// ../node_modules/cli-table3/src/layout-manager.js
var O6 = I((OSe, B6) => {
  var { warn: goe, debug: yoe } = up(), fD = I6(), { ColSpanCell: Doe, RowSpanCell: xoe } = fD;
  (function() {
    function e(d, m) {
      return d[m] > 0 ? e(d, m + 1) : m;
    }
    s(e, "next");
    function t(d) {
      let m = {};
      d.forEach(function(g, b) {
        let y = 0;
        g.forEach(function(E) {
          E.y = b, E.x = b ? e(m, y) : y;
          let A = E.rowSpan || 1, k = E.colSpan || 1;
          if (A > 1)
            for (let O = 0; O < k; O++)
              m[E.x + O] = A;
          y = E.x + k;
        }), Object.keys(m).forEach((E) => {
          m[E]--, m[E] < 1 && delete m[E];
        });
      });
    }
    s(t, "layoutTable");
    function r(d) {
      let m = 0;
      return d.forEach(function(g) {
        g.forEach(function(b) {
          m = Math.max(m, b.x + (b.colSpan || 1));
        });
      }), m;
    }
    s(r, "maxWidth");
    function n(d) {
      return d.length;
    }
    s(n, "maxHeight");
    function i(d, m) {
      let g = d.y, b = d.y - 1 + (d.rowSpan || 1), y = m.y, E = m.y - 1 + (m.rowSpan || 1), A = !(g > E || y > b), k = d.x, O = d.x - 1 + (d.
      colSpan || 1), w = m.x, C = m.x - 1 + (m.colSpan || 1), T = !(k > C || w > O);
      return A && T;
    }
    s(i, "cellsConflict");
    function o(d, m, g) {
      let b = Math.min(d.length - 1, g), y = { x: m, y: g };
      for (let E = 0; E <= b; E++) {
        let A = d[E];
        for (let k = 0; k < A.length; k++)
          if (i(y, A[k]))
            return !0;
      }
      return !1;
    }
    s(o, "conflictExists");
    function a(d, m, g, b) {
      for (let y = g; y < b; y++)
        if (o(d, y, m))
          return !1;
      return !0;
    }
    s(a, "allBlank");
    function u(d) {
      d.forEach(function(m, g) {
        m.forEach(function(b) {
          for (let y = 1; y < b.rowSpan; y++) {
            let E = new xoe(b);
            E.x = b.x, E.y = b.y + y, E.colSpan = b.colSpan, c(E, d[g + y]);
          }
        });
      });
    }
    s(u, "addRowSpanCells");
    function l(d) {
      for (let m = d.length - 1; m >= 0; m--) {
        let g = d[m];
        for (let b = 0; b < g.length; b++) {
          let y = g[b];
          for (let E = 1; E < y.colSpan; E++) {
            let A = new Doe();
            A.x = y.x + E, A.y = y.y, g.splice(b + 1, 0, A);
          }
        }
      }
    }
    s(l, "addColSpanCells");
    function c(d, m) {
      let g = 0;
      for (; g < m.length && m[g].x < d.x; )
        g++;
      m.splice(g, 0, d);
    }
    s(c, "insertCell");
    function p(d) {
      let m = n(d), g = r(d);
      yoe(`Max rows: ${m}; Max cols: ${g}`);
      for (let b = 0; b < m; b++)
        for (let y = 0; y < g; y++)
          if (!o(d, y, b)) {
            let E = { x: y, y: b, colSpan: 1, rowSpan: 1 };
            for (y++; y < g && !o(d, y, b); )
              E.colSpan++, y++;
            let A = b + 1;
            for (; A < m && a(d, A, E.x, E.x + E.colSpan); )
              E.rowSpan++, A++;
            let k = new fD(E);
            k.x = E.x, k.y = E.y, goe(`Missing cell at ${k.y}-${k.x}.`), c(k, d[b]);
          }
    }
    s(p, "fillInTable");
    function h(d) {
      return d.map(function(m) {
        if (!Array.isArray(m)) {
          let g = Object.keys(m)[0];
          m = m[g], Array.isArray(m) ? (m = m.slice(), m.unshift(g)) : m = [g, m];
        }
        return m.map(function(g) {
          return new fD(g);
        });
      });
    }
    s(h, "generateCells");
    function f(d) {
      let m = h(d);
      return t(m), p(m), u(m), l(m), m;
    }
    s(f, "makeTableLayout"), B6.exports = {
      makeTableLayout: f,
      layoutTable: t,
      addRowSpanCells: u,
      maxWidth: r,
      fillInTable: p,
      computeWidths: P6("colSpan", "desiredWidth", "x", 1),
      computeHeights: P6("rowSpan", "desiredHeight", "y", 1)
    };
  })();
  function P6(e, t, r, n) {
    return function(i, o) {
      let a = [], u = [], l = {};
      o.forEach(function(c) {
        c.forEach(function(p) {
          (p[e] || 1) > 1 ? u.push(p) : a[p[r]] = Math.max(a[p[r]] || 0, p[t] || 0, n);
        });
      }), i.forEach(function(c, p) {
        typeof c == "number" && (a[p] = c);
      });
      for (let c = u.length - 1; c >= 0; c--) {
        let p = u[c], h = p[e], f = p[r], d = a[f], m = typeof i[f] == "number" ? 0 : 1;
        if (typeof d == "number")
          for (let g = 1; g < h; g++)
            d += 1 + a[f + g], typeof i[f + g] != "number" && m++;
        else
          d = t === "desiredWidth" ? p.desiredWidth - 1 : 1, (!l[f] || l[f] < d) && (l[f] = d);
        if (p[t] > d) {
          let g = 0;
          for (; m > 0 && p[t] > d; ) {
            if (typeof i[f + g] != "number") {
              let b = Math.round((p[t] - d) / m);
              d += b, a[f + g] += b, m--;
            }
            g++;
          }
        }
      }
      Object.assign(i, a, l);
      for (let c = 0; c < i.length; c++)
        i[c] = Math.max(n, i[c] || 0);
    };
  }
  s(P6, "makeComputeWidths");
});

// ../node_modules/cli-table3/src/table.js
var N6 = I((NSe, R6) => {
  var Pn = up(), boe = lD(), dD = O6(), pp = class extends Array {
    static {
      s(this, "Table");
    }
    constructor(t) {
      super();
      let r = boe.mergeOptions(t);
      if (Object.defineProperty(this, "options", {
        value: r,
        enumerable: r.debug
      }), r.debug) {
        switch (typeof r.debug) {
          case "boolean":
            Pn.setDebugLevel(Pn.WARN);
            break;
          case "number":
            Pn.setDebugLevel(r.debug);
            break;
          case "string":
            Pn.setDebugLevel(parseInt(r.debug, 10));
            break;
          default:
            Pn.setDebugLevel(Pn.WARN), Pn.warn(`Debug option is expected to be boolean, number, or string. Received a ${typeof r.debug}`);
        }
        Object.defineProperty(this, "messages", {
          get() {
            return Pn.debugMessages();
          }
        });
      }
    }
    toString() {
      let t = this, r = this.options.head && this.options.head.length;
      r ? (t = [this.options.head], this.length && t.push.apply(t, this)) : this.options.style.head = [];
      let n = dD.makeTableLayout(t);
      n.forEach(function(o) {
        o.forEach(function(a) {
          a.mergeTableOptions(this.options, n);
        }, this);
      }, this), dD.computeWidths(this.options.colWidths, n), dD.computeHeights(this.options.rowHeights, n), n.forEach(function(o) {
        o.forEach(function(a) {
          a.init(this.options);
        }, this);
      }, this);
      let i = [];
      for (let o = 0; o < n.length; o++) {
        let a = n[o], u = this.options.rowHeights[o];
        (o === 0 || !this.options.style.compact || o == 1 && r) && mD(a, "top", i);
        for (let l = 0; l < u; l++)
          mD(a, l, i);
        o + 1 == n.length && mD(a, "bottom", i);
      }
      return i.join(`
`);
    }
    get width() {
      return this.toString().split(`
`)[0].length;
    }
  };
  pp.reset = () => Pn.reset();
  function mD(e, t, r) {
    let n = [];
    e.forEach(function(o) {
      n.push(o.draw(t));
    });
    let i = n.join("");
    i.length && r.push(i);
  }
  s(mD, "doDraw");
  R6.exports = pp;
});

// ../node_modules/cli-table3/index.js
var j6 = I((jSe, L6) => {
  L6.exports = N6();
});

// ../node_modules/pretty-hrtime/index.js
var $6 = I((MSe, q6) => {
  "use strict";
  var voe = ["h", "min", "s", "ms", "\u03BCs", "ns"], Eoe = ["hour", "minute", "second", "millisecond", "microsecond", "nanosecond"], M6 = [
  3600, 60, 1, 1e6, 1e3, 1];
  q6.exports = function(e, t) {
    var r, n, i, o, a, u, l, c, p, h;
    if (r = !1, n = !1, t && (r = t.verbose || !1, n = t.precise || !1), !Array.isArray(e) || e.length !== 2 || typeof e[0] != "number" || typeof e[1] !=
    "number")
      return "";
    for (e[1] < 0 && (h = e[0] + e[1] / 1e9, e[0] = parseInt(h), e[1] = parseFloat((h % 1).toPrecision(9)) * 1e9), p = "", i = 0; i < 6 && (o =
    i < 3 ? 0 : 1, a = e[o], i !== 3 && i !== 0 && (a = a % M6[i - 1]), i === 2 && (a += e[1] / 1e9), u = a / M6[i], !(u >= 1 && (r && (u = Math.
    floor(u)), n ? c = u.toString() : (l = u >= 10 ? 0 : 2, c = u.toFixed(l)), c.indexOf(".") > -1 && c[c.length - 1] === "0" && (c = c.replace(
    /\.?0+$/, "")), p && (p += " "), p += c, r ? (p += " " + Eoe[i], c !== "1" && (p += "s")) : p += " " + voe[i], !r))); i++)
      ;
    return p;
  };
});

// src/core-server/index.ts
import { getPreviewHeadTemplate as TFe, getPreviewBodyTemplate as IFe } from "storybook/internal/common";

// src/core-server/build-static.ts
var uA = fe(Ar(), 1);
import { cp as aH, mkdir as uH } from "node:fs/promises";
import { rm as lH } from "node:fs/promises";
import { dirname as cH, join as Ll, relative as pH, resolve as sA } from "node:path";
import {
  loadAllPresets as oA,
  loadMainConfig as hH,
  logConfig as fH,
  normalizeStories as dH,
  resolveAddonName as mH
} from "storybook/internal/common";
import { logger as Zn } from "storybook/internal/node-logger";
import { getPrecedingUpgrade as gH, telemetry as aA } from "storybook/internal/telemetry";
import { global as yH } from "@storybook/global";

// src/core-server/utils/StoryIndexGenerator.ts
import { existsSync as u2 } from "node:fs";
import { readFile as l2 } from "node:fs/promises";
import { dirname as d2, extname as IU, join as yl, normalize as c2, relative as Xo, resolve as Ko, sep as PU } from "node:path";
import { commonGlobOptions as BU, getProjectRoot as OU, normalizeStoryPath as Dl } from "storybook/internal/common";
import { combineTags as Qd, storyNameFromExport as p2, toId as em } from "storybook/internal/csf";
import { getStorySortParameter as RU, loadConfig as NU } from "storybook/internal/csf-tools";
import { logger as tm, once as h2 } from "storybook/internal/node-logger";
import { isExampleStoryId as LU } from "storybook/internal/telemetry";

// ../node_modules/find-up/index.js
import qr from "node:path";

// ../node_modules/locate-path/index.js
import kD from "node:process";
import TD from "node:path";
import FD, { promises as _D } from "node:fs";
import { fileURLToPath as F8 } from "node:url";

// ../node_modules/locate-path/node_modules/p-limit/index.js
AD();
function Ka(e) {
  if (!((Number.isInteger(e) || e === Number.POSITIVE_INFINITY) && e > 0))
    throw new TypeError("Expected `concurrency` to be a number from 1 and up");
  let t = new Do(), r = 0, n = /* @__PURE__ */ s(() => {
    r--, t.size > 0 && t.dequeue()();
  }, "next"), i = /* @__PURE__ */ s(async (u, l, c) => {
    r++;
    let p = (async () => u(...c))();
    l(p);
    try {
      await p;
    } catch {
    }
    n();
  }, "run"), o = /* @__PURE__ */ s((u, l, c) => {
    t.enqueue(i.bind(void 0, u, l, c)), (async () => (await Promise.resolve(), r < e && t.size > 0 && t.dequeue()()))();
  }, "enqueue"), a = /* @__PURE__ */ s((u, ...l) => new Promise((c) => {
    o(u, c, l);
  }), "generator");
  return Object.defineProperties(a, {
    activeCount: {
      get: /* @__PURE__ */ s(() => r, "get")
    },
    pendingCount: {
      get: /* @__PURE__ */ s(() => t.size, "get")
    },
    clearQueue: {
      value: /* @__PURE__ */ s(() => {
        t.clear();
      }, "value")
    }
  }), a;
}
s(Ka, "pLimit");

// ../node_modules/locate-path/node_modules/p-locate/index.js
var Ya = class extends Error {
  static {
    s(this, "EndError");
  }
  constructor(t) {
    super(), this.value = t;
  }
}, S8 = /* @__PURE__ */ s(async (e, t) => t(await e), "testElement"), A8 = /* @__PURE__ */ s(async (e) => {
  let t = await Promise.all(e);
  if (t[1] === !0)
    throw new Ya(t[0]);
  return !1;
}, "finder");
async function vp(e, t, {
  concurrency: r = Number.POSITIVE_INFINITY,
  preserveOrder: n = !0
} = {}) {
  let i = Ka(r), o = [...e].map((u) => [u, i(S8, u, t)]), a = Ka(n ? 1 : Number.POSITIVE_INFINITY);
  try {
    await Promise.all(o.map((u) => a(A8, u)));
  } catch (u) {
    if (u instanceof Ya)
      return u.value;
    throw u;
  }
}
s(vp, "pLocate");

// ../node_modules/locate-path/index.js
var ID = {
  directory: "isDirectory",
  file: "isFile"
};
function PD(e) {
  if (!Object.hasOwnProperty.call(ID, e))
    throw new Error(`Invalid type specified: ${e}`);
}
s(PD, "checkType");
var BD = /* @__PURE__ */ s((e, t) => t[ID[e]](), "matchType"), OD = /* @__PURE__ */ s((e) => e instanceof URL ? F8(e) : e, "toPath");
async function Qa(e, {
  cwd: t = kD.cwd(),
  type: r = "file",
  allowSymlinks: n = !0,
  concurrency: i,
  preserveOrder: o
} = {}) {
  PD(r), t = OD(t);
  let a = n ? _D.stat : _D.lstat;
  return vp(e, async (u) => {
    try {
      let l = await a(TD.resolve(t, u));
      return BD(r, l);
    } catch {
      return !1;
    }
  }, { concurrency: i, preserveOrder: o });
}
s(Qa, "locatePath");
function Yi(e, {
  cwd: t = kD.cwd(),
  type: r = "file",
  allowSymlinks: n = !0
} = {}) {
  PD(r), t = OD(t);
  let i = n ? FD.statSync : FD.lstatSync;
  for (let o of e)
    try {
      let a = i(TD.resolve(t, o), {
        throwIfNoEntry: !1
      });
      if (!a)
        continue;
      if (BD(r, a))
        return o;
    } catch {
    }
}
s(Yi, "locatePathSync");

// ../node_modules/find-up/node_modules/unicorn-magic/node.js
import { fileURLToPath as _8 } from "node:url";
function xo(e) {
  return e instanceof URL ? _8(e) : e;
}
s(xo, "toPath");

// ../node_modules/find-up/node_modules/path-exists/index.js
import zae, { promises as Hae } from "node:fs";

// ../node_modules/find-up/index.js
var RD = Symbol("findUpStop");
async function k8(e, t = {}) {
  let r = qr.resolve(xo(t.cwd) ?? ""), { root: n } = qr.parse(r), i = qr.resolve(r, xo(t.stopAt ?? n)), o = t.limit ?? Number.POSITIVE_INFINITY,
  a = [e].flat(), u = /* @__PURE__ */ s(async (c) => {
    if (typeof e != "function")
      return Qa(a, c);
    let p = await e(c.cwd);
    return typeof p == "string" ? Qa([p], c) : p;
  }, "runMatcher"), l = [];
  for (; ; ) {
    let c = await u({ ...t, cwd: r });
    if (c === RD || (c && l.push(qr.resolve(r, c)), r === i || l.length >= o))
      break;
    r = qr.dirname(r);
  }
  return l;
}
s(k8, "findUpMultiple");
function T8(e, t = {}) {
  let r = qr.resolve(xo(t.cwd) ?? ""), { root: n } = qr.parse(r), i = qr.resolve(r, xo(t.stopAt) ?? n), o = t.limit ?? Number.POSITIVE_INFINITY,
  a = [e].flat(), u = /* @__PURE__ */ s((c) => {
    if (typeof e != "function")
      return Yi(a, c);
    let p = e(c.cwd);
    return typeof p == "string" ? Yi([p], c) : p;
  }, "runMatcher"), l = [];
  for (; ; ) {
    let c = u({ ...t, cwd: r });
    if (c === RD || (c && l.push(qr.resolve(r, c)), r === i || l.length >= o))
      break;
    r = qr.dirname(r);
  }
  return l;
}
s(T8, "findUpMultipleSync");
async function eu(e, t = {}) {
  return (await k8(e, { ...t, limit: 1 }))[0];
}
s(eu, "findUp");
function bo(e, t = {}) {
  return T8(e, { ...t, limit: 1 })[0];
}
s(bo, "findUpSync");

// src/core-server/utils/StoryIndexGenerator.ts
var rm = fe(Ar(), 1);
hi();

// ../node_modules/tiny-invariant/dist/esm/tiny-invariant.js
var I8 = process.env.NODE_ENV === "production", Ep = "Invariant failed";
function kt(e, t) {
  if (!e) {
    if (I8)
      throw new Error(Ep);
    var r = typeof t == "function" ? t() : t, n = r ? "".concat(Ep, ": ").concat(r) : Ep;
    throw new Error(n);
  }
}
s(kt, "invariant");

// src/core-server/utils/StoryIndexGenerator.ts
var nm = fe(Tt(), 1), xl = fe(yx(), 1);

// src/preview-api/modules/store/autoTitle.ts
hi();
var xx = fe(Tt(), 1);
import { once as vR } from "storybook/internal/client-logger";
var ER = /* @__PURE__ */ s((e) => {
  if (e.length === 0)
    return e;
  let t = e[e.length - 1], r = t?.replace(/(?:[.](?:story|stories))?([.][^.]+)$/i, "");
  if (e.length === 1)
    return [r];
  let n = e[e.length - 2];
  return r && n && r.toLowerCase() === n.toLowerCase() ? [...e.slice(0, -2), r] : r && (/^(story|stories)([.][^.]+)$/i.test(t) || /^index$/i.
  test(r)) ? e.slice(0, -1) : [...e.slice(0, -1), r];
}, "sanitize");
function Dx(e) {
  return e.flatMap((t) => t.split("/")).filter(Boolean).join("/");
}
s(Dx, "pathJoin");
var qp = /* @__PURE__ */ s((e, t, r) => {
  let { directory: n, importPathMatcher: i, titlePrefix: o = "" } = t || {};
  typeof e == "number" && vR.warn(xx.dedent`
      CSF Auto-title received a numeric fileName. This typically happens when
      webpack is mis-configured in production mode. To force webpack to produce
      filenames, set optimization.moduleIds = "named" in your webpack config.
    `);
  let a = it(String(e));
  if (i.exec(a)) {
    if (!r) {
      let u = a.replace(n, ""), l = Dx([o, u]).split("/");
      return l = ER(l), l.join("/");
    }
    return o ? Dx([o, r]) : r;
  }
}, "userOrAutoTitleFromSpecifier");

// src/preview-api/modules/store/sortStories.ts
var Ex = fe(Tt(), 1);

// src/preview-api/modules/store/storySort.ts
var bx = /\s*\/\s*/, vx = /* @__PURE__ */ s((e = {}) => (t, r) => {
  if (t.title === r.title && !e.includeNames)
    return 0;
  let n = e.method || "configure", i = e.order || [], o = t.title.trim().split(bx), a = r.title.trim().split(bx);
  e.includeNames && (o.push(t.name), a.push(r.name));
  let u = 0;
  for (; o[u] || a[u]; ) {
    if (!o[u])
      return -1;
    if (!a[u])
      return 1;
    let l = o[u], c = a[u];
    if (l !== c) {
      let h = i.indexOf(l), f = i.indexOf(c), d = i.indexOf("*");
      return h !== -1 || f !== -1 ? (h === -1 && (d !== -1 ? h = d : h = i.length), f === -1 && (d !== -1 ? f = d : f = i.length), h - f) : n ===
      "configure" ? 0 : l.localeCompare(c, e.locales ? e.locales : void 0, {
        numeric: !0,
        sensitivity: "accent"
      });
    }
    let p = i.indexOf(l);
    p === -1 && (p = i.indexOf("*")), i = p !== -1 && Array.isArray(i[p + 1]) ? i[p + 1] : [], u += 1;
  }
  return 0;
}, "storySort");

// src/preview-api/modules/store/sortStories.ts
var CR = /* @__PURE__ */ s((e, t, r) => {
  if (t) {
    let n;
    typeof t == "function" ? n = t : n = vx(t), e.sort(n);
  } else
    e.sort(
      (n, i) => r.indexOf(n.importPath) - r.indexOf(i.importPath)
    );
  return e;
}, "sortStoriesCommon"), Cx = /* @__PURE__ */ s((e, t, r) => {
  try {
    return CR(e, t, r);
  } catch (n) {
    throw new Error(Ex.dedent`
    Error sorting stories with sort parameter ${t}:

    > ${n.message}
    
    Are you using a V6-style sort function in V7 mode?

    More info: https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#v7-style-story-sort
  `);
  }
}, "sortStoriesV7");

// src/core-server/utils/IndexingError.ts
hi();
var Vr = class extends Error {
  static {
    s(this, "IndexingError");
  }
  constructor(t, r, n) {
    super(), this.message = t, this.importPaths = r, n && (this.stack = n);
  }
  pathsString() {
    return this.importPaths.length === 1 ? `${it(this.importPaths[0])}` : `${this.importPaths.map(it).join(",")}`;
  }
  toString() {
    return `${this.pathsString()}: ${this.message}`;
  }
}, Ao = class extends Error {
  constructor(r) {
    super();
    this.indexingErrors = r;
    if (this.indexingErrors.length === 0)
      throw new Error("Unexpected empty error list");
    if (this.indexingErrors.length === 1) {
      let [n] = this.indexingErrors;
      this.message = `Unable to index ${n.pathsString()}`;
    } else
      this.message = `Unable to index files:
${this.indexingErrors.map((n) => `- ${n}`).join(`
`)}`;
  }
  static {
    s(this, "MultipleIndexingError");
  }
  toString() {
    return this.indexingErrors.length === 1 ? `${this.message}:
  ${this.indexingErrors[0].stack}` : this.message;
  }
};

// src/core-server/utils/autoName.ts
import { basename as wx } from "node:path";
function Sx(e, t, r) {
  let n = wx(e), i = wx(t), [o] = n.split("."), [a] = i.split(".");
  return o === a ? r : o;
}
s(Sx, "autoName");

// src/core-server/utils/summarizeStats.ts
var Ax = /* @__PURE__ */ s((e, t) => {
  Object.entries(e).forEach(([r, n]) => {
    let i = r;
    t[i] || (t[i] = 0), t[i] += n ? 1 : 0;
  });
}, "addStats");

// src/core-server/utils/StoryIndexGenerator.ts
var Ps = "autodocs", jU = "attached-mdx", MU = "unattached-mdx", m2 = "play-fn";
function vi({ tags: e }) {
  return e?.includes(MU) || e?.includes(jU);
}
s(vi, "isMdxEntry");
var f2 = /* @__PURE__ */ s((e, t, r) => e.startsWith(".") ? it(Ko(r, Dl(yl(d2(t), e)))) : e, "makeAbsolute"), vn = class e {
  constructor(t, r) {
    this.specifiers = t;
    this.options = r;
    this.specifierToCache = /* @__PURE__ */ new Map();
  }
  static {
    s(this, "StoryIndexGenerator");
  }
  static {
    /** Cache for findMatchingFiles results */
    this.findMatchingFilesCache = /* @__PURE__ */ new Map();
  }
  /** Generate a cache key for findMatchingFiles */
  static getFindMatchingFilesCacheKey(t, r, n) {
    return JSON.stringify({
      directory: t.directory,
      files: t.files,
      workingDir: r,
      ignoreWarnings: n
    });
  }
  /** Clear the findMatchingFiles cache */
  static clearFindMatchingFilesCache() {
    this.findMatchingFilesCache.clear();
  }
  static async findMatchingFiles(t, r, n = !1) {
    let i = this.getFindMatchingFilesCacheKey(t, r, n), o = this.findMatchingFilesCache.get(i);
    if (o)
      return o;
    let a = {}, u = it(yl(t.directory, t.files)), { globby: l } = await Promise.resolve().then(() => (Hf(), zf)), c = await l(u, {
      absolute: !0,
      cwd: r,
      ...BU(u)
    });
    return c.length === 0 && !n && h2.warn(
      `No story files found for the specified pattern: ${rm.default.blue(
        yl(t.directory, t.files)
      )}`
    ), c.sort().forEach((p) => {
      let h = IU(p);
      if (h === ".storyshot") {
        let f = Xo(r, p);
        tm.info(`Skipping ${h} file ${f}`);
        return;
      }
      a[p] = !1;
    }), this.findMatchingFilesCache.set(i, a), a;
  }
  static async findMatchingFilesForSpecifiers(t, r, n = !1) {
    return Promise.all(
      t.map(async (i) => {
        let o = await e.findMatchingFiles(
          i,
          r,
          n
        );
        return [i, o];
      })
    );
  }
  async initialize() {
    (await e.findMatchingFilesForSpecifiers(
      this.specifiers,
      this.options.workingDir
    )).forEach(
      ([i, o]) => this.specifierToCache.set(i, o)
    );
    let r = await this.getPreviewCode(), n = this.getProjectTags(r);
    await this.ensureExtracted({ projectTags: n });
  }
  /** Run the updater function over all the empty cache entries */
  async updateExtracted(t, r = !1) {
    await Promise.all(
      this.specifiers.map(async (n) => {
        let i = this.specifierToCache.get(n);
        return kt(
          i,
          `specifier does not have a matching cache entry in specifierToCache: ${JSON.stringify(
            n
          )}`
        ), Promise.all(
          Object.keys(i).map(async (o) => {
            if (!(i[o] && !r))
              try {
                i[o] = await t(n, o, i[o]);
              } catch (a) {
                let u = `.${PU}${Xo(this.options.workingDir, o)}`;
                i[o] = {
                  type: "error",
                  err: new Vr(
                    a instanceof Error ? a.message : String(a),
                    [u],
                    a instanceof Error ? a.stack : void 0
                  )
                };
              }
          })
        );
      })
    );
  }
  isDocsMdx(t) {
    return /(?<!\.stories)\.mdx$/i.test(t);
  }
  async ensureExtracted({
    projectTags: t
  }) {
    await this.updateExtracted(
      async (i, o) => this.isDocsMdx(o) ? !1 : this.extractStories(i, o, t)
    ), await this.updateExtracted(
      async (i, o) => this.extractDocs(i, o, t)
    );
    let r = {};
    return { entries: this.specifiers.flatMap((i) => {
      let o = this.specifierToCache.get(i);
      return kt(
        o,
        `specifier does not have a matching cache entry in specifierToCache: ${JSON.stringify(
          i
        )}`
      ), Object.values(o).flatMap((a) => a ? a.type === "docs" ? [a] : a.type === "error" ? [a] : a.entries.map((u) => {
        if (u.type === "docs")
          return u;
        LU(u.id) || Ax(u.extra.stats, r);
        let { extra: l, ...c } = u;
        return c;
      }) : []);
    }), stats: r };
  }
  findDependencies(t) {
    return [...this.specifierToCache.values()].flatMap(
      (r) => Object.entries(r).filter(([n, i]) => !i || i.type !== "stories" ? !1 : !!t.find(
        (o) => n.match(
          new RegExp(`^${o.replace(/[.*+?^${}()|[\]\\]/g, "\\$&")}(\\.[^.]+)?$`)
        )
      )).map(([n, i]) => i)
    );
  }
  /**
   * Try to find the component path from a raw import string and return it in the same format as
   * `importPath`. Respect tsconfig paths if available.
   *
   * If no such file exists, assume that the import is from a package and return the raw
   */
  resolveComponentPath(t, r, n) {
    let i = t;
    n && (i = n(i) ?? i);
    let o = Ko(d2(r), i), a = ["", ".js", ".ts", ".jsx", ".tsx", ".mjs", ".mts"].map((u) => `${o}${u}`).find((u) => u2(u));
    if (a) {
      let u = Xo(this.options.workingDir, a);
      return it(Dl(u));
    }
    return t;
  }
  async extractStories(t, r, n = []) {
    let i = Xo(this.options.workingDir, r), o = it(Dl(i)), a = /* @__PURE__ */ s((g) => {
      let b = qp(o, t, g);
      return kt(
        b,
        "makeTitle created an undefined title. This happens when the fileName doesn't match any specifier from main.js"
      ), b;
    }, "defaultMakeTitle"), u = this.options.indexers.find((g) => g.test.exec(r));
    kt(u, `No matching indexer found for ${r}`);
    let l = await u.createIndex(r, { makeTitle: a }), c = await eu("tsconfig.json", {
      cwd: this.options.workingDir,
      stopAt: OU()
    }), p = xl.loadConfig(c), h;
    p.resultType === "success" && (h = xl.createMatchPath(p.absoluteBaseUrl, p.paths, [
      "browser",
      "module",
      "main"
    ]));
    let f = l.map((g) => {
      let b = g.name ?? p2(g.exportName), y = g.rawComponentPath && this.resolveComponentPath(g.rawComponentPath, r, h), E = g.title ?? a(),
      A = g.__id ?? em(g.metaId ?? E, p2(g.exportName)), k = Qd(...n, ...g.tags ?? []);
      return {
        type: "story",
        id: A,
        extra: {
          metaId: g.metaId,
          stats: g.__stats ?? {}
        },
        name: b,
        title: E,
        importPath: o,
        componentPath: y,
        tags: k
      };
    });
    if (f.some((g) => g.tags.includes(Ps)) && !!this.options.docs && this.options.build?.test?.disableAutoDocs !== !0) {
      let b = this.options.docs?.defaultName ?? "Docs", { metaId: y } = l[0], { title: E } = f[0], A = em(y ?? E, b), k = Qd(...n, ...l[0].tags ??
      []);
      f.unshift({
        id: A,
        title: E,
        name: b,
        importPath: o,
        type: "docs",
        tags: k,
        storiesImports: []
      });
    }
    return {
      entries: f,
      dependents: [],
      type: "stories"
    };
  }
  async extractDocs(t, r, n = []) {
    let i = Xo(this.options.workingDir, r);
    try {
      let o = Dl(i), a = it(o), u = await l2(r, { encoding: "utf8" }), { analyze: l } = await Promise.resolve().then(() => (a2(), o2)), c = await l(
      u);
      if (c.isTemplate)
        return !1;
      let p = c.imports.map(
        (k) => f2(k, o, this.options.workingDir)
      ), h = this.findDependencies(p), f = h, d;
      if (c.of) {
        let k = f2(c.of, o, this.options.workingDir);
        h.forEach((O) => {
          if (O.entries.length > 0) {
            let w = O.entries.find((C) => C.type !== "docs");
            c2(Ko(this.options.workingDir, w.importPath)).startsWith(
              c2(k)
            ) && (d = w);
          }
          f = [O, ...h.filter((w) => w !== O)];
        }), kt(
          d,
          nm.dedent`
            Could not find or load CSF file at path "${c.of}" referenced by \`of={}\` in docs file "${i}".

            - Does that file exist?
            - If so, is it a CSF file (\`.stories.*\`)?
            - If so, is it matched by the \`stories\` glob in \`main.js\`?
            - If so, has the file successfully loaded in Storybook and are its stories visible?
          `
        );
      }
      h.forEach((k) => {
        k.dependents.push(r);
      });
      let m = d?.title || qp(a, t, c.title);
      kt(
        m,
        "makeTitle created an undefined title. This happens when a specifier's doesn't have any matches in its fileName"
      );
      let g = this.options.docs?.defaultName ?? "Docs", b = c.name || (d ? Sx(a, d.importPath, g) : g), y = em(d?.extra.metaId || m, b), E = Qd(
        ...n,
        ...d?.tags ?? [],
        ...c.metaTags ?? [],
        d ? "attached-mdx" : "unattached-mdx"
      );
      return {
        id: y,
        title: m,
        name: b,
        importPath: a,
        storiesImports: f.map((k) => k.entries[0].importPath),
        type: "docs",
        tags: E
      };
    } catch (o) {
      throw o && o.source?.match(/mdast-util-mdx-jsx/g) && tm.warn(
        `\u{1F4A1} This seems to be an MDX2 syntax error. Please refer to the MDX section in the following resource for assistance on how to fix th\
is: ${rm.default.yellow(
          "https://storybook.js.org/docs/7/migration-guide?ref=error"
        )}`
      ), o;
    }
  }
  chooseDuplicate(t, r, n) {
    if (t.importPath === r.importPath)
      return t;
    let i = !0;
    (r.type === "story" || vi(r) && t.type === "docs" && !vi(t)) && (i = !1);
    let o = i ? t : r, a = i ? r : t, u = 'Use `<Meta of={} name="Other Name">` to distinguish them.';
    if (a.type === "story")
      throw new Vr(`Duplicate stories with id: ${t.id}`, [
        t.importPath,
        r.importPath
      ]);
    if (o.type === "story") {
      let l = vi(a) ? "component docs page" : "automatically generated docs page", c = this.options.docs?.defaultName ?? "Docs";
      throw o.name === c ? new Vr(
        `You have a story for ${o.title} with the same name as your default docs entry name (${o.name}), so the docs page is being dropped. \
Consider changing the story name.`,
        [t.importPath, r.importPath]
      ) : new Vr(
        `You have a story for ${o.title} with the same name as your ${l} (${a.name}), so the docs page is being dropped. ${u}`,
        [t.importPath, r.importPath]
      );
    } else if (vi(o)) {
      if (vi(a))
        throw new Vr(
          `You have two component docs pages with the same name ${o.title}:${o.name}. ${u}`,
          [t.importPath, r.importPath]
        );
      if (a.tags?.includes(Ps) && !n?.includes(Ps))
        throw new Vr(
          `You created a component docs page for '${a.title}', but also tagged the CSF file with '${Ps}'. This is probably a mistake.`,
          [o.importPath, a.importPath]
        );
    } else
      return {
        ...o,
        storiesImports: [
          ...o.storiesImports,
          a.importPath,
          ...a.storiesImports
        ]
      };
    return o;
  }
  async sortStories(t, r) {
    let n = Object.values(t), i = e.storyFileNames(this.specifierToCache);
    return Cx(n, r, i), n.reduce(
      (o, a) => (o[a.id] = a, o),
      {}
    );
  }
  async getIndex() {
    return (await this.getIndexAndStats()).storyIndex;
  }
  async getIndexAndStats() {
    if (this.lastIndex && this.lastStats)
      return { storyIndex: this.lastIndex, stats: this.lastStats };
    if (this.lastError)
      throw this.lastError;
    let t = await this.getPreviewCode(), r = this.getProjectTags(t), { entries: n, stats: i } = await this.ensureExtracted({ projectTags: r });
    try {
      let o = n.filter((c) => c.type === "error");
      if (o.length)
        throw new Ao(o.map((c) => c.err));
      let a = [], u = {};
      if (n.forEach((c) => {
        try {
          let p = u[c.id];
          p ? u[c.id] = this.chooseDuplicate(p, c, r) : u[c.id] = c;
        } catch (p) {
          p instanceof Vr && a.push(p);
        }
      }), a.length)
        throw new Ao(a);
      let l = await this.sortStories(
        u,
        t && RU(t)
      );
      return this.lastStats = i, this.lastIndex = {
        v: 5,
        entries: l
      }, { storyIndex: this.lastIndex, stats: this.lastStats };
    } catch (o) {
      throw this.lastError = o == null || o instanceof Error ? o : void 0, kt(this.lastError), tm.warn(`\u{1F6A8} ${this.lastError.toString()}`),
      this.lastError;
    }
  }
  invalidateAll() {
    this.specifierToCache.forEach((t) => {
      Object.keys(t).forEach((r) => {
        t[r] = !1;
      });
    }), this.lastIndex = null, this.lastError = null;
  }
  invalidate(t, r, n) {
    let i = it(Ko(this.options.workingDir, r)), o = this.specifierToCache.get(t);
    kt(
      o,
      `specifier does not have a matching cache entry in specifierToCache: ${JSON.stringify(
        t
      )}`
    );
    let a = o[i];
    if (a && a.type === "stories") {
      let { dependents: u } = a, l = /* @__PURE__ */ new Set();
      this.specifierToCache.forEach((c) => {
        u.forEach((p) => {
          c[p] && (l.add(p), c[p] = !1);
        });
      });
    }
    if (n) {
      if (a && a.type === "docs") {
        let u = a.storiesImports.map(
          (c) => Ko(this.options.workingDir, c)
        );
        this.findDependencies(u).forEach(
          (c) => c.dependents.splice(c.dependents.indexOf(i), 1)
        );
      }
      delete o[i];
    } else
      o[i] = !1;
    this.lastIndex = null, this.lastError = null;
  }
  async getPreviewCode() {
    let t = ["js", "jsx", "ts", "tsx", "mjs", "cjs", "mts"].map((r) => yl(this.options.configDir, `preview.${r}`)).find((r) => u2(r));
    return t && (await l2(t, { encoding: "utf8" })).toString();
  }
  getProjectTags(t) {
    let r = [], n = ["dev", "test"];
    if (t)
      try {
        r = NU(t).parse().getFieldValue(["tags"]) ?? [];
      } catch {
        h2.warn(nm.dedent`
          Unable to parse tags from project configuration. If defined, tags should be specified inline, e.g.

          export default {
            tags: ['foo'],
          }

          ---

          Received:

          ${t}
        `);
      }
    return [...n, ...r];
  }
  // Get the story file names in "imported order"
  static storyFileNames(t) {
    return Array.from(t.values()).flatMap((r) => Object.keys(r));
  }
};

// src/core-server/utils/build-or-throw.ts
import { NoMatchingExportError as qU } from "storybook/internal/server-errors";
async function bl(e) {
  try {
    return await e();
  } catch (t) {
    let r = t.errors;
    throw r && r.find(
      (i) => i.text?.includes("No matching export")
    ) ? new qU(t) : t;
  }
}
s(bl, "buildOrThrow");

// src/core-server/utils/copy-all-static-files.ts
var fm = fe(Ar(), 1);
import { cp as gW } from "node:fs/promises";
import { join as j2, relative as yW } from "node:path";
import { getDirectoryFromWorkingDir as DW } from "storybook/internal/common";
import { logger as xW } from "storybook/internal/node-logger";

// src/core-server/utils/server-statics.ts
var vl = fe(Ar(), 1), O2 = fe(F2(), 1), R2 = fe(Tt(), 1);
import { existsSync as T2, statSync as I2 } from "node:fs";
import { readFile as iW, stat as sW } from "node:fs/promises";
import { basename as cm, dirname as oW, isAbsolute as P2, join as B2, posix as aW, resolve as pm, sep as uW, win32 as lW } from "node:path";
import { getDirectoryFromWorkingDir as cW, resolvePathInStorybookCache as pW } from "storybook/internal/common";
import { logger as _2, once as hW } from "storybook/internal/node-logger";
var fW = pW("", "ignored-sub").split("ignored-sub")[0], um = /* @__PURE__ */ new Map(), k2 = /* @__PURE__ */ s(async (e) => {
  if (um.has(e))
    return um.get(e);
  {
    let [t, r] = await Promise.all([iW(e, "utf-8"), sW(e)]), n = { data: t, mtime: r.mtimeMs };
    return um.set(e, n), n;
  }
}, "readFileOnce"), dW = B2(
  oW(H.resolve("storybook/internal/package.json")),
  "/assets/browser/favicon-wrapper.svg"
), mW = /* @__PURE__ */ s((e) => {
  let [, t, r, n] = e?.match(/(<svg[^>]*>)(.*?)(<\/svg>)/s) ?? [];
  if (!t || !r || !n)
    return e;
  let i, o, a = t.replace(/width=["']([^"']*)["']/g, (l, c) => (i = parseFloat(c), 'width="32px"')).replace(/height=["']([^"']*)["']/g, (l, c) => (o =
  parseFloat(c), 'height="32px"'));
  return !/viewBox=["'][^"']*["']/.test(a) && i && o && (a = a.replace(/>$/, ` viewBox="0 0 ${i} ${o}">`)), a = a.replace(/preserveAspectRatio=["'][^"']*["']/g,
  "").replace(/>$/, ' preserveAspectRatio="xMidYMid meet">'), a + r + n;
}, "prepareNestedSvg");
async function N2(e, t) {
  let r = await t.presets.apply("staticDirs") ?? [], n = await t.presets.apply("favicon"), i = pm(n, ".."), o = cm(n);
  e.use(`/${o}`, async (a, u, l) => {
    let c = a.query.status;
    if (c && o.endsWith(".svg") && ["active", "critical", "negative", "positive", "warning"].includes(c)) {
      let [p, h] = await Promise.all([
        k2(B2(i, o)),
        k2(dW)
      ]).catch((f) => (f instanceof Error && hW.warn(`Failed to read favicon: ${f.message}`), [null, null]));
      if (p && h) {
        let f = h.data.replace('<g id="mask"', `<g mask="url(#${c}-mask)"`).replace('<use id="status"', `<use href="#${c}"`).replace('<use i\
d="icon" />', mW(p.data));
        u.setHeader("Content-Type", "image/svg+xml"), u.setHeader("ETag", `"${h.mtime}-${p.mtime}"`), u.end(f);
        return;
      }
    }
    return a.url = `/${o}`, lm(i)(a, u, l);
  }), r.map((a) => {
    try {
      let { staticDir: u, staticPath: l, targetEndpoint: c } = L2(a, t.configDir);
      if (!c.startsWith("/sb-") && !u.startsWith(fW) && _2.info(
        `=> Serving static files from ${vl.default.cyan(u)} at ${vl.default.cyan(c)}`
      ), T2(l) && I2(l).isFile()) {
        let p = pm(l, ".."), h = cm(l);
        e.use(c, (f, d, m) => {
          f.url = `/${h}`, lm(p)(f, d, m);
        });
      } else
        e.use(c, lm(l));
    } catch (u) {
      u instanceof Error && _2.warn(u.message);
    }
  });
}
s(N2, "useStatics");
var lm = /* @__PURE__ */ s((e, t = {}) => (r, n, i) => {
  let o = r._parsedUrl, a = i ? () => {
    r._parsedUrl = o, i();
  } : void 0;
  (0, O2.default)(e, { dev: !0, etag: !0, extensions: [], ...t })(r, n, a);
}, "sirvWorkaround"), hm = /* @__PURE__ */ s((e) => {
  let t = e.lastIndexOf(":"), n = lW.isAbsolute(e) && t === 1, i = t !== -1 && !n ? t : e.length, [o, a] = [e.slice(0, i), e.slice(i + 1)], u = P2(
  o) ? o : `./${o}`, l = pm(u);
  if (!T2(l))
    throw new Error(
      R2.dedent`
        Failed to load static files, no such directory: ${vl.default.cyan(l)}
        Make sure this directory exists.
      `
    );
  let h = (a || (I2(l).isFile() ? cm(l) : "/")).split(uW).join(aW.sep).replace(/^\/?/, "./"), f = h.substring(1);
  return { staticDir: u, staticPath: l, targetDir: h, targetEndpoint: f };
}, "parseStaticDir"), L2 = /* @__PURE__ */ s((e, t) => {
  let r = typeof e == "string" ? e : `${e.from}:${e.to}`, n = P2(r) ? r : cW({ configDir: t, workingDir: process.cwd(), directory: r });
  return hm(n);
}, "mapStaticDir");

// src/core-server/utils/copy-all-static-files.ts
async function q2(e, t, r) {
  let n = process.cwd();
  return e?.reduce(async (i, o) => {
    await i;
    let a = typeof o == "string" ? o : `${o.from}:${o.to}`, { staticPath: u, targetEndpoint: l } = hm(
      DW({
        configDir: r,
        workingDir: n,
        directory: a
      })
    ), c = j2(t, l), p = ["index.html", "iframe.html"].map((h) => j2(c, h));
    u.includes("node_modules") || xW.info(
      `=> Copying static files: ${fm.default.cyan(M2(u))} at ${fm.default.cyan(M2(c))}`
    ), await gW(u, c, {
      dereference: !0,
      preserveTimestamps: !0,
      filter: /* @__PURE__ */ s((h, f) => !p.includes(f), "filter"),
      recursive: !0
    });
  }, Promise.resolve());
}
s(q2, "copyAllStaticFilesRelativeToMain");
function M2(e) {
  return yW(process.cwd(), e);
}
s(M2, "print");

// src/core-server/utils/get-builders.ts
import { pathToFileURL as bW } from "node:url";
import { MissingBuilderError as vW } from "storybook/internal/server-errors";
async function Yo() {
  return import("storybook/internal/builder-manager");
}
s(Yo, "getManagerBuilder");
async function Qo(e, t) {
  let r = H.resolve(
    ["webpack5"].includes(e) ? `@storybook/builder-${e}` : e,
    { paths: [t] }
  );
  return await import(bW(r).href);
}
s(Qo, "getPreviewBuilder");
async function $2({ presets: e, configDir: t }) {
  let { builder: r } = await e.apply("core", {});
  if (!r)
    throw new vW();
  let n = typeof r == "string" ? r : r.name;
  return Promise.all([Qo(n, t), Yo()]);
}
s($2, "getBuilders");

// src/core-server/utils/metadata.ts
import { writeFile as EW } from "node:fs/promises";
import { getStorybookMetadata as V2 } from "storybook/internal/telemetry";
async function U2(e, t) {
  let r = await V2(t);
  await EW(e, JSON.stringify(r));
}
s(U2, "extractStorybookMetadata");
function W2(e, t) {
  e.use("/project.json", async (r, n) => {
    let i = await V2(t);
    n.setHeader("Content-Type", "application/json"), n.write(JSON.stringify(i)), n.end();
  });
}
s(W2, "useStorybookMetadata");

// src/core-server/utils/output-stats.ts
var DS = fe(mS(), 1), Dm = fe(Ar(), 1);
import { createWriteStream as dz } from "node:fs";
import { join as mz } from "node:path";
import { logger as gS } from "storybook/internal/node-logger";
async function Cl(e, t, r) {
  if (t) {
    let n = await yS(e, "preview", t);
    gS.info(`=> preview stats written to ${Dm.default.cyan(n)}`);
  }
  if (r) {
    let n = await yS(e, "manager", r);
    gS.info(`=> manager stats written to ${Dm.default.cyan(n)}`);
  }
}
s(Cl, "outputStats");
var yS = /* @__PURE__ */ s(async (e, t, r) => {
  let n = mz(e, `${t}-stats.json`), { chunks: i, ...o } = r.toJson();
  return await new Promise((a, u) => {
    (0, DS.stringifyStream)(o, null, 2).on("error", u).pipe(dz(n)).on("error", u).on("finish", a);
  }), n;
}, "writeStats");

// src/core-server/utils/stories-json.ts
import { writeFile as Qz } from "node:fs/promises";
import { basename as eH } from "node:path";
import { STORY_INDEX_INVALIDATED as tH } from "storybook/internal/core-events";

// ../node_modules/es-toolkit/dist/function/debounce.mjs
function xS(e, t, { signal: r, edges: n } = {}) {
  let i, o = null, a = n != null && n.includes("leading"), u = n == null || n.includes("trailing"), l = /* @__PURE__ */ s(() => {
    o !== null && (e.apply(i, o), i = void 0, o = null);
  }, "invoke"), c = /* @__PURE__ */ s(() => {
    u && l(), d();
  }, "onTimerEnd"), p = null, h = /* @__PURE__ */ s(() => {
    p != null && clearTimeout(p), p = setTimeout(() => {
      p = null, c();
    }, t);
  }, "schedule"), f = /* @__PURE__ */ s(() => {
    p !== null && (clearTimeout(p), p = null);
  }, "cancelTimer"), d = /* @__PURE__ */ s(() => {
    f(), i = void 0, o = null;
  }, "cancel"), m = /* @__PURE__ */ s(() => {
    f(), l();
  }, "flush"), g = /* @__PURE__ */ s(function(...b) {
    if (r?.aborted)
      return;
    i = this, o = b;
    let y = p == null;
    h(), a && y && l();
  }, "debounced");
  return g.schedule = h, g.cancel = d, g.flush = m, r?.addEventListener("abort", d, { once: !0 }), g;
}
s(xS, "debounce");

// ../node_modules/es-toolkit/dist/compat/function/debounce.mjs
function xm(e, t = 0, r = {}) {
  typeof r != "object" && (r = {});
  let { signal: n, leading: i = !1, trailing: o = !0, maxWait: a } = r, u = Array(2);
  i && (u[0] = "leading"), o && (u[1] = "trailing");
  let l, c = null, p = xS(function(...d) {
    l = e.apply(this, d), c = null;
  }, t, { signal: n, edges: u }), h = /* @__PURE__ */ s(function(...d) {
    if (a != null) {
      if (c === null)
        c = Date.now();
      else if (Date.now() - c >= a)
        return l = e.apply(this, d), c = Date.now(), p.cancel(), p.schedule(), l;
    }
    return p.apply(this, d), l;
  }, "debounced"), f = /* @__PURE__ */ s(() => (p.flush(), l), "flush");
  return h.cancel = p.cancel, h.flush = f, h;
}
s(xm, "debounce");

// src/core-server/utils/watch-story-specifiers.ts
hi();
var YS = fe(jm(), 1);
import { lstatSync as Hz, readdirSync as Gz } from "node:fs";
import { basename as Jz, join as Mm, relative as Zz, resolve as Xz } from "node:path";
import { commonGlobOptions as Kz } from "storybook/internal/common";
var QS = /* @__PURE__ */ s((e) => {
  try {
    return Hz(e).isDirectory();
  } catch {
    return !1;
  }
}, "isDirectory");
function Yz(e) {
  let t = /* @__PURE__ */ new Set(), r = /* @__PURE__ */ new Set(), n = /* @__PURE__ */ s((i) => {
    t.has(i) || (Gz(i, { withFileTypes: !0 }).forEach((o) => {
      o.isDirectory() ? n(Mm(i, o.name)) : o.isFile() && r.add(Mm(i, o.name));
    }), t.add(i));
  }, "traverse");
  return e.filter(QS).forEach(n), { files: Array.from(r), directories: Array.from(t) };
}
s(Yz, "getNestedFilesAndDirectories");
function eA(e, t, r) {
  let { files: n, directories: i } = Yz(
    e.map((l) => Xz(t.workingDir, l.directory))
  ), o = new YS.default({
    // poll: true, // Slow!!! Enable only in special cases
    followSymlinks: !1,
    ignored: ["**/.git", "**/node_modules"]
  });
  o.watch({ files: n, directories: i });
  let a = /* @__PURE__ */ s((l) => {
    let c = Zz(t.workingDir, l);
    return it(c.startsWith(".") ? c : `./${c}`);
  }, "toImportPath");
  async function u(l, c) {
    let p = a(l), h = e.find((f) => f.importPathMatcher.exec(p));
    if (h) {
      r(h, p, c);
      return;
    }
    !c && QS(l) && await Promise.all(
      e.filter((f) => p.startsWith(f.directory)).map(async (f) => {
        let d = Mm(
          l,
          "**",
          // files can be e.g. '**/foo/*/*.js' so we just want the last bit,
          // because the directory could already be within the files part (e.g. './x/foo/bar')
          Jz(f.files)
        ), { globby: m } = await Promise.resolve().then(() => (Hf(), zf));
        (await m(it(d), Kz(d))).forEach((b) => {
          let y = a(b);
          f.importPathMatcher.exec(y) && r(f, y, c);
        });
      })
    );
  }
  return s(u, "onChangeOrRemove"), o.on("change", async (l, c, p) => {
    await u(l, !c);
  }), o.on("remove", async (l, c) => {
    await u(l, !0);
  }), () => o.close();
}
s(eA, "watchStorySpecifiers");

// src/core-server/utils/watchConfig.ts
var tA = fe(jm(), 1);
function rA(e, t) {
  let r = new tA.default({
    followSymlinks: !1,
    ignored: ["**/.git", "**/node_modules"]
  });
  return r.watch({
    directories: [e]
  }), r.on("change", async (n, i, o) => {
    await t(n, !i);
  }), r.on("remove", async (n, i) => {
    await t(n, !0);
  }), () => r.close();
}
s(rA, "watchConfig");

// src/core-server/utils/stories-json.ts
var rH = 100;
async function nA(e, t, r) {
  let i = await (await t).getIndex();
  await Qz(e, JSON.stringify(r ? r(i) : i));
}
s(nA, "extractStoriesJson");
function iA({
  app: e,
  initializedStoryIndexGenerator: t,
  workingDir: r = process.cwd(),
  configDir: n,
  serverChannel: i,
  normalizedStories: o
}) {
  let a = xm(() => i.emit(tH), rH, {
    leading: !0
  });
  eA(o, { workingDir: r }, async (u, l, c) => {
    (await t).invalidate(u, l, c), a();
  }), n && rA(n, async (u) => {
    eH(u).startsWith("preview") && ((await t).invalidateAll(), a());
  }), e.use("/index.json", async (u, l) => {
    try {
      let p = await (await t).getIndex();
      l.setHeader("Content-Type", "application/json"), l.end(JSON.stringify(p));
    } catch (c) {
      l.statusCode = 500, l.end(c instanceof Error ? c.toString() : String(c));
    }
  });
}
s(iA, "useStoriesJson");

// src/core-server/utils/summarizeIndex.ts
import { isExampleStoryId as nH } from "storybook/internal/telemetry";
var iH = /(page|screen)/i;
var sH = /* @__PURE__ */ s((e) => iH.test(e), "isPageStory"), oH = /* @__PURE__ */ s((e) => [
  "example-introduction--docs",
  "configure-your-project--docs",
  "example-button--docs",
  "example-button--primary",
  "example-button--secondary",
  "example-button--large",
  "example-button--small",
  "example-header--docs",
  "example-header--logged-in",
  "example-header--logged-out",
  "example-page--logged-in",
  "example-page--logged-out"
].includes(e.id), "isCLIExampleEntry");
function Ls(e) {
  let t = 0, r = /* @__PURE__ */ new Set(), n = 0, i = 0, o = 0, a = 0, u = 0, l = 0, c = 0, p = 0, h = 0, f = 0;
  Object.values(e.entries).forEach((m) => {
    oH(m) ? (m.type === "story" && (n += 1), m.type === "docs" && (a += 1)) : nH(m.id) ? (m.type === "story" && (i += 1), m.type === "docs" &&
    (o += 1)) : m.type === "story" ? (t += 1, r.add(m.title), sH(m.title) && (u += 1), m.tags?.includes(m2) && (l += 1), m.tags?.includes("s\
velte-csf-v4") ? h += 1 : m.tags?.includes("svelte-csf-v5") && (f += 1)) : m.type === "docs" && (vi(m) ? p += 1 : m.tags?.includes(Ps) && (c +=
    1));
  });
  let d = r.size;
  return {
    storyCount: t,
    componentCount: d,
    pageStoryCount: u,
    playStoryCount: l,
    autodocsCount: c,
    mdxCount: p,
    exampleStoryCount: n,
    exampleDocsCount: a,
    onboardingStoryCount: i,
    onboardingDocsCount: o,
    svelteCsfV4Count: h,
    svelteCsfV5Count: f,
    version: e.v
  };
}
s(Ls, "summarizeIndex");

// src/core-server/build-static.ts
async function lA(e) {
  if (e.configType = "PRODUCTION", e.outputDir === "")
    throw new Error("Won't remove current directory. Check your outputDir!");
  if (e.outputDir = sA(e.outputDir), e.configDir = sA(e.configDir), Zn.info(
    `=> Cleaning outputDir: ${uA.default.cyan(pH(process.cwd(), e.outputDir))}`
  ), e.outputDir === "/")
    throw new Error("Won't remove directory '/'. Check your outputDir!");
  await lH(e.outputDir, { recursive: !0, force: !0 }).catch(() => {
  }), await uH(e.outputDir, { recursive: !0 });
  let t = await hH(e), { framework: r } = t, n = [], i = typeof r == "string" ? r : r?.name;
  i ? n.push(Ll(i, "preset")) : e.ignorePreview || Zn.warn(`you have not specified a framework in your ${e.configDir}/main.js`), Zn.info("=>\
 Loading presets");
  let o = await oA({
    corePresets: [
      H.resolve("storybook/internal/core-server/presets/common-preset"),
      ...n
    ],
    overridePresets: [
      H.resolve("storybook/internal/core-server/presets/common-override-preset")
    ],
    isCritical: !0,
    ...e
  }), { renderer: a } = await o.apply("core", {}), u = await o.apply("build", {}), [l, c] = await $2({ ...e, presets: o, build: u }), p = a ?
  mH(e.configDir, a, e) : void 0;
  o = await oA({
    corePresets: [
      H.resolve("storybook/internal/core-server/presets/common-preset"),
      ...c.corePresets || [],
      ...l.corePresets || [],
      ...p ? [p] : [],
      ...n
    ],
    overridePresets: [
      ...l.overridePresets || [],
      H.resolve("storybook/internal/core-server/presets/common-override-preset")
    ],
    ...e,
    build: u
  });
  let [h, f, d, m, g, b] = await Promise.all([
    o.apply("features"),
    o.apply("core"),
    o.apply("staticDirs"),
    o.apply("experimental_indexers", []),
    o.apply("stories"),
    o.apply("docs")
  ]), y = process.env.STORYBOOK_INVOKED_BY;
  !f?.disableTelemetry && y && aA("test-run", { runner: y, watch: !1 }, { configDir: e.configDir });
  let E = {
    ...e,
    presets: o,
    features: h,
    build: u
  }, A = [];
  yH.FEATURES = h, e.previewOnly || await bl(
    async () => c.build({ startTime: process.hrtime(), options: E })
  ), d && A.push(
    q2(d, e.outputDir, e.configDir)
  );
  let k = Ll(
    cH(H.resolve("storybook/internal/package.json")),
    "assets/browser"
  );
  A.push(aH(k, e.outputDir, { recursive: !0 }));
  let O = Promise.resolve(void 0);
  if (!e.ignorePreview) {
    let C = process.cwd(), T = {
      configDir: e.configDir,
      workingDir: C
    }, F = dH(g, T), $ = new vn(F, {
      ...T,
      indexers: m,
      docs: b,
      build: u
    });
    O = $.initialize().then(() => $), A.push(
      nA(
        Ll(e.outputDir, "index.json"),
        O
      )
    );
  }
  f?.disableProjectJson || A.push(
    U2(Ll(e.outputDir, "project.json"), e.configDir)
  ), e.debugWebpack && fH("Preview webpack config", await l.getConfig(E)), e.ignorePreview ? Zn.info("=> Not building preview") : Zn.info("=\
> Building preview..");
  let w = process.hrtime();
  await Promise.all([
    ...e.ignorePreview ? [] : [
      l.build({
        startTime: w,
        options: E
      }).then(async (C) => {
        Zn.trace({ message: "=> Preview built", time: process.hrtime(w) });
        let T = e.webpackStatsJson || e.statsJson;
        if (T) {
          let F = T === !0 ? e.outputDir : T;
          await Cl(F, C);
        }
      }).catch((C) => {
        throw Zn.error("=> Failed to build the preview"), process.exitCode = 1, C;
      })
    ],
    ...A
  ]), !f?.disableTelemetry && !e.test && A.push(
    O.then(async (C) => {
      let T = await C?.getIndex(), F = {
        precedingUpgrade: await gH()
      };
      T && Object.assign(F, {
        storyIndex: Ls(T)
      }), await aA("build", F, { configDir: e.configDir });
    })
  ), Zn.info(`=> Output directory: ${e.outputDir}`);
}
s(lA, "buildStaticStandalone");

// src/core-server/build-dev.ts
var s8 = fe(Kg(), 1);
import { readFile as Poe } from "node:fs/promises";
import { join as Boe, relative as Ooe, resolve as DD } from "node:path";
import {
  JsPackageManagerFactory as Roe,
  getConfigInfo as Noe,
  getProjectRoot as Loe,
  loadAllPresets as n8,
  loadMainConfig as joe,
  resolveAddonName as Moe,
  resolvePathInStorybookCache as qoe,
  serverResolve as $oe,
  validateFrameworkName as Voe,
  versions as Uoe
} from "storybook/internal/common";
import { deprecate as i8, logger as xD } from "storybook/internal/node-logger";
import { MissingBuilderError as Woe, NoStatsForViteDevError as zoe } from "storybook/internal/server-errors";
import { oneWayHash as Hoe, telemetry as Goe } from "storybook/internal/telemetry";
import { global as Joe } from "@storybook/global";
var o8 = fe(Tt(), 1);

// src/core-server/dev-server.ts
import { logConfig as Hie } from "storybook/internal/common";
import { logger as QB } from "storybook/internal/node-logger";
import { MissingBuilderError as Gie } from "storybook/internal/server-errors";

// ../node_modules/@polka/compression/build.mjs
import ya from "node:zlib";
var EZ = /* @__PURE__ */ s(() => {
}, "NOOP"), CZ = /text|javascript|\/json|xml/i;
function M3(e, t) {
  return e ? Buffer.byteLength(e, t) : 0;
}
s(M3, "getChunkSize");
function Yg({ threshold: e = 1024, level: t = -1, brotli: r = !1, gzip: n = !0, mimes: i = CZ } = {}) {
  let o = typeof r == "object" && r || {}, a = typeof n == "object" && n || {};
  return ya.createBrotliCompress || (r = !1), (u, l, c = EZ) => {
    let p = u.headers["accept-encoding"] + "", h = (r && /\bbr\b/.exec(p) || n && /\bgzip\b/.exec(p) || [])[0];
    if (u.method === "HEAD" || !h) return c();
    let f, d = [], m = 0, g = !1, b = 0;
    function y() {
      g = !0, b = l.getHeader("Content-Length") | 0 || b;
      let w = i.test(
        String(l.getHeader("Content-Type") || "text/plain")
      ), C = !l.getHeader("Content-Encoding"), T = d || [];
      w && C && b >= e ? (l.setHeader("Content-Encoding", h), l.removeHeader("Content-Length"), h === "br" ? f = ya.createBrotliCompress({
        params: Object.assign({
          [ya.constants.BROTLI_PARAM_QUALITY]: t,
          [ya.constants.BROTLI_PARAM_SIZE_HINT]: b
        }, o)
      }) : f = ya.createGzip(
        Object.assign({ level: t }, a)
      ), f.on("data", (F) => A.call(l, F) || f.pause()), k.call(l, "drain", () => f.resume()), f.on("end", () => E.call(l)), T.forEach((F) => f.
      on.apply(f, F))) : (d = null, T.forEach((F) => k.apply(l, F))), O.call(l, m || l.statusCode);
    }
    s(y, "start");
    let { end: E, write: A, on: k, writeHead: O } = l;
    l.writeHead = function(w, C, T) {
      if (typeof C != "string" && ([T, C] = [C, T]), T) for (let F in T) l.setHeader(F, T[F]);
      return m = w, this;
    }, l.write = function(w, C) {
      return b += M3(w, C), g || y(), f ? f.write.apply(f, arguments) : A.apply(this, arguments);
    }, l.end = function(w, C) {
      return arguments.length > 0 && typeof w != "function" && (b += M3(w, C)), g || y(), f ? f.end.apply(f, arguments) : E.apply(this, arguments);
    }, l.on = function(w, C) {
      return d ? f ? f.on(w, C) : d.push([w, C]) : k.call(this, w, C), this;
    }, c();
  };
}
s(Yg, "default");

// ../node_modules/polka/build.mjs
import q3 from "node:http";
import { setImmediate as wZ } from "node:timers";

// ../node_modules/regexparam/dist/index.mjs
function Qg(e, t) {
  if (e instanceof RegExp) return { keys: !1, pattern: e };
  var r, n, i, o, a = [], u = "", l = e.split("/");
  for (l[0] || l.shift(); i = l.shift(); )
    r = i[0], r === "*" ? (a.push(r), u += i[1] === "?" ? "(?:/(.*))?" : "/(.*)") : r === ":" ? (n = i.indexOf("?", 1), o = i.indexOf(".", 1),
    a.push(i.substring(1, ~n ? n : ~o ? o : i.length)), u += ~n && !~o ? "(?:/([^/]+?))?" : "/([^/]+?)", ~o && (u += (~n ? "?" : "") + "\\" +
    i.substring(o))) : u += "/" + i;
  return {
    keys: a,
    pattern: new RegExp("^" + u + (t ? "(?=$|/)" : "/?$"), "i")
  };
}
s(Qg, "parse");

// ../node_modules/trouter/index.mjs
var e0 = {
  "": 0,
  GET: 1,
  HEAD: 2,
  PATCH: 3,
  OPTIONS: 4,
  CONNECT: 5,
  DELETE: 6,
  TRACE: 7,
  POST: 8,
  PUT: 9
}, ec = class {
  static {
    s(this, "Trouter");
  }
  constructor() {
    this.routes = [], this.all = this.add.bind(this, ""), this.get = this.add.bind(this, "GET"), this.head = this.add.bind(this, "HEAD"), this.
    patch = this.add.bind(this, "PATCH"), this.options = this.add.bind(this, "OPTIONS"), this.connect = this.add.bind(this, "CONNECT"), this.
    delete = this.add.bind(this, "DELETE"), this.trace = this.add.bind(this, "TRACE"), this.post = this.add.bind(this, "POST"), this.put = this.
    add.bind(this, "PUT");
  }
  use(t, ...r) {
    let n = [].concat.apply([], r), { keys: i, pattern: o } = Qg(t, !0);
    return this.routes.push({ keys: i, pattern: o, method: "", handlers: n, midx: e0[""] }), this;
  }
  add(t, r, ...n) {
    let { keys: i, pattern: o } = Qg(r), a = [].concat.apply([], n);
    return this.routes.push({ keys: i, pattern: o, method: t, handlers: a, midx: e0[t] }), this;
  }
  find(t, r) {
    let n = e0[t], i = n === 2, o = 0, a = 0, u, l, c = this.routes, p = [], h = {}, f = [];
    for (; o < c.length; o++)
      if (l = c[o], l.midx === n || l.midx === 0 || i && l.midx === 1)
        if (l.keys === !1) {
          if (p = l.pattern.exec(r), p === null) continue;
          if (p.groups !== void 0) for (u in p.groups) h[u] = p.groups[u];
          l.handlers.length > 1 ? f = f.concat(l.handlers) : f.push(l.handlers[0]);
        } else if (l.keys.length > 0) {
          if (p = l.pattern.exec(r), p === null) continue;
          for (a = 0; a < l.keys.length; ) h[l.keys[a]] = p[++a];
          l.handlers.length > 1 ? f = f.concat(l.handlers) : f.push(l.handlers[0]);
        } else l.pattern.test(r) && (l.handlers.length > 1 ? f = f.concat(l.handlers) : f.push(l.handlers[0]));
    return { params: h, handlers: f };
  }
};

// ../node_modules/polka/build.mjs
om();
function SZ(e, t, r) {
  let n = typeof e.status == "number" && e.status;
  n = r.statusCode = n && n >= 100 ? n : 500, typeof e == "string" || Buffer.isBuffer(e) ? r.end(e) : r.end(e.message || q3.STATUS_CODES[n]);
}
s(SZ, "onError");
var t0 = /* @__PURE__ */ s((e) => e instanceof tc ? e.attach : e, "mount"), tc = class e extends ec {
  static {
    s(this, "Polka");
  }
  constructor(t = {}) {
    super(), this.parse = sm, this.server = t.server, this.handler = this.handler.bind(this), this.onError = t.onError || SZ, this.onNoMatch =
    t.onNoMatch || this.onError.bind(null, { status: 404 }), this.attach = (r, n) => wZ(this.handler, r, n);
  }
  use(t, ...r) {
    return t === "/" ? super.use(t, r.map(t0)) : typeof t == "function" || t instanceof e ? super.use("/", [t, ...r].map(t0)) : super.use(
      t,
      (n, i, o) => {
        if (typeof t == "string") {
          let a = t.length;
          t.startsWith("/") || a++, n.url = n.url.substring(a) || "/", n.path = n.path.substring(a) || "/";
        } else
          n.url = n.url.replace(t, "") || "/", n.path = n.path.replace(t, "") || "/";
        n.url.charAt(0) !== "/" && (n.url = "/" + n.url), o();
      },
      r.map(t0),
      (n, i, o) => {
        n.path = n._parsedUrl.pathname, n.url = n.path + n._parsedUrl.search, o();
      }
    ), this;
  }
  listen() {
    return (this.server = this.server || q3.createServer()).on("request", this.attach), this.server.listen.apply(this.server, arguments), this;
  }
  handler(t, r, n) {
    let i = this.parse(t), o = i.pathname, a = this.find(t.method, t.path = o);
    if (t.url = o + i.search, t.originalUrl = t.originalUrl || t.url, t.query = i.query || {}, t.search = i.search, t.params = a.params, o.length >
    1 && o.indexOf("%", 1) !== -1)
      for (let h in t.params)
        try {
          t.params[h] = decodeURIComponent(t.params[h]);
        } catch {
        }
    let u = 0, l = a.handlers.concat(this.onNoMatch), c = l.length, p = /* @__PURE__ */ s(async () => r.finished || u < c && l[u++](t, r, n),
    "loop");
    (n = n || ((h) => h ? this.onError(h, t, r, n) : p().catch(n)))();
  }
};
function r0(e) {
  return new tc(e);
}
s(r0, "default");

// src/telemetry/index.ts
import { logger as KI } from "storybook/internal/node-logger";

// src/telemetry/notify.ts
var U3 = fe(Ar(), 1);
import { cache as $3 } from "storybook/internal/common";
import { CLI_COLORS as AZ, logger as rc } from "storybook/internal/node-logger";
var V3 = "telemetry-notification-date", W3 = /* @__PURE__ */ s(async () => {
  await $3.get(V3, null) || ($3.set(V3, Date.now()), rc.log(
    `${AZ.info("Attention:")} Storybook now collects completely anonymous telemetry regarding usage. This information is used to shape Story\
book's roadmap and prioritize features.`
  ), rc.log(
    "You can learn more, including how to opt-out if you'd not like to participate in this anonymous program, by visiting the following URL:"
  ), rc.log(U3.default.cyan("https://storybook.js.org/telemetry")), rc.log(""));
}, "notify");

// src/telemetry/sanitize.ts
import G3 from "node:path";
function z3(e) {
  return e.replace(/[-[/{}()*+?.\\^$|]/g, "\\$&");
}
s(z3, "regexpEscape");
function H3(e = "") {
  return e.replace(/\u001B\[[0-9;]*m/g, "");
}
s(H3, "removeAnsiEscapeCodes");
function Da(e, t = G3.sep) {
  if (!e)
    return e;
  let r = process.cwd().split(t);
  for (; r.length > 1; ) {
    let n = r.join(t), i = new RegExp(z3(n), "gi");
    e = e.replace(i, "$SNIP");
    let o = r.join(t + t), a = new RegExp(z3(o), "gi");
    e = e.replace(a, "$SNIP"), r.pop();
  }
  return e;
}
s(Da, "cleanPaths");
function nc(e, t = G3.sep) {
  try {
    e = {
      ...JSON.parse(JSON.stringify(e)),
      message: H3(e.message),
      stack: H3(e.stack),
      cause: e.cause,
      name: e.name
    };
    let r = Da(JSON.stringify(e), t);
    return JSON.parse(r);
  } catch (r) {
    return `Sanitization error: ${r?.message}`;
  }
}
s(nc, "sanitizeError");

// src/telemetry/storybook-metadata.ts
import { dirname as qQ } from "node:path";
import {
  getStorybookConfiguration as $Q,
  getStorybookInfo as VQ,
  isCI as UQ,
  loadMainConfig as WQ,
  versions as zQ
} from "storybook/internal/common";
import { readConfig as HQ } from "storybook/internal/csf-tools";

// ../node_modules/fd-package-json/dist/esm/main.js
var X3 = fe(Z3(), 1);
import { resolve as _Z } from "node:path";
import { stat as kZ, readFile as TZ } from "node:fs/promises";
import { statSync as Y0e, readFileSync as Q0e } from "node:fs";
async function IZ(e) {
  try {
    return (await kZ(e)).isFile();
  } catch {
    return !1;
  }
}
s(IZ, "fileExists");
async function n0(e) {
  for (let t of (0, X3.walkUp)(e)) {
    let r = _Z(t, "package.json");
    if (await IZ(r))
      return r;
  }
  return null;
}
s(n0, "findPackagePath");
async function K3(e) {
  let t = await n0(e);
  if (!t)
    return null;
  try {
    let r = await TZ(t, { encoding: "utf8" });
    return JSON.parse(r);
  } catch {
    return null;
  }
}
s(K3, "findPackage");

// package.json
var sc = "9.1.4";

// src/cli/globalSettings.ts
var Ck = fe(Tt(), 1), Xs = fe(Ek(), 1);
import h0 from "node:fs/promises";
import { homedir as eK } from "node:os";
import { dirname as tK, join as rK } from "node:path";
var nK = rK(eK(), ".storybook", "settings.json"), iK = 1, sK = Xs.z.object({
  version: Xs.z.number(),
  // NOTE: every key (and subkey) below must be optional, for forwards compatibility reasons
  // (we can remove keys once they are deprecated)
  userSince: Xs.z.number().optional(),
  init: Xs.z.object({ skipOnboarding: Xs.z.boolean().optional() }).optional()
}), Zs;
async function wk(e = nK) {
  if (Zs)
    return Zs;
  try {
    let t = await h0.readFile(e, "utf8"), r = sK.parse(JSON.parse(t));
    Zs = new dc(e, r);
  } catch {
    Zs = new dc(e, { version: iK, userSince: Date.now() }), await Zs.save();
  }
  return Zs;
}
s(wk, "globalSettings");
var dc = class {
  static {
    s(this, "Settings");
  }
  /**
   * Create a new Settings instance
   *
   * @param filePath Path to the JSON settings file
   * @param value Loaded value of settings
   */
  constructor(t, r) {
    this.filePath = t, this.value = r;
  }
  /** Save settings to the file */
  async save() {
    try {
      await h0.mkdir(tK(this.filePath), { recursive: !0 }), await h0.writeFile(this.filePath, JSON.stringify(this.value, null, 2));
    } catch (t) {
      console.warn(Ck.dedent`
        Unable to save global settings file to ${this.filePath}
        ${t && `Reason: ${t.message ?? t}`}`);
    }
  }
};

// src/telemetry/get-application-file-count.ts
import { sep as vQ } from "node:path";

// src/telemetry/exec-command-count-lines.ts
import { createInterface as YY } from "node:readline";

// node_modules/execa/index.js
var eI = fe(hT(), 1);
import { Buffer as HY } from "node:buffer";
import GY from "node:path";
import H0 from "node:child_process";
import kc from "node:process";

// ../node_modules/strip-final-newline/index.js
function E0(e) {
  let t = typeof e == "string" ? `
` : 10, r = typeof e == "string" ? "\r" : 13;
  return e[e.length - 1] === t && (e = e.slice(0, -1)), e[e.length - 1] === r && (e = e.slice(0, -1)), e;
}
s(E0, "stripFinalNewline");

// node_modules/npm-run-path/index.js
import yc from "node:process";
import Sa from "node:path";
import { fileURLToPath as fT } from "node:url";

// node_modules/path-key/index.js
function gc(e = {}) {
  let {
    env: t = process.env,
    platform: r = process.platform
  } = e;
  return r !== "win32" ? "PATH" : Object.keys(t).reverse().find((n) => n.toUpperCase() === "PATH") || "Path";
}
s(gc, "pathKey");

// node_modules/npm-run-path/index.js
var PK = /* @__PURE__ */ s(({
  cwd: e = yc.cwd(),
  path: t = yc.env[gc()],
  preferLocal: r = !0,
  execPath: n = yc.execPath,
  addExecPath: i = !0
} = {}) => {
  let o = e instanceof URL ? fT(e) : e, a = Sa.resolve(o), u = [];
  return r && BK(u, a), i && OK(u, n, a), [...u, t].join(Sa.delimiter);
}, "npmRunPath"), BK = /* @__PURE__ */ s((e, t) => {
  let r;
  for (; r !== t; )
    e.push(Sa.join(t, "node_modules/.bin")), r = t, t = Sa.resolve(t, "..");
}, "applyPreferLocal"), OK = /* @__PURE__ */ s((e, t, r) => {
  let n = t instanceof URL ? fT(t) : t;
  e.push(Sa.resolve(r, n, ".."));
}, "applyExecPath"), dT = /* @__PURE__ */ s(({ env: e = yc.env, ...t } = {}) => {
  e = { ...e };
  let r = gc({ env: e });
  return t.path = e[r], e[r] = PK(t), e;
}, "npmRunPathEnv");

// node_modules/mimic-fn/index.js
var RK = /* @__PURE__ */ s((e, t, r, n) => {
  if (r === "length" || r === "prototype" || r === "arguments" || r === "caller")
    return;
  let i = Object.getOwnPropertyDescriptor(e, r), o = Object.getOwnPropertyDescriptor(t, r);
  !NK(i, o) && n || Object.defineProperty(e, r, o);
}, "copyProperty"), NK = /* @__PURE__ */ s(function(e, t) {
  return e === void 0 || e.configurable || e.writable === t.writable && e.enumerable === t.enumerable && e.configurable === t.configurable &&
  (e.writable || e.value === t.value);
}, "canCopyProperty"), LK = /* @__PURE__ */ s((e, t) => {
  let r = Object.getPrototypeOf(t);
  r !== Object.getPrototypeOf(e) && Object.setPrototypeOf(e, r);
}, "changePrototype"), jK = /* @__PURE__ */ s((e, t) => `/* Wrapped ${e}*/
${t}`, "wrappedToString"), MK = Object.getOwnPropertyDescriptor(Function.prototype, "toString"), qK = Object.getOwnPropertyDescriptor(Function.
prototype.toString, "name"), $K = /* @__PURE__ */ s((e, t, r) => {
  let n = r === "" ? "" : `with ${r.trim()}() `, i = jK.bind(null, n, t.toString());
  Object.defineProperty(i, "name", qK), Object.defineProperty(e, "toString", { ...MK, value: i });
}, "changeToString");
function C0(e, t, { ignoreNonConfigurable: r = !1 } = {}) {
  let { name: n } = e;
  for (let i of Reflect.ownKeys(t))
    RK(e, t, i, r);
  return LK(e, t), $K(e, t, n), e;
}
s(C0, "mimicFunction");

// node_modules/onetime/index.js
var Dc = /* @__PURE__ */ new WeakMap(), mT = /* @__PURE__ */ s((e, t = {}) => {
  if (typeof e != "function")
    throw new TypeError("Expected a function");
  let r, n = 0, i = e.displayName || e.name || "<anonymous>", o = /* @__PURE__ */ s(function(...a) {
    if (Dc.set(o, ++n), n === 1)
      r = e.apply(this, a), e = null;
    else if (t.throw === !0)
      throw new Error(`Function \`${i}\` can only be called once`);
    return r;
  }, "onetime");
  return C0(o, e), Dc.set(o, n), o;
}, "onetime");
mT.callCount = (e) => {
  if (!Dc.has(e))
    throw new Error(`The given function \`${e.name}\` is not wrapped by the \`onetime\` package`);
  return Dc.get(e);
};
var gT = mT;

// node_modules/execa/lib/error.js
import KK from "node:process";

// node_modules/human-signals/build/src/main.js
import { constants as zK } from "node:os";

// node_modules/human-signals/build/src/realtime.js
var yT = /* @__PURE__ */ s(() => {
  let e = w0 - DT + 1;
  return Array.from({ length: e }, VK);
}, "getRealtimeSignals"), VK = /* @__PURE__ */ s((e, t) => ({
  name: `SIGRT${t + 1}`,
  number: DT + t,
  action: "terminate",
  description: "Application-specific signal (realtime)",
  standard: "posix"
}), "getRealtimeSignal"), DT = 34, w0 = 64;

// node_modules/human-signals/build/src/signals.js
import { constants as UK } from "node:os";

// node_modules/human-signals/build/src/core.js
var xT = [
  {
    name: "SIGHUP",
    number: 1,
    action: "terminate",
    description: "Terminal closed",
    standard: "posix"
  },
  {
    name: "SIGINT",
    number: 2,
    action: "terminate",
    description: "User interruption with CTRL-C",
    standard: "ansi"
  },
  {
    name: "SIGQUIT",
    number: 3,
    action: "core",
    description: "User interruption with CTRL-\\",
    standard: "posix"
  },
  {
    name: "SIGILL",
    number: 4,
    action: "core",
    description: "Invalid machine instruction",
    standard: "ansi"
  },
  {
    name: "SIGTRAP",
    number: 5,
    action: "core",
    description: "Debugger breakpoint",
    standard: "posix"
  },
  {
    name: "SIGABRT",
    number: 6,
    action: "core",
    description: "Aborted",
    standard: "ansi"
  },
  {
    name: "SIGIOT",
    number: 6,
    action: "core",
    description: "Aborted",
    standard: "bsd"
  },
  {
    name: "SIGBUS",
    number: 7,
    action: "core",
    description: "Bus error due to misaligned, non-existing address or paging error",
    standard: "bsd"
  },
  {
    name: "SIGEMT",
    number: 7,
    action: "terminate",
    description: "Command should be emulated but is not implemented",
    standard: "other"
  },
  {
    name: "SIGFPE",
    number: 8,
    action: "core",
    description: "Floating point arithmetic error",
    standard: "ansi"
  },
  {
    name: "SIGKILL",
    number: 9,
    action: "terminate",
    description: "Forced termination",
    standard: "posix",
    forced: !0
  },
  {
    name: "SIGUSR1",
    number: 10,
    action: "terminate",
    description: "Application-specific signal",
    standard: "posix"
  },
  {
    name: "SIGSEGV",
    number: 11,
    action: "core",
    description: "Segmentation fault",
    standard: "ansi"
  },
  {
    name: "SIGUSR2",
    number: 12,
    action: "terminate",
    description: "Application-specific signal",
    standard: "posix"
  },
  {
    name: "SIGPIPE",
    number: 13,
    action: "terminate",
    description: "Broken pipe or socket",
    standard: "posix"
  },
  {
    name: "SIGALRM",
    number: 14,
    action: "terminate",
    description: "Timeout or timer",
    standard: "posix"
  },
  {
    name: "SIGTERM",
    number: 15,
    action: "terminate",
    description: "Termination",
    standard: "ansi"
  },
  {
    name: "SIGSTKFLT",
    number: 16,
    action: "terminate",
    description: "Stack is empty or overflowed",
    standard: "other"
  },
  {
    name: "SIGCHLD",
    number: 17,
    action: "ignore",
    description: "Child process terminated, paused or unpaused",
    standard: "posix"
  },
  {
    name: "SIGCLD",
    number: 17,
    action: "ignore",
    description: "Child process terminated, paused or unpaused",
    standard: "other"
  },
  {
    name: "SIGCONT",
    number: 18,
    action: "unpause",
    description: "Unpaused",
    standard: "posix",
    forced: !0
  },
  {
    name: "SIGSTOP",
    number: 19,
    action: "pause",
    description: "Paused",
    standard: "posix",
    forced: !0
  },
  {
    name: "SIGTSTP",
    number: 20,
    action: "pause",
    description: 'Paused using CTRL-Z or "suspend"',
    standard: "posix"
  },
  {
    name: "SIGTTIN",
    number: 21,
    action: "pause",
    description: "Background process cannot read terminal input",
    standard: "posix"
  },
  {
    name: "SIGBREAK",
    number: 21,
    action: "terminate",
    description: "User interruption with CTRL-BREAK",
    standard: "other"
  },
  {
    name: "SIGTTOU",
    number: 22,
    action: "pause",
    description: "Background process cannot write to terminal output",
    standard: "posix"
  },
  {
    name: "SIGURG",
    number: 23,
    action: "ignore",
    description: "Socket received out-of-band data",
    standard: "bsd"
  },
  {
    name: "SIGXCPU",
    number: 24,
    action: "core",
    description: "Process timed out",
    standard: "bsd"
  },
  {
    name: "SIGXFSZ",
    number: 25,
    action: "core",
    description: "File too big",
    standard: "bsd"
  },
  {
    name: "SIGVTALRM",
    number: 26,
    action: "terminate",
    description: "Timeout or timer",
    standard: "bsd"
  },
  {
    name: "SIGPROF",
    number: 27,
    action: "terminate",
    description: "Timeout or timer",
    standard: "bsd"
  },
  {
    name: "SIGWINCH",
    number: 28,
    action: "ignore",
    description: "Terminal window size changed",
    standard: "bsd"
  },
  {
    name: "SIGIO",
    number: 29,
    action: "terminate",
    description: "I/O is available",
    standard: "other"
  },
  {
    name: "SIGPOLL",
    number: 29,
    action: "terminate",
    description: "Watched event",
    standard: "other"
  },
  {
    name: "SIGINFO",
    number: 29,
    action: "ignore",
    description: "Request for process information",
    standard: "other"
  },
  {
    name: "SIGPWR",
    number: 30,
    action: "terminate",
    description: "Device running out of power",
    standard: "systemv"
  },
  {
    name: "SIGSYS",
    number: 31,
    action: "core",
    description: "Invalid system call",
    standard: "other"
  },
  {
    name: "SIGUNUSED",
    number: 31,
    action: "terminate",
    description: "Invalid system call",
    standard: "other"
  }
];

// node_modules/human-signals/build/src/signals.js
var S0 = /* @__PURE__ */ s(() => {
  let e = yT();
  return [...xT, ...e].map(WK);
}, "getSignals"), WK = /* @__PURE__ */ s(({
  name: e,
  number: t,
  description: r,
  action: n,
  forced: i = !1,
  standard: o
}) => {
  let {
    signals: { [e]: a }
  } = UK, u = a !== void 0;
  return { name: e, number: u ? a : t, description: r, supported: u, action: n, forced: i, standard: o };
}, "normalizeSignal");

// node_modules/human-signals/build/src/main.js
var HK = /* @__PURE__ */ s(() => {
  let e = S0();
  return Object.fromEntries(e.map(GK));
}, "getSignalsByName"), GK = /* @__PURE__ */ s(({
  name: e,
  number: t,
  description: r,
  supported: n,
  action: i,
  forced: o,
  standard: a
}) => [e, { name: e, number: t, description: r, supported: n, action: i, forced: o, standard: a }], "getSignalByName"), bT = HK(), JK = /* @__PURE__ */ s(
() => {
  let e = S0(), t = w0 + 1, r = Array.from(
    { length: t },
    (n, i) => ZK(i, e)
  );
  return Object.assign({}, ...r);
}, "getSignalsByNumber"), ZK = /* @__PURE__ */ s((e, t) => {
  let r = XK(e, t);
  if (r === void 0)
    return {};
  let { name: n, description: i, supported: o, action: a, forced: u, standard: l } = r;
  return {
    [e]: {
      name: n,
      number: e,
      description: i,
      supported: o,
      action: a,
      forced: u,
      standard: l
    }
  };
}, "getSignalByNumber"), XK = /* @__PURE__ */ s((e, t) => {
  let r = t.find(({ name: n }) => zK.signals[n] === e);
  return r !== void 0 ? r : t.find((n) => n.number === e);
}, "findSignalByNumber"), CDe = JK();

// node_modules/execa/lib/error.js
var YK = /* @__PURE__ */ s(({ timedOut: e, timeout: t, errorCode: r, signal: n, signalDescription: i, exitCode: o, isCanceled: a }) => e ? `\
timed out after ${t} milliseconds` : a ? "was canceled" : r !== void 0 ? `failed with ${r}` : n !== void 0 ? `was killed with ${n} (${i})` :
o !== void 0 ? `failed with exit code ${o}` : "failed", "getErrorPrefix"), Aa = /* @__PURE__ */ s(({
  stdout: e,
  stderr: t,
  all: r,
  error: n,
  signal: i,
  exitCode: o,
  command: a,
  escapedCommand: u,
  timedOut: l,
  isCanceled: c,
  killed: p,
  parsed: { options: { timeout: h, cwd: f = KK.cwd() } }
}) => {
  o = o === null ? void 0 : o, i = i === null ? void 0 : i;
  let d = i === void 0 ? void 0 : bT[i].description, m = n && n.code, b = `Command ${YK({ timedOut: l, timeout: h, errorCode: m, signal: i, signalDescription: d,
  exitCode: o, isCanceled: c })}: ${a}`, y = Object.prototype.toString.call(n) === "[object Error]", E = y ? `${b}
${n.message}` : b, A = [E, t, e].filter(Boolean).join(`
`);
  return y ? (n.originalMessage = n.message, n.message = A) : n = new Error(A), n.shortMessage = E, n.command = a, n.escapedCommand = u, n.exitCode =
  o, n.signal = i, n.signalDescription = d, n.stdout = e, n.stderr = t, n.cwd = f, r !== void 0 && (n.all = r), "bufferedData" in n && delete n.
  bufferedData, n.failed = !0, n.timedOut = !!l, n.isCanceled = c, n.killed = p && !l, n;
}, "makeError");

// node_modules/execa/lib/stdio.js
var xc = ["stdin", "stdout", "stderr"], QK = /* @__PURE__ */ s((e) => xc.some((t) => e[t] !== void 0), "hasAlias"), vT = /* @__PURE__ */ s((e) => {
  if (!e)
    return;
  let { stdio: t } = e;
  if (t === void 0)
    return xc.map((n) => e[n]);
  if (QK(e))
    throw new Error(`It's not possible to provide \`stdio\` in combination with one of ${xc.map((n) => `\`${n}\``).join(", ")}`);
  if (typeof t == "string")
    return t;
  if (!Array.isArray(t))
    throw new TypeError(`Expected \`stdio\` to be of type \`string\` or \`Array\`, got \`${typeof t}\``);
  let r = Math.max(t.length, xc.length);
  return Array.from({ length: r }, (n, i) => t[i]);
}, "normalizeStdio");

// node_modules/execa/lib/kill.js
import rY from "node:os";

// node_modules/signal-exit/dist/mjs/signals.js
var Vi = [];
Vi.push("SIGHUP", "SIGINT", "SIGTERM");
process.platform !== "win32" && Vi.push(
  "SIGALRM",
  "SIGABRT",
  "SIGVTALRM",
  "SIGXCPU",
  "SIGXFSZ",
  "SIGUSR2",
  "SIGTRAP",
  "SIGSYS",
  "SIGQUIT",
  "SIGIOT"
  // should detect profiler and enable/disable accordingly.
  // see #21
  // 'SIGPROF'
);
process.platform === "linux" && Vi.push("SIGIO", "SIGPOLL", "SIGPWR", "SIGSTKFLT");

// node_modules/signal-exit/dist/mjs/index.js
var bc = /* @__PURE__ */ s((e) => !!e && typeof e == "object" && typeof e.removeListener == "function" && typeof e.emit == "function" && typeof e.
reallyExit == "function" && typeof e.listeners == "function" && typeof e.kill == "function" && typeof e.pid == "number" && typeof e.on == "f\
unction", "processOk"), A0 = Symbol.for("signal-exit emitter"), F0 = globalThis, eY = Object.defineProperty.bind(Object), _0 = class {
  static {
    s(this, "Emitter");
  }
  emitted = {
    afterExit: !1,
    exit: !1
  };
  listeners = {
    afterExit: [],
    exit: []
  };
  count = 0;
  id = Math.random();
  constructor() {
    if (F0[A0])
      return F0[A0];
    eY(F0, A0, {
      value: this,
      writable: !1,
      enumerable: !1,
      configurable: !1
    });
  }
  on(t, r) {
    this.listeners[t].push(r);
  }
  removeListener(t, r) {
    let n = this.listeners[t], i = n.indexOf(r);
    i !== -1 && (i === 0 && n.length === 1 ? n.length = 0 : n.splice(i, 1));
  }
  emit(t, r, n) {
    if (this.emitted[t])
      return !1;
    this.emitted[t] = !0;
    let i = !1;
    for (let o of this.listeners[t])
      i = o(r, n) === !0 || i;
    return t === "exit" && (i = this.emit("afterExit", r, n) || i), i;
  }
}, vc = class {
  static {
    s(this, "SignalExitBase");
  }
}, tY = /* @__PURE__ */ s((e) => ({
  onExit(t, r) {
    return e.onExit(t, r);
  },
  load() {
    return e.load();
  },
  unload() {
    return e.unload();
  }
}), "signalExitWrap"), k0 = class extends vc {
  static {
    s(this, "SignalExitFallback");
  }
  onExit() {
    return () => {
    };
  }
  load() {
  }
  unload() {
  }
}, T0 = class extends vc {
  static {
    s(this, "SignalExit");
  }
  // "SIGHUP" throws an `ENOSYS` error on Windows,
  // so use a supported signal instead
  /* c8 ignore start */
  #t = I0.platform === "win32" ? "SIGINT" : "SIGHUP";
  /* c8 ignore stop */
  #r = new _0();
  #e;
  #n;
  #o;
  #s = {};
  #i = !1;
  constructor(t) {
    super(), this.#e = t, this.#s = {};
    for (let r of Vi)
      this.#s[r] = () => {
        let n = this.#e.listeners(r), { count: i } = this.#r, o = t;
        if (typeof o.__signal_exit_emitter__ == "object" && typeof o.__signal_exit_emitter__.count == "number" && (i += o.__signal_exit_emitter__.
        count), n.length === i) {
          this.unload();
          let a = this.#r.emit("exit", null, r), u = r === "SIGHUP" ? this.#t : r;
          a || t.kill(t.pid, u);
        }
      };
    this.#o = t.reallyExit, this.#n = t.emit;
  }
  onExit(t, r) {
    if (!bc(this.#e))
      return () => {
      };
    this.#i === !1 && this.load();
    let n = r?.alwaysLast ? "afterExit" : "exit";
    return this.#r.on(n, t), () => {
      this.#r.removeListener(n, t), this.#r.listeners.exit.length === 0 && this.#r.listeners.afterExit.length === 0 && this.unload();
    };
  }
  load() {
    if (!this.#i) {
      this.#i = !0, this.#r.count += 1;
      for (let t of Vi)
        try {
          let r = this.#s[t];
          r && this.#e.on(t, r);
        } catch {
        }
      this.#e.emit = (t, ...r) => this.#u(t, ...r), this.#e.reallyExit = (t) => this.#a(t);
    }
  }
  unload() {
    this.#i && (this.#i = !1, Vi.forEach((t) => {
      let r = this.#s[t];
      if (!r)
        throw new Error("Listener not defined for signal: " + t);
      try {
        this.#e.removeListener(t, r);
      } catch {
      }
    }), this.#e.emit = this.#n, this.#e.reallyExit = this.#o, this.#r.count -= 1);
  }
  #a(t) {
    return bc(this.#e) ? (this.#e.exitCode = t || 0, this.#r.emit("exit", this.#e.exitCode, null), this.#o.call(this.#e, this.#e.exitCode)) :
    0;
  }
  #u(t, ...r) {
    let n = this.#n;
    if (t === "exit" && bc(this.#e)) {
      typeof r[0] == "number" && (this.#e.exitCode = r[0]);
      let i = n.call(this.#e, t, ...r);
      return this.#r.emit("exit", this.#e.exitCode, null), i;
    } else
      return n.call(this.#e, t, ...r);
  }
}, I0 = globalThis.process, {
  /**
   * Called when the process is exiting, whether via signal, explicit
   * exit, or running out of stuff to do.
   *
   * If the global process object is not suitable for instrumentation,
   * then this will be a no-op.
   *
   * Returns a function that may be used to unload signal-exit.
   */
  onExit: ET,
  /**
   * Load the listeners.  Likely you never need to call this, unless
   * doing a rather deep integration with signal-exit functionality.
   * Mostly exposed for the benefit of testing.
   *
   * @internal
   */
  load: ODe,
  /**
   * Unload the listeners.  Likely you never need to call this, unless
   * doing a rather deep integration with signal-exit functionality.
   * Mostly exposed for the benefit of testing.
   *
   * @internal
   */
  unload: RDe
} = tY(bc(I0) ? new T0(I0) : new k0());

// node_modules/execa/lib/kill.js
var nY = 1e3 * 5, CT = /* @__PURE__ */ s((e, t = "SIGTERM", r = {}) => {
  let n = e(t);
  return iY(e, t, r, n), n;
}, "spawnedKill"), iY = /* @__PURE__ */ s((e, t, r, n) => {
  if (!sY(t, r, n))
    return;
  let i = aY(r), o = setTimeout(() => {
    e("SIGKILL");
  }, i);
  o.unref && o.unref();
}, "setKillTimeout"), sY = /* @__PURE__ */ s((e, { forceKillAfterTimeout: t }, r) => oY(e) && t !== !1 && r, "shouldForceKill"), oY = /* @__PURE__ */ s(
(e) => e === rY.constants.signals.SIGTERM || typeof e == "string" && e.toUpperCase() === "SIGTERM", "isSigterm"), aY = /* @__PURE__ */ s(({ forceKillAfterTimeout: e = !0 }) => {
  if (e === !0)
    return nY;
  if (!Number.isFinite(e) || e < 0)
    throw new TypeError(`Expected the \`forceKillAfterTimeout\` option to be a non-negative integer, got \`${e}\` (${typeof e})`);
  return e;
}, "getForceKillAfterTimeout"), wT = /* @__PURE__ */ s((e, t) => {
  e.kill() && (t.isCanceled = !0);
}, "spawnedCancel"), uY = /* @__PURE__ */ s((e, t, r) => {
  e.kill(t), r(Object.assign(new Error("Timed out"), { timedOut: !0, signal: t }));
}, "timeoutKill"), ST = /* @__PURE__ */ s((e, { timeout: t, killSignal: r = "SIGTERM" }, n) => {
  if (t === 0 || t === void 0)
    return n;
  let i, o = new Promise((u, l) => {
    i = setTimeout(() => {
      uY(e, r, l);
    }, t);
  }), a = n.finally(() => {
    clearTimeout(i);
  });
  return Promise.race([o, a]);
}, "setupTimeout"), AT = /* @__PURE__ */ s(({ timeout: e }) => {
  if (e !== void 0 && (!Number.isFinite(e) || e < 0))
    throw new TypeError(`Expected the \`timeout\` option to be a non-negative integer, got \`${e}\` (${typeof e})`);
}, "validateTimeout"), FT = /* @__PURE__ */ s(async (e, { cleanup: t, detached: r }, n) => {
  if (!t || r)
    return n;
  let i = ET(() => {
    e.kill();
  });
  return n.finally(() => {
    i();
  });
}, "setExitHandler");

// node_modules/execa/lib/pipe.js
import { createWriteStream as lY } from "node:fs";
import { ChildProcess as cY } from "node:child_process";

// node_modules/is-stream/index.js
function Ec(e) {
  return e !== null && typeof e == "object" && typeof e.pipe == "function";
}
s(Ec, "isStream");
function P0(e) {
  return Ec(e) && e.writable !== !1 && typeof e._write == "function" && typeof e._writableState == "object";
}
s(P0, "isWritableStream");

// node_modules/execa/lib/pipe.js
var pY = /* @__PURE__ */ s((e) => e instanceof cY && typeof e.then == "function", "isExecaChildProcess"), B0 = /* @__PURE__ */ s((e, t, r) => {
  if (typeof r == "string")
    return e[t].pipe(lY(r)), e;
  if (P0(r))
    return e[t].pipe(r), e;
  if (!pY(r))
    throw new TypeError("The second argument must be a string, a stream or an Execa child process.");
  if (!P0(r.stdin))
    throw new TypeError("The target child process's stdin must be available.");
  return e[t].pipe(r.stdin), r;
}, "pipeToTarget"), _T = /* @__PURE__ */ s((e) => {
  e.stdout !== null && (e.pipeStdout = B0.bind(void 0, e, "stdout")), e.stderr !== null && (e.pipeStderr = B0.bind(void 0, e, "stderr")), e.
  all !== void 0 && (e.pipeAll = B0.bind(void 0, e, "all"));
}, "addPipeMethods");

// node_modules/execa/lib/stream.js
import { createReadStream as TY, readFileSync as IY } from "node:fs";
import { setTimeout as PY } from "node:timers/promises";

// node_modules/get-stream/source/contents.js
var Fa = /* @__PURE__ */ s(async (e, { init: t, convertChunk: r, getSize: n, truncateChunk: i, addChunk: o, getFinalChunk: a, finalize: u }, {
maxBuffer: l = Number.POSITIVE_INFINITY } = {}) => {
  if (!fY(e))
    throw new Error("The first argument must be a Readable, a ReadableStream, or an async iterable.");
  let c = t();
  c.length = 0;
  try {
    for await (let p of e) {
      let h = dY(p), f = r[h](p, c);
      IT({ convertedChunk: f, state: c, getSize: n, truncateChunk: i, addChunk: o, maxBuffer: l });
    }
    return hY({ state: c, convertChunk: r, getSize: n, truncateChunk: i, addChunk: o, getFinalChunk: a, maxBuffer: l }), u(c);
  } catch (p) {
    throw p.bufferedData = u(c), p;
  }
}, "getStreamContents"), hY = /* @__PURE__ */ s(({ state: e, getSize: t, truncateChunk: r, addChunk: n, getFinalChunk: i, maxBuffer: o }) => {
  let a = i(e);
  a !== void 0 && IT({ convertedChunk: a, state: e, getSize: t, truncateChunk: r, addChunk: n, maxBuffer: o });
}, "appendFinalChunk"), IT = /* @__PURE__ */ s(({ convertedChunk: e, state: t, getSize: r, truncateChunk: n, addChunk: i, maxBuffer: o }) => {
  let a = r(e), u = t.length + a;
  if (u <= o) {
    kT(e, t, i, u);
    return;
  }
  let l = n(e, o - t.length);
  throw l !== void 0 && kT(l, t, i, o), new Cc();
}, "appendChunk"), kT = /* @__PURE__ */ s((e, t, r, n) => {
  t.contents = r(e, t, n), t.length = n;
}, "addNewChunk"), fY = /* @__PURE__ */ s((e) => typeof e == "object" && e !== null && typeof e[Symbol.asyncIterator] == "function", "isAsyn\
cIterable"), dY = /* @__PURE__ */ s((e) => {
  let t = typeof e;
  if (t === "string")
    return "string";
  if (t !== "object" || e === null)
    return "others";
  if (globalThis.Buffer?.isBuffer(e))
    return "buffer";
  let r = TT.call(e);
  return r === "[object ArrayBuffer]" ? "arrayBuffer" : r === "[object DataView]" ? "dataView" : Number.isInteger(e.byteLength) && Number.isInteger(
  e.byteOffset) && TT.call(e.buffer) === "[object ArrayBuffer]" ? "typedArray" : "others";
}, "getChunkType"), { toString: TT } = Object.prototype, Cc = class extends Error {
  static {
    s(this, "MaxBufferError");
  }
  name = "MaxBufferError";
  constructor() {
    super("maxBuffer exceeded");
  }
};

// node_modules/get-stream/source/utils.js
var O0 = /* @__PURE__ */ s((e) => e, "identity"), R0 = /* @__PURE__ */ s(() => {
}, "noop"), N0 = /* @__PURE__ */ s(({ contents: e }) => e, "getContentsProp"), wc = /* @__PURE__ */ s((e) => {
  throw new Error(`Streams in object mode are not supported: ${String(e)}`);
}, "throwObjectStream"), Sc = /* @__PURE__ */ s((e) => e.length, "getLengthProp");

// node_modules/get-stream/source/array-buffer.js
async function L0(e, t) {
  return Fa(e, CY, t);
}
s(L0, "getStreamAsArrayBuffer");
var mY = /* @__PURE__ */ s(() => ({ contents: new ArrayBuffer(0) }), "initArrayBuffer"), gY = /* @__PURE__ */ s((e) => yY.encode(e), "useTex\
tEncoder"), yY = new TextEncoder(), PT = /* @__PURE__ */ s((e) => new Uint8Array(e), "useUint8Array"), BT = /* @__PURE__ */ s((e) => new Uint8Array(
e.buffer, e.byteOffset, e.byteLength), "useUint8ArrayWithOffset"), DY = /* @__PURE__ */ s((e, t) => e.slice(0, t), "truncateArrayBufferChunk"),
xY = /* @__PURE__ */ s((e, { contents: t, length: r }, n) => {
  let i = NT() ? vY(t, n) : bY(t, n);
  return new Uint8Array(i).set(e, r), i;
}, "addArrayBufferChunk"), bY = /* @__PURE__ */ s((e, t) => {
  if (t <= e.byteLength)
    return e;
  let r = new ArrayBuffer(RT(t));
  return new Uint8Array(r).set(new Uint8Array(e), 0), r;
}, "resizeArrayBufferSlow"), vY = /* @__PURE__ */ s((e, t) => {
  if (t <= e.maxByteLength)
    return e.resize(t), e;
  let r = new ArrayBuffer(t, { maxByteLength: RT(t) });
  return new Uint8Array(r).set(new Uint8Array(e), 0), r;
}, "resizeArrayBuffer"), RT = /* @__PURE__ */ s((e) => OT ** Math.ceil(Math.log(e) / Math.log(OT)), "getNewContentsLength"), OT = 2, EY = /* @__PURE__ */ s(
({ contents: e, length: t }) => NT() ? e : e.slice(0, t), "finalizeArrayBuffer"), NT = /* @__PURE__ */ s(() => "resize" in ArrayBuffer.prototype,
"hasArrayBufferResize"), CY = {
  init: mY,
  convertChunk: {
    string: gY,
    buffer: PT,
    arrayBuffer: PT,
    dataView: BT,
    typedArray: BT,
    others: wc
  },
  getSize: Sc,
  truncateChunk: DY,
  addChunk: xY,
  getFinalChunk: R0,
  finalize: EY
};

// node_modules/get-stream/source/buffer.js
async function Ac(e, t) {
  if (!("Buffer" in globalThis))
    throw new Error("getStreamAsBuffer() is only supported in Node.js");
  try {
    return LT(await L0(e, t));
  } catch (r) {
    throw r.bufferedData !== void 0 && (r.bufferedData = LT(r.bufferedData)), r;
  }
}
s(Ac, "getStreamAsBuffer");
var LT = /* @__PURE__ */ s((e) => globalThis.Buffer.from(e), "arrayBufferToNodeBuffer");

// node_modules/get-stream/source/string.js
async function j0(e, t) {
  return Fa(e, _Y, t);
}
s(j0, "getStreamAsString");
var wY = /* @__PURE__ */ s(() => ({ contents: "", textDecoder: new TextDecoder() }), "initString"), Fc = /* @__PURE__ */ s((e, { textDecoder: t }) => t.
decode(e, { stream: !0 }), "useTextDecoder"), SY = /* @__PURE__ */ s((e, { contents: t }) => t + e, "addStringChunk"), AY = /* @__PURE__ */ s(
(e, t) => e.slice(0, t), "truncateStringChunk"), FY = /* @__PURE__ */ s(({ textDecoder: e }) => {
  let t = e.decode();
  return t === "" ? void 0 : t;
}, "getFinalStringChunk"), _Y = {
  init: wY,
  convertChunk: {
    string: O0,
    buffer: Fc,
    arrayBuffer: Fc,
    dataView: Fc,
    typedArray: Fc,
    others: wc
  },
  getSize: Sc,
  truncateChunk: AY,
  addChunk: SY,
  getFinalChunk: FY,
  finalize: N0
};

// node_modules/execa/lib/stream.js
var qT = fe(MT(), 1);
var $T = /* @__PURE__ */ s((e) => {
  if (e !== void 0)
    throw new TypeError("The `input` and `inputFile` options cannot be both set.");
}, "validateInputOptions"), BY = /* @__PURE__ */ s(({ input: e, inputFile: t }) => typeof t != "string" ? e : ($T(e), IY(t)), "getInputSync"),
VT = /* @__PURE__ */ s((e) => {
  let t = BY(e);
  if (Ec(t))
    throw new TypeError("The `input` option cannot be a stream in sync mode");
  return t;
}, "handleInputSync"), OY = /* @__PURE__ */ s(({ input: e, inputFile: t }) => typeof t != "string" ? e : ($T(e), TY(t)), "getInput"), UT = /* @__PURE__ */ s(
(e, t) => {
  let r = OY(t);
  r !== void 0 && (Ec(r) ? r.pipe(e.stdin) : e.stdin.end(r));
}, "handleInput"), WT = /* @__PURE__ */ s((e, { all: t }) => {
  if (!t || !e.stdout && !e.stderr)
    return;
  let r = (0, qT.default)();
  return e.stdout && r.add(e.stdout), e.stderr && r.add(e.stderr), r;
}, "makeAllStream"), M0 = /* @__PURE__ */ s(async (e, t) => {
  if (!(!e || t === void 0)) {
    await PY(0), e.destroy();
    try {
      return await t;
    } catch (r) {
      return r.bufferedData;
    }
  }
}, "getBufferedData"), q0 = /* @__PURE__ */ s((e, { encoding: t, buffer: r, maxBuffer: n }) => {
  if (!(!e || !r))
    return t === "utf8" || t === "utf-8" ? j0(e, { maxBuffer: n }) : t === null || t === "buffer" ? Ac(e, { maxBuffer: n }) : RY(e, n, t);
}, "getStreamPromise"), RY = /* @__PURE__ */ s(async (e, t, r) => (await Ac(e, { maxBuffer: t })).toString(r), "applyEncoding"), zT = /* @__PURE__ */ s(
async ({ stdout: e, stderr: t, all: r }, { encoding: n, buffer: i, maxBuffer: o }, a) => {
  let u = q0(e, { encoding: n, buffer: i, maxBuffer: o }), l = q0(t, { encoding: n, buffer: i, maxBuffer: o }), c = q0(r, { encoding: n, buffer: i,
  maxBuffer: o * 2 });
  try {
    return await Promise.all([a, u, l, c]);
  } catch (p) {
    return Promise.all([
      { error: p, signal: p.signal, timedOut: p.timedOut },
      M0(e, u),
      M0(t, l),
      M0(r, c)
    ]);
  }
}, "getSpawnedResult");

// node_modules/execa/lib/promise.js
var NY = (async () => {
})().constructor.prototype, LY = ["then", "catch", "finally"].map((e) => [
  e,
  Reflect.getOwnPropertyDescriptor(NY, e)
]), $0 = /* @__PURE__ */ s((e, t) => {
  for (let [r, n] of LY) {
    let i = typeof t == "function" ? (...o) => Reflect.apply(n.value, t(), o) : n.value.bind(t);
    Reflect.defineProperty(e, r, { ...n, value: i });
  }
}, "mergePromise"), HT = /* @__PURE__ */ s((e) => new Promise((t, r) => {
  e.on("exit", (n, i) => {
    t({ exitCode: n, signal: i });
  }), e.on("error", (n) => {
    r(n);
  }), e.stdin && e.stdin.on("error", (n) => {
    r(n);
  });
}), "getSpawnedPromise");

// node_modules/execa/lib/command.js
import { Buffer as jY } from "node:buffer";
import { ChildProcess as MY } from "node:child_process";
var ZT = /* @__PURE__ */ s((e, t = []) => Array.isArray(t) ? [e, ...t] : [e], "normalizeArgs"), qY = /^[\w.-]+$/, $Y = /* @__PURE__ */ s((e) => typeof e !=
"string" || qY.test(e) ? e : `"${e.replaceAll('"', '\\"')}"`, "escapeArg"), V0 = /* @__PURE__ */ s((e, t) => ZT(e, t).join(" "), "joinComman\
d"), U0 = /* @__PURE__ */ s((e, t) => ZT(e, t).map((r) => $Y(r)).join(" "), "getEscapedCommand"), XT = / +/g, KT = /* @__PURE__ */ s((e) => {
  let t = [];
  for (let r of e.trim().split(XT)) {
    let n = t.at(-1);
    n && n.endsWith("\\") ? t[t.length - 1] = `${n.slice(0, -1)} ${r}` : t.push(r);
  }
  return t;
}, "parseCommand"), GT = /* @__PURE__ */ s((e) => {
  let t = typeof e;
  if (t === "string")
    return e;
  if (t === "number")
    return String(e);
  if (t === "object" && e !== null && !(e instanceof MY) && "stdout" in e) {
    let r = typeof e.stdout;
    if (r === "string")
      return e.stdout;
    if (jY.isBuffer(e.stdout))
      return e.stdout.toString();
    throw new TypeError(`Unexpected "${r}" stdout in template expression`);
  }
  throw new TypeError(`Unexpected "${t}" in template expression`);
}, "parseExpression"), JT = /* @__PURE__ */ s((e, t, r) => r || e.length === 0 || t.length === 0 ? [...e, ...t] : [
  ...e.slice(0, -1),
  `${e.at(-1)}${t[0]}`,
  ...t.slice(1)
], "concatTokens"), VY = /* @__PURE__ */ s(({ templates: e, expressions: t, tokens: r, index: n, template: i }) => {
  let o = i ?? e.raw[n], a = o.split(XT).filter(Boolean), u = JT(
    r,
    a,
    o.startsWith(" ")
  );
  if (n === t.length)
    return u;
  let l = t[n], c = Array.isArray(l) ? l.map((p) => GT(p)) : [GT(l)];
  return JT(
    u,
    c,
    o.endsWith(" ")
  );
}, "parseTemplate"), W0 = /* @__PURE__ */ s((e, t) => {
  let r = [];
  for (let [n, i] of e.entries())
    r = VY({ templates: e, expressions: t, tokens: r, index: n, template: i });
  return r;
}, "parseTemplates");

// node_modules/execa/lib/verbose.js
import { debuglog as UY } from "node:util";
import WY from "node:process";
var YT = UY("execa").enabled, _c = /* @__PURE__ */ s((e, t) => String(e).padStart(t, "0"), "padField"), zY = /* @__PURE__ */ s(() => {
  let e = /* @__PURE__ */ new Date();
  return `${_c(e.getHours(), 2)}:${_c(e.getMinutes(), 2)}:${_c(e.getSeconds(), 2)}.${_c(e.getMilliseconds(), 3)}`;
}, "getTimestamp"), z0 = /* @__PURE__ */ s((e, { verbose: t }) => {
  t && WY.stderr.write(`[${zY()}] ${e}
`);
}, "logCommand");

// node_modules/execa/index.js
var JY = 1e3 * 1e3 * 100, ZY = /* @__PURE__ */ s(({ env: e, extendEnv: t, preferLocal: r, localDir: n, execPath: i }) => {
  let o = t ? { ...kc.env, ...e } : e;
  return r ? dT({ env: o, cwd: n, execPath: i }) : o;
}, "getEnv"), tI = /* @__PURE__ */ s((e, t, r = {}) => {
  let n = eI.default._parse(e, t, r);
  return e = n.command, t = n.args, r = n.options, r = {
    maxBuffer: JY,
    buffer: !0,
    stripFinalNewline: !0,
    extendEnv: !0,
    preferLocal: !1,
    localDir: r.cwd || kc.cwd(),
    execPath: kc.execPath,
    encoding: "utf8",
    reject: !0,
    cleanup: !0,
    all: !1,
    windowsHide: !0,
    verbose: YT,
    ...r
  }, r.env = ZY(r), r.stdio = vT(r), kc.platform === "win32" && GY.basename(e, ".exe") === "cmd" && t.unshift("/q"), { file: e, args: t, options: r,
  parsed: n };
}, "handleArguments"), _a = /* @__PURE__ */ s((e, t, r) => typeof t != "string" && !HY.isBuffer(t) ? r === void 0 ? void 0 : "" : e.stripFinalNewline ?
E0(t) : t, "handleOutput");
function rI(e, t, r) {
  let n = tI(e, t, r), i = V0(e, t), o = U0(e, t);
  z0(o, n.options), AT(n.options);
  let a;
  try {
    a = H0.spawn(n.file, n.args, n.options);
  } catch (d) {
    let m = new H0.ChildProcess(), g = Promise.reject(Aa({
      error: d,
      stdout: "",
      stderr: "",
      all: "",
      command: i,
      escapedCommand: o,
      parsed: n,
      timedOut: !1,
      isCanceled: !1,
      killed: !1
    }));
    return $0(m, g), m;
  }
  let u = HT(a), l = ST(a, n.options, u), c = FT(a, n.options, l), p = { isCanceled: !1 };
  a.kill = CT.bind(null, a.kill.bind(a)), a.cancel = wT.bind(null, a, p);
  let f = gT(/* @__PURE__ */ s(async () => {
    let [{ error: d, exitCode: m, signal: g, timedOut: b }, y, E, A] = await zT(a, n.options, c), k = _a(n.options, y), O = _a(n.options, E),
    w = _a(n.options, A);
    if (d || m !== 0 || g !== null) {
      let C = Aa({
        error: d,
        exitCode: m,
        signal: g,
        stdout: k,
        stderr: O,
        all: w,
        command: i,
        escapedCommand: o,
        parsed: n,
        timedOut: b,
        isCanceled: p.isCanceled || (n.options.signal ? n.options.signal.aborted : !1),
        killed: a.killed
      });
      if (!n.options.reject)
        return C;
      throw C;
    }
    return {
      command: i,
      escapedCommand: o,
      exitCode: 0,
      stdout: k,
      stderr: O,
      all: w,
      failed: !1,
      timedOut: !1,
      isCanceled: !1,
      killed: !1
    };
  }, "handlePromise"));
  return UT(a, n.options), a.all = WT(a, n.options), _T(a), $0(a, f), a;
}
s(rI, "execa");
function XY(e, t, r) {
  let n = tI(e, t, r), i = V0(e, t), o = U0(e, t);
  z0(o, n.options);
  let a = VT(n.options), u;
  try {
    u = H0.spawnSync(n.file, n.args, { ...n.options, input: a });
  } catch (p) {
    throw Aa({
      error: p,
      stdout: "",
      stderr: "",
      all: "",
      command: i,
      escapedCommand: o,
      parsed: n,
      timedOut: !1,
      isCanceled: !1,
      killed: !1
    });
  }
  let l = _a(n.options, u.stdout, u.error), c = _a(n.options, u.stderr, u.error);
  if (u.error || u.status !== 0 || u.signal !== null) {
    let p = Aa({
      stdout: l,
      stderr: c,
      error: u.error,
      signal: u.signal,
      exitCode: u.status,
      command: i,
      escapedCommand: o,
      parsed: n,
      timedOut: u.error && u.error.code === "ETIMEDOUT",
      isCanceled: !1,
      killed: u.signal !== null
    });
    if (!n.options.reject)
      return p;
    throw p;
  }
  return {
    command: i,
    escapedCommand: o,
    exitCode: 0,
    stdout: l,
    stderr: c,
    failed: !1,
    timedOut: !1,
    isCanceled: !1,
    killed: !1
  };
}
s(XY, "execaSync");
var KY = /* @__PURE__ */ s(({ input: e, inputFile: t, stdio: r }) => e === void 0 && t === void 0 && r === void 0 ? { stdin: "inherit" } : {},
"normalizeScriptStdin"), QT = /* @__PURE__ */ s((e = {}) => ({
  preferLocal: !0,
  ...KY(e),
  ...e
}), "normalizeScriptOptions");
function nI(e) {
  function t(r, ...n) {
    if (!Array.isArray(r))
      return nI({ ...e, ...r });
    let [i, ...o] = W0(r, n);
    return rI(i, o, QT(e));
  }
  return s(t, "$"), t.sync = (r, ...n) => {
    if (!Array.isArray(r))
      throw new TypeError("Please use $(options).sync`command` instead of $.sync(options)`command`.");
    let [i, ...o] = W0(r, n);
    return XY(i, o, QT(e));
  }, t;
}
s(nI, "create$");
var tbe = nI();
function ka(e, t) {
  let [r, ...n] = KT(e);
  return rI(r, n, t);
}
s(ka, "execaCommand");

// src/telemetry/exec-command-count-lines.ts
async function Tc(e, t) {
  let r = ka(e, { shell: !0, buffer: !1, ...t });
  if (!r.stdout)
    throw new Error("Unexpected missing stdout");
  let n = 0, i = YY(r.stdout);
  return i.on("line", () => {
    n += 1;
  }), await r, i.close(), n;
}
s(Tc, "execCommandCountLines");

// src/common/utils/file-cache.ts
import { createHash as iI, randomBytes as QY } from "node:crypto";
import { mkdirSync as G0, readFileSync as eQ, readdirSync as tQ, rmSync as sI, writeFileSync as rQ } from "node:fs";
import { readFile as oI, readdir as aI, rm as uI, writeFile as nQ } from "node:fs/promises";
import { tmpdir as iQ } from "node:os";
import { join as Ta } from "node:path";
var Ic = class {
  static {
    s(this, "FileSystemCache");
  }
  constructor(t = {}) {
    this.prefix = (t.ns || t.prefix || "") + "-", this.hash_alg = t.hash_alg || "sha256", this.cache_dir = t.basePath || Ta(iQ(), QY(15).toString(
    "base64").replace(/\//g, "-")), this.ttl = t.ttl || 0, iI(this.hash_alg), G0(this.cache_dir, { recursive: !0 });
  }
  generateHash(t) {
    return Ta(this.cache_dir, this.prefix + iI(this.hash_alg).update(t).digest("hex"));
  }
  isExpired(t, r) {
    return t.ttl != null && r > t.ttl;
  }
  parseCacheData(t, r) {
    let n = JSON.parse(t);
    return this.isExpired(n, Date.now()) ? r : n.content;
  }
  parseSetData(t, r, n = {}) {
    let i = n.ttl ?? this.ttl;
    return JSON.stringify({ key: t, content: r, ...i && { ttl: Date.now() + i * 1e3 } });
  }
  async get(t, r) {
    try {
      let n = await oI(this.generateHash(t), "utf8");
      return this.parseCacheData(n, r);
    } catch {
      return r;
    }
  }
  getSync(t, r) {
    try {
      let n = eQ(this.generateHash(t), "utf8");
      return this.parseCacheData(n, r);
    } catch {
      return r;
    }
  }
  async set(t, r, n = {}) {
    let i = typeof n == "number" ? { ttl: n } : n;
    G0(this.cache_dir, { recursive: !0 }), await nQ(this.generateHash(t), this.parseSetData(t, r, i), {
      encoding: i.encoding || "utf8"
    });
  }
  setSync(t, r, n = {}) {
    let i = typeof n == "number" ? { ttl: n } : n;
    G0(this.cache_dir, { recursive: !0 }), rQ(this.generateHash(t), this.parseSetData(t, r, i), {
      encoding: i.encoding || "utf8"
    });
  }
  async setMany(t, r) {
    await Promise.all(t.map((n) => this.set(n.key, n.content ?? n.value, r)));
  }
  setManySync(t, r) {
    t.forEach((n) => this.setSync(n.key, n.content ?? n.value, r));
  }
  async remove(t) {
    await uI(this.generateHash(t), { force: !0 });
  }
  removeSync(t) {
    sI(this.generateHash(t), { force: !0 });
  }
  async clear() {
    let t = await aI(this.cache_dir);
    await Promise.all(
      t.filter((r) => r.startsWith(this.prefix)).map((r) => uI(Ta(this.cache_dir, r), { force: !0 }))
    );
  }
  clearSync() {
    tQ(this.cache_dir).filter((t) => t.startsWith(this.prefix)).forEach((t) => sI(Ta(this.cache_dir, t), { force: !0 }));
  }
  async getAll() {
    let t = Date.now(), r = await aI(this.cache_dir);
    return (await Promise.all(
      r.filter((i) => i.startsWith(this.prefix)).map((i) => oI(Ta(this.cache_dir, i), "utf8"))
    )).map((i) => JSON.parse(i)).filter((i) => i.content && !this.isExpired(i, t));
  }
  async load() {
    return {
      files: (await this.getAll()).map((r) => ({
        path: this.generateHash(r.key),
        value: r.content,
        key: r.key
      }))
    };
  }
};
function J0(e) {
  return new Ic(e);
}
s(J0, "createFileSystemCache");

// src/common/utils/resolve-path-in-sb-cache.ts
import { join as gI } from "node:path";

// node_modules/find-cache-dir/index.js
var mI = fe(cI(), 1);
import hQ from "node:process";
import Ia from "node:path";
import Bc from "node:fs";

// ../node_modules/pkg-dir/index.js
import pQ from "node:path";

// ../node_modules/pkg-dir/node_modules/find-up/index.js
import Pc from "node:path";
import { fileURLToPath as aQ } from "node:url";

// ../node_modules/pkg-dir/node_modules/path-exists/index.js
import Dbe, { promises as xbe } from "node:fs";

// ../node_modules/pkg-dir/node_modules/find-up/index.js
var uQ = /* @__PURE__ */ s((e) => e instanceof URL ? aQ(e) : e, "toPath"), lQ = Symbol("findUpStop");
function cQ(e, t = {}) {
  let r = Pc.resolve(uQ(t.cwd) || ""), { root: n } = Pc.parse(r), i = t.stopAt || n, o = t.limit || Number.POSITIVE_INFINITY, a = [e].flat(),
  u = /* @__PURE__ */ s((c) => {
    if (typeof e != "function")
      return Yi(a, c);
    let p = e(c.cwd);
    return typeof p == "string" ? Yi([p], c) : p;
  }, "runMatcher"), l = [];
  for (; ; ) {
    let c = u({ ...t, cwd: r });
    if (c === lQ || (c && l.push(Pc.resolve(r, c)), r === i || l.length >= o))
      break;
    r = Pc.dirname(r);
  }
  return l;
}
s(cQ, "findUpMultipleSync");
function pI(e, t = {}) {
  return cQ(e, { ...t, limit: 1 })[0];
}
s(pI, "findUpSync");

// ../node_modules/pkg-dir/index.js
function hI({ cwd: e } = {}) {
  let t = pI("package.json", { cwd: e });
  return t && pQ.dirname(t);
}
s(hI, "packageDirectorySync");

// node_modules/find-cache-dir/index.js
var { env: Z0, cwd: fQ } = hQ, fI = /* @__PURE__ */ s((e) => {
  try {
    return Bc.accessSync(e, Bc.constants.W_OK), !0;
  } catch {
    return !1;
  }
}, "isWritable");
function dI(e, t) {
  return t.create && Bc.mkdirSync(e, { recursive: !0 }), e;
}
s(dI, "useDirectory");
function dQ(e) {
  let t = Ia.join(e, "node_modules");
  if (!(!fI(t) && (Bc.existsSync(t) || !fI(Ia.join(e)))))
    return t;
}
s(dQ, "getNodeModuleDirectory");
function X0(e = {}) {
  if (Z0.CACHE_DIR && !["true", "false", "1", "0"].includes(Z0.CACHE_DIR))
    return dI(Ia.join(Z0.CACHE_DIR, e.name), e);
  let { cwd: t = fQ(), files: r } = e;
  if (r) {
    if (!Array.isArray(r))
      throw new TypeError(`Expected \`files\` option to be an array, got \`${typeof r}\`.`);
    t = (0, mI.default)(r.map((i) => Ia.resolve(t, i)));
  }
  if (t = hI({ cwd: t }), !(!t || !dQ(t)))
    return dI(Ia.join(t, "node_modules", ".cache", e.name), e);
}
s(X0, "findCacheDirectory");

// src/common/utils/resolve-path-in-sb-cache.ts
function yI(e, t = "default") {
  let r = X0({ name: "storybook" });
  return r ||= gI(process.cwd(), "node_modules", ".cache", "storybook"), gI(r, t, e);
}
s(yI, "resolvePathInStorybookCache");

// src/common/utils/paths.ts
import { join as xI, relative as bQ, resolve as Gbe, sep as Oc } from "node:path";

// src/common/js-package-manager/constants.ts
var mQ = "package-lock.json", gQ = "pnpm-lock.yaml", yQ = "yarn.lock", DQ = "bun.lock", xQ = "bun.lockb", DI = [
  mQ,
  gQ,
  yQ,
  DQ,
  xQ
];

// src/common/utils/paths.ts
var an, Rc = /* @__PURE__ */ s(() => {
  if (an)
    return an;
  if (process.env.STORYBOOK_PROJECT_ROOT)
    return process.env.STORYBOOK_PROJECT_ROOT;
  try {
    let e = bo(".git", { type: "directory" }) || bo(".svn", { type: "directory" }) || bo(".hg", { type: "directory" });
    if (e)
      return an = xI(e, ".."), an;
  } catch (e) {
    process.stdout.write(`
error searching for repository root: ${e}
`);
  }
  try {
    let e = bo(DI, { type: "file" });
    if (e)
      return an = xI(e, ".."), an;
  } catch (e) {
    process.stdout.write(`
error searching for lock file: ${e}
`);
  }
  try {
    let [e, t] = __dirname.split(`${Oc}node_modules${Oc}`, 2);
    if (t && !e.includes(`${Oc}npm-cache${Oc}`) && !bQ(e, process.cwd()).startsWith(".."))
      return an = e, an;
  } catch (e) {
    process.stdout.write(`
error searching for splitDirname: ${e}
`);
  }
  return an = process.cwd(), an;
}, "getProjectRoot");

// src/common/utils/envs.ts
var Nc = /* @__PURE__ */ s((e) => {
  if (e !== void 0)
    return e.toUpperCase() === "FALSE" || e === "0" ? !1 : e.toUpperCase() === "TRUE" || e === "1" ? !0 : !!e;
}, "optionalEnvToBoolean");

// src/telemetry/run-telemetry-operation.ts
var bI = J0({
  basePath: yI("telemetry"),
  ns: "storybook",
  ttl: 24 * 60 * 60 * 1e3
  // 24h
}), Lc = /* @__PURE__ */ s(async (e, t) => {
  let r = await bI.get(e);
  return r === void 0 && (r = await t(), r !== void 0 && await bI.set(e, r)), r;
}, "runTelemetryOperation");

// src/telemetry/get-application-file-count.ts
var EQ = ["page", "screen"], CQ = ["js", "jsx", "ts", "tsx"], wQ = /* @__PURE__ */ s(async (e) => {
  let r = EQ.flatMap((n) => [
    n,
    [n[0].toUpperCase(), ...n.slice(1)].join("")
  ]).flatMap(
    (n) => CQ.map((i) => `"${e}${vQ}*${n}*.${i}"`)
  );
  try {
    let n = `git ls-files -- ${r.join(" ")}`;
    return await Tc(n);
  } catch {
    return;
  }
}, "getApplicationFilesCountUncached"), vI = /* @__PURE__ */ s(async (e) => Lc(
  "applicationFiles",
  async () => wQ(e)
), "getApplicationFileCount");

// src/telemetry/get-chromatic-version.ts
function EI(e) {
  let t = e.dependencies?.chromatic || e.devDependencies?.chromatic || e.peerDependencies?.chromatic;
  return t || (e.scripts && Object.values(e.scripts).find((r) => r?.match(/chromatic/)) ? "latest" : void 0);
}
s(EI, "getChromaticVersionSpecifier");

// src/telemetry/get-framework-info.ts
import { normalize as FQ } from "node:path";
import { frameworkPackages as _Q } from "storybook/internal/common";

// src/telemetry/package-json.ts
import { readFile as SQ } from "node:fs/promises";
import { join as AQ } from "node:path";
var K0 = /* @__PURE__ */ s(async (e) => {
  let t = Object.keys(e);
  return Promise.all(t.map(jc));
}, "getActualPackageVersions"), jc = /* @__PURE__ */ s(async (e) => {
  try {
    let t = await Y0(e);
    return {
      name: t?.name || e,
      version: t?.version || null
    };
  } catch {
    return {
      name: e,
      version: null
    };
  }
}, "getActualPackageVersion"), Y0 = /* @__PURE__ */ s(async (e) => {
  try {
    let t = await eu("package.json", { cwd: H.resolve(e) });
    return t || (t = H.resolve(AQ(e, "package.json"), {
      paths: [process.cwd()]
    })), JSON.parse(await SQ(t, { encoding: "utf8" }));
  } catch {
    return;
  }
}, "getActualPackageJson");

// src/telemetry/get-framework-info.ts
var kQ = [
  "html",
  "react",
  "svelte",
  "vue3",
  "preact",
  "server",
  "vue",
  "web-components",
  "angular",
  "ember"
], TQ = ["builder-webpack5", "builder-vite"];
function CI(e, t) {
  let { name: r = "", version: n, dependencies: i, devDependencies: o, peerDependencies: a } = e, u = {
    // We include the framework itself because it may be a renderer too (e.g. angular)
    [r]: n,
    ...i,
    ...o,
    ...a
  };
  return t.map((l) => `@storybook/${l}`).find((l) => u[l]);
}
s(CI, "findMatchingPackage");
var IQ = /* @__PURE__ */ s((e) => {
  let t = FQ(e).replace(new RegExp(/\\/, "g"), "/");
  return Object.keys(_Q).find((n) => t.endsWith(n)) || Da(e).replace(/.*node_modules[\\/]/, "");
}, "getFrameworkPackageName");
async function wI(e) {
  if (!e?.framework)
    return {};
  let t = typeof e.framework == "string" ? e.framework : e.framework?.name;
  if (!t)
    return {};
  let r = await Y0(t);
  if (!r)
    return {};
  let n = CI(r, TQ), i = CI(r, kQ), o = IQ(t), a = typeof e.framework == "object" ? e.framework.options : {};
  return {
    framework: {
      name: o,
      options: a
    },
    builder: n,
    renderer: i
  };
}
s(wI, "getFrameworkInfo");

// src/telemetry/get-has-router-package.ts
var PQ = /* @__PURE__ */ new Set([
  "react-router",
  "react-router-dom",
  "remix",
  "@tanstack/react-router",
  "expo-router",
  "@reach/router",
  "react-easy-router",
  "@remix-run/router",
  "wouter",
  "wouter-preact",
  "preact-router",
  "vue-router",
  "unplugin-vue-router",
  "@angular/router",
  "@solidjs/router",
  // metaframeworks that imply routing
  "next",
  "react-scripts",
  "gatsby",
  "nuxt",
  "@sveltejs/kit"
]);
function SI(e) {
  return Object.keys(e?.dependencies ?? {}).some(
    (t) => PQ.has(t)
  );
}
s(SI, "getHasRouterPackage");

// src/telemetry/get-monorepo-type.ts
import { existsSync as AI, readFileSync as BQ } from "node:fs";
import { join as Q0 } from "node:path";
import { getProjectRoot as ey } from "storybook/internal/common";
var FI = {
  Nx: "nx.json",
  Turborepo: "turbo.json",
  Lerna: "lerna.json",
  Rush: "rush.json",
  Lage: "lage.config.json"
}, _I = /* @__PURE__ */ s(() => {
  let t = Object.keys(FI).find((n) => {
    let i = Q0(ey(), FI[n]);
    return AI(i);
  });
  if (t)
    return t;
  if (!AI(Q0(ey(), "package.json")))
    return;
  if (JSON.parse(
    BQ(Q0(ey(), "package.json"), { encoding: "utf8" })
  )?.workspaces)
    return "Workspaces";
}, "getMonorepoType");

// ../node_modules/package-manager-detector/dist/constants.mjs
var kI = [
  "npm",
  "yarn",
  "yarn@berry",
  "pnpm",
  "pnpm@6",
  "bun",
  "deno"
], ty = {
  "bun.lock": "bun",
  "bun.lockb": "bun",
  "deno.lock": "deno",
  "pnpm-lock.yaml": "pnpm",
  "pnpm-workspace.yaml": "pnpm",
  "yarn.lock": "yarn",
  "package-lock.json": "npm",
  "npm-shrinkwrap.json": "npm"
}, ry = {
  "node_modules/.deno/": "deno",
  "node_modules/.pnpm/": "pnpm",
  "node_modules/.yarn-state.yml": "yarn",
  // yarn v2+ (node-modules)
  "node_modules/.yarn_integrity": "yarn",
  // yarn v1
  "node_modules/.package-lock.json": "npm",
  ".pnp.cjs": "yarn",
  // yarn v3+ (pnp)
  ".pnp.js": "yarn",
  // yarn v2 (pnp)
  "bun.lock": "bun",
  "bun.lockb": "bun"
};

// ../node_modules/package-manager-detector/dist/detect.mjs
import II from "node:fs/promises";
import Ui from "node:path";
import OQ from "node:process";
async function ny(e, t) {
  try {
    let r = await II.stat(e);
    return t === "file" ? r.isFile() : r.isDirectory();
  } catch {
    return !1;
  }
}
s(ny, "pathExists");
function* RQ(e = OQ.cwd()) {
  let t = Ui.resolve(e), { root: r } = Ui.parse(t);
  for (; t && t !== r; )
    yield t, t = Ui.dirname(t);
}
s(RQ, "lookup");
async function TI(e, t) {
  return !e || !ny(e, "file") ? null : await LQ(e, t);
}
s(TI, "parsePackageJson");
async function iy(e = {}) {
  let { cwd: t, strategies: r = ["lockfile", "packageManager-field", "devEngines-field"], onUnknown: n } = e;
  for (let i of RQ(t))
    for (let o of r)
      switch (o) {
        case "lockfile": {
          for (let a of Object.keys(ty))
            if (await ny(Ui.join(i, a), "file")) {
              let u = ty[a], l = await TI(Ui.join(i, "package.json"), n);
              return l || { name: u, agent: u };
            }
          break;
        }
        case "packageManager-field":
        case "devEngines-field": {
          let a = await TI(Ui.join(i, "package.json"), n);
          if (a)
            return a;
          break;
        }
        case "install-metadata": {
          for (let a of Object.keys(ry)) {
            let u = a.endsWith("/") ? "dir" : "file";
            if (await ny(Ui.join(i, a), u)) {
              let l = ry[a], c = l === "yarn" ? jQ(a) ? "yarn" : "yarn@berry" : l;
              return { name: l, agent: c };
            }
          }
          break;
        }
      }
  return null;
}
s(iy, "detect");
function NQ(e) {
  let t = /* @__PURE__ */ s((r) => r?.match(/\d+(\.\d+){0,2}/)?.[0] ?? r, "handelVer");
  if (typeof e.packageManager == "string") {
    let [r, n] = e.packageManager.replace(/^\^/, "").split("@");
    return { name: r, ver: t(n) };
  }
  if (typeof e.devEngines?.packageManager?.name == "string")
    return {
      name: e.devEngines.packageManager.name,
      ver: t(e.devEngines.packageManager.version)
    };
}
s(NQ, "getNameAndVer");
async function LQ(e, t) {
  try {
    let r = JSON.parse(await II.readFile(e, "utf8")), n, i = NQ(r);
    if (i) {
      let o = i.name, a = i.ver, u = a;
      return o === "yarn" && a && Number.parseInt(a) > 1 ? (n = "yarn@berry", u = "berry", { name: o, agent: n, version: u }) : o === "pnpm" &&
      a && Number.parseInt(a) < 7 ? (n = "pnpm@6", { name: o, agent: n, version: u }) : kI.includes(o) ? (n = o, { name: o, agent: n, version: u }) :
      t?.(r.packageManager) ?? null;
    }
  } catch {
  }
  return null;
}
s(LQ, "handlePackageManager");
function jQ(e) {
  return e.endsWith(".yarn_integrity");
}
s(jQ, "isMetadataYarnClassic");

// ../node_modules/package-manager-detector/dist/index.mjs
import "node:fs/promises";
import "node:path";
import "node:process";

// src/telemetry/get-package-manager-info.ts
var PI = /* @__PURE__ */ s(async () => {
  let e = await iy({ cwd: Rc() });
  if (!e)
    return;
  let t = "node_modules";
  if (e.name === "yarn")
    try {
      let { stdout: r } = await ka("yarn config get nodeLinker", {
        cwd: Rc()
      });
      t = r.trim();
    } catch {
    }
  if (e.name === "pnpm")
    try {
      let { stdout: r } = await ka("pnpm config get nodeLinker", {
        cwd: Rc()
      });
      t = r.trim() ?? "isolated";
    } catch {
    }
  return {
    type: e.name,
    version: e.version,
    agent: e.agent,
    nodeLinker: t
  };
}, "getPackageManagerInfo");

// src/telemetry/get-portable-stories-usage.ts
var MQ = /* @__PURE__ */ s(async (e) => {
  try {
    let t = "git grep -l composeStor" + (e ? ` -- ${e}` : "");
    return await Tc(t);
  } catch (t) {
    return t.exitCode === 1 ? 0 : void 0;
  }
}, "getPortableStoriesFileCountUncached"), BI = /* @__PURE__ */ s(async (e) => Lc(
  "portableStories",
  async () => MQ(e)
), "getPortableStoriesFileCount");

// src/telemetry/storybook-metadata.ts
var OI = {
  next: "Next",
  "react-scripts": "CRA",
  gatsby: "Gatsby",
  "@nuxtjs/storybook": "nuxt",
  "@nrwl/storybook": "nx",
  "@vue/cli-service": "vue-cli",
  "@sveltejs/kit": "sveltekit"
}, RI = /* @__PURE__ */ s((e) => Da(e).replace(/\/dist\/.*/, "").replace(/\.[mc]?[tj]?s[x]?$/, "").replace(/\/register$/, "").replace(/\/manager$/,
"").replace(/\/preset$/, ""), "sanitizeAddonName"), GQ = /* @__PURE__ */ s(async ({
  packageJsonPath: e,
  packageJson: t,
  mainConfig: r,
  configDir: n
}) => {
  let i = UQ() ? void 0 : await wk(), o = {
    generatedAt: (/* @__PURE__ */ new Date()).getTime(),
    userSince: i?.value.userSince,
    hasCustomBabel: !1,
    hasCustomWebpack: !1,
    hasStaticDirs: !1,
    hasStorybookEslint: !1,
    refCount: 0
  }, a = {
    ...t?.dependencies,
    ...t?.devDependencies,
    ...t?.peerDependencies
  }, u = Object.keys(a).find((C) => !!OI[C]);
  if (u) {
    let { version: C } = await jc(u);
    o.metaFramework = {
      name: OI[u],
      packageName: u,
      version: C || "unknown"
    };
  }
  let l = [
    "playwright",
    "vitest",
    "jest",
    "cypress",
    "nightwatch",
    "webdriver",
    "@web/test-runner",
    "puppeteer",
    "karma",
    "jasmine",
    "chai",
    "testing-library",
    "@ngneat/spectator",
    "wdio",
    "msw",
    "miragejs",
    "sinon",
    "chromatic"
  ], c = Object.keys(a).filter(
    (C) => l.find((T) => C.includes(T))
  );
  o.testPackages = Object.fromEntries(
    await Promise.all(
      c.map(async (C) => [C, (await jc(C))?.version])
    )
  ), o.hasRouterPackage = SI(t);
  let p = _I();
  p && (o.monorepo = p), o.packageManager = await PI();
  let h = a.typescript ? "typescript" : "javascript";
  if (!r)
    return {
      ...o,
      storybookVersionSpecifier: zQ.storybook,
      language: h
    };
  o.hasCustomBabel = !!r.babel, o.hasCustomWebpack = !!r.webpackFinal, o.hasStaticDirs = !!r.staticDirs, typeof r.typescript == "object" && (o.
  typescriptOptions = r.typescript);
  let f = await wI(r);
  typeof r.refs == "object" && (o.refCount = Object.keys(r.refs).length), typeof r.features == "object" && (o.features = r.features);
  let d = {};
  r.addons && r.addons.forEach((C) => {
    let T, F;
    typeof C == "string" ? T = RI(C) : (C.name.includes("addon-essentials") && (F = C.options), T = RI(C.name)), d[T] = {
      options: F,
      version: void 0
    };
  });
  let m = EI(t);
  m && (d.chromatic = {
    version: void 0,
    versionSpecifier: m,
    options: void 0
  }), (await K0(d)).forEach(({ name: C, version: T }) => {
    d[C] = d[C] || {
      name: C,
      version: T
    }, d[C].version = T || void 0;
  });
  let b = Object.keys(d), y = Object.keys(a).filter((C) => C.includes("storybook") && !b.includes(C)).reduce((C, T) => ({
    ...C,
    [T]: { version: void 0 }
  }), {});
  (await K0(y)).forEach(({ name: C, version: T }) => {
    y[C] = y[C] || {
      name: C,
      version: T
    }, y[C].version = T || void 0;
  });
  let A = !!a["eslint-plugin-storybook"], k = VQ(n);
  try {
    let { previewConfigPath: C } = k;
    if (C) {
      let T = await HQ(C), F = !!(T.getFieldNode(["globals"]) || T.getFieldNode(["globalTypes"]));
      o.preview = { ...o.preview, usesGlobals: F };
    }
  } catch {
  }
  let O = await BI(), w = await vI(qQ(e));
  return {
    ...o,
    ...f,
    portableStoriesFileCount: O,
    applicationFileCount: w,
    storybookVersion: sc,
    storybookVersionSpecifier: k.version,
    language: h,
    storybookPackages: y,
    addons: d,
    hasStorybookEslint: A
  };
}, "computeStorybookMetadata");
async function JQ() {
  let e = await n0(process.cwd());
  return e ? {
    packageJsonPath: e,
    packageJson: await K3(e) || {}
  } : {
    packageJsonPath: process.cwd(),
    packageJson: {}
  };
}
s(JQ, "getPackageJsonDetails");
var Mc, NI = /* @__PURE__ */ s(async (e) => {
  if (Mc)
    return Mc;
  let { packageJson: t, packageJsonPath: r } = await JQ(), n = (e || $Q(
    String(t?.scripts?.storybook || ""),
    "-c",
    "--config-dir"
  )) ?? ".storybook", i = await WQ({ configDir: n }).catch(() => {
  });
  return Mc = await GQ({
    mainConfig: i,
    packageJson: t,
    packageJsonPath: r,
    configDir: n
  }), Mc;
}, "getStorybookMetadata");

// src/telemetry/telemetry.ts
var ZI = fe(jI(), 1);
import * as JI from "node:os";
import { isCI as see } from "storybook/internal/common";

// ../node_modules/nanoid/index.js
import { randomFillSync as qI } from "crypto";

// ../node_modules/nanoid/url-alphabet/index.js
var MI = "useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";

// ../node_modules/nanoid/index.js
var ZQ = 128, Wi, Qs, XQ = /* @__PURE__ */ s((e) => {
  !Wi || Wi.length < e ? (Wi = Buffer.allocUnsafe(e * ZQ), qI(Wi), Qs = 0) : Qs + e > Wi.length && (qI(Wi), Qs = 0), Qs += e;
}, "fillPool");
var Pa = /* @__PURE__ */ s((e = 21) => {
  XQ(e -= 0);
  let t = "";
  for (let r = Qs - e; r < Qs; r++)
    t += MI[Wi[r] & 63];
  return t;
}, "nanoid");

// src/telemetry/anonymous-id.ts
hi();
import { relative as YQ } from "node:path";
import { getProjectRoot as QQ } from "storybook/internal/common";
import { execSync as eee } from "child_process";

// src/telemetry/one-way-hash.ts
import { createHash as KQ } from "crypto";
var $I = /* @__PURE__ */ s((e) => {
  let t = KQ("sha256");
  return t.update("storybook-telemetry-salt"), t.update(e), t.digest("hex");
}, "oneWayHash");

// src/telemetry/anonymous-id.ts
function tee(e) {
  let n = e.trim().replace(/#.*$/, "").replace(/^.*@/, "").replace(/^.*\/\//, "");
  return (n.endsWith(".git") ? n : `${n}.git`).replace(":", "/");
}
s(tee, "normalizeGitUrl");
function ree(e, t) {
  return `${tee(e)}${it(t)}`;
}
s(ree, "unhashedProjectId");
var $c, VI = /* @__PURE__ */ s(() => {
  if ($c)
    return $c;
  try {
    let e = YQ(QQ(), process.cwd()), t = eee("git config --local --get remote.origin.url", {
      timeout: 1e3,
      stdio: "pipe"
    });
    $c = $I(ree(String(t), e));
  } catch {
  }
  return $c;
}, "getAnonymousProjectId");

// src/telemetry/event-cache.ts
import { cache as UI } from "storybook/internal/common";
var sy = Promise.resolve(), nee = /* @__PURE__ */ s(async (e, t) => {
  let r = await UI.get("lastEvents") || {};
  r[e] = { body: t, timestamp: Date.now() }, await UI.set("lastEvents", r);
}, "setHelper"), WI = /* @__PURE__ */ s(async (e, t) => (await sy, sy = nee(e, t), sy), "set");

// src/telemetry/fetch.ts
var zI = global.fetch;

// src/telemetry/session-id.ts
import { cache as HI } from "storybook/internal/common";
var iee = 1e3 * 60 * 60 * 2, Ba;
var oy = /* @__PURE__ */ s(async () => {
  let e = Date.now();
  if (!Ba) {
    let t = await HI.get("session");
    t && t.lastUsed >= e - iee ? Ba = t.id : Ba = Pa();
  }
  return await HI.set("session", { id: Ba, lastUsed: e }), Ba;
}, "getSessionId");

// src/telemetry/telemetry.ts
var oee = (0, ZI.default)(zI), aee = process.env.STORYBOOK_TELEMETRY_URL || "https://storybook.js.org/event-log", Vc = [];
var uee = /* @__PURE__ */ s(() => {
  try {
    let e = JI.platform();
    return e === "win32" ? "Windows" : e === "darwin" ? "macOS" : e === "linux" ? "Linux" : `Other: ${e}`;
  } catch {
    return "Unknown";
  }
}, "getOperatingSystem"), GI = {
  inCI: see(),
  isTTY: process.stdout.isTTY,
  platform: uee(),
  nodeVersion: process.versions.node,
  storybookVersion: sc
}, lee = /* @__PURE__ */ s(async (e, t, r) => {
  let { eventType: n, payload: i, metadata: o, ...a } = e, u = await oy(), l = Pa(), c = { ...a, eventType: n, eventId: l, sessionId: u, metadata: o,
  payload: i, context: t };
  return oee(aee, {
    method: "post",
    body: JSON.stringify(c),
    headers: { "Content-Type": "application/json" },
    retries: 3,
    retryOn: [503, 504],
    retryDelay: /* @__PURE__ */ s((p) => 2 ** p * (typeof r?.retryDelay == "number" && !Number.isNaN(r?.retryDelay) ? r.retryDelay : 1e3), "\
retryDelay")
  });
}, "prepareRequest");
async function XI(e, t = { retryDelay: 1e3, immediate: !1 }) {
  let { eventType: r, payload: n, metadata: i, ...o } = e, a = t.stripMetadata ? GI : {
    ...GI,
    anonymousId: VI()
  }, u;
  try {
    u = lee(e, a, t), Vc.push(u), t.immediate ? await Promise.all(Vc) : await u;
    let l = await oy(), c = Pa(), p = { ...o, eventType: r, eventId: c, sessionId: l, metadata: i, payload: n, context: a };
    await WI(r, p);
  } catch {
  } finally {
    Vc = Vc.filter((l) => l !== u);
  }
}
s(XI, "sendTelemetry");

// src/telemetry/index.ts
var YI = /* @__PURE__ */ s(async (e, t = {}, r = {}) => {
  e !== "boot" && r.notify !== !1 && await W3();
  let n = {
    eventType: e,
    payload: t
  };
  try {
    r?.stripMetadata || (n.metadata = await NI(r?.configDir));
  } catch (i) {
    n.payload.metadataErrorMessage = nc(i).message, r?.enableCrashReports && (n.payload.metadataError = nc(i));
  } finally {
    let { error: i } = n.payload;
    i && (n.payload.error = nc(i)), (!n.payload.error || r?.enableCrashReports) && (process.env?.STORYBOOK_TELEMETRY_DEBUG && (KI.info(`
[telemetry]`), KI.info(JSON.stringify(n, null, 2))), await XI(n, r));
  }
}, "telemetry");

// src/core-server/utils/doTelemetry.ts
import { getPrecedingUpgrade as Dee, telemetry as xee } from "storybook/internal/telemetry";

// src/core-server/withTelemetry.ts
var QI = fe(Kg(), 1);
import { HandledError as cee, cache as ay, isCI as pee, loadAllPresets as hee } from "storybook/internal/common";
import { logger as fee } from "storybook/internal/node-logger";
import { getPrecedingUpgrade as dee, oneWayHash as mee, telemetry as uy } from "storybook/internal/telemetry";
var gee = /* @__PURE__ */ s(async () => {
  if (pee() || !process.stdout.isTTY)
    return;
  let { enableCrashReports: e } = await (0, QI.default)({
    type: "confirm",
    name: "enableCrashReports",
    message: "Would you like to help improve Storybook by sending anonymous crash reports?",
    initial: !0
  });
  return await ay.set("enableCrashReports", e), e;
}, "promptCrashReports");
async function yee({
  cliOptions: e,
  presetOptions: t,
  skipPrompt: r
}) {
  if (e.disableTelemetry)
    return "none";
  if (!t)
    return "full";
  let i = await (await hee(t)).apply("core");
  if (i?.enableCrashReports !== void 0)
    return i.enableCrashReports ? "full" : "error";
  if (i?.disableTelemetry)
    return "none";
  let o = await ay.get("enableCrashReports") ?? await ay.get("enableCrashreports");
  if (o !== void 0)
    return o ? "full" : "error";
  if (r)
    return "error";
  let a = await gee();
  return a !== void 0 ? a ? "full" : "error" : "full";
}
s(yee, "getErrorLevel");
async function ly(e, t, r) {
  try {
    let n = "error";
    try {
      n = await yee(r);
    } catch {
    }
    if (n !== "none") {
      let i = await dee(), o = e, a;
      "message" in o ? a = o.message ? mee(o.message) : "EMPTY_MESSAGE" : a = "NO_MESSAGE";
      let { code: u, name: l, category: c } = o;
      await uy(
        "error",
        {
          code: u,
          name: l,
          category: c,
          eventType: t,
          precedingUpgrade: i,
          error: n === "full" ? o : void 0,
          errorHash: a,
          // if we ever end up sending a non-error instance, we'd like to know
          isErrorInstance: o instanceof Error
        },
        {
          immediate: !0,
          configDir: r.cliOptions.configDir || r.presetOptions?.configDir,
          enableCrashReports: n === "full"
        }
      );
    }
  } catch {
  }
}
s(ly, "sendTelemetryError");
async function K1e(e, t, r) {
  let n = !(t.cliOptions.disableTelemetry || t.cliOptions.test === !0), i = !1;
  async function o() {
    i = !0, n && await uy("canceled", { eventType: e }, { stripMetadata: !0, immediate: !0 }), process.exit(0);
  }
  s(o, "cancelTelemetry"), e === "init" && process.on("SIGINT", o), n && uy("boot", { eventType: e }, { stripMetadata: !0 });
  try {
    return await r();
  } catch (a) {
    if (i)
      return;
    if (!(a instanceof cee)) {
      let { printError: u = fee.error } = t;
      u(a);
    }
    throw n && await ly(a, e, t), a;
  } finally {
    process.off("SIGINT", o);
  }
}
s(K1e, "withTelemetry");

// src/core-server/utils/versionStatus.ts
var eP = /* @__PURE__ */ s((e) => e.error ? "error" : e.cached ? "cached" : "success", "versionStatus");

// src/core-server/utils/doTelemetry.ts
async function tP(e, t, r, n) {
  t?.disableTelemetry || r.then(async (i) => {
    let o;
    try {
      o = await i?.getIndexAndStats();
    } catch (c) {
      if (!(c instanceof Error))
        throw new Error("encountered a non-recoverable error");
      ly(c, "dev", {
        cliOptions: n,
        presetOptions: { ...n, corePresets: [], overridePresets: [] }
      });
      return;
    }
    let { versionCheck: a, versionUpdates: u } = n;
    kt(
      !u || u && a,
      "versionCheck should be defined when versionUpdates is true"
    );
    let l = {
      precedingUpgrade: await Dee()
    };
    o && Object.assign(l, {
      versionStatus: u && a ? eP(a) : "disabled",
      storyIndex: Ls(o.storyIndex),
      storyStats: o.stats
    }), xee("dev", l, { configDir: n.configDir });
  }), t?.disableProjectJson || W2(e, n.configDir);
}
s(tP, "doTelemetry");

// src/core-server/utils/get-caching-middleware.ts
function rP() {
  return (e, t, r) => {
    t.setHeader("Cache-Control", "no-store"), r();
  };
}
s(rP, "getCachingMiddleware");

// src/core-server/utils/get-server-channel.ts
var io = fe(PP(), 1);
import { Channel as Sne, HEARTBEAT_INTERVAL as Ane } from "storybook/internal/channels";
import BP, { WebSocketServer as Fne } from "ws";

// src/shared/universal-store/index.ts
var zi = fe(Tt(), 1);

// src/shared/universal-store/instances.ts
var vy = /* @__PURE__ */ new Map();

// src/shared/universal-store/index.ts
var wne = "UNIVERSAL_STORE:", vr = {
  PENDING: "PENDING",
  RESOLVED: "RESOLVED",
  REJECTED: "REJECTED"
}, Rt = class e {
  constructor(t, r) {
    /** Enable debug logs for this store */
    this.debugging = !1;
    // TODO: narrow type of listeners based on event type
    this.listeners = /* @__PURE__ */ new Map([["*", /* @__PURE__ */ new Set()]]);
    /** Gets the current state */
    this.getState = /* @__PURE__ */ s(() => (this.debug("getState", { state: this.state }), this.state), "getState");
    /**
     * Subscribes to store events
     *
     * @returns A function to unsubscribe
     */
    this.subscribe = /* @__PURE__ */ s((t, r) => {
      let n = typeof t == "function", i = n ? "*" : t, o = n ? t : r;
      if (this.debug("subscribe", { eventType: i, listener: o }), !o)
        throw new TypeError(
          `Missing first subscribe argument, or second if first is the event type, when subscribing to a UniversalStore with id '${this.id}'`
        );
      return this.listeners.has(i) || this.listeners.set(i, /* @__PURE__ */ new Set()), this.listeners.get(i).add(o), () => {
        this.debug("unsubscribe", { eventType: i, listener: o }), this.listeners.has(i) && (this.listeners.get(i).delete(o), this.listeners.
        get(i)?.size === 0 && this.listeners.delete(i));
      };
    }, "subscribe");
    /** Sends a custom event to the other stores */
    this.send = /* @__PURE__ */ s((t) => {
      if (this.debug("send", { event: t }), this.status !== e.Status.READY)
        throw new TypeError(
          zi.dedent`Cannot send event before store is ready. You can get the current status with store.status,
        or await store.readyPromise to wait for the store to be ready before sending events.
        ${JSON.stringify(
            {
              event: t,
              id: this.id,
              actor: this.actor,
              environment: this.environment
            },
            null,
            2
          )}`
        );
      this.emitToListeners(t, { actor: this.actor }), this.emitToChannel(t, { actor: this.actor });
    }, "send");
    if (this.debugging = t.debug ?? !1, !e.isInternalConstructing)
      throw new TypeError(
        "UniversalStore is not constructable - use UniversalStore.create() instead"
      );
    if (e.isInternalConstructing = !1, this.id = t.id, this.actorId = Date.now().toString(36) + Math.random().toString(36).substring(2), this.
    actorType = t.leader ? e.ActorType.LEADER : e.ActorType.FOLLOWER, this.state = t.initialState, this.channelEventName = `${wne}${this.id}`,
    this.debug("constructor", {
      options: t,
      environmentOverrides: r,
      channelEventName: this.channelEventName
    }), this.actor.type === e.ActorType.LEADER)
      this.syncing = {
        state: vr.RESOLVED,
        promise: Promise.resolve()
      };
    else {
      let n, i, o = new Promise((a, u) => {
        n = /* @__PURE__ */ s(() => {
          this.syncing.state === vr.PENDING && (this.syncing.state = vr.RESOLVED, a());
        }, "syncingResolve"), i = /* @__PURE__ */ s((l) => {
          this.syncing.state === vr.PENDING && (this.syncing.state = vr.REJECTED, u(l));
        }, "syncingReject");
      });
      this.syncing = {
        state: vr.PENDING,
        promise: o,
        resolve: n,
        reject: i
      };
    }
    this.getState = this.getState.bind(this), this.setState = this.setState.bind(this), this.subscribe = this.subscribe.bind(this), this.onStateChange =
    this.onStateChange.bind(this), this.send = this.send.bind(this), this.emitToChannel = this.emitToChannel.bind(this), this.prepareThis = this.
    prepareThis.bind(this), this.emitToListeners = this.emitToListeners.bind(this), this.handleChannelEvents = this.handleChannelEvents.bind(
    this), this.debug = this.debug.bind(this), this.channel = r?.channel ?? e.preparation.channel, this.environment = r?.environment ?? e.preparation.
    environment, this.channel && this.environment ? (e.preparation.resolve({ channel: this.channel, environment: this.environment }), this.prepareThis(
    { channel: this.channel, environment: this.environment })) : e.preparation.promise.then(this.prepareThis);
  }
  static {
    s(this, "UniversalStore");
  }
  static {
    /**
     * Defines the possible actor types in the store system
     *
     * @readonly
     */
    this.ActorType = {
      LEADER: "LEADER",
      FOLLOWER: "FOLLOWER"
    };
  }
  static {
    /**
     * Defines the possible environments the store can run in
     *
     * @readonly
     */
    this.Environment = {
      SERVER: "SERVER",
      MANAGER: "MANAGER",
      PREVIEW: "PREVIEW",
      UNKNOWN: "UNKNOWN",
      MOCK: "MOCK"
    };
  }
  static {
    /**
     * Internal event types used for store synchronization
     *
     * @readonly
     */
    this.InternalEventType = {
      EXISTING_STATE_REQUEST: "__EXISTING_STATE_REQUEST",
      EXISTING_STATE_RESPONSE: "__EXISTING_STATE_RESPONSE",
      SET_STATE: "__SET_STATE",
      LEADER_CREATED: "__LEADER_CREATED",
      FOLLOWER_CREATED: "__FOLLOWER_CREATED"
    };
  }
  static {
    this.Status = {
      UNPREPARED: "UNPREPARED",
      SYNCING: "SYNCING",
      READY: "READY",
      ERROR: "ERROR"
    };
  }
  static {
    // This is used to check if constructor was called from the static factory create()
    this.isInternalConstructing = !1;
  }
  static {
    e.setupPreparationPromise();
  }
  static setupPreparationPromise() {
    let t, r, n = new Promise(
      (i, o) => {
        t = /* @__PURE__ */ s((a) => {
          i(a);
        }, "resolveRef"), r = /* @__PURE__ */ s((...a) => {
          o(a);
        }, "rejectRef");
      }
    );
    e.preparation = {
      resolve: t,
      reject: r,
      promise: n
    };
  }
  /** The actor object representing the store instance with a unique ID and a type */
  get actor() {
    return Object.freeze({
      id: this.actorId,
      type: this.actorType,
      environment: this.environment ?? e.Environment.UNKNOWN
    });
  }
  /**
   * The current state of the store, that signals both if the store is prepared by Storybook and
   * also - in the case of a follower - if the state has been synced with the leader's state.
   */
  get status() {
    if (!this.channel || !this.environment)
      return e.Status.UNPREPARED;
    switch (this.syncing?.state) {
      case vr.PENDING:
      case void 0:
        return e.Status.SYNCING;
      case vr.REJECTED:
        return e.Status.ERROR;
      case vr.RESOLVED:
      default:
        return e.Status.READY;
    }
  }
  /**
   * A promise that resolves when the store is fully ready. A leader will be ready when the store
   * has been prepared by Storybook, which is almost instantly.
   *
   * A follower will be ready when the state has been synced with the leader's state, within a few
   * hundred milliseconds.
   */
  untilReady() {
    return Promise.all([e.preparation.promise, this.syncing?.promise]);
  }
  /** Creates a new instance of UniversalStore */
  static create(t) {
    if (!t || typeof t?.id != "string")
      throw new TypeError("id is required and must be a string, when creating a UniversalStore");
    t.debug && console.debug(
      zi.dedent`[UniversalStore]
        create`,
      { options: t }
    );
    let r = vy.get(t.id);
    if (r)
      return console.warn(zi.dedent`UniversalStore with id "${t.id}" already exists in this environment, re-using existing.
        You should reuse the existing instance instead of trying to create a new one.`), r;
    e.isInternalConstructing = !0;
    let n = new e(t);
    return vy.set(t.id, n), n;
  }
  /**
   * Used by Storybook to set the channel for all instances of UniversalStore in the given
   * environment.
   *
   * @internal
   */
  static __prepare(t, r) {
    e.preparation.channel = t, e.preparation.environment = r, e.preparation.resolve({ channel: t, environment: r });
  }
  /**
   * Updates the store's state
   *
   * Either a new state or a state updater function can be passed to the method.
   */
  setState(t) {
    let r = this.state, n = typeof t == "function" ? t(r) : t;
    if (this.debug("setState", { newState: n, previousState: r, updater: t }), this.status !== e.Status.READY)
      throw new TypeError(
        zi.dedent`Cannot set state before store is ready. You can get the current status with store.status,
        or await store.readyPromise to wait for the store to be ready before sending events.
        ${JSON.stringify(
          {
            newState: n,
            id: this.id,
            actor: this.actor,
            environment: this.environment
          },
          null,
          2
        )}`
      );
    this.state = n;
    let i = {
      type: e.InternalEventType.SET_STATE,
      payload: {
        state: n,
        previousState: r
      }
    };
    this.emitToChannel(i, { actor: this.actor }), this.emitToListeners(i, { actor: this.actor });
  }
  /**
   * Subscribes to state changes
   *
   * @returns Unsubscribe function
   */
  onStateChange(t) {
    return this.debug("onStateChange", { listener: t }), this.subscribe(
      e.InternalEventType.SET_STATE,
      ({ payload: r }, n) => {
        t(r.state, r.previousState, n);
      }
    );
  }
  emitToChannel(t, r) {
    this.debug("emitToChannel", { event: t, eventInfo: r, channel: !!this.channel }), this.channel?.emit(this.channelEventName, {
      event: t,
      eventInfo: r
    });
  }
  prepareThis({
    channel: t,
    environment: r
  }) {
    this.channel = t, this.environment = r, this.debug("prepared", { channel: !!t, environment: r }), this.channel.on(this.channelEventName,
    this.handleChannelEvents), this.actor.type === e.ActorType.LEADER ? this.emitToChannel(
      { type: e.InternalEventType.LEADER_CREATED },
      { actor: this.actor }
    ) : (this.emitToChannel(
      { type: e.InternalEventType.FOLLOWER_CREATED },
      { actor: this.actor }
    ), this.emitToChannel(
      { type: e.InternalEventType.EXISTING_STATE_REQUEST },
      { actor: this.actor }
    ), setTimeout(() => {
      this.syncing.reject(
        new TypeError(
          `No existing state found for follower with id: '${this.id}'. Make sure a leader with the same id exists before creating a follower\
.`
        )
      );
    }, 1e3));
  }
  emitToListeners(t, r) {
    let n = this.listeners.get(t.type), i = this.listeners.get("*");
    this.debug("emitToListeners", {
      event: t,
      eventInfo: r,
      eventTypeListeners: n,
      everythingListeners: i
    }), [...n ?? [], ...i ?? []].forEach(
      (o) => o(t, r)
    );
  }
  handleChannelEvents(t) {
    let { event: r, eventInfo: n } = t;
    if ([n.actor.id, n.forwardingActor?.id].includes(this.actor.id)) {
      this.debug("handleChannelEvents: Ignoring event from self", { channelEvent: t });
      return;
    } else if (this.syncing?.state === vr.PENDING && r.type !== e.InternalEventType.EXISTING_STATE_RESPONSE) {
      this.debug("handleChannelEvents: Ignoring event while syncing", { channelEvent: t });
      return;
    }
    if (this.debug("handleChannelEvents", { channelEvent: t }), this.actor.type === e.ActorType.LEADER) {
      let i = !0;
      switch (r.type) {
        case e.InternalEventType.EXISTING_STATE_REQUEST:
          i = !1;
          let o = {
            type: e.InternalEventType.EXISTING_STATE_RESPONSE,
            payload: this.state
          };
          this.debug("handleChannelEvents: responding to existing state request", {
            responseEvent: o
          }), this.emitToChannel(o, { actor: this.actor }), this.emitToListeners(o, { actor: this.actor });
          break;
        case e.InternalEventType.LEADER_CREATED:
          i = !1, this.syncing.state = vr.REJECTED, this.debug("handleChannelEvents: erroring due to second leader being created", {
            event: r
          }), console.error(
            zi.dedent`Detected multiple UniversalStore leaders created with the same id "${this.id}".
            Only one leader can exists at a time, your stores are now in an invalid state.
            Leaders detected:
            this: ${JSON.stringify(this.actor, null, 2)}
            other: ${JSON.stringify(n.actor, null, 2)}`
          );
          break;
      }
      i && (this.debug("handleChannelEvents: forwarding event", { channelEvent: t }), this.emitToChannel(r, { actor: n.actor, forwardingActor: this.
      actor }));
    }
    if (this.actor.type === e.ActorType.FOLLOWER)
      switch (r.type) {
        case e.InternalEventType.EXISTING_STATE_RESPONSE:
          if (this.debug("handleChannelEvents: Setting state from leader's existing state response", {
            event: r
          }), this.syncing?.state !== vr.PENDING)
            break;
          this.syncing.resolve?.();
          let i = {
            type: e.InternalEventType.SET_STATE,
            payload: {
              state: r.payload,
              previousState: this.state
            }
          };
          this.state = r.payload, this.emitToListeners(i, n);
          break;
      }
    switch (r.type) {
      case e.InternalEventType.SET_STATE:
        this.debug("handleChannelEvents: Setting state", { event: r }), this.state = r.payload.state;
        break;
    }
    this.emitToListeners(r, { actor: n.actor });
  }
  debug(t, r) {
    this.debugging && console.debug(
      zi.dedent`[UniversalStore::${this.id}::${this.environment ?? e.Environment.UNKNOWN}]
        ${t}`,
      JSON.stringify(
        {
          data: r,
          actor: this.actor,
          state: this.state,
          status: this.status
        },
        null,
        2
      )
    );
  }
  /**
   * Used to reset the static fields of the UniversalStore class when cleaning up tests
   *
   * @internal
   */
  static __reset() {
    e.preparation.reject(new Error("reset")), e.setupPreparationPromise(), e.isInternalConstructing = !1;
  }
};

// src/core-server/utils/get-server-channel.ts
var Ey = class {
  static {
    s(this, "ServerChannelTransport");
  }
  constructor(t) {
    this.socket = new Fne({ noServer: !0 }), t.on("upgrade", (n, i, o) => {
      n.url === "/storybook-server-channel" && this.socket.handleUpgrade(n, i, o, (a) => {
        this.socket.emit("connection", a, n);
      });
    }), this.socket.on("connection", (n) => {
      n.on("message", (i) => {
        let o = i.toString(), a = typeof o == "string" && (0, io.isJSON)(o) ? (0, io.parse)(o, {}) : o;
        this.handler?.(a);
      });
    });
    let r = setInterval(() => {
      this.send({ type: "ping" });
    }, Ane);
    this.socket.on("close", /* @__PURE__ */ s(function() {
      clearInterval(r);
    }, "close")), process.on("SIGTERM", () => {
      this.socket.clients.forEach((n) => {
        n.readyState === BP.OPEN && n.close(1001, "Server is shutting down");
      }), this.socket.close(() => process.exit(0));
    });
  }
  setHandler(t) {
    this.handler = t;
  }
  send(t) {
    let r = (0, io.stringify)(t, { maxDepth: 15 });
    Array.from(this.socket.clients).filter((n) => n.readyState === BP.OPEN).forEach((n) => n.send(r));
  }
};
function OP(e) {
  let t = [new Ey(e)], r = new Sne({ transports: t, async: !0 });
  return Rt.__prepare(r, Rt.Environment.SERVER), r;
}
s(OP, "getServerChannel");

// src/core-server/utils/getAccessControlMiddleware.ts
function RP(e) {
  return (t, r, n) => {
    r.setHeader("Access-Control-Allow-Origin", "*"), r.setHeader("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Ac\
cept"), e && (r.setHeader("Cross-Origin-Opener-Policy", "same-origin"), r.setHeader("Cross-Origin-Embedder-Policy", "require-corp")), n();
  };
}
s(RP, "getAccessControlMiddleware");

// src/core-server/utils/getStoryIndexGenerator.ts
import { normalizeStories as _ne } from "storybook/internal/common";
async function NP(e, t, r) {
  let n = process.cwd(), i = t.configDir, o = {
    configDir: i,
    workingDir: n
  }, a = t.presets.apply("stories"), u = t.presets.apply("experimental_indexers", []), l = t.presets.apply("docs"), c = _ne(await a, o), p = new vn(
  c, {
    ...o,
    indexers: await u,
    docs: await l,
    workingDir: n
  }), h = p.initialize().then(() => p);
  return iA({
    app: e,
    initializedStoryIndexGenerator: h,
    normalizedStories: c,
    serverChannel: r,
    workingDir: n,
    configDir: i
  }), h;
}
s(NP, "getStoryIndexGenerator");

// src/core-server/utils/middleware.ts
import { existsSync as kne } from "node:fs";
import { resolve as Tne } from "node:path";
var Ine = /* @__PURE__ */ s((e) => [".js", ".cjs"].reduce((t, r) => {
  let n = `${e}${r}`;
  return !t && kne(n) ? n : t;
}, ""), "fileExists");
function LP(e) {
  let t = Ine(Tne(e, "middleware"));
  if (t) {
    let r = H(t);
    return r.__esModule && (r = r.default), r;
  }
  return () => {
  };
}
s(LP, "getMiddleware");

// src/core-server/utils/open-in-browser.ts
var vB = fe(oB(), 1), EB = fe(bB(), 1), CB = fe(Tt(), 1);
import { logger as iie } from "storybook/internal/node-logger";
import sie from "better-opn";
function wB(e) {
  let t = process.env.BROWSER, r = t === "chrome" || t === "chromium" || t === "brave" || t === "com.brave.browser", n = t ? { app: { name: t } } :
  {};
  (0, vB.default)(async (i, o) => {
    try {
      o && (o.isChrome || o.isChromium || o.identity === "com.brave.browser" || r) ? await sie(e) : await (0, EB.default)(e, n);
    } catch {
      iie.error(CB.dedent`
        Could not open ${e} inside a browser. If you're running this command inside a
        docker container or on a CI, you need to pass the '--ci' flag to prevent opening a
        browser by default.
      `);
    }
  });
}
s(wB, "openInBrowser");

// src/core-server/utils/server-address.ts
var GB = fe(HB(), 1);
import $ie from "node:os";
import { logger as Vie } from "storybook/internal/node-logger";
function JB(e, t, r, n) {
  let i = new URL(`${r}://localhost:${e}/`), o = new URL(`${r}://${t || Uie()}:${e}/`);
  if (n) {
    let a = `?path=${decodeURIComponent(
      n.startsWith("/") ? n : `/${n}`
    )}`;
    i.search = a, o.search = a;
  }
  return {
    address: i.href,
    networkAddress: o.href
  };
}
s(JB, "getServerAddresses");
var ZB = /* @__PURE__ */ s((e, { exactPort: t } = {}) => (0, GB.default)(e).then((r) => (r !== e && t && process.exit(-1), r)).catch((r) => {
  Vie.error(r), process.exit(-1);
}), "getServerPort"), XB = /* @__PURE__ */ s((e, { https: t }) => `${t ? "wss" : "ws"}://localhost:${e}/storybook-server-channel`, "getServe\
rChannelUrl"), Uie = /* @__PURE__ */ s(() => {
  let t = Object.values($ie.networkInterfaces()).flat().filter((r) => r && r.family === "IPv4" && !r.internal);
  return t.length ? t[0]?.address : "0.0.0.0";
}, "getLocalIp");

// src/core-server/utils/server-init.ts
import { readFile as qy } from "node:fs/promises";
import { logger as KB } from "storybook/internal/node-logger";
import Wie from "http";
import zie from "https";
async function YB(e) {
  if (!e.https)
    return Wie.createServer();
  e.sslCert || (KB.error("Error: --ssl-cert is required with --https"), process.exit(-1)), e.sslKey || (KB.error("Error: --ssl-key is requir\
ed with --https"), process.exit(-1));
  let t = {
    ca: await Promise.all((e.sslCa || []).map((r) => qy(r, { encoding: "utf8" }))),
    cert: await qy(e.sslCert, { encoding: "utf8" }),
    key: await qy(e.sslKey, { encoding: "utf8" })
  };
  return zie.createServer(t);
}
s(YB, "getServer");

// src/core-server/dev-server.ts
async function eO(e) {
  let [t, r] = await Promise.all([YB(e), e.presets.apply("core")]), n = r0({ server: t }), i = await e.presets.apply(
    "experimental_serverChannel",
    OP(t)
  ), o, a = NP(n, e, i).catch((k) => {
    o = k;
  });
  n.use(Yg({ level: 1 })), typeof e.extendServer == "function" && e.extendServer(t), n.use(RP(r?.crossOriginIsolated ?? !1)), n.use(rP()), LP(
  e.configDir)(n);
  let { port: u, host: l, initialPath: c } = e;
  kt(u, "expected options to have a port");
  let p = e.https ? "https" : "http", { address: h, networkAddress: f } = JB(u, l, p, c);
  if (!r?.builder)
    throw new Gie();
  let d = typeof r?.builder == "string" ? r.builder : r?.builder?.name, [m, g] = await Promise.all([
    Qo(d, e.configDir),
    Yo(),
    N2(n, e)
  ]);
  e.debugWebpack && Hie("Preview webpack config", await m.getConfig(e));
  let b = e.previewOnly ? void 0 : await g.start({
    startTime: process.hrtime(),
    options: e,
    router: n,
    server: t,
    channel: i
  }), y = await Promise.resolve();
  e.ignorePreview || (e.quiet || QB.info("=> Starting preview.."), y = await m.start({
    startTime: process.hrtime(),
    options: e,
    router: n,
    server: t,
    channel: i
  }).catch(async (k) => {
    throw QB.error("=> Failed to build the preview"), process.exitCode = 1, await g?.bail().catch(), await m?.bail().catch(), k;
  }));
  let E = new Promise((k, O) => {
    t.once("error", O), n.listen({ port: u, host: l }, k);
  });
  if (await Promise.all([a, E]).then(async ([k]) => {
    if (k && !e.ci && !e.smokeTest && e.open) {
      let O = l ? f : h;
      wB(e.previewOnly ? `${O}iframe.html?navigator=true` : O);
    }
  }), o)
    throw await g?.bail().catch(), await m?.bail().catch(), o;
  tP(n, r, a, e);
  async function A() {
    let k = { eventType: "dev" };
    try {
      let w = await (await a)?.getIndexAndStats();
      w && Object.assign(k, {
        storyIndex: Ls(w.storyIndex),
        storyStats: w.stats
      });
    } catch {
    }
    await YI("canceled", k, { immediate: !0 }), process.exit(0);
  }
  return s(A, "cancelTelemetry"), r?.disableTelemetry || (process.on("SIGINT", A), process.on("SIGTERM", A)), { previewResult: y, managerResult: b,
  address: h, networkAddress: f };
}
s(eO, "storybookDevServer");

// src/core-server/utils/output-startup-information.ts
import { colors as Soe } from "storybook/internal/node-logger";

// ../node_modules/boxen/index.js
import ap from "node:process";

// ../node_modules/ansi-regex/index.js
function $y({ onlyFirst: e = !1 } = {}) {
  let r = [
    "[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?(?:\\u0007|\\u001B\\u005C|\\u00\
9C))",
    "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-nq-uy=><~]))"
  ].join("|");
  return new RegExp(r, e ? void 0 : "g");
}
s($y, "ansiRegex");

// ../node_modules/strip-ansi/index.js
var Jie = $y();
function Gi(e) {
  if (typeof e != "string")
    throw new TypeError(`Expected a \`string\`, got \`${typeof e}\``);
  return e.replace(Jie, "");
}
s(Gi, "stripAnsi");

// ../node_modules/boxen/node_modules/string-width/index.js
var nO = fe(Uy(), 1), iO = fe(Wy(), 1);
function Cr(e, t = {}) {
  if (typeof e != "string" || e.length === 0 || (t = {
    ambiguousIsNarrow: !0,
    ...t
  }, e = Gi(e), e.length === 0))
    return 0;
  e = e.replace((0, iO.default)(), "  ");
  let r = t.ambiguousIsNarrow ? 1 : 2, n = 0;
  for (let i of e) {
    let o = i.codePointAt(0);
    if (o <= 31 || o >= 127 && o <= 159 || o >= 768 && o <= 879)
      continue;
    switch (nO.default.eastAsianWidth(i)) {
      case "F":
      case "W":
        n += 2;
        break;
      case "A":
        n += r;
        break;
      default:
        n += 1;
    }
  }
  return n;
}
s(Cr, "stringWidth");

// ../node_modules/boxen/node_modules/chalk/source/vendor/ansi-styles/index.js
var sO = /* @__PURE__ */ s((e = 0) => (t) => `\x1B[${t + e}m`, "wrapAnsi16"), oO = /* @__PURE__ */ s((e = 0) => (t) => `\x1B[${38 + e};5;${t}\
m`, "wrapAnsi256"), aO = /* @__PURE__ */ s((e = 0) => (t, r, n) => `\x1B[${38 + e};2;${t};${r};${n}m`, "wrapAnsi16m"), et = {
  modifier: {
    reset: [0, 0],
    // 21 isn't widely supported and 22 does the same thing
    bold: [1, 22],
    dim: [2, 22],
    italic: [3, 23],
    underline: [4, 24],
    overline: [53, 55],
    inverse: [7, 27],
    hidden: [8, 28],
    strikethrough: [9, 29]
  },
  color: {
    black: [30, 39],
    red: [31, 39],
    green: [32, 39],
    yellow: [33, 39],
    blue: [34, 39],
    magenta: [35, 39],
    cyan: [36, 39],
    white: [37, 39],
    // Bright color
    blackBright: [90, 39],
    gray: [90, 39],
    // Alias of `blackBright`
    grey: [90, 39],
    // Alias of `blackBright`
    redBright: [91, 39],
    greenBright: [92, 39],
    yellowBright: [93, 39],
    blueBright: [94, 39],
    magentaBright: [95, 39],
    cyanBright: [96, 39],
    whiteBright: [97, 39]
  },
  bgColor: {
    bgBlack: [40, 49],
    bgRed: [41, 49],
    bgGreen: [42, 49],
    bgYellow: [43, 49],
    bgBlue: [44, 49],
    bgMagenta: [45, 49],
    bgCyan: [46, 49],
    bgWhite: [47, 49],
    // Bright color
    bgBlackBright: [100, 49],
    bgGray: [100, 49],
    // Alias of `bgBlackBright`
    bgGrey: [100, 49],
    // Alias of `bgBlackBright`
    bgRedBright: [101, 49],
    bgGreenBright: [102, 49],
    bgYellowBright: [103, 49],
    bgBlueBright: [104, 49],
    bgMagentaBright: [105, 49],
    bgCyanBright: [106, 49],
    bgWhiteBright: [107, 49]
  }
}, f2e = Object.keys(et.modifier), Zie = Object.keys(et.color), Xie = Object.keys(et.bgColor), d2e = [...Zie, ...Xie];
function Kie() {
  let e = /* @__PURE__ */ new Map();
  for (let [t, r] of Object.entries(et)) {
    for (let [n, i] of Object.entries(r))
      et[n] = {
        open: `\x1B[${i[0]}m`,
        close: `\x1B[${i[1]}m`
      }, r[n] = et[n], e.set(i[0], i[1]);
    Object.defineProperty(et, t, {
      value: r,
      enumerable: !1
    });
  }
  return Object.defineProperty(et, "codes", {
    value: e,
    enumerable: !1
  }), et.color.close = "\x1B[39m", et.bgColor.close = "\x1B[49m", et.color.ansi = sO(), et.color.ansi256 = oO(), et.color.ansi16m = aO(), et.
  bgColor.ansi = sO(10), et.bgColor.ansi256 = oO(10), et.bgColor.ansi16m = aO(10), Object.defineProperties(et, {
    rgbToAnsi256: {
      value(t, r, n) {
        return t === r && r === n ? t < 8 ? 16 : t > 248 ? 231 : Math.round((t - 8) / 247 * 24) + 232 : 16 + 36 * Math.round(t / 255 * 5) + 6 *
        Math.round(r / 255 * 5) + Math.round(n / 255 * 5);
      },
      enumerable: !1
    },
    hexToRgb: {
      value(t) {
        let r = /[a-f\d]{6}|[a-f\d]{3}/i.exec(t.toString(16));
        if (!r)
          return [0, 0, 0];
        let [n] = r;
        n.length === 3 && (n = [...n].map((o) => o + o).join(""));
        let i = Number.parseInt(n, 16);
        return [
          /* eslint-disable no-bitwise */
          i >> 16 & 255,
          i >> 8 & 255,
          i & 255
          /* eslint-enable no-bitwise */
        ];
      },
      enumerable: !1
    },
    hexToAnsi256: {
      value: /* @__PURE__ */ s((t) => et.rgbToAnsi256(...et.hexToRgb(t)), "value"),
      enumerable: !1
    },
    ansi256ToAnsi: {
      value(t) {
        if (t < 8)
          return 30 + t;
        if (t < 16)
          return 90 + (t - 8);
        let r, n, i;
        if (t >= 232)
          r = ((t - 232) * 10 + 8) / 255, n = r, i = r;
        else {
          t -= 16;
          let u = t % 36;
          r = Math.floor(t / 36) / 5, n = Math.floor(u / 6) / 5, i = u % 6 / 5;
        }
        let o = Math.max(r, n, i) * 2;
        if (o === 0)
          return 30;
        let a = 30 + (Math.round(i) << 2 | Math.round(n) << 1 | Math.round(r));
        return o === 2 && (a += 60), a;
      },
      enumerable: !1
    },
    rgbToAnsi: {
      value: /* @__PURE__ */ s((t, r, n) => et.ansi256ToAnsi(et.rgbToAnsi256(t, r, n)), "value"),
      enumerable: !1
    },
    hexToAnsi: {
      value: /* @__PURE__ */ s((t) => et.ansi256ToAnsi(et.hexToAnsi256(t)), "value"),
      enumerable: !1
    }
  }), et;
}
s(Kie, "assembleStyles");
var Yie = Kie(), jr = Yie;

// ../node_modules/boxen/node_modules/chalk/source/vendor/supports-color/index.js
import zy from "node:process";
import Qie from "node:os";
import uO from "node:tty";
function wr(e, t = globalThis.Deno ? globalThis.Deno.args : zy.argv) {
  let r = e.startsWith("-") ? "" : e.length === 1 ? "-" : "--", n = t.indexOf(r + e), i = t.indexOf("--");
  return n !== -1 && (i === -1 || n < i);
}
s(wr, "hasFlag");
var { env: lt } = zy, rp;
wr("no-color") || wr("no-colors") || wr("color=false") || wr("color=never") ? rp = 0 : (wr("color") || wr("colors") || wr("color=true") || wr(
"color=always")) && (rp = 1);
function ese() {
  if ("FORCE_COLOR" in lt)
    return lt.FORCE_COLOR === "true" ? 1 : lt.FORCE_COLOR === "false" ? 0 : lt.FORCE_COLOR.length === 0 ? 1 : Math.min(Number.parseInt(lt.FORCE_COLOR,
    10), 3);
}
s(ese, "envForceColor");
function tse(e) {
  return e === 0 ? !1 : {
    level: e,
    hasBasic: !0,
    has256: e >= 2,
    has16m: e >= 3
  };
}
s(tse, "translateLevel");
function rse(e, { streamIsTTY: t, sniffFlags: r = !0 } = {}) {
  let n = ese();
  n !== void 0 && (rp = n);
  let i = r ? rp : n;
  if (i === 0)
    return 0;
  if (r) {
    if (wr("color=16m") || wr("color=full") || wr("color=truecolor"))
      return 3;
    if (wr("color=256"))
      return 2;
  }
  if ("TF_BUILD" in lt && "AGENT_NAME" in lt)
    return 1;
  if (e && !t && i === void 0)
    return 0;
  let o = i || 0;
  if (lt.TERM === "dumb")
    return o;
  if (zy.platform === "win32") {
    let a = Qie.release().split(".");
    return Number(a[0]) >= 10 && Number(a[2]) >= 10586 ? Number(a[2]) >= 14931 ? 3 : 2 : 1;
  }
  if ("CI" in lt)
    return ["GITHUB_ACTIONS", "GITEA_ACTIONS", "CIRCLECI"].some((a) => a in lt) ? 3 : ["TRAVIS", "APPVEYOR", "GITLAB_CI", "BUILDKITE", "DRON\
E"].some((a) => a in lt) || lt.CI_NAME === "codeship" ? 1 : o;
  if ("TEAMCITY_VERSION" in lt)
    return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(lt.TEAMCITY_VERSION) ? 1 : 0;
  if (lt.COLORTERM === "truecolor" || lt.TERM === "xterm-kitty")
    return 3;
  if ("TERM_PROGRAM" in lt) {
    let a = Number.parseInt((lt.TERM_PROGRAM_VERSION || "").split(".")[0], 10);
    switch (lt.TERM_PROGRAM) {
      case "iTerm.app":
        return a >= 3 ? 3 : 2;
      case "Apple_Terminal":
        return 2;
    }
  }
  return /-256(color)?$/i.test(lt.TERM) ? 2 : /^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(lt.TERM) || "COLORTERM" in lt ?
  1 : o;
}
s(rse, "_supportsColor");
function lO(e, t = {}) {
  let r = rse(e, {
    streamIsTTY: e && e.isTTY,
    ...t
  });
  return tse(r);
}
s(lO, "createSupportsColor");
var nse = {
  stdout: lO({ isTTY: uO.isatty(1) }),
  stderr: lO({ isTTY: uO.isatty(2) })
}, cO = nse;

// ../node_modules/boxen/node_modules/chalk/source/utilities.js
function pO(e, t, r) {
  let n = e.indexOf(t);
  if (n === -1)
    return e;
  let i = t.length, o = 0, a = "";
  do
    a += e.slice(o, n) + t + r, o = n + i, n = e.indexOf(t, o);
  while (n !== -1);
  return a += e.slice(o), a;
}
s(pO, "stringReplaceAll");
function hO(e, t, r, n) {
  let i = 0, o = "";
  do {
    let a = e[n - 1] === "\r";
    o += e.slice(i, a ? n - 1 : n) + t + (a ? `\r
` : `
`) + r, i = n + 1, n = e.indexOf(`
`, i);
  } while (n !== -1);
  return o += e.slice(i), o;
}
s(hO, "stringEncaseCRLFWithFirstIndex");

// ../node_modules/boxen/node_modules/chalk/source/index.js
var { stdout: fO, stderr: dO } = cO, Hy = Symbol("GENERATOR"), co = Symbol("STYLER"), qa = Symbol("IS_EMPTY"), mO = [
  "ansi",
  "ansi",
  "ansi256",
  "ansi16m"
], po = /* @__PURE__ */ Object.create(null), ise = /* @__PURE__ */ s((e, t = {}) => {
  if (t.level && !(Number.isInteger(t.level) && t.level >= 0 && t.level <= 3))
    throw new Error("The `level` option should be an integer from 0 to 3");
  let r = fO ? fO.level : 0;
  e.level = t.level === void 0 ? r : t.level;
}, "applyOptions");
var sse = /* @__PURE__ */ s((e) => {
  let t = /* @__PURE__ */ s((...r) => r.join(" "), "chalk");
  return ise(t, e), Object.setPrototypeOf(t, $a.prototype), t;
}, "chalkFactory");
function $a(e) {
  return sse(e);
}
s($a, "createChalk");
Object.setPrototypeOf($a.prototype, Function.prototype);
for (let [e, t] of Object.entries(jr))
  po[e] = {
    get() {
      let r = np(this, Jy(t.open, t.close, this[co]), this[qa]);
      return Object.defineProperty(this, e, { value: r }), r;
    }
  };
po.visible = {
  get() {
    let e = np(this, this[co], !0);
    return Object.defineProperty(this, "visible", { value: e }), e;
  }
};
var Gy = /* @__PURE__ */ s((e, t, r, ...n) => e === "rgb" ? t === "ansi16m" ? jr[r].ansi16m(...n) : t === "ansi256" ? jr[r].ansi256(jr.rgbToAnsi256(
...n)) : jr[r].ansi(jr.rgbToAnsi(...n)) : e === "hex" ? Gy("rgb", t, r, ...jr.hexToRgb(...n)) : jr[r][e](...n), "getModelAnsi"), ose = ["rgb",
"hex", "ansi256"];
for (let e of ose) {
  po[e] = {
    get() {
      let { level: r } = this;
      return function(...n) {
        let i = Jy(Gy(e, mO[r], "color", ...n), jr.color.close, this[co]);
        return np(this, i, this[qa]);
      };
    }
  };
  let t = "bg" + e[0].toUpperCase() + e.slice(1);
  po[t] = {
    get() {
      let { level: r } = this;
      return function(...n) {
        let i = Jy(Gy(e, mO[r], "bgColor", ...n), jr.bgColor.close, this[co]);
        return np(this, i, this[qa]);
      };
    }
  };
}
var ase = Object.defineProperties(() => {
}, {
  ...po,
  level: {
    enumerable: !0,
    get() {
      return this[Hy].level;
    },
    set(e) {
      this[Hy].level = e;
    }
  }
}), Jy = /* @__PURE__ */ s((e, t, r) => {
  let n, i;
  return r === void 0 ? (n = e, i = t) : (n = r.openAll + e, i = t + r.closeAll), {
    open: e,
    close: t,
    openAll: n,
    closeAll: i,
    parent: r
  };
}, "createStyler"), np = /* @__PURE__ */ s((e, t, r) => {
  let n = /* @__PURE__ */ s((...i) => use(n, i.length === 1 ? "" + i[0] : i.join(" ")), "builder");
  return Object.setPrototypeOf(n, ase), n[Hy] = e, n[co] = t, n[qa] = r, n;
}, "createBuilder"), use = /* @__PURE__ */ s((e, t) => {
  if (e.level <= 0 || !t)
    return e[qa] ? "" : t;
  let r = e[co];
  if (r === void 0)
    return t;
  let { openAll: n, closeAll: i } = r;
  if (t.includes("\x1B"))
    for (; r !== void 0; )
      t = pO(t, r.close, r.open), r = r.parent;
  let o = t.indexOf(`
`);
  return o !== -1 && (t = hO(t, i, n, o)), n + t + i;
}, "applyStyle");
Object.defineProperties($a.prototype, po);
var lse = $a(), F2e = $a({ level: dO ? dO.level : 0 });
var Ji = lse;

// ../node_modules/boxen/node_modules/widest-line/index.js
function ip(e) {
  let t = 0;
  for (let r of e.split(`
`))
    t = Math.max(t, Cr(r));
  return t;
}
s(ip, "widestLine");

// ../node_modules/boxen/index.js
var HO = fe(Xy(), 1);

// ../node_modules/boxen/node_modules/camelcase/index.js
var pse = /[\p{Lu}]/u, hse = /[\p{Ll}]/u, DO = /^[\p{Lu}](?![\p{Lu}])/gu, vO = /([\p{Alpha}\p{N}_]|$)/u, Ky = /[_.\- ]+/, fse = new RegExp("\
^" + Ky.source), xO = new RegExp(Ky.source + vO.source, "gu"), bO = new RegExp("\\d+" + vO.source, "gu"), dse = /* @__PURE__ */ s((e, t, r, n) => {
  let i = !1, o = !1, a = !1, u = !1;
  for (let l = 0; l < e.length; l++) {
    let c = e[l];
    u = l > 2 ? e[l - 3] === "-" : !0, i && pse.test(c) ? (e = e.slice(0, l) + "-" + e.slice(l), i = !1, a = o, o = !0, l++) : o && a && hse.
    test(c) && (!u || n) ? (e = e.slice(0, l - 1) + "-" + e.slice(l - 1), a = o, o = !1, i = !0) : (i = t(c) === c && r(c) !== c, a = o, o =
    r(c) === c && t(c) !== c);
  }
  return e;
}, "preserveCamelCase"), mse = /* @__PURE__ */ s((e, t) => (DO.lastIndex = 0, e.replace(DO, (r) => t(r))), "preserveConsecutiveUppercase"), gse = /* @__PURE__ */ s(
(e, t) => (xO.lastIndex = 0, bO.lastIndex = 0, e.replace(xO, (r, n) => t(n)).replace(bO, (r) => t(r))), "postProcess");
function Yy(e, t) {
  if (!(typeof e == "string" || Array.isArray(e)))
    throw new TypeError("Expected the input to be `string | string[]`");
  if (t = {
    pascalCase: !1,
    preserveConsecutiveUppercase: !1,
    ...t
  }, Array.isArray(e) ? e = e.map((o) => o.trim()).filter((o) => o.length).join("-") : e = e.trim(), e.length === 0)
    return "";
  let r = t.locale === !1 ? (o) => o.toLowerCase() : (o) => o.toLocaleLowerCase(t.locale), n = t.locale === !1 ? (o) => o.toUpperCase() : (o) => o.
  toLocaleUpperCase(t.locale);
  return e.length === 1 ? Ky.test(e) ? "" : t.pascalCase ? n(e) : r(e) : (e !== r(e) && (e = dse(e, r, n, t.preserveConsecutiveUppercase)), e =
  e.replace(fse, ""), e = t.preserveConsecutiveUppercase ? mse(e, r) : r(e), t.pascalCase && (e = n(e.charAt(0)) + e.slice(1)), gse(e, n));
}
s(Yy, "camelCase");

// ../node_modules/boxen/index.js
var sD = fe(PO(), 1);

// ../node_modules/wrap-ansi/node_modules/string-width/index.js
var BO = fe(Uy(), 1), OO = fe(Wy(), 1);
function Xi(e, t = {}) {
  if (typeof e != "string" || e.length === 0 || (t = {
    ambiguousIsNarrow: !0,
    ...t
  }, e = Gi(e), e.length === 0))
    return 0;
  e = e.replace((0, OO.default)(), "  ");
  let r = t.ambiguousIsNarrow ? 1 : 2, n = 0;
  for (let i of e) {
    let o = i.codePointAt(0);
    if (o <= 31 || o >= 127 && o <= 159 || o >= 768 && o <= 879)
      continue;
    switch (BO.default.eastAsianWidth(i)) {
      case "F":
      case "W":
        n += 2;
        break;
      case "A":
        n += r;
        break;
      default:
        n += 1;
    }
  }
  return n;
}
s(Xi, "stringWidth");

// ../node_modules/wrap-ansi/node_modules/ansi-styles/index.js
var RO = /* @__PURE__ */ s((e = 0) => (t) => `\x1B[${t + e}m`, "wrapAnsi16"), NO = /* @__PURE__ */ s((e = 0) => (t) => `\x1B[${38 + e};5;${t}\
m`, "wrapAnsi256"), LO = /* @__PURE__ */ s((e = 0) => (t, r, n) => `\x1B[${38 + e};2;${t};${r};${n}m`, "wrapAnsi16m"), tt = {
  modifier: {
    reset: [0, 0],
    // 21 isn't widely supported and 22 does the same thing
    bold: [1, 22],
    dim: [2, 22],
    italic: [3, 23],
    underline: [4, 24],
    overline: [53, 55],
    inverse: [7, 27],
    hidden: [8, 28],
    strikethrough: [9, 29]
  },
  color: {
    black: [30, 39],
    red: [31, 39],
    green: [32, 39],
    yellow: [33, 39],
    blue: [34, 39],
    magenta: [35, 39],
    cyan: [36, 39],
    white: [37, 39],
    // Bright color
    blackBright: [90, 39],
    gray: [90, 39],
    // Alias of `blackBright`
    grey: [90, 39],
    // Alias of `blackBright`
    redBright: [91, 39],
    greenBright: [92, 39],
    yellowBright: [93, 39],
    blueBright: [94, 39],
    magentaBright: [95, 39],
    cyanBright: [96, 39],
    whiteBright: [97, 39]
  },
  bgColor: {
    bgBlack: [40, 49],
    bgRed: [41, 49],
    bgGreen: [42, 49],
    bgYellow: [43, 49],
    bgBlue: [44, 49],
    bgMagenta: [45, 49],
    bgCyan: [46, 49],
    bgWhite: [47, 49],
    // Bright color
    bgBlackBright: [100, 49],
    bgGray: [100, 49],
    // Alias of `bgBlackBright`
    bgGrey: [100, 49],
    // Alias of `bgBlackBright`
    bgRedBright: [101, 49],
    bgGreenBright: [102, 49],
    bgYellowBright: [103, 49],
    bgBlueBright: [104, 49],
    bgMagentaBright: [105, 49],
    bgCyanBright: [106, 49],
    bgWhiteBright: [107, 49]
  }
}, Z2e = Object.keys(tt.modifier), wse = Object.keys(tt.color), Sse = Object.keys(tt.bgColor), X2e = [...wse, ...Sse];
function Ase() {
  let e = /* @__PURE__ */ new Map();
  for (let [t, r] of Object.entries(tt)) {
    for (let [n, i] of Object.entries(r))
      tt[n] = {
        open: `\x1B[${i[0]}m`,
        close: `\x1B[${i[1]}m`
      }, r[n] = tt[n], e.set(i[0], i[1]);
    Object.defineProperty(tt, t, {
      value: r,
      enumerable: !1
    });
  }
  return Object.defineProperty(tt, "codes", {
    value: e,
    enumerable: !1
  }), tt.color.close = "\x1B[39m", tt.bgColor.close = "\x1B[49m", tt.color.ansi = RO(), tt.color.ansi256 = NO(), tt.color.ansi16m = LO(), tt.
  bgColor.ansi = RO(10), tt.bgColor.ansi256 = NO(10), tt.bgColor.ansi16m = LO(10), Object.defineProperties(tt, {
    rgbToAnsi256: {
      value: /* @__PURE__ */ s((t, r, n) => t === r && r === n ? t < 8 ? 16 : t > 248 ? 231 : Math.round((t - 8) / 247 * 24) + 232 : 16 + 36 *
      Math.round(t / 255 * 5) + 6 * Math.round(r / 255 * 5) + Math.round(n / 255 * 5), "value"),
      enumerable: !1
    },
    hexToRgb: {
      value: /* @__PURE__ */ s((t) => {
        let r = /[a-f\d]{6}|[a-f\d]{3}/i.exec(t.toString(16));
        if (!r)
          return [0, 0, 0];
        let [n] = r;
        n.length === 3 && (n = [...n].map((o) => o + o).join(""));
        let i = Number.parseInt(n, 16);
        return [
          /* eslint-disable no-bitwise */
          i >> 16 & 255,
          i >> 8 & 255,
          i & 255
          /* eslint-enable no-bitwise */
        ];
      }, "value"),
      enumerable: !1
    },
    hexToAnsi256: {
      value: /* @__PURE__ */ s((t) => tt.rgbToAnsi256(...tt.hexToRgb(t)), "value"),
      enumerable: !1
    },
    ansi256ToAnsi: {
      value: /* @__PURE__ */ s((t) => {
        if (t < 8)
          return 30 + t;
        if (t < 16)
          return 90 + (t - 8);
        let r, n, i;
        if (t >= 232)
          r = ((t - 232) * 10 + 8) / 255, n = r, i = r;
        else {
          t -= 16;
          let u = t % 36;
          r = Math.floor(t / 36) / 5, n = Math.floor(u / 6) / 5, i = u % 6 / 5;
        }
        let o = Math.max(r, n, i) * 2;
        if (o === 0)
          return 30;
        let a = 30 + (Math.round(i) << 2 | Math.round(n) << 1 | Math.round(r));
        return o === 2 && (a += 60), a;
      }, "value"),
      enumerable: !1
    },
    rgbToAnsi: {
      value: /* @__PURE__ */ s((t, r, n) => tt.ansi256ToAnsi(tt.rgbToAnsi256(t, r, n)), "value"),
      enumerable: !1
    },
    hexToAnsi: {
      value: /* @__PURE__ */ s((t) => tt.ansi256ToAnsi(tt.hexToAnsi256(t)), "value"),
      enumerable: !1
    }
  }), tt;
}
s(Ase, "assembleStyles");
var Fse = Ase(), jO = Fse;

// ../node_modules/wrap-ansi/index.js
var sp = /* @__PURE__ */ new Set([
  "\x1B",
  "\x9B"
]), _se = 39, nD = "\x07", $O = "[", kse = "]", VO = "m", iD = `${kse}8;;`, MO = /* @__PURE__ */ s((e) => `${sp.values().next().value}${$O}${e}${VO}`,
"wrapAnsiCode"), qO = /* @__PURE__ */ s((e) => `${sp.values().next().value}${iD}${e}${nD}`, "wrapAnsiHyperlink"), Tse = /* @__PURE__ */ s((e) => e.
split(" ").map((t) => Xi(t)), "wordLengths"), rD = /* @__PURE__ */ s((e, t, r) => {
  let n = [...t], i = !1, o = !1, a = Xi(Gi(e[e.length - 1]));
  for (let [u, l] of n.entries()) {
    let c = Xi(l);
    if (a + c <= r ? e[e.length - 1] += l : (e.push(l), a = 0), sp.has(l) && (i = !0, o = n.slice(u + 1).join("").startsWith(iD)), i) {
      o ? l === nD && (i = !1, o = !1) : l === VO && (i = !1);
      continue;
    }
    a += c, a === r && u < n.length - 1 && (e.push(""), a = 0);
  }
  !a && e[e.length - 1].length > 0 && e.length > 1 && (e[e.length - 2] += e.pop());
}, "wrapWord"), Ise = /* @__PURE__ */ s((e) => {
  let t = e.split(" "), r = t.length;
  for (; r > 0 && !(Xi(t[r - 1]) > 0); )
    r--;
  return r === t.length ? e : t.slice(0, r).join(" ") + t.slice(r).join("");
}, "stringVisibleTrimSpacesRight"), Pse = /* @__PURE__ */ s((e, t, r = {}) => {
  if (r.trim !== !1 && e.trim() === "")
    return "";
  let n = "", i, o, a = Tse(e), u = [""];
  for (let [c, p] of e.split(" ").entries()) {
    r.trim !== !1 && (u[u.length - 1] = u[u.length - 1].trimStart());
    let h = Xi(u[u.length - 1]);
    if (c !== 0 && (h >= t && (r.wordWrap === !1 || r.trim === !1) && (u.push(""), h = 0), (h > 0 || r.trim === !1) && (u[u.length - 1] += "\
 ", h++)), r.hard && a[c] > t) {
      let f = t - h, d = 1 + Math.floor((a[c] - f - 1) / t);
      Math.floor((a[c] - 1) / t) < d && u.push(""), rD(u, p, t);
      continue;
    }
    if (h + a[c] > t && h > 0 && a[c] > 0) {
      if (r.wordWrap === !1 && h < t) {
        rD(u, p, t);
        continue;
      }
      u.push("");
    }
    if (h + a[c] > t && r.wordWrap === !1) {
      rD(u, p, t);
      continue;
    }
    u[u.length - 1] += p;
  }
  r.trim !== !1 && (u = u.map((c) => Ise(c)));
  let l = [...u.join(`
`)];
  for (let [c, p] of l.entries()) {
    if (n += p, sp.has(p)) {
      let { groups: f } = new RegExp(`(?:\\${$O}(?<code>\\d+)m|\\${iD}(?<uri>.*)${nD})`).exec(l.slice(c).join("")) || { groups: {} };
      if (f.code !== void 0) {
        let d = Number.parseFloat(f.code);
        i = d === _se ? void 0 : d;
      } else f.uri !== void 0 && (o = f.uri.length === 0 ? void 0 : f.uri);
    }
    let h = jO.codes.get(Number(i));
    l[c + 1] === `
` ? (o && (n += qO("")), i && h && (n += MO(h))) : p === `
` && (i && h && (n += MO(i)), o && (n += qO(o)));
  }
  return n;
}, "exec");
function op(e, t, r) {
  return String(e).normalize().replace(/\r\n/g, `
`).split(`
`).map((n) => Pse(n, t, r)).join(`
`);
}
s(op, "wrapAnsi");

// ../node_modules/boxen/index.js
var $se = fe(Xy(), 1);
var ui = `
`, Nt = " ", Va = "none", GO = /* @__PURE__ */ s(() => {
  let { env: e, stdout: t, stderr: r } = ap;
  return t?.columns ? t.columns : r?.columns ? r.columns : e.COLUMNS ? Number.parseInt(e.COLUMNS, 10) : 80;
}, "terminalColumns"), UO = /* @__PURE__ */ s((e) => typeof e == "number" ? {
  top: e,
  right: e * 3,
  bottom: e,
  left: e * 3
} : {
  top: 0,
  right: 0,
  bottom: 0,
  left: 0,
  ...e
}, "getObject"), Ua = /* @__PURE__ */ s((e) => e === Va ? 0 : 2, "getBorderWidth"), Bse = /* @__PURE__ */ s((e) => {
  let t = [
    "topLeft",
    "topRight",
    "bottomRight",
    "bottomLeft",
    "left",
    "right",
    "top",
    "bottom"
  ], r;
  if (e === Va) {
    e = {};
    for (let n of t)
      e[n] = "";
  }
  if (typeof e == "string") {
    if (r = HO.default[e], !r)
      throw new TypeError(`Invalid border style: ${e}`);
  } else {
    typeof e?.vertical == "string" && (e.left = e.vertical, e.right = e.vertical), typeof e?.horizontal == "string" && (e.top = e.horizontal,
    e.bottom = e.horizontal);
    for (let n of t)
      if (e[n] === null || typeof e[n] != "string")
        throw new TypeError(`Invalid border style: ${n}`);
    r = e;
  }
  return r;
}, "getBorderChars"), Ose = /* @__PURE__ */ s((e, t, r) => {
  let n = "", i = Cr(e);
  switch (r) {
    case "left": {
      n = e + t.slice(i);
      break;
    }
    case "right": {
      n = t.slice(i) + e;
      break;
    }
    default: {
      t = t.slice(i), t.length % 2 === 1 ? (t = t.slice(Math.floor(t.length / 2)), n = t.slice(1) + e + t) : (t = t.slice(t.length / 2), n =
      t + e + t);
      break;
    }
  }
  return n;
}, "makeTitle"), Rse = /* @__PURE__ */ s((e, { padding: t, width: r, textAlignment: n, height: i }) => {
  e = (0, sD.default)(e, { align: n });
  let o = e.split(ui), a = ip(e), u = r - t.left - t.right;
  if (a > u) {
    let p = [];
    for (let h of o) {
      let f = op(h, u, { hard: !0 }), m = (0, sD.default)(f, { align: n }).split(`
`), g = Math.max(...m.map((b) => Cr(b)));
      for (let b of m) {
        let y;
        switch (n) {
          case "center": {
            y = Nt.repeat((u - g) / 2) + b;
            break;
          }
          case "right": {
            y = Nt.repeat(u - g) + b;
            break;
          }
          default: {
            y = b;
            break;
          }
        }
        p.push(y);
      }
    }
    o = p;
  }
  n === "center" && a < u ? o = o.map((p) => Nt.repeat((u - a) / 2) + p) : n === "right" && a < u && (o = o.map((p) => Nt.repeat(u - a) + p));
  let l = Nt.repeat(t.left), c = Nt.repeat(t.right);
  return o = o.map((p) => l + p + c), o = o.map((p) => {
    if (r - Cr(p) > 0)
      switch (n) {
        case "center":
          return p + Nt.repeat(r - Cr(p));
        case "right":
          return p + Nt.repeat(r - Cr(p));
        default:
          return p + Nt.repeat(r - Cr(p));
      }
    return p;
  }), t.top > 0 && (o = [...Array.from({ length: t.top }).fill(Nt.repeat(r)), ...o]), t.bottom > 0 && (o = [...o, ...Array.from({ length: t.
  bottom }).fill(Nt.repeat(r))]), i && o.length > i ? o = o.slice(0, i) : i && o.length < i && (o = [...o, ...Array.from({ length: i - o.length }).
  fill(Nt.repeat(r))]), o.join(ui);
}, "makeContentText"), Nse = /* @__PURE__ */ s((e, t, r) => {
  let n = /* @__PURE__ */ s((p) => {
    let h = r.borderColor ? Mse(r.borderColor)(p) : p;
    return r.dimBorder ? Ji.dim(h) : h;
  }, "colorizeBorder"), i = /* @__PURE__ */ s((p) => r.backgroundColor ? qse(r.backgroundColor)(p) : p, "colorizeContent"), o = Bse(r.borderStyle),
  a = GO(), u = Nt.repeat(r.margin.left);
  if (r.float === "center") {
    let p = Math.max((a - t - Ua(r.borderStyle)) / 2, 0);
    u = Nt.repeat(p);
  } else if (r.float === "right") {
    let p = Math.max(a - t - r.margin.right - Ua(r.borderStyle), 0);
    u = Nt.repeat(p);
  }
  let l = "";
  r.margin.top && (l += ui.repeat(r.margin.top)), (r.borderStyle !== Va || r.title) && (l += n(u + o.topLeft + (r.title ? Ose(r.title, o.top.
  repeat(t), r.titleAlignment) : o.top.repeat(t)) + o.topRight) + ui);
  let c = e.split(ui);
  return l += c.map((p) => u + n(o.left) + i(p) + n(o.right)).join(ui), r.borderStyle !== Va && (l += ui + n(u + o.bottomLeft + o.bottom.repeat(
  t) + o.bottomRight)), r.margin.bottom && (l += ui.repeat(r.margin.bottom)), l;
}, "boxContent"), Lse = /* @__PURE__ */ s((e) => {
  if (e.fullscreen && ap?.stdout) {
    let t = [ap.stdout.columns, ap.stdout.rows];
    typeof e.fullscreen == "function" && (t = e.fullscreen(...t)), e.width || (e.width = t[0]), e.height || (e.height = t[1]);
  }
  return e.width && (e.width = Math.max(1, e.width - Ua(e.borderStyle))), e.height && (e.height = Math.max(1, e.height - Ua(e.borderStyle))),
  e;
}, "sanitizeOptions"), WO = /* @__PURE__ */ s((e, t) => t === Va ? e : ` ${e} `, "formatTitle"), jse = /* @__PURE__ */ s((e, t) => {
  t = Lse(t);
  let r = t.width !== void 0, n = GO(), i = Ua(t.borderStyle), o = n - t.margin.left - t.margin.right - i, a = ip(op(e, n - i, { hard: !0, trim: !1 })) +
  t.padding.left + t.padding.right;
  if (t.title && r ? (t.title = t.title.slice(0, Math.max(0, t.width - 2)), t.title && (t.title = WO(t.title, t.borderStyle))) : t.title && (t.
  title = t.title.slice(0, Math.max(0, o - 2)), t.title && (t.title = WO(t.title, t.borderStyle), Cr(t.title) > a && (t.width = Cr(t.title)))),
  t.width = t.width ? t.width : a, !r) {
    if (t.margin.left && t.margin.right && t.width > o) {
      let l = (n - t.width - i) / (t.margin.left + t.margin.right);
      t.margin.left = Math.max(0, Math.floor(t.margin.left * l)), t.margin.right = Math.max(0, Math.floor(t.margin.right * l));
    }
    t.width = Math.min(t.width, n - i - t.margin.left - t.margin.right);
  }
  return t.width - (t.padding.left + t.padding.right) <= 0 && (t.padding.left = 0, t.padding.right = 0), t.height && t.height - (t.padding.top +
  t.padding.bottom) <= 0 && (t.padding.top = 0, t.padding.bottom = 0), t;
}, "determineDimensions"), oD = /* @__PURE__ */ s((e) => e.match(/^#(?:[0-f]{3}){1,2}$/i), "isHex"), zO = /* @__PURE__ */ s((e) => typeof e ==
"string" && (Ji[e] ?? oD(e)), "isColorValid"), Mse = /* @__PURE__ */ s((e) => oD(e) ? Ji.hex(e) : Ji[e], "getColorFn"), qse = /* @__PURE__ */ s(
(e) => oD(e) ? Ji.bgHex(e) : Ji[Yy(["bg", e])], "getBGColorFn");
function aD(e, t) {
  if (t = {
    padding: 0,
    borderStyle: "single",
    dimBorder: !1,
    textAlignment: "left",
    float: "left",
    titleAlignment: "left",
    ...t
  }, t.align && (t.textAlignment = t.align), t.borderColor && !zO(t.borderColor))
    throw new Error(`${t.borderColor} is not a valid borderColor`);
  if (t.backgroundColor && !zO(t.backgroundColor))
    throw new Error(`${t.backgroundColor} is not a valid backgroundColor`);
  return t.padding = UO(t.padding), t.margin = UO(t.margin), t = jse(e, t), e = Rse(e, t), Nse(e, t.width, t);
}
s(aD, "boxen");

// src/core-server/utils/output-startup-information.ts
var J6 = fe(j6(), 1), li = fe(Ar(), 1), gD = fe($6(), 1), Z6 = fe(Tt(), 1);

// src/core-server/utils/update-check.ts
var mo = fe(Ar(), 1), z6 = fe(Tt(), 1);
import { cache as V6 } from "storybook/internal/common";
import { colors as U6 } from "storybook/internal/node-logger";
import W6 from "semver";
var { STORYBOOK_VERSION_BASE: Coe = "https://storybook.js.org", CI: woe } = process.env, H6 = /* @__PURE__ */ s(async (e) => {
  let t, r = Date.now();
  try {
    let n = await V6.get("lastUpdateCheck", { success: !1, time: 0 });
    r - 864e5 > n.time && !woe ? (t = { success: !0, cached: !1, data: await (await Promise.race([
      fetch(`${Coe}/versions.json?current=${e}`),
      // if fetch is too slow, we won't wait for it
      new Promise((a, u) => global.setTimeout(u, 1500))
    ])).json(), time: r }, await V6.set("lastUpdateCheck", t)) : t = { ...n, cached: !0 };
  } catch (n) {
    t = { success: !1, cached: !1, error: n, time: r };
  }
  return t;
}, "updateCheck");
function G6(e, t) {
  let r;
  try {
    let i = `npx storybook@${W6.prerelease(e.data.latest.version) ? "next" : "latest"} upgrade`;
    r = e.success && W6.lt(t, e.data.latest.version) ? z6.dedent`
          ${U6.orange(
      `A new version (${mo.default.bold(e.data.latest.version)}) is available!`
    )}

          ${mo.default.gray("Upgrade now:")} ${U6.green(i)}

          ${mo.default.gray("Read full changelog:")} ${mo.default.gray(
      mo.default.underline("https://github.com/storybookjs/storybook/blob/main/CHANGELOG.md")
    )}
        ` : "";
  } catch {
    r = "";
  }
  return r;
}
s(G6, "createUpdateMessage");

// src/core-server/utils/output-startup-information.ts
function X6(e) {
  let { updateInfo: t, version: r, name: n, address: i, networkAddress: o, managerTotalTime: a, previewTotalTime: u } = e, l = G6(t, r), c = new J6.default(
  {
    chars: {
      top: "",
      "top-mid": "",
      "top-left": "",
      "top-right": "",
      bottom: "",
      "bottom-mid": "",
      "bottom-left": "",
      "bottom-right": "",
      left: "",
      "left-mid": "",
      mid: "",
      "mid-mid": "",
      right: "",
      "right-mid": "",
      middle: ""
    },
    // @ts-expect-error (Converted from ts-ignore)
    paddingLeft: 0,
    paddingRight: 0,
    paddingTop: 0,
    paddingBottom: 0
  });
  c.push(
    ["Local:", li.default.cyan(i)],
    ["On your network:", li.default.cyan(o)]
  );
  let p = [
    a && `${li.default.underline((0, gD.default)(a))} for manager`,
    u && `${li.default.underline((0, gD.default)(u))} for preview`
  ].filter(Boolean).join(" and ");
  console.log(
    aD(
      Z6.dedent`
          ${Soe.green(
        `Storybook ${li.default.bold(r)} for ${li.default.bold(n)} started`
      )}
          ${li.default.gray(p)}

          ${c.toString()}${l ? `

${l}` : ""}
        `,
      { borderStyle: "round", padding: 1, borderColor: "#F1618C" }
    )
  );
}
s(X6, "outputStartupInformation");

// src/core-server/utils/warnOnIncompatibleAddons.ts
import { logger as _oe } from "storybook/internal/node-logger";

// ../lib/cli-storybook/src/doctor/getIncompatibleStorybookPackages.ts
var Ja = fe(Ar(), 1);
import { versions as yD } from "storybook/internal/common";
import { logger as Aoe } from "storybook/internal/node-logger";
import hp from "semver";

// ../lib/cli-storybook/src/automigrate/helpers/consolidated-packages.ts
var K6 = {
  "@storybook/channels": "storybook/internal/channels",
  "@storybook/client-logger": "storybook/internal/client-logger",
  "@storybook/core-common": "storybook/internal/common",
  "@storybook/core-events": "storybook/internal/core-events",
  "@storybook/csf": "storybook/internal/csf",
  "@storybook/csf-tools": "storybook/internal/csf-tools",
  "@storybook/docs-tools": "storybook/internal/docs-tools",
  "@storybook/node-logger": "storybook/internal/node-logger",
  "@storybook/preview-api": "storybook/preview-api",
  "@storybook/router": "storybook/internal/router",
  "@storybook/telemetry": "storybook/internal/telemetry",
  "@storybook/theming": "storybook/theming",
  "@storybook/types": "storybook/internal/types",
  "@storybook/manager-api": "storybook/manager-api",
  "@storybook/manager": "storybook/internal/manager",
  "@storybook/preview": "storybook/internal/preview",
  "@storybook/core-server": "storybook/internal/core-server",
  "@storybook/builder-manager": "storybook/internal/builder-manager",
  "@storybook/components": "storybook/internal/components",
  "@storybook/test": "storybook/test",
  "@storybook/experimental-nextjs-vite": "@storybook/nextjs-vite",
  "@storybook/instrumenter": "storybook/internal/instrumenter",
  "@storybook/blocks": "@storybook/addon-docs/blocks"
};

// ../lib/cli-storybook/src/doctor/getIncompatibleStorybookPackages.ts
var Foe = /* @__PURE__ */ s(async (e, t) => {
  let { currentStorybookVersion: r, skipErrors: n, packageManager: i } = t;
  try {
    let o = i.getModulePackageJSON(e);
    if (o === null)
      return { packageName: e };
    let {
      version: a,
      name: u = e,
      dependencies: l,
      peerDependencies: c,
      homepage: p
    } = o, h = Object.entries({
      ...l,
      ...c
    }).filter(
      ([g]) => yD[g] || K6[g]
    ).map(([g, b]) => b).find((g) => g && // We can't check compatibility for 0.x packages, so we skip them
    !/^[~^]?0\./.test(g) && hp.validRange(g) && !hp.satisfies(r, g)), f = yD[u], d, m;
    return f && a && hp.gt(r, a) && (d = r), f && a && hp.gt(a, r) && (m = a), {
      packageName: u,
      packageVersion: a,
      homepage: p,
      hasIncompatibleDependencies: h != null,
      packageStorybookVersion: h,
      availableUpdate: d,
      availableCoreUpdate: m
    };
  } catch (o) {
    return n || Aoe.log(
      `Error checking compatibility for ${e}, please report an issue:
` + String(o)
    ), { packageName: e };
  }
}, "checkPackageCompatibility"), Y6 = /* @__PURE__ */ s(async (e) => {
  if (e.currentStorybookVersion.includes("0.0.0"))
    return [];
  let t = e.packageManager.getAllDependencies(), r = Object.keys(t).filter((n) => n.includes("storybook"));
  if (r.length === 0 && !e.skipErrors)
    throw new Error("No Storybook dependencies found in the package.json");
  return Promise.all(
    r.filter((n) => !yD[n]).map((n) => Foe(n, e))
  );
}, "getIncompatibleStorybookPackages"), Q6 = /* @__PURE__ */ s((e, t) => {
  let r = [], n = e.filter(
    (i) => i.hasIncompatibleDependencies
  );
  return n.length > 0 && (r.push(
    `You are currently using Storybook ${Ja.default.bold(
      t
    )} but you have packages which are incompatible with it:
`
  ), n.forEach(
    ({
      packageName: i,
      packageVersion: o,
      homepage: a,
      availableUpdate: u,
      packageStorybookVersion: l
    }) => {
      let c = `${i}@${o}`, p = u ? ` (${u} available!)` : "", h = l != null ? ` which depends on ${l}` : "", f = a ? `
 Repo: ${a}` : "";
      r.push(
        `- ${c}${p}${h}${f}`
      );
    }
  ), r.push(
    `
Please consider updating your packages or contacting the maintainers for compatibility details.`,
    `
For more on Storybook 9 compatibility, see the linked GitHub issue:`,
    "https://github.com/storybookjs/storybook/issues/30944"
  ), n.some((i) => i.availableCoreUpdate) && r.push(
    `
`,
    `The version of ${Ja.default.blue(`storybook@${t}`)} is behind the following core packages:`,
    `${n.filter((i) => i.availableCoreUpdate).map(
      ({ packageName: i, packageVersion: o }) => `- ${Ja.default.blue(`${i}@${o}`)}`
    ).join(`
`)}`,
    `
`,
    "Upgrade Storybook with:",
    Ja.default.blue("npx storybook@latest upgrade")
  )), r.join(`
`);
}, "getIncompatiblePackagesSummary");

// src/core-server/utils/warnOnIncompatibleAddons.ts
var e8 = /* @__PURE__ */ s(async (e, t) => {
  let r = await Y6({
    skipUpgradeCheck: !0,
    skipErrors: !0,
    currentStorybookVersion: e,
    packageManager: t
  }), n = Q6(
    r,
    e
  );
  n && _oe.warn(n);
}, "warnOnIncompatibleAddons");

// src/core-server/utils/warnWhenUsingArgTypesRegex.ts
var go = fe(Ar(), 1), t8 = fe(Tt(), 1);
import { readFile as koe } from "node:fs/promises";
import { core as Toe } from "storybook/internal/babel";
import { babelParse as Ioe } from "storybook/internal/csf-tools";
async function r8(e, t) {
  let r = e ? await koe(e, { encoding: "utf8" }) : "";
  (t?.addons?.some(
    (i) => typeof i == "string" ? i === "@chromatic-com/storybook" : i.name === "@chromatic-com/storybook"
  ) ?? !1) && e && r.includes("argTypesRegex") && new Toe.File(
    { filename: e },
    { code: r, ast: Ioe(r) }
  ).path.traverse({
    Identifier: /* @__PURE__ */ s((o) => {
      if (o.node.name === "argTypesRegex") {
        let a = t8.dedent`
            ${go.default.bold("Attention")}: We've detected that you're using ${go.default.cyan(
          "actions.argTypesRegex"
        )} together with the visual test addon:
            
            ${o.buildCodeFrameError(e).message}
            
            We recommend removing the ${go.default.cyan(
          "argTypesRegex"
        )} and assigning explicit action with the ${go.default.cyan(
          "fn"
        )} function from ${go.default.cyan("storybook/test")} instead:
            https://storybook.js.org/docs/essentials/actions#via-storybooktest-fn-spy-function
            
            The build used by the addon for snapshot testing doesn't take the regex into account, which can cause hard to debug problems when a snapshot depends on the presence of action props.
          `;
        console.warn(a);
      }
    }, "Identifier")
  });
}
s(r8, "warnWhenUsingArgTypesRegex");

// src/core-server/build-dev.ts
async function a8(e) {
  let { packageJson: t, versionUpdates: r } = e, { storybookVersion: n, previewConfigPath: i } = e, o = DD(e.configDir);
  t ? (kt(
    t.version !== void 0,
    `Expected package.json#version to be defined in the "${t.name}" package}`
  ), n = t.version, i = Noe(o).previewConfigPath ?? void 0) : n || (n = Uoe.storybook);
  let [a, u] = await Promise.all([
    ZB(e.port, { exactPort: e.exactPort }),
    r ? H6(n) : Promise.resolve({ success: !1, cached: !1, data: {}, time: Date.now() })
  ]);
  if (!e.ci && !e.smokeTest && e.port != null && a !== e.port) {
    let { shouldChangePort: ie } = await (0, s8.default)({
      type: "confirm",
      initial: !0,
      name: "shouldChangePort",
      message: `Port ${e.port} is not available. Would you like to run Storybook on port ${a} instead?`
    });
    ie || process.exit(1);
  }
  let l = Hoe(Ooe(Loe(), o)), c = qoe("public", l), p = DD(e.outputDir || c);
  e.smokeTest && (p = c), e.port = a, e.versionCheck = u, e.configType = "DEVELOPMENT", e.configDir = o, e.cacheKey = l, e.outputDir = p, e.
  serverChannelUrl = XB(a, e);
  let h = await joe(e), { framework: f } = h, d = [], m = typeof f == "string" ? f : f?.name;
  e.ignorePreview || Voe(m), m && d.push(Boe(m, "preset")), m = m || "custom";
  let g = Roe.getPackageManager({
    configDir: e.configDir
  });
  try {
    await e8(n, g);
  } catch (ie) {
    xD.warn("Storybook failed to check addon compatibility"), xD.debug(`${ie instanceof Error ? ie.stack : String(ie)}`);
  }
  try {
    await r8(i, h);
  } catch {
  }
  let b = await n8({
    corePresets: d,
    overridePresets: [
      H.resolve("storybook/internal/core-server/presets/common-override-preset")
    ],
    ...e,
    isCritical: !0
  }), { renderer: y, builder: E, disableTelemetry: A } = await b.apply("core", {});
  if (!E)
    throw new Woe();
  !e.disableTelemetry && !A && u.success && !u.cached && Goe("version-update");
  let k = typeof E == "string" ? E : E.name, [O, w] = await Promise.all([
    Qo(k, e.configDir),
    Yo()
  ]);
  if (k.includes("builder-vite")) {
    let ie = (0, o8.dedent)(`Using CommonJS in your main configuration file is deprecated with Vite.
              - Refer to the migration guide at https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#commonjs-with-vite-is-deprec\
ated`), B = $oe(DD(e.configDir || ".storybook", "main"));
    /\.c[jt]s$/.test(B) && i8(ie);
    let ce = await Poe(B, { encoding: "utf8" });
    /\bmodule\.exports\b|\bexports[.[]|\brequire\s*\(|\bObject\.(?:defineProperty|defineProperties|assign)\s*\(\s*exports\b/.test(ce) && i8(
    ie);
  }
  let C = y && Moe(e.configDir, y, e);
  b = await n8({
    corePresets: [
      H.resolve("storybook/internal/core-server/presets/common-preset"),
      ...w.corePresets || [],
      ...O.corePresets || [],
      ...C ? [C] : [],
      ...d
    ],
    overridePresets: [
      ...O.overridePresets || [],
      H.resolve("storybook/internal/core-server/presets/common-override-preset")
    ],
    ...e
  });
  let T = await b.apply("features");
  Joe.FEATURES = T;
  let F = {
    ...e,
    presets: b,
    features: T
  }, { address: $, networkAddress: R, managerResult: U, previewResult: W } = await bl(
    async () => eO(F)
  ), Y = W?.totalTime, j = U?.totalTime, N = W?.stats, z = U?.stats, Q = e.webpackStatsJson || e.statsJson;
  if (Q) {
    let ie = Q === !0 ? e.outputDir : Q;
    await Cl(ie, N);
  }
  if (e.smokeTest) {
    let ie = [];
    ie.push(...z?.toJson()?.warnings || []);
    try {
      ie.push(...N?.toJson()?.warnings || []);
    } catch (ce) {
      if (!(ce instanceof zoe))
        throw ce;
    }
    let B = ie.filter((ce) => !ce.message.includes("export 'useInsertionEffect'")).filter((ce) => !ce.message.includes("compilation but it's\
 unused")).filter(
      (ce) => !ce.message.includes("Conflicting values for 'process.env.NODE_ENV'")
    );
    xD.log(B.map((ce) => ce.stack).join(`
`)), process.exit(B.length > 0 ? 1 : 0);
  } else {
    let ie = m.split("@storybook/").length > 1 ? m.split("@storybook/")[1] : m;
    e.quiet || X6({
      updateInfo: u,
      version: n,
      name: ie,
      address: $,
      networkAddress: R,
      managerTotalTime: j,
      previewTotalTime: Y
    });
  }
  return { port: a, address: $, networkAddress: R };
}
s(a8, "buildDevStandalone");

// src/core-server/build-index.ts
import { writeFile as iae } from "node:fs/promises";
import { normalizeStories as sae } from "storybook/internal/common";
import { logger as oae } from "storybook/internal/node-logger";

// src/core-server/load.ts
import { join as Zoe, relative as Xoe, resolve as Koe } from "node:path";
import {
  getProjectRoot as Yoe,
  loadAllPresets as u8,
  loadMainConfig as Qoe,
  resolveAddonName as eae,
  validateFrameworkName as tae
} from "storybook/internal/common";
import { oneWayHash as rae } from "storybook/internal/telemetry";
import { global as nae } from "@storybook/global";
async function bD(e) {
  let t = Koe(e.configDir), r = rae(Xoe(Yoe(), t));
  e.configType = "DEVELOPMENT", e.configDir = t, e.cacheKey = r;
  let n = await Qoe(e), { framework: i } = n, o = [], a = typeof i == "string" ? i : i?.name;
  e.ignorePreview || tae(a), a && o.push(Zoe(a, "preset")), a = a || "custom";
  let u = await u8({
    corePresets: o,
    overridePresets: [
      H.resolve("storybook/internal/core-server/presets/common-override-preset")
    ],
    ...e,
    isCritical: !0
  }), { renderer: l } = await u.apply("core", {}), c = l && eae(e.configDir, l, e);
  u = await u8({
    corePresets: [
      H.resolve("storybook/internal/core-server/presets/common-preset"),
      ...c ? [c] : [],
      ...o
    ],
    overridePresets: [
      H.resolve("storybook/internal/core-server/presets/common-override-preset")
    ],
    ...e
  });
  let p = await u.apply("features");
  return nae.FEATURES = p, {
    ...e,
    presets: u,
    features: p
  };
}
s(bD, "loadStorybook");

// src/core-server/build-index.ts
var aae = /* @__PURE__ */ s(async (e) => {
  let { presets: t } = await bD(e), [r, n, i] = await Promise.all([
    t.apply("experimental_indexers", []),
    t.apply("stories", []),
    t.apply("docs")
  ]), { configDir: o } = e, a = process.cwd(), u = {
    configDir: o,
    workingDir: a
  }, l = sae(n, u), c = new vn(l, {
    ...u,
    indexers: r,
    docs: i,
    build: {}
  });
  return await c.initialize(), c.getIndex();
}, "buildIndex"), l8 = /* @__PURE__ */ s(async (e) => {
  let t = await aae(e);
  oae.info(`Writing index to ${e.outputFile}`), await iae(e.outputFile, JSON.stringify(t));
}, "buildIndexStandalone");

// src/core-server/standalone.ts
import { dirname as uae } from "node:path";
async function lae(e = {}, t = {}) {
  let { mode: r = "dev" } = e, n = uae(H.resolve("storybook/internal/package.json")), i = JSON.parse(H("fs").readFileSync(`${n}/package.json`)),
  o = {
    ...e,
    ...t,
    frameworkPresets: [
      ...e.frameworkPresets || [],
      ...t.frameworkPresets || []
    ],
    packageJson: i
  };
  if (r === "dev")
    return a8(o);
  if (r === "static")
    return lA(o);
  if (r === "index")
    return l8(o);
  throw new Error("'mode' parameter should be either 'dev', 'static', or 'index'");
}
s(lae, "build");
var cae = lae;

// src/shared/universal-store/mock.ts
var c8 = fe(Tt(), 1);
import { Channel as pae } from "storybook/internal/channels";
var vD = class e extends Rt {
  static {
    s(this, "MockUniversalStore");
  }
  constructor(t, r) {
    Rt.isInternalConstructing = !0, super(
      { ...t, leader: !0 },
      { channel: new pae({}), environment: Rt.Environment.MOCK }
    ), Rt.isInternalConstructing = !1, typeof r?.fn == "function" && (this.testUtils = r, this.getState = r.fn(this.getState), this.setState =
    r.fn(this.setState), this.subscribe = r.fn(this.subscribe), this.onStateChange = r.fn(this.onStateChange), this.send = r.fn(this.send));
  }
  /** Create a mock universal store. This is just an alias for the constructor */
  static create(t, r) {
    return new e(t, r);
  }
  unsubscribeAll() {
    if (!this.testUtils)
      throw new Error(
        c8.default`Cannot call unsubscribeAll on a store that does not have testUtils.
        Please provide testUtils as the second argument when creating the store.`
      );
    let t = /* @__PURE__ */ s((r) => {
      try {
        r.value();
      } catch {
      }
    }, "callReturnedUnsubscribeFn");
    this.subscribe.mock?.results.forEach(t), this.onStateChange.mock?.results.forEach(t);
  }
};

// src/storybook-error.ts
function p8({
  code: e,
  category: t
}) {
  let r = String(e).padStart(4, "0");
  return `SB_${t}_${r}`;
}
s(p8, "parseErrorCode");
function h8(e) {
  if (/^(?!.*storybook\.js\.org)|[?&]ref=error\b/.test(e))
    return e;
  try {
    let t = new URL(e);
    return t.searchParams.set("ref", "error"), t.toString();
  } catch {
    return e;
  }
}
s(h8, "appendErrorRef");
var ci = class e extends Error {
  constructor(r) {
    super(e.getFullMessage(r));
    /**
     * Data associated with the error. Used to provide additional information in the error message or
     * to be passed to telemetry.
     */
    this.data = {};
    /** Flag used to easily determine if the error originates from Storybook. */
    this.fromStorybook = !0;
    this.category = r.category, this.documentation = r.documentation ?? !1, this.code = r.code;
  }
  static {
    s(this, "StorybookError");
  }
  get fullErrorCode() {
    return p8({ code: this.code, category: this.category });
  }
  /** Overrides the default `Error.name` property in the format: SB_<CATEGORY>_<CODE>. */
  get name() {
    let r = this.constructor.name;
    return `${this.fullErrorCode} (${r})`;
  }
  /** Generates the error message along with additional documentation link (if applicable). */
  static getFullMessage({
    documentation: r,
    code: n,
    category: i,
    message: o
  }) {
    let a;
    return r === !0 ? a = `https://storybook.js.org/error/${p8({ code: n, category: i })}?ref=error` : typeof r == "string" ? a = h8(r) : Array.
    isArray(r) && (a = `
${r.map((u) => `	- ${h8(u)}`).join(`
`)}`), `${o}${a != null ? `

More info: ${a}
` : ""}`;
  }
};

// src/manager-errors.ts
var fp = class extends ci {
  constructor(r) {
    super({
      category: "MANAGER_API",
      code: 1,
      message: `Status has typeId "${r.status.typeId}" but was added to store with typeId "${r.typeId}". Full status: ${JSON.stringify(
        r.status,
        null,
        2
      )}`
    });
    this.data = r;
  }
  static {
    s(this, "StatusTypeIdMismatchError");
  }
};

// src/preview-errors.ts
var hae = fe(Tt(), 1);
var dp = class extends ci {
  constructor(r) {
    super({
      category: "PREVIEW_API",
      code: 16,
      message: `Status has typeId "${r.status.typeId}" but was added to store with typeId "${r.typeId}". Full status: ${JSON.stringify(
        r.status,
        null,
        2
      )}`
    });
    this.data = r;
  }
  static {
    s(this, "StatusTypeIdMismatchError");
  }
};

// src/server-errors.ts
var fae = fe(Tt(), 1);
var mp = class extends ci {
  constructor(r) {
    super({
      category: "CORE-SERVER",
      code: 16,
      message: `Status has typeId "${r.status.typeId}" but was added to store with typeId "${r.typeId}". Full status: ${JSON.stringify(
        r.status,
        null,
        2
      )}`
    });
    this.data = r;
  }
  static {
    s(this, "StatusTypeIdMismatchError");
  }
};

// src/shared/status-store/index.ts
var f8 = {
  id: "storybook/status",
  leader: !0,
  initialState: {}
}, ED = {
  SELECT: "select"
};
function d8({
  universalStatusStore: e,
  useUniversalStore: t,
  environment: r
}) {
  let n = {
    getAll() {
      return e.getState();
    },
    set(o) {
      e.setState((a) => {
        let u = { ...a };
        for (let l of o) {
          let { storyId: c, typeId: p } = l;
          u[c] = { ...u[c] ?? {}, [p]: l };
        }
        return u;
      });
    },
    onAllStatusChange(o) {
      return e.onStateChange((a, u) => {
        o(a, u);
      });
    },
    onSelect(o) {
      return e.subscribe(ED.SELECT, (a) => {
        o(a.payload);
      });
    },
    selectStatuses: /* @__PURE__ */ s((o) => {
      e.send({ type: ED.SELECT, payload: o });
    }, "selectStatuses"),
    unset(o) {
      if (!o) {
        e.setState({});
        return;
      }
      e.setState((a) => {
        let u = { ...a };
        for (let l of o)
          delete u[l];
        return u;
      });
    },
    typeId: void 0
  }, i = /* @__PURE__ */ s((o) => ({
    getAll: n.getAll,
    set(a) {
      e.setState((u) => {
        let l = { ...u };
        for (let c of a) {
          let { storyId: p } = c;
          if (c.typeId !== o)
            switch (r) {
              case "server":
                throw new mp({
                  status: c,
                  typeId: o
                });
              case "manager":
                throw new fp({
                  status: c,
                  typeId: o
                });
              case "preview":
              default:
                throw new dp({
                  status: c,
                  typeId: o
                });
            }
          l[p] = { ...l[p] ?? {}, [o]: c };
        }
        return l;
      });
    },
    onAllStatusChange: n.onAllStatusChange,
    onSelect(a) {
      return e.subscribe(ED.SELECT, (u) => {
        u.payload.some((l) => l.typeId === o) && a(u.payload);
      });
    },
    unset(a) {
      e.setState((u) => {
        let l = { ...u };
        for (let c in l)
          if (l[c]?.[o] && (!a || a?.includes(c))) {
            let { [o]: p, ...h } = l[c];
            l[c] = h;
          }
        return l;
      });
    },
    typeId: o
  }), "getStatusStoreByTypeId");
  return t ? {
    getStatusStoreByTypeId: i,
    fullStatusStore: n,
    universalStatusStore: e,
    useStatusStore: /* @__PURE__ */ s((o) => t(e, o)[0], "useStatusStore")
  } : { getStatusStoreByTypeId: i, fullStatusStore: n, universalStatusStore: e };
}
s(d8, "createStatusStore");

// src/core-server/stores/status.ts
var dae = d8({
  universalStatusStore: Rt.create({
    ...f8,
    /*
      This is a temporary workaround, to ensure that the store is not created in the
      vitest sub-process in addon-vitest, even though it imports from core-server
      If it was created in the sub-process, it would try to connect to the leader in the dev server
      before it was ready.
      This will be fixed when we do the planned UniversalStore v0.2.
    */
    leader: !Nc(process.env.VITEST_CHILD_PROCESS)
  }),
  environment: "server"
}), { fullStatusStore: mae, getStatusStoreByTypeId: gae, universalStatusStore: yae } = dae;

// src/shared/test-provider-store/index.ts
var m8 = {
  id: "storybook/test-provider",
  leader: !0,
  initialState: {}
};
function g8({
  universalTestProviderStore: e,
  useUniversalStore: t
}) {
  let r = {
    settingsChanged: /* @__PURE__ */ s(() => {
      e.untilReady().then(() => {
        e.send({ type: "settings-changed" });
      });
    }, "settingsChanged"),
    onRunAll: /* @__PURE__ */ s((o) => e.subscribe("run-all", o), "onRunAll"),
    onClearAll: /* @__PURE__ */ s((o) => e.subscribe("clear-all", o), "onClearAll")
  }, n = {
    ...r,
    getFullState: e.getState,
    setFullState: e.setState,
    onSettingsChanged: /* @__PURE__ */ s((o) => e.subscribe("settings-changed", o), "onSettingsChanged"),
    runAll: /* @__PURE__ */ s(async () => {
      await e.untilReady(), e.send({ type: "run-all" });
    }, "runAll"),
    clearAll: /* @__PURE__ */ s(async () => {
      await e.untilReady(), e.send({ type: "clear-all" });
    }, "clearAll")
  }, i = /* @__PURE__ */ s((o) => {
    let a = /* @__PURE__ */ s(() => e.getState()[o] ?? "test-provider-state:pending", "getStateForTestProvider"), u = /* @__PURE__ */ s((l) => {
      e.untilReady().then(() => {
        e.setState((c) => ({
          ...c,
          [o]: l
        }));
      });
    }, "setStateForTestProvider");
    return {
      ...r,
      testProviderId: o,
      getState: a,
      setState: u,
      runWithState: /* @__PURE__ */ s(async (l) => {
        u("test-provider-state:running");
        try {
          await l(), u("test-provider-state:succeeded");
        } catch {
          u("test-provider-state:crashed");
        }
      }, "runWithState")
    };
  }, "getTestProviderStoreById");
  return t ? {
    getTestProviderStoreById: i,
    fullTestProviderStore: n,
    universalTestProviderStore: e,
    useTestProviderStore: /* @__PURE__ */ s((o) => t(e, o)[0], "useTestProviderStore")
  } : {
    getTestProviderStoreById: i,
    fullTestProviderStore: n,
    universalTestProviderStore: e
  };
}
s(g8, "createTestProviderStore");

// src/core-server/stores/test-provider.ts
var Dae = g8({
  universalTestProviderStore: Rt.create({
    ...m8,
    /*
            This is a temporary workaround, to ensure that the store is not created in the
            vitest sub-process in addon-vitest, even though it imports from core-server
            If it was created in the sub-process, it would try to connect to the leader in the dev server
            before it was ready.
            This will be fixed when we do the planned UniversalStore v0.2.
          */
    leader: !Nc(process.env.VITEST_CHILD_PROCESS)
  })
}), { fullTestProviderStore: xae, getTestProviderStoreById: bae, universalTestProviderStore: vae } = Dae;
export {
  vn as StoryIndexGenerator,
  cae as build,
  a8 as buildDevStandalone,
  aae as buildIndex,
  l8 as buildIndexStandalone,
  lA as buildStaticStandalone,
  vD as experimental_MockUniversalStore,
  Rt as experimental_UniversalStore,
  gae as experimental_getStatusStore,
  bae as experimental_getTestProviderStore,
  bD as experimental_loadStorybook,
  yee as getErrorLevel,
  IFe as getPreviewBodyTemplate,
  TFe as getPreviewHeadTemplate,
  mae as internal_fullStatusStore,
  xae as internal_fullTestProviderStore,
  yae as internal_universalStatusStore,
  vae as internal_universalTestProviderStore,
  L2 as mapStaticDir,
  ly as sendTelemetryError,
  K1e as withTelemetry
};
